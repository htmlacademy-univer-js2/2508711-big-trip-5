(()=>{var e={56:(e,t,n)=>{"use strict";e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},72:e=>{"use strict";var t=[];function n(e){for(var n=-1,i=0;i<t.length;i++)if(t[i].identifier===e){n=i;break}return n}function i(e,i){for(var r={},o=[],s=0;s<e.length;s++){var l=e[s],c=i.base?l[0]+i.base:l[0],d=r[c]||0,p="".concat(c," ").concat(d);r[c]=d+1;var f=n(p),A={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==f)t[f].references++,t[f].updater(A);else{var u=a(A,i);i.byIndex=s,t.splice(s,0,{identifier:p,updater:u,references:1})}o.push(p)}return o}function a(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,a){var r=i(e=e||[],a=a||{});return function(e){e=e||[];for(var o=0;o<r.length;o++){var s=n(r[o]);t[s].references--}for(var l=i(e,a),c=0;c<r.length;c++){var d=n(r[c]);0===t[d].references&&(t[d].updater(),t.splice(d,1))}r=l}}},113:e=>{"use strict";e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}},314:e=>{"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",i=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),i&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),i&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,i,a,r){"string"==typeof e&&(e=[[null,e,void 0]]);var o={};if(i)for(var s=0;s<this.length;s++){var l=this[s][0];null!=l&&(o[l]=!0)}for(var c=0;c<e.length;c++){var d=[].concat(e[c]);i&&o[d[0]]||(void 0!==r&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=r),n&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=n):d[2]=n),a&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=a):d[4]="".concat(a)),t.push(d))}},t}},353:function(e){e.exports=function(){"use strict";var e=6e4,t=36e5,n="millisecond",i="second",a="minute",r="hour",o="day",s="week",l="month",c="quarter",d="year",p="date",f="Invalid Date",A=/^(\d{4})[-/]?(\d{1,2})?[-/]?(\d{0,2})[Tt\s]*(\d{1,2})?:?(\d{1,2})?:?(\d{1,2})?[.:]?(\d+)?$/,u=/\[([^\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,h={name:"en",weekdays:"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),months:"January_February_March_April_May_June_July_August_September_October_November_December".split("_"),ordinal:function(e){var t=["th","st","nd","rd"],n=e%100;return"["+e+(t[(n-20)%10]||t[n]||t[0])+"]"}},m=function(e,t,n){var i=String(e);return!i||i.length>=t?e:""+Array(t+1-i.length).join(n)+e},C={s:m,z:function(e){var t=-e.utcOffset(),n=Math.abs(t),i=Math.floor(n/60),a=n%60;return(t<=0?"+":"-")+m(i,2,"0")+":"+m(a,2,"0")},m:function e(t,n){if(t.date()<n.date())return-e(n,t);var i=12*(n.year()-t.year())+(n.month()-t.month()),a=t.clone().add(i,l),r=n-a<0,o=t.clone().add(i+(r?-1:1),l);return+(-(i+(n-a)/(r?a-o:o-a))||0)},a:function(e){return e<0?Math.ceil(e)||0:Math.floor(e)},p:function(e){return{M:l,y:d,w:s,d:o,D:p,h:r,m:a,s:i,ms:n,Q:c}[e]||String(e||"").toLowerCase().replace(/s$/,"")},u:function(e){return void 0===e}},g="en",b={};b[g]=h;var v="$isDayjsObject",k=function(e){return e instanceof B||!(!e||!e[v])},y=function e(t,n,i){var a;if(!t)return g;if("string"==typeof t){var r=t.toLowerCase();b[r]&&(a=r),n&&(b[r]=n,a=r);var o=t.split("-");if(!a&&o.length>1)return e(o[0])}else{var s=t.name;b[s]=t,a=s}return!i&&a&&(g=a),a||!i&&g},w=function(e,t){if(k(e))return e.clone();var n="object"==typeof t?t:{};return n.date=e,n.args=arguments,new B(n)},x=C;x.l=y,x.i=k,x.w=function(e,t){return w(e,{locale:t.$L,utc:t.$u,x:t.$x,$offset:t.$offset})};var B=function(){function h(e){this.$L=y(e.locale,null,!0),this.parse(e),this.$x=this.$x||e.x||{},this[v]=!0}var m=h.prototype;return m.parse=function(e){this.$d=function(e){var t=e.date,n=e.utc;if(null===t)return new Date(NaN);if(x.u(t))return new Date;if(t instanceof Date)return new Date(t);if("string"==typeof t&&!/Z$/i.test(t)){var i=t.match(A);if(i){var a=i[2]-1||0,r=(i[7]||"0").substring(0,3);return n?new Date(Date.UTC(i[1],a,i[3]||1,i[4]||0,i[5]||0,i[6]||0,r)):new Date(i[1],a,i[3]||1,i[4]||0,i[5]||0,i[6]||0,r)}}return new Date(t)}(e),this.init()},m.init=function(){var e=this.$d;this.$y=e.getFullYear(),this.$M=e.getMonth(),this.$D=e.getDate(),this.$W=e.getDay(),this.$H=e.getHours(),this.$m=e.getMinutes(),this.$s=e.getSeconds(),this.$ms=e.getMilliseconds()},m.$utils=function(){return x},m.isValid=function(){return!(this.$d.toString()===f)},m.isSame=function(e,t){var n=w(e);return this.startOf(t)<=n&&n<=this.endOf(t)},m.isAfter=function(e,t){return w(e)<this.startOf(t)},m.isBefore=function(e,t){return this.endOf(t)<w(e)},m.$g=function(e,t,n){return x.u(e)?this[t]:this.set(n,e)},m.unix=function(){return Math.floor(this.valueOf()/1e3)},m.valueOf=function(){return this.$d.getTime()},m.startOf=function(e,t){var n=this,c=!!x.u(t)||t,f=x.p(e),A=function(e,t){var i=x.w(n.$u?Date.UTC(n.$y,t,e):new Date(n.$y,t,e),n);return c?i:i.endOf(o)},u=function(e,t){return x.w(n.toDate()[e].apply(n.toDate("s"),(c?[0,0,0,0]:[23,59,59,999]).slice(t)),n)},h=this.$W,m=this.$M,C=this.$D,g="set"+(this.$u?"UTC":"");switch(f){case d:return c?A(1,0):A(31,11);case l:return c?A(1,m):A(0,m+1);case s:var b=this.$locale().weekStart||0,v=(h<b?h+7:h)-b;return A(c?C-v:C+(6-v),m);case o:case p:return u(g+"Hours",0);case r:return u(g+"Minutes",1);case a:return u(g+"Seconds",2);case i:return u(g+"Milliseconds",3);default:return this.clone()}},m.endOf=function(e){return this.startOf(e,!1)},m.$set=function(e,t){var s,c=x.p(e),f="set"+(this.$u?"UTC":""),A=(s={},s[o]=f+"Date",s[p]=f+"Date",s[l]=f+"Month",s[d]=f+"FullYear",s[r]=f+"Hours",s[a]=f+"Minutes",s[i]=f+"Seconds",s[n]=f+"Milliseconds",s)[c],u=c===o?this.$D+(t-this.$W):t;if(c===l||c===d){var h=this.clone().set(p,1);h.$d[A](u),h.init(),this.$d=h.set(p,Math.min(this.$D,h.daysInMonth())).$d}else A&&this.$d[A](u);return this.init(),this},m.set=function(e,t){return this.clone().$set(e,t)},m.get=function(e){return this[x.p(e)]()},m.add=function(n,c){var p,f=this;n=Number(n);var A=x.p(c),u=function(e){var t=w(f);return x.w(t.date(t.date()+Math.round(e*n)),f)};if(A===l)return this.set(l,this.$M+n);if(A===d)return this.set(d,this.$y+n);if(A===o)return u(1);if(A===s)return u(7);var h=(p={},p[a]=e,p[r]=t,p[i]=1e3,p)[A]||1,m=this.$d.getTime()+n*h;return x.w(m,this)},m.subtract=function(e,t){return this.add(-1*e,t)},m.format=function(e){var t=this,n=this.$locale();if(!this.isValid())return n.invalidDate||f;var i=e||"YYYY-MM-DDTHH:mm:ssZ",a=x.z(this),r=this.$H,o=this.$m,s=this.$M,l=n.weekdays,c=n.months,d=n.meridiem,p=function(e,n,a,r){return e&&(e[n]||e(t,i))||a[n].slice(0,r)},A=function(e){return x.s(r%12||12,e,"0")},h=d||function(e,t,n){var i=e<12?"AM":"PM";return n?i.toLowerCase():i};return i.replace(u,(function(e,i){return i||function(e){switch(e){case"YY":return String(t.$y).slice(-2);case"YYYY":return x.s(t.$y,4,"0");case"M":return s+1;case"MM":return x.s(s+1,2,"0");case"MMM":return p(n.monthsShort,s,c,3);case"MMMM":return p(c,s);case"D":return t.$D;case"DD":return x.s(t.$D,2,"0");case"d":return String(t.$W);case"dd":return p(n.weekdaysMin,t.$W,l,2);case"ddd":return p(n.weekdaysShort,t.$W,l,3);case"dddd":return l[t.$W];case"H":return String(r);case"HH":return x.s(r,2,"0");case"h":return A(1);case"hh":return A(2);case"a":return h(r,o,!0);case"A":return h(r,o,!1);case"m":return String(o);case"mm":return x.s(o,2,"0");case"s":return String(t.$s);case"ss":return x.s(t.$s,2,"0");case"SSS":return x.s(t.$ms,3,"0");case"Z":return a}return null}(e)||a.replace(":","")}))},m.utcOffset=function(){return 15*-Math.round(this.$d.getTimezoneOffset()/15)},m.diff=function(n,p,f){var A,u=this,h=x.p(p),m=w(n),C=(m.utcOffset()-this.utcOffset())*e,g=this-m,b=function(){return x.m(u,m)};switch(h){case d:A=b()/12;break;case l:A=b();break;case c:A=b()/3;break;case s:A=(g-C)/6048e5;break;case o:A=(g-C)/864e5;break;case r:A=g/t;break;case a:A=g/e;break;case i:A=g/1e3;break;default:A=g}return f?A:x.a(A)},m.daysInMonth=function(){return this.endOf(l).$D},m.$locale=function(){return b[this.$L]},m.locale=function(e,t){if(!e)return this.$L;var n=this.clone(),i=y(e,t,!0);return i&&(n.$L=i),n},m.clone=function(){return x.w(this.$d,this)},m.toDate=function(){return new Date(this.valueOf())},m.toJSON=function(){return this.isValid()?this.toISOString():null},m.toISOString=function(){return this.$d.toISOString()},m.toString=function(){return this.$d.toUTCString()},h}(),D=B.prototype;return w.prototype=D,[["$ms",n],["$s",i],["$m",a],["$H",r],["$W",o],["$M",l],["$y",d],["$D",p]].forEach((function(e){D[e[1]]=function(t){return this.$g(t,e[0],e[1])}})),w.extend=function(e,t){return e.$i||(e(t,B,w),e.$i=!0),w},w.locale=y,w.isDayjs=k,w.unix=function(e){return w(1e3*e)},w.en=b[g],w.Ls=b,w.p={},w}()},354:e=>{"use strict";e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var i=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(i),r="/*# ".concat(a," */");return[t].concat([r]).join("\n")}return[t].join("\n")}},362:(e,t,n)=>{"use strict";n.d(t,{A:()=>s});var i=n(354),a=n.n(i),r=n(314),o=n.n(r)()(a());o.push([e.id,".shake {\n  animation: shake 0.6s;\n  position: relative;\n  z-index: 10;\n}\n\n@keyframes shake {\n  0%,\n  100% {\n    transform: translateX(0);\n  }\n\n  10%,\n  30%,\n  50%,\n  70%,\n  90% {\n    transform: translateX(-5px);\n  }\n\n  20%,\n  40%,\n  60%,\n  80% {\n    transform: translateX(5px);\n  }\n}\n","",{version:3,sources:["webpack://./src/framework/view/abstract-view.css"],names:[],mappings:"AAAA;EACE,qBAAqB;EACrB,kBAAkB;EAClB,WAAW;AACb;;AAEA;EACE;;IAEE,wBAAwB;EAC1B;;EAEA;;;;;IAKE,2BAA2B;EAC7B;;EAEA;;;;IAIE,0BAA0B;EAC5B;AACF",sourcesContent:[".shake {\n  animation: shake 0.6s;\n  position: relative;\n  z-index: 10;\n}\n\n@keyframes shake {\n  0%,\n  100% {\n    transform: translateX(0);\n  }\n\n  10%,\n  30%,\n  50%,\n  70%,\n  90% {\n    transform: translateX(-5px);\n  }\n\n  20%,\n  40%,\n  60%,\n  80% {\n    transform: translateX(5px);\n  }\n}\n"],sourceRoot:""}]);const s=o},540:e=>{"use strict";e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},659:e=>{"use strict";var t={};e.exports=function(e,n){var i=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!i)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");i.appendChild(n)}},825:e=>{"use strict";e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var i="";n.supports&&(i+="@supports (".concat(n.supports,") {")),n.media&&(i+="@media ".concat(n.media," {"));var a=void 0!==n.layer;a&&(i+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),i+=n.css,a&&(i+="}"),n.media&&(i+="}"),n.supports&&(i+="}");var r=n.sourceMap;r&&"undefined"!=typeof btoa&&(i+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),t.styleTagTransform(i,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},921:(e,t,n)=>{"use strict";n.d(t,{A:()=>s});var i=n(354),a=n.n(i),r=n(314),o=n.n(r)()(a());o.push([e.id,'.flatpickr-calendar{background:transparent;opacity:0;display:none;text-align:center;visibility:hidden;padding:0;-webkit-animation:none;animation:none;direction:ltr;border:0;font-size:14px;line-height:24px;border-radius:5px;position:absolute;width:307.875px;-webkit-box-sizing:border-box;box-sizing:border-box;-ms-touch-action:manipulation;touch-action:manipulation;background:#fff;-webkit-box-shadow:1px 0 0 #e6e6e6,-1px 0 0 #e6e6e6,0 1px 0 #e6e6e6,0 -1px 0 #e6e6e6,0 3px 13px rgba(0,0,0,0.08);box-shadow:1px 0 0 #e6e6e6,-1px 0 0 #e6e6e6,0 1px 0 #e6e6e6,0 -1px 0 #e6e6e6,0 3px 13px rgba(0,0,0,0.08)}.flatpickr-calendar.open,.flatpickr-calendar.inline{opacity:1;max-height:640px;visibility:visible}.flatpickr-calendar.open{display:inline-block;z-index:99999}.flatpickr-calendar.animate.open{-webkit-animation:fpFadeInDown 300ms cubic-bezier(.23,1,.32,1);animation:fpFadeInDown 300ms cubic-bezier(.23,1,.32,1)}.flatpickr-calendar.inline{display:block;position:relative;top:2px}.flatpickr-calendar.static{position:absolute;top:calc(100% + 2px)}.flatpickr-calendar.static.open{z-index:999;display:block}.flatpickr-calendar.multiMonth .flatpickr-days .dayContainer:nth-child(n+1) .flatpickr-day.inRange:nth-child(7n+7){-webkit-box-shadow:none !important;box-shadow:none !important}.flatpickr-calendar.multiMonth .flatpickr-days .dayContainer:nth-child(n+2) .flatpickr-day.inRange:nth-child(7n+1){-webkit-box-shadow:-2px 0 0 #e6e6e6,5px 0 0 #e6e6e6;box-shadow:-2px 0 0 #e6e6e6,5px 0 0 #e6e6e6}.flatpickr-calendar .hasWeeks .dayContainer,.flatpickr-calendar .hasTime .dayContainer{border-bottom:0;border-bottom-right-radius:0;border-bottom-left-radius:0}.flatpickr-calendar .hasWeeks .dayContainer{border-left:0}.flatpickr-calendar.hasTime .flatpickr-time{height:40px;border-top:1px solid #e6e6e6}.flatpickr-calendar.noCalendar.hasTime .flatpickr-time{height:auto}.flatpickr-calendar:before,.flatpickr-calendar:after{position:absolute;display:block;pointer-events:none;border:solid transparent;content:\'\';height:0;width:0;left:22px}.flatpickr-calendar.rightMost:before,.flatpickr-calendar.arrowRight:before,.flatpickr-calendar.rightMost:after,.flatpickr-calendar.arrowRight:after{left:auto;right:22px}.flatpickr-calendar.arrowCenter:before,.flatpickr-calendar.arrowCenter:after{left:50%;right:50%}.flatpickr-calendar:before{border-width:5px;margin:0 -5px}.flatpickr-calendar:after{border-width:4px;margin:0 -4px}.flatpickr-calendar.arrowTop:before,.flatpickr-calendar.arrowTop:after{bottom:100%}.flatpickr-calendar.arrowTop:before{border-bottom-color:#e6e6e6}.flatpickr-calendar.arrowTop:after{border-bottom-color:#fff}.flatpickr-calendar.arrowBottom:before,.flatpickr-calendar.arrowBottom:after{top:100%}.flatpickr-calendar.arrowBottom:before{border-top-color:#e6e6e6}.flatpickr-calendar.arrowBottom:after{border-top-color:#fff}.flatpickr-calendar:focus{outline:0}.flatpickr-wrapper{position:relative;display:inline-block}.flatpickr-months{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex}.flatpickr-months .flatpickr-month{background:transparent;color:rgba(0,0,0,0.9);fill:rgba(0,0,0,0.9);height:34px;line-height:1;text-align:center;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;overflow:hidden;-webkit-box-flex:1;-webkit-flex:1;-ms-flex:1;flex:1}.flatpickr-months .flatpickr-prev-month,.flatpickr-months .flatpickr-next-month{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;text-decoration:none;cursor:pointer;position:absolute;top:0;height:34px;padding:10px;z-index:3;color:rgba(0,0,0,0.9);fill:rgba(0,0,0,0.9)}.flatpickr-months .flatpickr-prev-month.flatpickr-disabled,.flatpickr-months .flatpickr-next-month.flatpickr-disabled{display:none}.flatpickr-months .flatpickr-prev-month i,.flatpickr-months .flatpickr-next-month i{position:relative}.flatpickr-months .flatpickr-prev-month.flatpickr-prev-month,.flatpickr-months .flatpickr-next-month.flatpickr-prev-month{/*\n      /*rtl:begin:ignore*/left:0/*\n      /*rtl:end:ignore*/}/*\n      /*rtl:begin:ignore*/\n/*\n      /*rtl:end:ignore*/\n.flatpickr-months .flatpickr-prev-month.flatpickr-next-month,.flatpickr-months .flatpickr-next-month.flatpickr-next-month{/*\n      /*rtl:begin:ignore*/right:0/*\n      /*rtl:end:ignore*/}/*\n      /*rtl:begin:ignore*/\n/*\n      /*rtl:end:ignore*/\n.flatpickr-months .flatpickr-prev-month:hover,.flatpickr-months .flatpickr-next-month:hover{color:#959ea9}.flatpickr-months .flatpickr-prev-month:hover svg,.flatpickr-months .flatpickr-next-month:hover svg{fill:#f64747}.flatpickr-months .flatpickr-prev-month svg,.flatpickr-months .flatpickr-next-month svg{width:14px;height:14px}.flatpickr-months .flatpickr-prev-month svg path,.flatpickr-months .flatpickr-next-month svg path{-webkit-transition:fill .1s;transition:fill .1s;fill:inherit}.numInputWrapper{position:relative;height:auto}.numInputWrapper input,.numInputWrapper span{display:inline-block}.numInputWrapper input{width:100%}.numInputWrapper input::-ms-clear{display:none}.numInputWrapper input::-webkit-outer-spin-button,.numInputWrapper input::-webkit-inner-spin-button{margin:0;-webkit-appearance:none}.numInputWrapper span{position:absolute;right:0;width:14px;padding:0 4px 0 2px;height:50%;line-height:50%;opacity:0;cursor:pointer;border:1px solid rgba(57,57,57,0.15);-webkit-box-sizing:border-box;box-sizing:border-box}.numInputWrapper span:hover{background:rgba(0,0,0,0.1)}.numInputWrapper span:active{background:rgba(0,0,0,0.2)}.numInputWrapper span:after{display:block;content:"";position:absolute}.numInputWrapper span.arrowUp{top:0;border-bottom:0}.numInputWrapper span.arrowUp:after{border-left:4px solid transparent;border-right:4px solid transparent;border-bottom:4px solid rgba(57,57,57,0.6);top:26%}.numInputWrapper span.arrowDown{top:50%}.numInputWrapper span.arrowDown:after{border-left:4px solid transparent;border-right:4px solid transparent;border-top:4px solid rgba(57,57,57,0.6);top:40%}.numInputWrapper span svg{width:inherit;height:auto}.numInputWrapper span svg path{fill:rgba(0,0,0,0.5)}.numInputWrapper:hover{background:rgba(0,0,0,0.05)}.numInputWrapper:hover span{opacity:1}.flatpickr-current-month{font-size:135%;line-height:inherit;font-weight:300;color:inherit;position:absolute;width:75%;left:12.5%;padding:7.48px 0 0 0;line-height:1;height:34px;display:inline-block;text-align:center;-webkit-transform:translate3d(0,0,0);transform:translate3d(0,0,0)}.flatpickr-current-month span.cur-month{font-family:inherit;font-weight:700;color:inherit;display:inline-block;margin-left:.5ch;padding:0}.flatpickr-current-month span.cur-month:hover{background:rgba(0,0,0,0.05)}.flatpickr-current-month .numInputWrapper{width:6ch;width:7ch\\0;display:inline-block}.flatpickr-current-month .numInputWrapper span.arrowUp:after{border-bottom-color:rgba(0,0,0,0.9)}.flatpickr-current-month .numInputWrapper span.arrowDown:after{border-top-color:rgba(0,0,0,0.9)}.flatpickr-current-month input.cur-year{background:transparent;-webkit-box-sizing:border-box;box-sizing:border-box;color:inherit;cursor:text;padding:0 0 0 .5ch;margin:0;display:inline-block;font-size:inherit;font-family:inherit;font-weight:300;line-height:inherit;height:auto;border:0;border-radius:0;vertical-align:initial;-webkit-appearance:textfield;-moz-appearance:textfield;appearance:textfield}.flatpickr-current-month input.cur-year:focus{outline:0}.flatpickr-current-month input.cur-year[disabled],.flatpickr-current-month input.cur-year[disabled]:hover{font-size:100%;color:rgba(0,0,0,0.5);background:transparent;pointer-events:none}.flatpickr-current-month .flatpickr-monthDropdown-months{appearance:menulist;background:transparent;border:none;border-radius:0;box-sizing:border-box;color:inherit;cursor:pointer;font-size:inherit;font-family:inherit;font-weight:300;height:auto;line-height:inherit;margin:-1px 0 0 0;outline:none;padding:0 0 0 .5ch;position:relative;vertical-align:initial;-webkit-box-sizing:border-box;-webkit-appearance:menulist;-moz-appearance:menulist;width:auto}.flatpickr-current-month .flatpickr-monthDropdown-months:focus,.flatpickr-current-month .flatpickr-monthDropdown-months:active{outline:none}.flatpickr-current-month .flatpickr-monthDropdown-months:hover{background:rgba(0,0,0,0.05)}.flatpickr-current-month .flatpickr-monthDropdown-months .flatpickr-monthDropdown-month{background-color:transparent;outline:none;padding:0}.flatpickr-weekdays{background:transparent;text-align:center;overflow:hidden;width:100%;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;height:28px}.flatpickr-weekdays .flatpickr-weekdaycontainer{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-flex:1;-webkit-flex:1;-ms-flex:1;flex:1}span.flatpickr-weekday{cursor:default;font-size:90%;background:transparent;color:rgba(0,0,0,0.54);line-height:1;margin:0;text-align:center;display:block;-webkit-box-flex:1;-webkit-flex:1;-ms-flex:1;flex:1;font-weight:bolder}.dayContainer,.flatpickr-weeks{padding:1px 0 0 0}.flatpickr-days{position:relative;overflow:hidden;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-align:start;-webkit-align-items:flex-start;-ms-flex-align:start;align-items:flex-start;width:307.875px}.flatpickr-days:focus{outline:0}.dayContainer{padding:0;outline:0;text-align:left;width:307.875px;min-width:307.875px;max-width:307.875px;-webkit-box-sizing:border-box;box-sizing:border-box;display:inline-block;display:-ms-flexbox;display:-webkit-box;display:-webkit-flex;display:flex;-webkit-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-wrap:wrap;-ms-flex-pack:justify;-webkit-justify-content:space-around;justify-content:space-around;-webkit-transform:translate3d(0,0,0);transform:translate3d(0,0,0);opacity:1}.dayContainer + .dayContainer{-webkit-box-shadow:-1px 0 0 #e6e6e6;box-shadow:-1px 0 0 #e6e6e6}.flatpickr-day{background:none;border:1px solid transparent;border-radius:150px;-webkit-box-sizing:border-box;box-sizing:border-box;color:#393939;cursor:pointer;font-weight:400;width:14.2857143%;-webkit-flex-basis:14.2857143%;-ms-flex-preferred-size:14.2857143%;flex-basis:14.2857143%;max-width:39px;height:39px;line-height:39px;margin:0;display:inline-block;position:relative;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;text-align:center}.flatpickr-day.inRange,.flatpickr-day.prevMonthDay.inRange,.flatpickr-day.nextMonthDay.inRange,.flatpickr-day.today.inRange,.flatpickr-day.prevMonthDay.today.inRange,.flatpickr-day.nextMonthDay.today.inRange,.flatpickr-day:hover,.flatpickr-day.prevMonthDay:hover,.flatpickr-day.nextMonthDay:hover,.flatpickr-day:focus,.flatpickr-day.prevMonthDay:focus,.flatpickr-day.nextMonthDay:focus{cursor:pointer;outline:0;background:#e6e6e6;border-color:#e6e6e6}.flatpickr-day.today{border-color:#959ea9}.flatpickr-day.today:hover,.flatpickr-day.today:focus{border-color:#959ea9;background:#959ea9;color:#fff}.flatpickr-day.selected,.flatpickr-day.startRange,.flatpickr-day.endRange,.flatpickr-day.selected.inRange,.flatpickr-day.startRange.inRange,.flatpickr-day.endRange.inRange,.flatpickr-day.selected:focus,.flatpickr-day.startRange:focus,.flatpickr-day.endRange:focus,.flatpickr-day.selected:hover,.flatpickr-day.startRange:hover,.flatpickr-day.endRange:hover,.flatpickr-day.selected.prevMonthDay,.flatpickr-day.startRange.prevMonthDay,.flatpickr-day.endRange.prevMonthDay,.flatpickr-day.selected.nextMonthDay,.flatpickr-day.startRange.nextMonthDay,.flatpickr-day.endRange.nextMonthDay{background:#569ff7;-webkit-box-shadow:none;box-shadow:none;color:#fff;border-color:#569ff7}.flatpickr-day.selected.startRange,.flatpickr-day.startRange.startRange,.flatpickr-day.endRange.startRange{border-radius:50px 0 0 50px}.flatpickr-day.selected.endRange,.flatpickr-day.startRange.endRange,.flatpickr-day.endRange.endRange{border-radius:0 50px 50px 0}.flatpickr-day.selected.startRange + .endRange:not(:nth-child(7n+1)),.flatpickr-day.startRange.startRange + .endRange:not(:nth-child(7n+1)),.flatpickr-day.endRange.startRange + .endRange:not(:nth-child(7n+1)){-webkit-box-shadow:-10px 0 0 #569ff7;box-shadow:-10px 0 0 #569ff7}.flatpickr-day.selected.startRange.endRange,.flatpickr-day.startRange.startRange.endRange,.flatpickr-day.endRange.startRange.endRange{border-radius:50px}.flatpickr-day.inRange{border-radius:0;-webkit-box-shadow:-5px 0 0 #e6e6e6,5px 0 0 #e6e6e6;box-shadow:-5px 0 0 #e6e6e6,5px 0 0 #e6e6e6}.flatpickr-day.flatpickr-disabled,.flatpickr-day.flatpickr-disabled:hover,.flatpickr-day.prevMonthDay,.flatpickr-day.nextMonthDay,.flatpickr-day.notAllowed,.flatpickr-day.notAllowed.prevMonthDay,.flatpickr-day.notAllowed.nextMonthDay{color:rgba(57,57,57,0.3);background:transparent;border-color:transparent;cursor:default}.flatpickr-day.flatpickr-disabled,.flatpickr-day.flatpickr-disabled:hover{cursor:not-allowed;color:rgba(57,57,57,0.1)}.flatpickr-day.week.selected{border-radius:0;-webkit-box-shadow:-5px 0 0 #569ff7,5px 0 0 #569ff7;box-shadow:-5px 0 0 #569ff7,5px 0 0 #569ff7}.flatpickr-day.hidden{visibility:hidden}.rangeMode .flatpickr-day{margin-top:1px}.flatpickr-weekwrapper{float:left}.flatpickr-weekwrapper .flatpickr-weeks{padding:0 12px;-webkit-box-shadow:1px 0 0 #e6e6e6;box-shadow:1px 0 0 #e6e6e6}.flatpickr-weekwrapper .flatpickr-weekday{float:none;width:100%;line-height:28px}.flatpickr-weekwrapper span.flatpickr-day,.flatpickr-weekwrapper span.flatpickr-day:hover{display:block;width:100%;max-width:none;color:rgba(57,57,57,0.3);background:transparent;cursor:default;border:none}.flatpickr-innerContainer{display:block;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-sizing:border-box;box-sizing:border-box;overflow:hidden}.flatpickr-rContainer{display:inline-block;padding:0;-webkit-box-sizing:border-box;box-sizing:border-box}.flatpickr-time{text-align:center;outline:0;display:block;height:0;line-height:40px;max-height:40px;-webkit-box-sizing:border-box;box-sizing:border-box;overflow:hidden;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex}.flatpickr-time:after{content:"";display:table;clear:both}.flatpickr-time .numInputWrapper{-webkit-box-flex:1;-webkit-flex:1;-ms-flex:1;flex:1;width:40%;height:40px;float:left}.flatpickr-time .numInputWrapper span.arrowUp:after{border-bottom-color:#393939}.flatpickr-time .numInputWrapper span.arrowDown:after{border-top-color:#393939}.flatpickr-time.hasSeconds .numInputWrapper{width:26%}.flatpickr-time.time24hr .numInputWrapper{width:49%}.flatpickr-time input{background:transparent;-webkit-box-shadow:none;box-shadow:none;border:0;border-radius:0;text-align:center;margin:0;padding:0;height:inherit;line-height:inherit;color:#393939;font-size:14px;position:relative;-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-appearance:textfield;-moz-appearance:textfield;appearance:textfield}.flatpickr-time input.flatpickr-hour{font-weight:bold}.flatpickr-time input.flatpickr-minute,.flatpickr-time input.flatpickr-second{font-weight:400}.flatpickr-time input:focus{outline:0;border:0}.flatpickr-time .flatpickr-time-separator,.flatpickr-time .flatpickr-am-pm{height:inherit;float:left;line-height:inherit;color:#393939;font-weight:bold;width:2%;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-align-self:center;-ms-flex-item-align:center;align-self:center}.flatpickr-time .flatpickr-am-pm{outline:0;width:18%;cursor:pointer;text-align:center;font-weight:400}.flatpickr-time input:hover,.flatpickr-time .flatpickr-am-pm:hover,.flatpickr-time input:focus,.flatpickr-time .flatpickr-am-pm:focus{background:#eee}.flatpickr-input[readonly]{cursor:pointer}@-webkit-keyframes fpFadeInDown{from{opacity:0;-webkit-transform:translate3d(0,-20px,0);transform:translate3d(0,-20px,0)}to{opacity:1;-webkit-transform:translate3d(0,0,0);transform:translate3d(0,0,0)}}@keyframes fpFadeInDown{from{opacity:0;-webkit-transform:translate3d(0,-20px,0);transform:translate3d(0,-20px,0)}to{opacity:1;-webkit-transform:translate3d(0,0,0);transform:translate3d(0,0,0)}}',"",{version:3,sources:["webpack://./node_modules/flatpickr/dist/flatpickr.min.css"],names:[],mappings:"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",sourcesContent:['.flatpickr-calendar{background:transparent;opacity:0;display:none;text-align:center;visibility:hidden;padding:0;-webkit-animation:none;animation:none;direction:ltr;border:0;font-size:14px;line-height:24px;border-radius:5px;position:absolute;width:307.875px;-webkit-box-sizing:border-box;box-sizing:border-box;-ms-touch-action:manipulation;touch-action:manipulation;background:#fff;-webkit-box-shadow:1px 0 0 #e6e6e6,-1px 0 0 #e6e6e6,0 1px 0 #e6e6e6,0 -1px 0 #e6e6e6,0 3px 13px rgba(0,0,0,0.08);box-shadow:1px 0 0 #e6e6e6,-1px 0 0 #e6e6e6,0 1px 0 #e6e6e6,0 -1px 0 #e6e6e6,0 3px 13px rgba(0,0,0,0.08)}.flatpickr-calendar.open,.flatpickr-calendar.inline{opacity:1;max-height:640px;visibility:visible}.flatpickr-calendar.open{display:inline-block;z-index:99999}.flatpickr-calendar.animate.open{-webkit-animation:fpFadeInDown 300ms cubic-bezier(.23,1,.32,1);animation:fpFadeInDown 300ms cubic-bezier(.23,1,.32,1)}.flatpickr-calendar.inline{display:block;position:relative;top:2px}.flatpickr-calendar.static{position:absolute;top:calc(100% + 2px)}.flatpickr-calendar.static.open{z-index:999;display:block}.flatpickr-calendar.multiMonth .flatpickr-days .dayContainer:nth-child(n+1) .flatpickr-day.inRange:nth-child(7n+7){-webkit-box-shadow:none !important;box-shadow:none !important}.flatpickr-calendar.multiMonth .flatpickr-days .dayContainer:nth-child(n+2) .flatpickr-day.inRange:nth-child(7n+1){-webkit-box-shadow:-2px 0 0 #e6e6e6,5px 0 0 #e6e6e6;box-shadow:-2px 0 0 #e6e6e6,5px 0 0 #e6e6e6}.flatpickr-calendar .hasWeeks .dayContainer,.flatpickr-calendar .hasTime .dayContainer{border-bottom:0;border-bottom-right-radius:0;border-bottom-left-radius:0}.flatpickr-calendar .hasWeeks .dayContainer{border-left:0}.flatpickr-calendar.hasTime .flatpickr-time{height:40px;border-top:1px solid #e6e6e6}.flatpickr-calendar.noCalendar.hasTime .flatpickr-time{height:auto}.flatpickr-calendar:before,.flatpickr-calendar:after{position:absolute;display:block;pointer-events:none;border:solid transparent;content:\'\';height:0;width:0;left:22px}.flatpickr-calendar.rightMost:before,.flatpickr-calendar.arrowRight:before,.flatpickr-calendar.rightMost:after,.flatpickr-calendar.arrowRight:after{left:auto;right:22px}.flatpickr-calendar.arrowCenter:before,.flatpickr-calendar.arrowCenter:after{left:50%;right:50%}.flatpickr-calendar:before{border-width:5px;margin:0 -5px}.flatpickr-calendar:after{border-width:4px;margin:0 -4px}.flatpickr-calendar.arrowTop:before,.flatpickr-calendar.arrowTop:after{bottom:100%}.flatpickr-calendar.arrowTop:before{border-bottom-color:#e6e6e6}.flatpickr-calendar.arrowTop:after{border-bottom-color:#fff}.flatpickr-calendar.arrowBottom:before,.flatpickr-calendar.arrowBottom:after{top:100%}.flatpickr-calendar.arrowBottom:before{border-top-color:#e6e6e6}.flatpickr-calendar.arrowBottom:after{border-top-color:#fff}.flatpickr-calendar:focus{outline:0}.flatpickr-wrapper{position:relative;display:inline-block}.flatpickr-months{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex}.flatpickr-months .flatpickr-month{background:transparent;color:rgba(0,0,0,0.9);fill:rgba(0,0,0,0.9);height:34px;line-height:1;text-align:center;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;overflow:hidden;-webkit-box-flex:1;-webkit-flex:1;-ms-flex:1;flex:1}.flatpickr-months .flatpickr-prev-month,.flatpickr-months .flatpickr-next-month{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;text-decoration:none;cursor:pointer;position:absolute;top:0;height:34px;padding:10px;z-index:3;color:rgba(0,0,0,0.9);fill:rgba(0,0,0,0.9)}.flatpickr-months .flatpickr-prev-month.flatpickr-disabled,.flatpickr-months .flatpickr-next-month.flatpickr-disabled{display:none}.flatpickr-months .flatpickr-prev-month i,.flatpickr-months .flatpickr-next-month i{position:relative}.flatpickr-months .flatpickr-prev-month.flatpickr-prev-month,.flatpickr-months .flatpickr-next-month.flatpickr-prev-month{/*\n      /*rtl:begin:ignore*/left:0/*\n      /*rtl:end:ignore*/}/*\n      /*rtl:begin:ignore*/\n/*\n      /*rtl:end:ignore*/\n.flatpickr-months .flatpickr-prev-month.flatpickr-next-month,.flatpickr-months .flatpickr-next-month.flatpickr-next-month{/*\n      /*rtl:begin:ignore*/right:0/*\n      /*rtl:end:ignore*/}/*\n      /*rtl:begin:ignore*/\n/*\n      /*rtl:end:ignore*/\n.flatpickr-months .flatpickr-prev-month:hover,.flatpickr-months .flatpickr-next-month:hover{color:#959ea9}.flatpickr-months .flatpickr-prev-month:hover svg,.flatpickr-months .flatpickr-next-month:hover svg{fill:#f64747}.flatpickr-months .flatpickr-prev-month svg,.flatpickr-months .flatpickr-next-month svg{width:14px;height:14px}.flatpickr-months .flatpickr-prev-month svg path,.flatpickr-months .flatpickr-next-month svg path{-webkit-transition:fill .1s;transition:fill .1s;fill:inherit}.numInputWrapper{position:relative;height:auto}.numInputWrapper input,.numInputWrapper span{display:inline-block}.numInputWrapper input{width:100%}.numInputWrapper input::-ms-clear{display:none}.numInputWrapper input::-webkit-outer-spin-button,.numInputWrapper input::-webkit-inner-spin-button{margin:0;-webkit-appearance:none}.numInputWrapper span{position:absolute;right:0;width:14px;padding:0 4px 0 2px;height:50%;line-height:50%;opacity:0;cursor:pointer;border:1px solid rgba(57,57,57,0.15);-webkit-box-sizing:border-box;box-sizing:border-box}.numInputWrapper span:hover{background:rgba(0,0,0,0.1)}.numInputWrapper span:active{background:rgba(0,0,0,0.2)}.numInputWrapper span:after{display:block;content:"";position:absolute}.numInputWrapper span.arrowUp{top:0;border-bottom:0}.numInputWrapper span.arrowUp:after{border-left:4px solid transparent;border-right:4px solid transparent;border-bottom:4px solid rgba(57,57,57,0.6);top:26%}.numInputWrapper span.arrowDown{top:50%}.numInputWrapper span.arrowDown:after{border-left:4px solid transparent;border-right:4px solid transparent;border-top:4px solid rgba(57,57,57,0.6);top:40%}.numInputWrapper span svg{width:inherit;height:auto}.numInputWrapper span svg path{fill:rgba(0,0,0,0.5)}.numInputWrapper:hover{background:rgba(0,0,0,0.05)}.numInputWrapper:hover span{opacity:1}.flatpickr-current-month{font-size:135%;line-height:inherit;font-weight:300;color:inherit;position:absolute;width:75%;left:12.5%;padding:7.48px 0 0 0;line-height:1;height:34px;display:inline-block;text-align:center;-webkit-transform:translate3d(0,0,0);transform:translate3d(0,0,0)}.flatpickr-current-month span.cur-month{font-family:inherit;font-weight:700;color:inherit;display:inline-block;margin-left:.5ch;padding:0}.flatpickr-current-month span.cur-month:hover{background:rgba(0,0,0,0.05)}.flatpickr-current-month .numInputWrapper{width:6ch;width:7ch\\0;display:inline-block}.flatpickr-current-month .numInputWrapper span.arrowUp:after{border-bottom-color:rgba(0,0,0,0.9)}.flatpickr-current-month .numInputWrapper span.arrowDown:after{border-top-color:rgba(0,0,0,0.9)}.flatpickr-current-month input.cur-year{background:transparent;-webkit-box-sizing:border-box;box-sizing:border-box;color:inherit;cursor:text;padding:0 0 0 .5ch;margin:0;display:inline-block;font-size:inherit;font-family:inherit;font-weight:300;line-height:inherit;height:auto;border:0;border-radius:0;vertical-align:initial;-webkit-appearance:textfield;-moz-appearance:textfield;appearance:textfield}.flatpickr-current-month input.cur-year:focus{outline:0}.flatpickr-current-month input.cur-year[disabled],.flatpickr-current-month input.cur-year[disabled]:hover{font-size:100%;color:rgba(0,0,0,0.5);background:transparent;pointer-events:none}.flatpickr-current-month .flatpickr-monthDropdown-months{appearance:menulist;background:transparent;border:none;border-radius:0;box-sizing:border-box;color:inherit;cursor:pointer;font-size:inherit;font-family:inherit;font-weight:300;height:auto;line-height:inherit;margin:-1px 0 0 0;outline:none;padding:0 0 0 .5ch;position:relative;vertical-align:initial;-webkit-box-sizing:border-box;-webkit-appearance:menulist;-moz-appearance:menulist;width:auto}.flatpickr-current-month .flatpickr-monthDropdown-months:focus,.flatpickr-current-month .flatpickr-monthDropdown-months:active{outline:none}.flatpickr-current-month .flatpickr-monthDropdown-months:hover{background:rgba(0,0,0,0.05)}.flatpickr-current-month .flatpickr-monthDropdown-months .flatpickr-monthDropdown-month{background-color:transparent;outline:none;padding:0}.flatpickr-weekdays{background:transparent;text-align:center;overflow:hidden;width:100%;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;height:28px}.flatpickr-weekdays .flatpickr-weekdaycontainer{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-flex:1;-webkit-flex:1;-ms-flex:1;flex:1}span.flatpickr-weekday{cursor:default;font-size:90%;background:transparent;color:rgba(0,0,0,0.54);line-height:1;margin:0;text-align:center;display:block;-webkit-box-flex:1;-webkit-flex:1;-ms-flex:1;flex:1;font-weight:bolder}.dayContainer,.flatpickr-weeks{padding:1px 0 0 0}.flatpickr-days{position:relative;overflow:hidden;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-align:start;-webkit-align-items:flex-start;-ms-flex-align:start;align-items:flex-start;width:307.875px}.flatpickr-days:focus{outline:0}.dayContainer{padding:0;outline:0;text-align:left;width:307.875px;min-width:307.875px;max-width:307.875px;-webkit-box-sizing:border-box;box-sizing:border-box;display:inline-block;display:-ms-flexbox;display:-webkit-box;display:-webkit-flex;display:flex;-webkit-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-wrap:wrap;-ms-flex-pack:justify;-webkit-justify-content:space-around;justify-content:space-around;-webkit-transform:translate3d(0,0,0);transform:translate3d(0,0,0);opacity:1}.dayContainer + .dayContainer{-webkit-box-shadow:-1px 0 0 #e6e6e6;box-shadow:-1px 0 0 #e6e6e6}.flatpickr-day{background:none;border:1px solid transparent;border-radius:150px;-webkit-box-sizing:border-box;box-sizing:border-box;color:#393939;cursor:pointer;font-weight:400;width:14.2857143%;-webkit-flex-basis:14.2857143%;-ms-flex-preferred-size:14.2857143%;flex-basis:14.2857143%;max-width:39px;height:39px;line-height:39px;margin:0;display:inline-block;position:relative;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;text-align:center}.flatpickr-day.inRange,.flatpickr-day.prevMonthDay.inRange,.flatpickr-day.nextMonthDay.inRange,.flatpickr-day.today.inRange,.flatpickr-day.prevMonthDay.today.inRange,.flatpickr-day.nextMonthDay.today.inRange,.flatpickr-day:hover,.flatpickr-day.prevMonthDay:hover,.flatpickr-day.nextMonthDay:hover,.flatpickr-day:focus,.flatpickr-day.prevMonthDay:focus,.flatpickr-day.nextMonthDay:focus{cursor:pointer;outline:0;background:#e6e6e6;border-color:#e6e6e6}.flatpickr-day.today{border-color:#959ea9}.flatpickr-day.today:hover,.flatpickr-day.today:focus{border-color:#959ea9;background:#959ea9;color:#fff}.flatpickr-day.selected,.flatpickr-day.startRange,.flatpickr-day.endRange,.flatpickr-day.selected.inRange,.flatpickr-day.startRange.inRange,.flatpickr-day.endRange.inRange,.flatpickr-day.selected:focus,.flatpickr-day.startRange:focus,.flatpickr-day.endRange:focus,.flatpickr-day.selected:hover,.flatpickr-day.startRange:hover,.flatpickr-day.endRange:hover,.flatpickr-day.selected.prevMonthDay,.flatpickr-day.startRange.prevMonthDay,.flatpickr-day.endRange.prevMonthDay,.flatpickr-day.selected.nextMonthDay,.flatpickr-day.startRange.nextMonthDay,.flatpickr-day.endRange.nextMonthDay{background:#569ff7;-webkit-box-shadow:none;box-shadow:none;color:#fff;border-color:#569ff7}.flatpickr-day.selected.startRange,.flatpickr-day.startRange.startRange,.flatpickr-day.endRange.startRange{border-radius:50px 0 0 50px}.flatpickr-day.selected.endRange,.flatpickr-day.startRange.endRange,.flatpickr-day.endRange.endRange{border-radius:0 50px 50px 0}.flatpickr-day.selected.startRange + .endRange:not(:nth-child(7n+1)),.flatpickr-day.startRange.startRange + .endRange:not(:nth-child(7n+1)),.flatpickr-day.endRange.startRange + .endRange:not(:nth-child(7n+1)){-webkit-box-shadow:-10px 0 0 #569ff7;box-shadow:-10px 0 0 #569ff7}.flatpickr-day.selected.startRange.endRange,.flatpickr-day.startRange.startRange.endRange,.flatpickr-day.endRange.startRange.endRange{border-radius:50px}.flatpickr-day.inRange{border-radius:0;-webkit-box-shadow:-5px 0 0 #e6e6e6,5px 0 0 #e6e6e6;box-shadow:-5px 0 0 #e6e6e6,5px 0 0 #e6e6e6}.flatpickr-day.flatpickr-disabled,.flatpickr-day.flatpickr-disabled:hover,.flatpickr-day.prevMonthDay,.flatpickr-day.nextMonthDay,.flatpickr-day.notAllowed,.flatpickr-day.notAllowed.prevMonthDay,.flatpickr-day.notAllowed.nextMonthDay{color:rgba(57,57,57,0.3);background:transparent;border-color:transparent;cursor:default}.flatpickr-day.flatpickr-disabled,.flatpickr-day.flatpickr-disabled:hover{cursor:not-allowed;color:rgba(57,57,57,0.1)}.flatpickr-day.week.selected{border-radius:0;-webkit-box-shadow:-5px 0 0 #569ff7,5px 0 0 #569ff7;box-shadow:-5px 0 0 #569ff7,5px 0 0 #569ff7}.flatpickr-day.hidden{visibility:hidden}.rangeMode .flatpickr-day{margin-top:1px}.flatpickr-weekwrapper{float:left}.flatpickr-weekwrapper .flatpickr-weeks{padding:0 12px;-webkit-box-shadow:1px 0 0 #e6e6e6;box-shadow:1px 0 0 #e6e6e6}.flatpickr-weekwrapper .flatpickr-weekday{float:none;width:100%;line-height:28px}.flatpickr-weekwrapper span.flatpickr-day,.flatpickr-weekwrapper span.flatpickr-day:hover{display:block;width:100%;max-width:none;color:rgba(57,57,57,0.3);background:transparent;cursor:default;border:none}.flatpickr-innerContainer{display:block;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-sizing:border-box;box-sizing:border-box;overflow:hidden}.flatpickr-rContainer{display:inline-block;padding:0;-webkit-box-sizing:border-box;box-sizing:border-box}.flatpickr-time{text-align:center;outline:0;display:block;height:0;line-height:40px;max-height:40px;-webkit-box-sizing:border-box;box-sizing:border-box;overflow:hidden;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex}.flatpickr-time:after{content:"";display:table;clear:both}.flatpickr-time .numInputWrapper{-webkit-box-flex:1;-webkit-flex:1;-ms-flex:1;flex:1;width:40%;height:40px;float:left}.flatpickr-time .numInputWrapper span.arrowUp:after{border-bottom-color:#393939}.flatpickr-time .numInputWrapper span.arrowDown:after{border-top-color:#393939}.flatpickr-time.hasSeconds .numInputWrapper{width:26%}.flatpickr-time.time24hr .numInputWrapper{width:49%}.flatpickr-time input{background:transparent;-webkit-box-shadow:none;box-shadow:none;border:0;border-radius:0;text-align:center;margin:0;padding:0;height:inherit;line-height:inherit;color:#393939;font-size:14px;position:relative;-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-appearance:textfield;-moz-appearance:textfield;appearance:textfield}.flatpickr-time input.flatpickr-hour{font-weight:bold}.flatpickr-time input.flatpickr-minute,.flatpickr-time input.flatpickr-second{font-weight:400}.flatpickr-time input:focus{outline:0;border:0}.flatpickr-time .flatpickr-time-separator,.flatpickr-time .flatpickr-am-pm{height:inherit;float:left;line-height:inherit;color:#393939;font-weight:bold;width:2%;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-align-self:center;-ms-flex-item-align:center;align-self:center}.flatpickr-time .flatpickr-am-pm{outline:0;width:18%;cursor:pointer;text-align:center;font-weight:400}.flatpickr-time input:hover,.flatpickr-time .flatpickr-am-pm:hover,.flatpickr-time input:focus,.flatpickr-time .flatpickr-am-pm:focus{background:#eee}.flatpickr-input[readonly]{cursor:pointer}@-webkit-keyframes fpFadeInDown{from{opacity:0;-webkit-transform:translate3d(0,-20px,0);transform:translate3d(0,-20px,0)}to{opacity:1;-webkit-transform:translate3d(0,0,0);transform:translate3d(0,0,0)}}@keyframes fpFadeInDown{from{opacity:0;-webkit-transform:translate3d(0,-20px,0);transform:translate3d(0,-20px,0)}to{opacity:1;-webkit-transform:translate3d(0,0,0);transform:translate3d(0,0,0)}}'],sourceRoot:""}]);const s=o},990:()=>{"use strict";"function"!=typeof Object.assign&&(Object.assign=function(e){for(var t=[],n=1;n<arguments.length;n++)t[n-1]=arguments[n];if(!e)throw TypeError("Cannot convert undefined or null to object");for(var i=function(t){t&&Object.keys(t).forEach((function(n){return e[n]=t[n]}))},a=0,r=t;a<r.length;a++)i(r[a]);return e})}},t={};function n(i){var a=t[i];if(void 0!==a)return a.exports;var r=t[i]={id:i,exports:{}};return e[i].call(r.exports,r,r.exports,n),r.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var i in t)n.o(t,i)&&!n.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:t[i]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.nc=void 0,(()=>{"use strict";class e{constructor(e,t,n,i,a,r,o,s){this.id=e,this.type=t,this.destination=n,this.dateFrom=i,this.dateTo=a,this.basePrice=r,this.offers=o,this.isFavorite=s}}const t=[{id:"d1",name:"Amsterdam",description:"Amsterdam, capital of the Netherlands",pictures:[]},{id:"d2",name:"Chamonix",description:"Chamonix, a resort area near Mont Blanc",pictures:[]},{id:"d3",name:"Geneva",description:"Geneva, Swiss city on Lake Geneva",pictures:[]}];class i{#e=(()=>new Set)();addObserver(e){this.#e.add(e)}removeObserver(e){this.#e.delete(e)}_notify(e,t){this.#e.forEach((n=>n(e,t)))}}var a=n(72),r=n.n(a),o=n(825),s=n.n(o),l=n(659),c=n.n(l),d=n(56),p=n.n(d),f=n(540),A=n.n(f),u=n(113),h=n.n(u),m=n(362),C={};C.styleTagTransform=h(),C.setAttributes=p(),C.insert=c().bind(null,"head"),C.domAPI=s(),C.insertStyleElement=A(),r()(m.A,C),m.A&&m.A.locals&&m.A.locals;const g="shake";class b{#t=null;constructor(){if(new.target===b)throw new Error("Can't instantiate AbstractView, only concrete one.")}get element(){return this.#t||(this.#t=function(e){const t=document.createElement("div");return t.innerHTML=e,t.firstElementChild}(this.template)),this.#t}get template(){throw new Error("Abstract method not implemented: get template")}removeElement(){this.#t=null}shake(e){this.element.classList.add(g),setTimeout((()=>{this.element.classList.remove(g),e?.()}),600)}}function v(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"beforeend";if(!(e instanceof b))throw new Error("Can render only components");if(null===t)throw new Error("Container element doesn't exist");t.insertAdjacentElement(n,e.element)}function k(e,t){if(!(e instanceof b&&t instanceof b))throw new Error("Can replace only components");const n=e.element,i=t.element,a=i.parentElement;if(null===a)throw new Error("Parent element doesn't exist");a.replaceChild(n,i)}function y(e){if(null!==e){if(!(e instanceof b))throw new Error("Can remove only components");e.element.remove(),e.removeElement()}}var w=n(353),x=n.n(w);const B=["taxi","bus","train","ship","drive","flight","check-in","sightseeing","restaurant"],D="everything",_="future",M="present",S="past",E="PATCH",T="MINOR",F="MAJOR",I="ADD_POINT",H="DELETE_POINT",O="UPDATE_POINT",$="day",P="price",Y="time",R={[D]:e=>e,[_]:e=>e.filter((e=>x()(e.dateFrom).isAfter(x()()))),[M]:e=>e.filter((e=>x()(e.dateFrom).isBefore(x()())&&x()(e.dateTo).isAfter(x()()))),[S]:e=>e.filter((e=>x()(e.dateTo).isBefore(x()())))};class W extends b{#n=[];#i=null;#a=null;constructor(e){let{filters:t,currentFilterType:n,onFilterTypeChange:i}=e;super(),this.#n=t,this.#i=n,this.#a=i,this.element.addEventListener("change",this.#r)}get template(){return`\n      <form class="trip-filters">\n        ${this.#n.map((e=>`\n          <div class="trip-filters__filter">\n            <input\n              id="filter-${e.type}"\n              class="trip-filters__filter-input visually-hidden"\n              type="radio"\n              name="trip-filter"\n              value="${e.type}"\n              ${this.#i===e.type?"checked":""}\n              ${e.isDisabled?"disabled":""}\n            >\n            <label class="trip-filters__filter-label" for="filter-${e.type}">\n              ${e.name}\n            </label>\n          </div>\n        `)).join("")}\n      </form>\n    `}#r=e=>{"INPUT"===e.target.tagName&&this.#a(e.target.value)}}class L extends b{#o=null;#s=null;constructor(e){let{currentSortType:t,onSortTypeChange:n}=e;super(),this.#o=t,this.#s=n,this.element.addEventListener("click",this.#l)}get template(){return`\n      <form class="trip-events__trip-sort trip-sort" action="#" method="get">\n        <div class="trip-sort__item trip-sort__item--day">\n          <input id="sort-day" class="trip-sort__input visually-hidden" type="radio" name="trip-sort" value="day"\n            ${this.#o===$?"checked":""}>\n          <label class="trip-sort__btn" for="sort-day">Day</label>\n        </div>\n        <div class="trip-sort__item trip-sort__item--event">\n          <input id="sort-event" class="trip-sort__input visually-hidden" type="radio" name="trip-sort" value="event" disabled>\n          <label class="trip-sort__btn" for="sort-event">Event</label>\n        </div>\n        <div class="trip-sort__item trip-sort__item--time">\n          <input id="sort-time" class="trip-sort__input visually-hidden" type="radio" name="trip-sort" value="time"\n            ${this.#o===Y?"checked":""}>\n          <label class="trip-sort__btn" for="sort-time">Time</label>\n        </div>\n        <div class="trip-sort__item trip-sort__item--price">\n          <input id="sort-price" class="trip-sort__input visually-hidden" type="radio" name="trip-sort" value="price"\n            ${this.#o===P?"checked":""}>\n          <label class="trip-sort__btn" for="sort-price">Price</label>\n        </div>\n        <div class="trip-sort__item trip-sort__item--offer">\n          <input id="sort-offer" class="trip-sort__input visually-hidden" type="radio" name="trip-sort" value="offer" disabled>\n          <label class="trip-sort__btn" for="sort-offer">Offers</label>\n        </div>\n      </form>\n    `}#l=e=>{"INPUT"===e.target.tagName&&this.#s(e.target.value)}}const N={[D]:"Click New Event to create your first point",[_]:"There are no future events now",[M]:"There are no present events now",[S]:"There are no past events now"};class j extends b{#c=null;constructor(e){super(),this.#c=e}get template(){return`\n      <p class="trip-events__msg">\n        ${N[this.#c]}\n      </p>\n    `}}class z extends b{_state={};updateElement(e){e&&(this._setState(e),this.#d())}_restoreHandlers(){throw new Error("Abstract method not implemented: restoreHandlers")}_setState(e){this._state=structuredClone({...this._state,...e})}#d(){const e=this.element,t=e.parentElement;this.removeElement();const n=this.element;t.replaceChild(n,e),this._restoreHandlers()}}var q=["onChange","onClose","onDayCreate","onDestroy","onKeyDown","onMonthChange","onOpen","onParseConfig","onReady","onValueUpdate","onYearChange","onPreCalendarPosition"],U={_disable:[],allowInput:!1,allowInvalidPreload:!1,altFormat:"F j, Y",altInput:!1,altInputClass:"form-control input",animate:"object"==typeof window&&-1===window.navigator.userAgent.indexOf("MSIE"),ariaDateFormat:"F j, Y",autoFillDefaultTime:!0,clickOpens:!0,closeOnSelect:!0,conjunction:", ",dateFormat:"Y-m-d",defaultHour:12,defaultMinute:0,defaultSeconds:0,disable:[],disableMobile:!1,enableSeconds:!1,enableTime:!1,errorHandler:function(e){return"undefined"!=typeof console&&console.warn(e)},getWeek:function(e){var t=new Date(e.getTime());t.setHours(0,0,0,0),t.setDate(t.getDate()+3-(t.getDay()+6)%7);var n=new Date(t.getFullYear(),0,4);return 1+Math.round(((t.getTime()-n.getTime())/864e5-3+(n.getDay()+6)%7)/7)},hourIncrement:1,ignoredFocusElements:[],inline:!1,locale:"default",minuteIncrement:5,mode:"single",monthSelectorType:"dropdown",nextArrow:"<svg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' viewBox='0 0 17 17'><g></g><path d='M13.207 8.472l-7.854 7.854-0.707-0.707 7.146-7.146-7.146-7.148 0.707-0.707 7.854 7.854z' /></svg>",noCalendar:!1,now:new Date,onChange:[],onClose:[],onDayCreate:[],onDestroy:[],onKeyDown:[],onMonthChange:[],onOpen:[],onParseConfig:[],onReady:[],onValueUpdate:[],onYearChange:[],onPreCalendarPosition:[],plugins:[],position:"auto",positionElement:void 0,prevArrow:"<svg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' viewBox='0 0 17 17'><g></g><path d='M5.207 8.471l7.146 7.147-0.707 0.707-7.853-7.854 7.854-7.853 0.707 0.707-7.147 7.146z' /></svg>",shorthandCurrentMonth:!1,showMonths:1,static:!1,time_24hr:!1,weekNumbers:!1,wrap:!1},Q={weekdays:{shorthand:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],longhand:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"]},months:{shorthand:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],longhand:["January","February","March","April","May","June","July","August","September","October","November","December"]},daysInMonth:[31,28,31,30,31,30,31,31,30,31,30,31],firstDayOfWeek:0,ordinal:function(e){var t=e%100;if(t>3&&t<21)return"th";switch(t%10){case 1:return"st";case 2:return"nd";case 3:return"rd";default:return"th"}},rangeSeparator:" to ",weekAbbreviation:"Wk",scrollTitle:"Scroll to increment",toggleTitle:"Click to toggle",amPM:["AM","PM"],yearAriaLabel:"Year",monthAriaLabel:"Month",hourAriaLabel:"Hour",minuteAriaLabel:"Minute",time_24hr:!1};const K=Q;var G=function(e,t){return void 0===t&&(t=2),("000"+e).slice(-1*t)},J=function(e){return!0===e?1:0};function V(e,t){var n;return function(){var i=this,a=arguments;clearTimeout(n),n=setTimeout((function(){return e.apply(i,a)}),t)}}var X=function(e){return e instanceof Array?e:[e]};function Z(e,t,n){if(!0===n)return e.classList.add(t);e.classList.remove(t)}function ee(e,t,n){var i=window.document.createElement(e);return t=t||"",n=n||"",i.className=t,void 0!==n&&(i.textContent=n),i}function te(e){for(;e.firstChild;)e.removeChild(e.firstChild)}function ne(e,t){return t(e)?e:e.parentNode?ne(e.parentNode,t):void 0}function ie(e,t){var n=ee("div","numInputWrapper"),i=ee("input","numInput "+e),a=ee("span","arrowUp"),r=ee("span","arrowDown");if(-1===navigator.userAgent.indexOf("MSIE 9.0")?i.type="number":(i.type="text",i.pattern="\\d*"),void 0!==t)for(var o in t)i.setAttribute(o,t[o]);return n.appendChild(i),n.appendChild(a),n.appendChild(r),n}function ae(e){try{return"function"==typeof e.composedPath?e.composedPath()[0]:e.target}catch(t){return e.target}}var re=function(){},oe=function(e,t,n){return n.months[t?"shorthand":"longhand"][e]},se={D:re,F:function(e,t,n){e.setMonth(n.months.longhand.indexOf(t))},G:function(e,t){e.setHours((e.getHours()>=12?12:0)+parseFloat(t))},H:function(e,t){e.setHours(parseFloat(t))},J:function(e,t){e.setDate(parseFloat(t))},K:function(e,t,n){e.setHours(e.getHours()%12+12*J(new RegExp(n.amPM[1],"i").test(t)))},M:function(e,t,n){e.setMonth(n.months.shorthand.indexOf(t))},S:function(e,t){e.setSeconds(parseFloat(t))},U:function(e,t){return new Date(1e3*parseFloat(t))},W:function(e,t,n){var i=parseInt(t),a=new Date(e.getFullYear(),0,2+7*(i-1),0,0,0,0);return a.setDate(a.getDate()-a.getDay()+n.firstDayOfWeek),a},Y:function(e,t){e.setFullYear(parseFloat(t))},Z:function(e,t){return new Date(t)},d:function(e,t){e.setDate(parseFloat(t))},h:function(e,t){e.setHours((e.getHours()>=12?12:0)+parseFloat(t))},i:function(e,t){e.setMinutes(parseFloat(t))},j:function(e,t){e.setDate(parseFloat(t))},l:re,m:function(e,t){e.setMonth(parseFloat(t)-1)},n:function(e,t){e.setMonth(parseFloat(t)-1)},s:function(e,t){e.setSeconds(parseFloat(t))},u:function(e,t){return new Date(parseFloat(t))},w:re,y:function(e,t){e.setFullYear(2e3+parseFloat(t))}},le={D:"",F:"",G:"(\\d\\d|\\d)",H:"(\\d\\d|\\d)",J:"(\\d\\d|\\d)\\w+",K:"",M:"",S:"(\\d\\d|\\d)",U:"(.+)",W:"(\\d\\d|\\d)",Y:"(\\d{4})",Z:"(.+)",d:"(\\d\\d|\\d)",h:"(\\d\\d|\\d)",i:"(\\d\\d|\\d)",j:"(\\d\\d|\\d)",l:"",m:"(\\d\\d|\\d)",n:"(\\d\\d|\\d)",s:"(\\d\\d|\\d)",u:"(.+)",w:"(\\d\\d|\\d)",y:"(\\d{2})"},ce={Z:function(e){return e.toISOString()},D:function(e,t,n){return t.weekdays.shorthand[ce.w(e,t,n)]},F:function(e,t,n){return oe(ce.n(e,t,n)-1,!1,t)},G:function(e,t,n){return G(ce.h(e,t,n))},H:function(e){return G(e.getHours())},J:function(e,t){return void 0!==t.ordinal?e.getDate()+t.ordinal(e.getDate()):e.getDate()},K:function(e,t){return t.amPM[J(e.getHours()>11)]},M:function(e,t){return oe(e.getMonth(),!0,t)},S:function(e){return G(e.getSeconds())},U:function(e){return e.getTime()/1e3},W:function(e,t,n){return n.getWeek(e)},Y:function(e){return G(e.getFullYear(),4)},d:function(e){return G(e.getDate())},h:function(e){return e.getHours()%12?e.getHours()%12:12},i:function(e){return G(e.getMinutes())},j:function(e){return e.getDate()},l:function(e,t){return t.weekdays.longhand[e.getDay()]},m:function(e){return G(e.getMonth()+1)},n:function(e){return e.getMonth()+1},s:function(e){return e.getSeconds()},u:function(e){return e.getTime()},w:function(e){return e.getDay()},y:function(e){return String(e.getFullYear()).substring(2)}},de=function(e){var t=e.config,n=void 0===t?U:t,i=e.l10n,a=void 0===i?Q:i,r=e.isMobile,o=void 0!==r&&r;return function(e,t,i){var r=i||a;return void 0===n.formatDate||o?t.split("").map((function(t,i,a){return ce[t]&&"\\"!==a[i-1]?ce[t](e,r,n):"\\"!==t?t:""})).join(""):n.formatDate(e,t,r)}},pe=function(e){var t=e.config,n=void 0===t?U:t,i=e.l10n,a=void 0===i?Q:i;return function(e,t,i,r){if(0===e||e){var o,s=r||a,l=e;if(e instanceof Date)o=new Date(e.getTime());else if("string"!=typeof e&&void 0!==e.toFixed)o=new Date(e);else if("string"==typeof e){var c=t||(n||U).dateFormat,d=String(e).trim();if("today"===d)o=new Date,i=!0;else if(n&&n.parseDate)o=n.parseDate(e,c);else if(/Z$/.test(d)||/GMT$/.test(d))o=new Date(e);else{for(var p=void 0,f=[],A=0,u=0,h="";A<c.length;A++){var m=c[A],C="\\"===m,g="\\"===c[A-1]||C;if(le[m]&&!g){h+=le[m];var b=new RegExp(h).exec(e);b&&(p=!0)&&f["Y"!==m?"push":"unshift"]({fn:se[m],val:b[++u]})}else C||(h+=".")}o=n&&n.noCalendar?new Date((new Date).setHours(0,0,0,0)):new Date((new Date).getFullYear(),0,1,0,0,0,0),f.forEach((function(e){var t=e.fn,n=e.val;return o=t(o,n,s)||o})),o=p?o:void 0}}if(o instanceof Date&&!isNaN(o.getTime()))return!0===i&&o.setHours(0,0,0,0),o;n.errorHandler(new Error("Invalid date provided: "+l))}}};function fe(e,t,n){return void 0===n&&(n=!0),!1!==n?new Date(e.getTime()).setHours(0,0,0,0)-new Date(t.getTime()).setHours(0,0,0,0):e.getTime()-t.getTime()}var Ae=function(e,t,n){return 3600*e+60*t+n};function ue(e){var t=e.defaultHour,n=e.defaultMinute,i=e.defaultSeconds;if(void 0!==e.minDate){var a=e.minDate.getHours(),r=e.minDate.getMinutes(),o=e.minDate.getSeconds();t<a&&(t=a),t===a&&n<r&&(n=r),t===a&&n===r&&i<o&&(i=e.minDate.getSeconds())}if(void 0!==e.maxDate){var s=e.maxDate.getHours(),l=e.maxDate.getMinutes();(t=Math.min(t,s))===s&&(n=Math.min(l,n)),t===s&&n===l&&(i=e.maxDate.getSeconds())}return{hours:t,minutes:n,seconds:i}}n(990);var he=function(){return he=Object.assign||function(e){for(var t,n=1,i=arguments.length;n<i;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e},he.apply(this,arguments)},me=function(){for(var e=0,t=0,n=arguments.length;t<n;t++)e+=arguments[t].length;var i=Array(e),a=0;for(t=0;t<n;t++)for(var r=arguments[t],o=0,s=r.length;o<s;o++,a++)i[a]=r[o];return i};function Ce(e,t){var n={config:he(he({},U),be.defaultConfig),l10n:K};function i(){var e;return(null===(e=n.calendarContainer)||void 0===e?void 0:e.getRootNode()).activeElement||document.activeElement}function a(e){return e.bind(n)}function r(){var e=n.config;!1===e.weekNumbers&&1===e.showMonths||!0!==e.noCalendar&&window.requestAnimationFrame((function(){if(void 0!==n.calendarContainer&&(n.calendarContainer.style.visibility="hidden",n.calendarContainer.style.display="block"),void 0!==n.daysContainer){var t=(n.days.offsetWidth+1)*e.showMonths;n.daysContainer.style.width=t+"px",n.calendarContainer.style.width=t+(void 0!==n.weekWrapper?n.weekWrapper.offsetWidth:0)+"px",n.calendarContainer.style.removeProperty("visibility"),n.calendarContainer.style.removeProperty("display")}}))}function o(e){if(0===n.selectedDates.length){var t=void 0===n.config.minDate||fe(new Date,n.config.minDate)>=0?new Date:new Date(n.config.minDate.getTime()),i=ue(n.config);t.setHours(i.hours,i.minutes,i.seconds,t.getMilliseconds()),n.selectedDates=[t],n.latestSelectedDateObj=t}void 0!==e&&"blur"!==e.type&&function(e){e.preventDefault();var t="keydown"===e.type,i=ae(e),a=i;void 0!==n.amPM&&i===n.amPM&&(n.amPM.textContent=n.l10n.amPM[J(n.amPM.textContent===n.l10n.amPM[0])]);var r=parseFloat(a.getAttribute("min")),o=parseFloat(a.getAttribute("max")),s=parseFloat(a.getAttribute("step")),l=parseInt(a.value,10),c=l+s*(e.delta||(t?38===e.which?1:-1:0));if(void 0!==a.value&&2===a.value.length){var d=a===n.hourElement,p=a===n.minuteElement;c<r?(c=o+c+J(!d)+(J(d)&&J(!n.amPM)),p&&h(void 0,-1,n.hourElement)):c>o&&(c=a===n.hourElement?c-o-J(!n.amPM):r,p&&h(void 0,1,n.hourElement)),n.amPM&&d&&(1===s?c+l===23:Math.abs(c-l)>s)&&(n.amPM.textContent=n.l10n.amPM[J(n.amPM.textContent===n.l10n.amPM[0])]),a.value=G(c)}}(e);var a=n._input.value;s(),ye(),n._input.value!==a&&n._debouncedChange()}function s(){if(void 0!==n.hourElement&&void 0!==n.minuteElement){var e,t,i=(parseInt(n.hourElement.value.slice(-2),10)||0)%24,a=(parseInt(n.minuteElement.value,10)||0)%60,r=void 0!==n.secondElement?(parseInt(n.secondElement.value,10)||0)%60:0;void 0!==n.amPM&&(e=i,t=n.amPM.textContent,i=e%12+12*J(t===n.l10n.amPM[1]));var o=void 0!==n.config.minTime||n.config.minDate&&n.minDateHasTime&&n.latestSelectedDateObj&&0===fe(n.latestSelectedDateObj,n.config.minDate,!0),s=void 0!==n.config.maxTime||n.config.maxDate&&n.maxDateHasTime&&n.latestSelectedDateObj&&0===fe(n.latestSelectedDateObj,n.config.maxDate,!0);if(void 0!==n.config.maxTime&&void 0!==n.config.minTime&&n.config.minTime>n.config.maxTime){var l=Ae(n.config.minTime.getHours(),n.config.minTime.getMinutes(),n.config.minTime.getSeconds()),d=Ae(n.config.maxTime.getHours(),n.config.maxTime.getMinutes(),n.config.maxTime.getSeconds()),p=Ae(i,a,r);if(p>d&&p<l){var f=function(e){var t=Math.floor(e/3600),n=(e-3600*t)/60;return[t,n,e-3600*t-60*n]}(l);i=f[0],a=f[1],r=f[2]}}else{if(s){var A=void 0!==n.config.maxTime?n.config.maxTime:n.config.maxDate;(i=Math.min(i,A.getHours()))===A.getHours()&&(a=Math.min(a,A.getMinutes())),a===A.getMinutes()&&(r=Math.min(r,A.getSeconds()))}if(o){var u=void 0!==n.config.minTime?n.config.minTime:n.config.minDate;(i=Math.max(i,u.getHours()))===u.getHours()&&a<u.getMinutes()&&(a=u.getMinutes()),a===u.getMinutes()&&(r=Math.max(r,u.getSeconds()))}}c(i,a,r)}}function l(e){var t=e||n.latestSelectedDateObj;t&&t instanceof Date&&c(t.getHours(),t.getMinutes(),t.getSeconds())}function c(e,t,i){void 0!==n.latestSelectedDateObj&&n.latestSelectedDateObj.setHours(e%24,t,i||0,0),n.hourElement&&n.minuteElement&&!n.isMobile&&(n.hourElement.value=G(n.config.time_24hr?e:(12+e)%12+12*J(e%12==0)),n.minuteElement.value=G(t),void 0!==n.amPM&&(n.amPM.textContent=n.l10n.amPM[J(e>=12)]),void 0!==n.secondElement&&(n.secondElement.value=G(i)))}function d(e){var t=ae(e),n=parseInt(t.value)+(e.delta||0);(n/1e3>1||"Enter"===e.key&&!/[^\d]/.test(n.toString()))&&E(n)}function p(e,t,i,a){return t instanceof Array?t.forEach((function(t){return p(e,t,i,a)})):e instanceof Array?e.forEach((function(e){return p(e,t,i,a)})):(e.addEventListener(t,i,a),void n._handlers.push({remove:function(){return e.removeEventListener(t,i,a)}}))}function f(){ce("onChange")}function A(e,t){var i=void 0!==e?n.parseDate(e):n.latestSelectedDateObj||(n.config.minDate&&n.config.minDate>n.now?n.config.minDate:n.config.maxDate&&n.config.maxDate<n.now?n.config.maxDate:n.now),a=n.currentYear,r=n.currentMonth;try{void 0!==i&&(n.currentYear=i.getFullYear(),n.currentMonth=i.getMonth())}catch(e){e.message="Invalid date supplied: "+i,n.config.errorHandler(e)}t&&n.currentYear!==a&&(ce("onYearChange"),y()),!t||n.currentYear===a&&n.currentMonth===r||ce("onMonthChange"),n.redraw()}function u(e){var t=ae(e);~t.className.indexOf("arrow")&&h(e,t.classList.contains("arrowUp")?1:-1)}function h(e,t,n){var i=e&&ae(e),a=n||i&&i.parentNode&&i.parentNode.firstChild,r=Ce("increment");r.delta=t,a&&a.dispatchEvent(r)}function m(e,t,i,a){var r=T(t,!0),o=ee("span",e,t.getDate().toString());return o.dateObj=t,o.$i=a,o.setAttribute("aria-label",n.formatDate(t,n.config.ariaDateFormat)),-1===e.indexOf("hidden")&&0===fe(t,n.now)&&(n.todayDateElem=o,o.classList.add("today"),o.setAttribute("aria-current","date")),r?(o.tabIndex=-1,ge(t)&&(o.classList.add("selected"),n.selectedDateElem=o,"range"===n.config.mode&&(Z(o,"startRange",n.selectedDates[0]&&0===fe(t,n.selectedDates[0],!0)),Z(o,"endRange",n.selectedDates[1]&&0===fe(t,n.selectedDates[1],!0)),"nextMonthDay"===e&&o.classList.add("inRange")))):o.classList.add("flatpickr-disabled"),"range"===n.config.mode&&function(e){return!("range"!==n.config.mode||n.selectedDates.length<2)&&fe(e,n.selectedDates[0])>=0&&fe(e,n.selectedDates[1])<=0}(t)&&!ge(t)&&o.classList.add("inRange"),n.weekNumbers&&1===n.config.showMonths&&"prevMonthDay"!==e&&a%7==6&&n.weekNumbers.insertAdjacentHTML("beforeend","<span class='flatpickr-day'>"+n.config.getWeek(t)+"</span>"),ce("onDayCreate",o),o}function C(e){e.focus(),"range"===n.config.mode&&O(e)}function g(e){for(var t=e>0?0:n.config.showMonths-1,i=e>0?n.config.showMonths:-1,a=t;a!=i;a+=e)for(var r=n.daysContainer.children[a],o=e>0?0:r.children.length-1,s=e>0?r.children.length:-1,l=o;l!=s;l+=e){var c=r.children[l];if(-1===c.className.indexOf("hidden")&&T(c.dateObj))return c}}function b(e,t){var a=i(),r=F(a||document.body),o=void 0!==e?e:r?a:void 0!==n.selectedDateElem&&F(n.selectedDateElem)?n.selectedDateElem:void 0!==n.todayDateElem&&F(n.todayDateElem)?n.todayDateElem:g(t>0?1:-1);void 0===o?n._input.focus():r?function(e,t){for(var i=-1===e.className.indexOf("Month")?e.dateObj.getMonth():n.currentMonth,a=t>0?n.config.showMonths:-1,r=t>0?1:-1,o=i-n.currentMonth;o!=a;o+=r)for(var s=n.daysContainer.children[o],l=i-n.currentMonth===o?e.$i+t:t<0?s.children.length-1:0,c=s.children.length,d=l;d>=0&&d<c&&d!=(t>0?c:-1);d+=r){var p=s.children[d];if(-1===p.className.indexOf("hidden")&&T(p.dateObj)&&Math.abs(e.$i-d)>=Math.abs(t))return C(p)}n.changeMonth(r),b(g(r),0)}(o,t):C(o)}function v(e,t){for(var i=(new Date(e,t,1).getDay()-n.l10n.firstDayOfWeek+7)%7,a=n.utils.getDaysInMonth((t-1+12)%12,e),r=n.utils.getDaysInMonth(t,e),o=window.document.createDocumentFragment(),s=n.config.showMonths>1,l=s?"prevMonthDay hidden":"prevMonthDay",c=s?"nextMonthDay hidden":"nextMonthDay",d=a+1-i,p=0;d<=a;d++,p++)o.appendChild(m("flatpickr-day "+l,new Date(e,t-1,d),0,p));for(d=1;d<=r;d++,p++)o.appendChild(m("flatpickr-day",new Date(e,t,d),0,p));for(var f=r+1;f<=42-i&&(1===n.config.showMonths||p%7!=0);f++,p++)o.appendChild(m("flatpickr-day "+c,new Date(e,t+1,f%r),0,p));var A=ee("div","dayContainer");return A.appendChild(o),A}function k(){if(void 0!==n.daysContainer){te(n.daysContainer),n.weekNumbers&&te(n.weekNumbers);for(var e=document.createDocumentFragment(),t=0;t<n.config.showMonths;t++){var i=new Date(n.currentYear,n.currentMonth,1);i.setMonth(n.currentMonth+t),e.appendChild(v(i.getFullYear(),i.getMonth()))}n.daysContainer.appendChild(e),n.days=n.daysContainer.firstChild,"range"===n.config.mode&&1===n.selectedDates.length&&O()}}function y(){if(!(n.config.showMonths>1||"dropdown"!==n.config.monthSelectorType)){var e=function(e){return!(void 0!==n.config.minDate&&n.currentYear===n.config.minDate.getFullYear()&&e<n.config.minDate.getMonth()||void 0!==n.config.maxDate&&n.currentYear===n.config.maxDate.getFullYear()&&e>n.config.maxDate.getMonth())};n.monthsDropdownContainer.tabIndex=-1,n.monthsDropdownContainer.innerHTML="";for(var t=0;t<12;t++)if(e(t)){var i=ee("option","flatpickr-monthDropdown-month");i.value=new Date(n.currentYear,t).getMonth().toString(),i.textContent=oe(t,n.config.shorthandCurrentMonth,n.l10n),i.tabIndex=-1,n.currentMonth===t&&(i.selected=!0),n.monthsDropdownContainer.appendChild(i)}}}function w(){var e,t=ee("div","flatpickr-month"),i=window.document.createDocumentFragment();n.config.showMonths>1||"static"===n.config.monthSelectorType?e=ee("span","cur-month"):(n.monthsDropdownContainer=ee("select","flatpickr-monthDropdown-months"),n.monthsDropdownContainer.setAttribute("aria-label",n.l10n.monthAriaLabel),p(n.monthsDropdownContainer,"change",(function(e){var t=ae(e),i=parseInt(t.value,10);n.changeMonth(i-n.currentMonth),ce("onMonthChange")})),y(),e=n.monthsDropdownContainer);var a=ie("cur-year",{tabindex:"-1"}),r=a.getElementsByTagName("input")[0];r.setAttribute("aria-label",n.l10n.yearAriaLabel),n.config.minDate&&r.setAttribute("min",n.config.minDate.getFullYear().toString()),n.config.maxDate&&(r.setAttribute("max",n.config.maxDate.getFullYear().toString()),r.disabled=!!n.config.minDate&&n.config.minDate.getFullYear()===n.config.maxDate.getFullYear());var o=ee("div","flatpickr-current-month");return o.appendChild(e),o.appendChild(a),i.appendChild(o),t.appendChild(i),{container:t,yearElement:r,monthElement:e}}function x(){te(n.monthNav),n.monthNav.appendChild(n.prevMonthNav),n.config.showMonths&&(n.yearElements=[],n.monthElements=[]);for(var e=n.config.showMonths;e--;){var t=w();n.yearElements.push(t.yearElement),n.monthElements.push(t.monthElement),n.monthNav.appendChild(t.container)}n.monthNav.appendChild(n.nextMonthNav)}function B(){n.weekdayContainer?te(n.weekdayContainer):n.weekdayContainer=ee("div","flatpickr-weekdays");for(var e=n.config.showMonths;e--;){var t=ee("div","flatpickr-weekdaycontainer");n.weekdayContainer.appendChild(t)}return D(),n.weekdayContainer}function D(){if(n.weekdayContainer){var e=n.l10n.firstDayOfWeek,t=me(n.l10n.weekdays.shorthand);e>0&&e<t.length&&(t=me(t.splice(e,t.length),t.splice(0,e)));for(var i=n.config.showMonths;i--;)n.weekdayContainer.children[i].innerHTML="\n      <span class='flatpickr-weekday'>\n        "+t.join("</span><span class='flatpickr-weekday'>")+"\n      </span>\n      "}}function _(e,t){void 0===t&&(t=!0);var i=t?e:e-n.currentMonth;i<0&&!0===n._hidePrevMonthArrow||i>0&&!0===n._hideNextMonthArrow||(n.currentMonth+=i,(n.currentMonth<0||n.currentMonth>11)&&(n.currentYear+=n.currentMonth>11?1:-1,n.currentMonth=(n.currentMonth+12)%12,ce("onYearChange"),y()),k(),ce("onMonthChange"),ve())}function M(e){return n.calendarContainer.contains(e)}function S(e){if(n.isOpen&&!n.config.inline){var t=ae(e),i=M(t),a=!(t===n.input||t===n.altInput||n.element.contains(t)||e.path&&e.path.indexOf&&(~e.path.indexOf(n.input)||~e.path.indexOf(n.altInput))||i||M(e.relatedTarget)),r=!n.config.ignoredFocusElements.some((function(e){return e.contains(t)}));a&&r&&(n.config.allowInput&&n.setDate(n._input.value,!1,n.config.altInput?n.config.altFormat:n.config.dateFormat),void 0!==n.timeContainer&&void 0!==n.minuteElement&&void 0!==n.hourElement&&""!==n.input.value&&void 0!==n.input.value&&o(),n.close(),n.config&&"range"===n.config.mode&&1===n.selectedDates.length&&n.clear(!1))}}function E(e){if(!(!e||n.config.minDate&&e<n.config.minDate.getFullYear()||n.config.maxDate&&e>n.config.maxDate.getFullYear())){var t=e,i=n.currentYear!==t;n.currentYear=t||n.currentYear,n.config.maxDate&&n.currentYear===n.config.maxDate.getFullYear()?n.currentMonth=Math.min(n.config.maxDate.getMonth(),n.currentMonth):n.config.minDate&&n.currentYear===n.config.minDate.getFullYear()&&(n.currentMonth=Math.max(n.config.minDate.getMonth(),n.currentMonth)),i&&(n.redraw(),ce("onYearChange"),y())}}function T(e,t){var i;void 0===t&&(t=!0);var a=n.parseDate(e,void 0,t);if(n.config.minDate&&a&&fe(a,n.config.minDate,void 0!==t?t:!n.minDateHasTime)<0||n.config.maxDate&&a&&fe(a,n.config.maxDate,void 0!==t?t:!n.maxDateHasTime)>0)return!1;if(!n.config.enable&&0===n.config.disable.length)return!0;if(void 0===a)return!1;for(var r=!!n.config.enable,o=null!==(i=n.config.enable)&&void 0!==i?i:n.config.disable,s=0,l=void 0;s<o.length;s++){if("function"==typeof(l=o[s])&&l(a))return r;if(l instanceof Date&&void 0!==a&&l.getTime()===a.getTime())return r;if("string"==typeof l){var c=n.parseDate(l,void 0,!0);return c&&c.getTime()===a.getTime()?r:!r}if("object"==typeof l&&void 0!==a&&l.from&&l.to&&a.getTime()>=l.from.getTime()&&a.getTime()<=l.to.getTime())return r}return!r}function F(e){return void 0!==n.daysContainer&&-1===e.className.indexOf("hidden")&&-1===e.className.indexOf("flatpickr-disabled")&&n.daysContainer.contains(e)}function I(e){var t=e.target===n._input,i=n._input.value.trimEnd()!==ke();!t||!i||e.relatedTarget&&M(e.relatedTarget)||n.setDate(n._input.value,!0,e.target===n.altInput?n.config.altFormat:n.config.dateFormat)}function H(t){var a=ae(t),r=n.config.wrap?e.contains(a):a===n._input,l=n.config.allowInput,c=n.isOpen&&(!l||!r),d=n.config.inline&&r&&!l;if(13===t.keyCode&&r){if(l)return n.setDate(n._input.value,!0,a===n.altInput?n.config.altFormat:n.config.dateFormat),n.close(),a.blur();n.open()}else if(M(a)||c||d){var p=!!n.timeContainer&&n.timeContainer.contains(a);switch(t.keyCode){case 13:p?(t.preventDefault(),o(),N()):j(t);break;case 27:t.preventDefault(),N();break;case 8:case 46:r&&!n.config.allowInput&&(t.preventDefault(),n.clear());break;case 37:case 39:if(p||r)n.hourElement&&n.hourElement.focus();else{t.preventDefault();var f=i();if(void 0!==n.daysContainer&&(!1===l||f&&F(f))){var A=39===t.keyCode?1:-1;t.ctrlKey?(t.stopPropagation(),_(A),b(g(1),0)):b(void 0,A)}}break;case 38:case 40:t.preventDefault();var u=40===t.keyCode?1:-1;n.daysContainer&&void 0!==a.$i||a===n.input||a===n.altInput?t.ctrlKey?(t.stopPropagation(),E(n.currentYear-u),b(g(1),0)):p||b(void 0,7*u):a===n.currentYearElement?E(n.currentYear-u):n.config.enableTime&&(!p&&n.hourElement&&n.hourElement.focus(),o(t),n._debouncedChange());break;case 9:if(p){var h=[n.hourElement,n.minuteElement,n.secondElement,n.amPM].concat(n.pluginElements).filter((function(e){return e})),m=h.indexOf(a);if(-1!==m){var C=h[m+(t.shiftKey?-1:1)];t.preventDefault(),(C||n._input).focus()}}else!n.config.noCalendar&&n.daysContainer&&n.daysContainer.contains(a)&&t.shiftKey&&(t.preventDefault(),n._input.focus())}}if(void 0!==n.amPM&&a===n.amPM)switch(t.key){case n.l10n.amPM[0].charAt(0):case n.l10n.amPM[0].charAt(0).toLowerCase():n.amPM.textContent=n.l10n.amPM[0],s(),ye();break;case n.l10n.amPM[1].charAt(0):case n.l10n.amPM[1].charAt(0).toLowerCase():n.amPM.textContent=n.l10n.amPM[1],s(),ye()}(r||M(a))&&ce("onKeyDown",t)}function O(e,t){if(void 0===t&&(t="flatpickr-day"),1===n.selectedDates.length&&(!e||e.classList.contains(t)&&!e.classList.contains("flatpickr-disabled"))){for(var i=e?e.dateObj.getTime():n.days.firstElementChild.dateObj.getTime(),a=n.parseDate(n.selectedDates[0],void 0,!0).getTime(),r=Math.min(i,n.selectedDates[0].getTime()),o=Math.max(i,n.selectedDates[0].getTime()),s=!1,l=0,c=0,d=r;d<o;d+=864e5)T(new Date(d),!0)||(s=s||d>r&&d<o,d<a&&(!l||d>l)?l=d:d>a&&(!c||d<c)&&(c=d));Array.from(n.rContainer.querySelectorAll("*:nth-child(-n+"+n.config.showMonths+") > ."+t)).forEach((function(t){var r,o,d,p=t.dateObj.getTime(),f=l>0&&p<l||c>0&&p>c;if(f)return t.classList.add("notAllowed"),void["inRange","startRange","endRange"].forEach((function(e){t.classList.remove(e)}));s&&!f||(["startRange","inRange","endRange","notAllowed"].forEach((function(e){t.classList.remove(e)})),void 0!==e&&(e.classList.add(i<=n.selectedDates[0].getTime()?"startRange":"endRange"),a<i&&p===a?t.classList.add("startRange"):a>i&&p===a&&t.classList.add("endRange"),p>=l&&(0===c||p<=c)&&(o=a,d=i,(r=p)>Math.min(o,d)&&r<Math.max(o,d))&&t.classList.add("inRange")))}))}}function $(){!n.isOpen||n.config.static||n.config.inline||W()}function P(e){return function(t){var i=n.config["_"+e+"Date"]=n.parseDate(t,n.config.dateFormat),a=n.config["_"+("min"===e?"max":"min")+"Date"];void 0!==i&&(n["min"===e?"minDateHasTime":"maxDateHasTime"]=i.getHours()>0||i.getMinutes()>0||i.getSeconds()>0),n.selectedDates&&(n.selectedDates=n.selectedDates.filter((function(e){return T(e)})),n.selectedDates.length||"min"!==e||l(i),ye()),n.daysContainer&&(L(),void 0!==i?n.currentYearElement[e]=i.getFullYear().toString():n.currentYearElement.removeAttribute(e),n.currentYearElement.disabled=!!a&&void 0!==i&&a.getFullYear()===i.getFullYear())}}function Y(){return n.config.wrap?e.querySelector("[data-input]"):e}function R(){"object"!=typeof n.config.locale&&void 0===be.l10ns[n.config.locale]&&n.config.errorHandler(new Error("flatpickr: invalid locale "+n.config.locale)),n.l10n=he(he({},be.l10ns.default),"object"==typeof n.config.locale?n.config.locale:"default"!==n.config.locale?be.l10ns[n.config.locale]:void 0),le.D="("+n.l10n.weekdays.shorthand.join("|")+")",le.l="("+n.l10n.weekdays.longhand.join("|")+")",le.M="("+n.l10n.months.shorthand.join("|")+")",le.F="("+n.l10n.months.longhand.join("|")+")",le.K="("+n.l10n.amPM[0]+"|"+n.l10n.amPM[1]+"|"+n.l10n.amPM[0].toLowerCase()+"|"+n.l10n.amPM[1].toLowerCase()+")",void 0===he(he({},t),JSON.parse(JSON.stringify(e.dataset||{}))).time_24hr&&void 0===be.defaultConfig.time_24hr&&(n.config.time_24hr=n.l10n.time_24hr),n.formatDate=de(n),n.parseDate=pe({config:n.config,l10n:n.l10n})}function W(e){if("function"!=typeof n.config.position){if(void 0!==n.calendarContainer){ce("onPreCalendarPosition");var t=e||n._positionElement,i=Array.prototype.reduce.call(n.calendarContainer.children,(function(e,t){return e+t.offsetHeight}),0),a=n.calendarContainer.offsetWidth,r=n.config.position.split(" "),o=r[0],s=r.length>1?r[1]:null,l=t.getBoundingClientRect(),c=window.innerHeight-l.bottom,d="above"===o||"below"!==o&&c<i&&l.top>i,p=window.pageYOffset+l.top+(d?-i-2:t.offsetHeight+2);if(Z(n.calendarContainer,"arrowTop",!d),Z(n.calendarContainer,"arrowBottom",d),!n.config.inline){var f=window.pageXOffset+l.left,A=!1,u=!1;"center"===s?(f-=(a-l.width)/2,A=!0):"right"===s&&(f-=a-l.width,u=!0),Z(n.calendarContainer,"arrowLeft",!A&&!u),Z(n.calendarContainer,"arrowCenter",A),Z(n.calendarContainer,"arrowRight",u);var h=window.document.body.offsetWidth-(window.pageXOffset+l.right),m=f+a>window.document.body.offsetWidth,C=h+a>window.document.body.offsetWidth;if(Z(n.calendarContainer,"rightMost",m),!n.config.static)if(n.calendarContainer.style.top=p+"px",m)if(C){var g=function(){for(var e=null,t=0;t<document.styleSheets.length;t++){var n=document.styleSheets[t];if(n.cssRules){try{n.cssRules}catch(e){continue}e=n;break}}return null!=e?e:(i=document.createElement("style"),document.head.appendChild(i),i.sheet);var i}();if(void 0===g)return;var b=window.document.body.offsetWidth,v=Math.max(0,b/2-a/2),k=g.cssRules.length,y="{left:"+l.left+"px;right:auto;}";Z(n.calendarContainer,"rightMost",!1),Z(n.calendarContainer,"centerMost",!0),g.insertRule(".flatpickr-calendar.centerMost:before,.flatpickr-calendar.centerMost:after"+y,k),n.calendarContainer.style.left=v+"px",n.calendarContainer.style.right="auto"}else n.calendarContainer.style.left="auto",n.calendarContainer.style.right=h+"px";else n.calendarContainer.style.left=f+"px",n.calendarContainer.style.right="auto"}}}else n.config.position(n,e)}function L(){n.config.noCalendar||n.isMobile||(y(),ve(),k())}function N(){n._input.focus(),-1!==window.navigator.userAgent.indexOf("MSIE")||void 0!==navigator.msMaxTouchPoints?setTimeout(n.close,0):n.close()}function j(e){e.preventDefault(),e.stopPropagation();var t=ne(ae(e),(function(e){return e.classList&&e.classList.contains("flatpickr-day")&&!e.classList.contains("flatpickr-disabled")&&!e.classList.contains("notAllowed")}));if(void 0!==t){var i=t,a=n.latestSelectedDateObj=new Date(i.dateObj.getTime()),r=(a.getMonth()<n.currentMonth||a.getMonth()>n.currentMonth+n.config.showMonths-1)&&"range"!==n.config.mode;if(n.selectedDateElem=i,"single"===n.config.mode)n.selectedDates=[a];else if("multiple"===n.config.mode){var o=ge(a);o?n.selectedDates.splice(parseInt(o),1):n.selectedDates.push(a)}else"range"===n.config.mode&&(2===n.selectedDates.length&&n.clear(!1,!1),n.latestSelectedDateObj=a,n.selectedDates.push(a),0!==fe(a,n.selectedDates[0],!0)&&n.selectedDates.sort((function(e,t){return e.getTime()-t.getTime()})));if(s(),r){var l=n.currentYear!==a.getFullYear();n.currentYear=a.getFullYear(),n.currentMonth=a.getMonth(),l&&(ce("onYearChange"),y()),ce("onMonthChange")}if(ve(),k(),ye(),r||"range"===n.config.mode||1!==n.config.showMonths?void 0!==n.selectedDateElem&&void 0===n.hourElement&&n.selectedDateElem&&n.selectedDateElem.focus():C(i),void 0!==n.hourElement&&void 0!==n.hourElement&&n.hourElement.focus(),n.config.closeOnSelect){var c="single"===n.config.mode&&!n.config.enableTime,d="range"===n.config.mode&&2===n.selectedDates.length&&!n.config.enableTime;(c||d)&&N()}f()}}n.parseDate=pe({config:n.config,l10n:n.l10n}),n._handlers=[],n.pluginElements=[],n.loadedPlugins=[],n._bind=p,n._setHoursFromDate=l,n._positionCalendar=W,n.changeMonth=_,n.changeYear=E,n.clear=function(e,t){if(void 0===e&&(e=!0),void 0===t&&(t=!0),n.input.value="",void 0!==n.altInput&&(n.altInput.value=""),void 0!==n.mobileInput&&(n.mobileInput.value=""),n.selectedDates=[],n.latestSelectedDateObj=void 0,!0===t&&(n.currentYear=n._initialDate.getFullYear(),n.currentMonth=n._initialDate.getMonth()),!0===n.config.enableTime){var i=ue(n.config);c(i.hours,i.minutes,i.seconds)}n.redraw(),e&&ce("onChange")},n.close=function(){n.isOpen=!1,n.isMobile||(void 0!==n.calendarContainer&&n.calendarContainer.classList.remove("open"),void 0!==n._input&&n._input.classList.remove("active")),ce("onClose")},n.onMouseOver=O,n._createElement=ee,n.createDay=m,n.destroy=function(){void 0!==n.config&&ce("onDestroy");for(var e=n._handlers.length;e--;)n._handlers[e].remove();if(n._handlers=[],n.mobileInput)n.mobileInput.parentNode&&n.mobileInput.parentNode.removeChild(n.mobileInput),n.mobileInput=void 0;else if(n.calendarContainer&&n.calendarContainer.parentNode)if(n.config.static&&n.calendarContainer.parentNode){var t=n.calendarContainer.parentNode;if(t.lastChild&&t.removeChild(t.lastChild),t.parentNode){for(;t.firstChild;)t.parentNode.insertBefore(t.firstChild,t);t.parentNode.removeChild(t)}}else n.calendarContainer.parentNode.removeChild(n.calendarContainer);n.altInput&&(n.input.type="text",n.altInput.parentNode&&n.altInput.parentNode.removeChild(n.altInput),delete n.altInput),n.input&&(n.input.type=n.input._type,n.input.classList.remove("flatpickr-input"),n.input.removeAttribute("readonly")),["_showTimeInput","latestSelectedDateObj","_hideNextMonthArrow","_hidePrevMonthArrow","__hideNextMonthArrow","__hidePrevMonthArrow","isMobile","isOpen","selectedDateElem","minDateHasTime","maxDateHasTime","days","daysContainer","_input","_positionElement","innerContainer","rContainer","monthNav","todayDateElem","calendarContainer","weekdayContainer","prevMonthNav","nextMonthNav","monthsDropdownContainer","currentMonthElement","currentYearElement","navigationCurrentMonth","selectedDateElem","config"].forEach((function(e){try{delete n[e]}catch(e){}}))},n.isEnabled=T,n.jumpToDate=A,n.updateValue=ye,n.open=function(e,t){if(void 0===t&&(t=n._positionElement),!0===n.isMobile){if(e){e.preventDefault();var i=ae(e);i&&i.blur()}return void 0!==n.mobileInput&&(n.mobileInput.focus(),n.mobileInput.click()),void ce("onOpen")}if(!n._input.disabled&&!n.config.inline){var a=n.isOpen;n.isOpen=!0,a||(n.calendarContainer.classList.add("open"),n._input.classList.add("active"),ce("onOpen"),W(t)),!0===n.config.enableTime&&!0===n.config.noCalendar&&(!1!==n.config.allowInput||void 0!==e&&n.timeContainer.contains(e.relatedTarget)||setTimeout((function(){return n.hourElement.select()}),50))}},n.redraw=L,n.set=function(e,t){if(null!==e&&"object"==typeof e)for(var i in Object.assign(n.config,e),e)void 0!==z[i]&&z[i].forEach((function(e){return e()}));else n.config[e]=t,void 0!==z[e]?z[e].forEach((function(e){return e()})):q.indexOf(e)>-1&&(n.config[e]=X(t));n.redraw(),ye(!0)},n.setDate=function(e,t,i){if(void 0===t&&(t=!1),void 0===i&&(i=n.config.dateFormat),0!==e&&!e||e instanceof Array&&0===e.length)return n.clear(t);Q(e,i),n.latestSelectedDateObj=n.selectedDates[n.selectedDates.length-1],n.redraw(),A(void 0,t),l(),0===n.selectedDates.length&&n.clear(!1),ye(t),t&&ce("onChange")},n.toggle=function(e){if(!0===n.isOpen)return n.close();n.open(e)};var z={locale:[R,D],showMonths:[x,r,B],minDate:[A],maxDate:[A],positionElement:[se],clickOpens:[function(){!0===n.config.clickOpens?(p(n._input,"focus",n.open),p(n._input,"click",n.open)):(n._input.removeEventListener("focus",n.open),n._input.removeEventListener("click",n.open))}]};function Q(e,t){var i=[];if(e instanceof Array)i=e.map((function(e){return n.parseDate(e,t)}));else if(e instanceof Date||"number"==typeof e)i=[n.parseDate(e,t)];else if("string"==typeof e)switch(n.config.mode){case"single":case"time":i=[n.parseDate(e,t)];break;case"multiple":i=e.split(n.config.conjunction).map((function(e){return n.parseDate(e,t)}));break;case"range":i=e.split(n.l10n.rangeSeparator).map((function(e){return n.parseDate(e,t)}))}else n.config.errorHandler(new Error("Invalid date supplied: "+JSON.stringify(e)));n.selectedDates=n.config.allowInvalidPreload?i:i.filter((function(e){return e instanceof Date&&T(e,!1)})),"range"===n.config.mode&&n.selectedDates.sort((function(e,t){return e.getTime()-t.getTime()}))}function re(e){return e.slice().map((function(e){return"string"==typeof e||"number"==typeof e||e instanceof Date?n.parseDate(e,void 0,!0):e&&"object"==typeof e&&e.from&&e.to?{from:n.parseDate(e.from,void 0),to:n.parseDate(e.to,void 0)}:e})).filter((function(e){return e}))}function se(){n._positionElement=n.config.positionElement||n._input}function ce(e,t){if(void 0!==n.config){var i=n.config[e];if(void 0!==i&&i.length>0)for(var a=0;i[a]&&a<i.length;a++)i[a](n.selectedDates,n.input.value,n,t);"onChange"===e&&(n.input.dispatchEvent(Ce("change")),n.input.dispatchEvent(Ce("input")))}}function Ce(e){var t=document.createEvent("Event");return t.initEvent(e,!0,!0),t}function ge(e){for(var t=0;t<n.selectedDates.length;t++){var i=n.selectedDates[t];if(i instanceof Date&&0===fe(i,e))return""+t}return!1}function ve(){n.config.noCalendar||n.isMobile||!n.monthNav||(n.yearElements.forEach((function(e,t){var i=new Date(n.currentYear,n.currentMonth,1);i.setMonth(n.currentMonth+t),n.config.showMonths>1||"static"===n.config.monthSelectorType?n.monthElements[t].textContent=oe(i.getMonth(),n.config.shorthandCurrentMonth,n.l10n)+" ":n.monthsDropdownContainer.value=i.getMonth().toString(),e.value=i.getFullYear().toString()})),n._hidePrevMonthArrow=void 0!==n.config.minDate&&(n.currentYear===n.config.minDate.getFullYear()?n.currentMonth<=n.config.minDate.getMonth():n.currentYear<n.config.minDate.getFullYear()),n._hideNextMonthArrow=void 0!==n.config.maxDate&&(n.currentYear===n.config.maxDate.getFullYear()?n.currentMonth+1>n.config.maxDate.getMonth():n.currentYear>n.config.maxDate.getFullYear()))}function ke(e){var t=e||(n.config.altInput?n.config.altFormat:n.config.dateFormat);return n.selectedDates.map((function(e){return n.formatDate(e,t)})).filter((function(e,t,i){return"range"!==n.config.mode||n.config.enableTime||i.indexOf(e)===t})).join("range"!==n.config.mode?n.config.conjunction:n.l10n.rangeSeparator)}function ye(e){void 0===e&&(e=!0),void 0!==n.mobileInput&&n.mobileFormatStr&&(n.mobileInput.value=void 0!==n.latestSelectedDateObj?n.formatDate(n.latestSelectedDateObj,n.mobileFormatStr):""),n.input.value=ke(n.config.dateFormat),void 0!==n.altInput&&(n.altInput.value=ke(n.config.altFormat)),!1!==e&&ce("onValueUpdate")}function we(e){var t=ae(e),i=n.prevMonthNav.contains(t),a=n.nextMonthNav.contains(t);i||a?_(i?-1:1):n.yearElements.indexOf(t)>=0?t.select():t.classList.contains("arrowUp")?n.changeYear(n.currentYear+1):t.classList.contains("arrowDown")&&n.changeYear(n.currentYear-1)}return function(){n.element=n.input=e,n.isOpen=!1,function(){var i=["wrap","weekNumbers","allowInput","allowInvalidPreload","clickOpens","time_24hr","enableTime","noCalendar","altInput","shorthandCurrentMonth","inline","static","enableSeconds","disableMobile"],r=he(he({},JSON.parse(JSON.stringify(e.dataset||{}))),t),o={};n.config.parseDate=r.parseDate,n.config.formatDate=r.formatDate,Object.defineProperty(n.config,"enable",{get:function(){return n.config._enable},set:function(e){n.config._enable=re(e)}}),Object.defineProperty(n.config,"disable",{get:function(){return n.config._disable},set:function(e){n.config._disable=re(e)}});var s="time"===r.mode;if(!r.dateFormat&&(r.enableTime||s)){var l=be.defaultConfig.dateFormat||U.dateFormat;o.dateFormat=r.noCalendar||s?"H:i"+(r.enableSeconds?":S":""):l+" H:i"+(r.enableSeconds?":S":"")}if(r.altInput&&(r.enableTime||s)&&!r.altFormat){var c=be.defaultConfig.altFormat||U.altFormat;o.altFormat=r.noCalendar||s?"h:i"+(r.enableSeconds?":S K":" K"):c+" h:i"+(r.enableSeconds?":S":"")+" K"}Object.defineProperty(n.config,"minDate",{get:function(){return n.config._minDate},set:P("min")}),Object.defineProperty(n.config,"maxDate",{get:function(){return n.config._maxDate},set:P("max")});var d=function(e){return function(t){n.config["min"===e?"_minTime":"_maxTime"]=n.parseDate(t,"H:i:S")}};Object.defineProperty(n.config,"minTime",{get:function(){return n.config._minTime},set:d("min")}),Object.defineProperty(n.config,"maxTime",{get:function(){return n.config._maxTime},set:d("max")}),"time"===r.mode&&(n.config.noCalendar=!0,n.config.enableTime=!0),Object.assign(n.config,o,r);for(var p=0;p<i.length;p++)n.config[i[p]]=!0===n.config[i[p]]||"true"===n.config[i[p]];for(q.filter((function(e){return void 0!==n.config[e]})).forEach((function(e){n.config[e]=X(n.config[e]||[]).map(a)})),n.isMobile=!n.config.disableMobile&&!n.config.inline&&"single"===n.config.mode&&!n.config.disable.length&&!n.config.enable&&!n.config.weekNumbers&&/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent),p=0;p<n.config.plugins.length;p++){var f=n.config.plugins[p](n)||{};for(var A in f)q.indexOf(A)>-1?n.config[A]=X(f[A]).map(a).concat(n.config[A]):void 0===r[A]&&(n.config[A]=f[A])}r.altInputClass||(n.config.altInputClass=Y().className+" "+n.config.altInputClass),ce("onParseConfig")}(),R(),n.input=Y(),n.input?(n.input._type=n.input.type,n.input.type="text",n.input.classList.add("flatpickr-input"),n._input=n.input,n.config.altInput&&(n.altInput=ee(n.input.nodeName,n.config.altInputClass),n._input=n.altInput,n.altInput.placeholder=n.input.placeholder,n.altInput.disabled=n.input.disabled,n.altInput.required=n.input.required,n.altInput.tabIndex=n.input.tabIndex,n.altInput.type="text",n.input.setAttribute("type","hidden"),!n.config.static&&n.input.parentNode&&n.input.parentNode.insertBefore(n.altInput,n.input.nextSibling)),n.config.allowInput||n._input.setAttribute("readonly","readonly"),se()):n.config.errorHandler(new Error("Invalid input element specified")),function(){n.selectedDates=[],n.now=n.parseDate(n.config.now)||new Date;var e=n.config.defaultDate||("INPUT"!==n.input.nodeName&&"TEXTAREA"!==n.input.nodeName||!n.input.placeholder||n.input.value!==n.input.placeholder?n.input.value:null);e&&Q(e,n.config.dateFormat),n._initialDate=n.selectedDates.length>0?n.selectedDates[0]:n.config.minDate&&n.config.minDate.getTime()>n.now.getTime()?n.config.minDate:n.config.maxDate&&n.config.maxDate.getTime()<n.now.getTime()?n.config.maxDate:n.now,n.currentYear=n._initialDate.getFullYear(),n.currentMonth=n._initialDate.getMonth(),n.selectedDates.length>0&&(n.latestSelectedDateObj=n.selectedDates[0]),void 0!==n.config.minTime&&(n.config.minTime=n.parseDate(n.config.minTime,"H:i")),void 0!==n.config.maxTime&&(n.config.maxTime=n.parseDate(n.config.maxTime,"H:i")),n.minDateHasTime=!!n.config.minDate&&(n.config.minDate.getHours()>0||n.config.minDate.getMinutes()>0||n.config.minDate.getSeconds()>0),n.maxDateHasTime=!!n.config.maxDate&&(n.config.maxDate.getHours()>0||n.config.maxDate.getMinutes()>0||n.config.maxDate.getSeconds()>0)}(),n.utils={getDaysInMonth:function(e,t){return void 0===e&&(e=n.currentMonth),void 0===t&&(t=n.currentYear),1===e&&(t%4==0&&t%100!=0||t%400==0)?29:n.l10n.daysInMonth[e]}},n.isMobile||function(){var e=window.document.createDocumentFragment();if(n.calendarContainer=ee("div","flatpickr-calendar"),n.calendarContainer.tabIndex=-1,!n.config.noCalendar){if(e.appendChild((n.monthNav=ee("div","flatpickr-months"),n.yearElements=[],n.monthElements=[],n.prevMonthNav=ee("span","flatpickr-prev-month"),n.prevMonthNav.innerHTML=n.config.prevArrow,n.nextMonthNav=ee("span","flatpickr-next-month"),n.nextMonthNav.innerHTML=n.config.nextArrow,x(),Object.defineProperty(n,"_hidePrevMonthArrow",{get:function(){return n.__hidePrevMonthArrow},set:function(e){n.__hidePrevMonthArrow!==e&&(Z(n.prevMonthNav,"flatpickr-disabled",e),n.__hidePrevMonthArrow=e)}}),Object.defineProperty(n,"_hideNextMonthArrow",{get:function(){return n.__hideNextMonthArrow},set:function(e){n.__hideNextMonthArrow!==e&&(Z(n.nextMonthNav,"flatpickr-disabled",e),n.__hideNextMonthArrow=e)}}),n.currentYearElement=n.yearElements[0],ve(),n.monthNav)),n.innerContainer=ee("div","flatpickr-innerContainer"),n.config.weekNumbers){var t=function(){n.calendarContainer.classList.add("hasWeeks");var e=ee("div","flatpickr-weekwrapper");e.appendChild(ee("span","flatpickr-weekday",n.l10n.weekAbbreviation));var t=ee("div","flatpickr-weeks");return e.appendChild(t),{weekWrapper:e,weekNumbers:t}}(),i=t.weekWrapper,a=t.weekNumbers;n.innerContainer.appendChild(i),n.weekNumbers=a,n.weekWrapper=i}n.rContainer=ee("div","flatpickr-rContainer"),n.rContainer.appendChild(B()),n.daysContainer||(n.daysContainer=ee("div","flatpickr-days"),n.daysContainer.tabIndex=-1),k(),n.rContainer.appendChild(n.daysContainer),n.innerContainer.appendChild(n.rContainer),e.appendChild(n.innerContainer)}n.config.enableTime&&e.appendChild(function(){n.calendarContainer.classList.add("hasTime"),n.config.noCalendar&&n.calendarContainer.classList.add("noCalendar");var e=ue(n.config);n.timeContainer=ee("div","flatpickr-time"),n.timeContainer.tabIndex=-1;var t=ee("span","flatpickr-time-separator",":"),i=ie("flatpickr-hour",{"aria-label":n.l10n.hourAriaLabel});n.hourElement=i.getElementsByTagName("input")[0];var a=ie("flatpickr-minute",{"aria-label":n.l10n.minuteAriaLabel});if(n.minuteElement=a.getElementsByTagName("input")[0],n.hourElement.tabIndex=n.minuteElement.tabIndex=-1,n.hourElement.value=G(n.latestSelectedDateObj?n.latestSelectedDateObj.getHours():n.config.time_24hr?e.hours:function(e){switch(e%24){case 0:case 12:return 12;default:return e%12}}(e.hours)),n.minuteElement.value=G(n.latestSelectedDateObj?n.latestSelectedDateObj.getMinutes():e.minutes),n.hourElement.setAttribute("step",n.config.hourIncrement.toString()),n.minuteElement.setAttribute("step",n.config.minuteIncrement.toString()),n.hourElement.setAttribute("min",n.config.time_24hr?"0":"1"),n.hourElement.setAttribute("max",n.config.time_24hr?"23":"12"),n.hourElement.setAttribute("maxlength","2"),n.minuteElement.setAttribute("min","0"),n.minuteElement.setAttribute("max","59"),n.minuteElement.setAttribute("maxlength","2"),n.timeContainer.appendChild(i),n.timeContainer.appendChild(t),n.timeContainer.appendChild(a),n.config.time_24hr&&n.timeContainer.classList.add("time24hr"),n.config.enableSeconds){n.timeContainer.classList.add("hasSeconds");var r=ie("flatpickr-second");n.secondElement=r.getElementsByTagName("input")[0],n.secondElement.value=G(n.latestSelectedDateObj?n.latestSelectedDateObj.getSeconds():e.seconds),n.secondElement.setAttribute("step",n.minuteElement.getAttribute("step")),n.secondElement.setAttribute("min","0"),n.secondElement.setAttribute("max","59"),n.secondElement.setAttribute("maxlength","2"),n.timeContainer.appendChild(ee("span","flatpickr-time-separator",":")),n.timeContainer.appendChild(r)}return n.config.time_24hr||(n.amPM=ee("span","flatpickr-am-pm",n.l10n.amPM[J((n.latestSelectedDateObj?n.hourElement.value:n.config.defaultHour)>11)]),n.amPM.title=n.l10n.toggleTitle,n.amPM.tabIndex=-1,n.timeContainer.appendChild(n.amPM)),n.timeContainer}()),Z(n.calendarContainer,"rangeMode","range"===n.config.mode),Z(n.calendarContainer,"animate",!0===n.config.animate),Z(n.calendarContainer,"multiMonth",n.config.showMonths>1),n.calendarContainer.appendChild(e);var r=void 0!==n.config.appendTo&&void 0!==n.config.appendTo.nodeType;if((n.config.inline||n.config.static)&&(n.calendarContainer.classList.add(n.config.inline?"inline":"static"),n.config.inline&&(!r&&n.element.parentNode?n.element.parentNode.insertBefore(n.calendarContainer,n._input.nextSibling):void 0!==n.config.appendTo&&n.config.appendTo.appendChild(n.calendarContainer)),n.config.static)){var o=ee("div","flatpickr-wrapper");n.element.parentNode&&n.element.parentNode.insertBefore(o,n.element),o.appendChild(n.element),n.altInput&&o.appendChild(n.altInput),o.appendChild(n.calendarContainer)}n.config.static||n.config.inline||(void 0!==n.config.appendTo?n.config.appendTo:window.document.body).appendChild(n.calendarContainer)}(),function(){if(n.config.wrap&&["open","close","toggle","clear"].forEach((function(e){Array.prototype.forEach.call(n.element.querySelectorAll("[data-"+e+"]"),(function(t){return p(t,"click",n[e])}))})),n.isMobile)!function(){var e=n.config.enableTime?n.config.noCalendar?"time":"datetime-local":"date";n.mobileInput=ee("input",n.input.className+" flatpickr-mobile"),n.mobileInput.tabIndex=1,n.mobileInput.type=e,n.mobileInput.disabled=n.input.disabled,n.mobileInput.required=n.input.required,n.mobileInput.placeholder=n.input.placeholder,n.mobileFormatStr="datetime-local"===e?"Y-m-d\\TH:i:S":"date"===e?"Y-m-d":"H:i:S",n.selectedDates.length>0&&(n.mobileInput.defaultValue=n.mobileInput.value=n.formatDate(n.selectedDates[0],n.mobileFormatStr)),n.config.minDate&&(n.mobileInput.min=n.formatDate(n.config.minDate,"Y-m-d")),n.config.maxDate&&(n.mobileInput.max=n.formatDate(n.config.maxDate,"Y-m-d")),n.input.getAttribute("step")&&(n.mobileInput.step=String(n.input.getAttribute("step"))),n.input.type="hidden",void 0!==n.altInput&&(n.altInput.type="hidden");try{n.input.parentNode&&n.input.parentNode.insertBefore(n.mobileInput,n.input.nextSibling)}catch(e){}p(n.mobileInput,"change",(function(e){n.setDate(ae(e).value,!1,n.mobileFormatStr),ce("onChange"),ce("onClose")}))}();else{var e=V($,50);if(n._debouncedChange=V(f,300),n.daysContainer&&!/iPhone|iPad|iPod/i.test(navigator.userAgent)&&p(n.daysContainer,"mouseover",(function(e){"range"===n.config.mode&&O(ae(e))})),p(n._input,"keydown",H),void 0!==n.calendarContainer&&p(n.calendarContainer,"keydown",H),n.config.inline||n.config.static||p(window,"resize",e),void 0!==window.ontouchstart?p(window.document,"touchstart",S):p(window.document,"mousedown",S),p(window.document,"focus",S,{capture:!0}),!0===n.config.clickOpens&&(p(n._input,"focus",n.open),p(n._input,"click",n.open)),void 0!==n.daysContainer&&(p(n.monthNav,"click",we),p(n.monthNav,["keyup","increment"],d),p(n.daysContainer,"click",j)),void 0!==n.timeContainer&&void 0!==n.minuteElement&&void 0!==n.hourElement){p(n.timeContainer,["increment"],o),p(n.timeContainer,"blur",o,{capture:!0}),p(n.timeContainer,"click",u),p([n.hourElement,n.minuteElement],["focus","click"],(function(e){return ae(e).select()})),void 0!==n.secondElement&&p(n.secondElement,"focus",(function(){return n.secondElement&&n.secondElement.select()})),void 0!==n.amPM&&p(n.amPM,"click",(function(e){o(e)}))}n.config.allowInput&&p(n._input,"blur",I)}}(),(n.selectedDates.length||n.config.noCalendar)&&(n.config.enableTime&&l(n.config.noCalendar?n.latestSelectedDateObj:void 0),ye(!1)),r();var i=/^((?!chrome|android).)*safari/i.test(navigator.userAgent);!n.isMobile&&i&&W(),ce("onReady")}(),n}function ge(e,t){for(var n=Array.prototype.slice.call(e).filter((function(e){return e instanceof HTMLElement})),i=[],a=0;a<n.length;a++){var r=n[a];try{if(null!==r.getAttribute("data-fp-omit"))continue;void 0!==r._flatpickr&&(r._flatpickr.destroy(),r._flatpickr=void 0),r._flatpickr=Ce(r,t||{}),i.push(r._flatpickr)}catch(e){console.error(e)}}return 1===i.length?i[0]:i}"undefined"!=typeof HTMLElement&&"undefined"!=typeof HTMLCollection&&"undefined"!=typeof NodeList&&(HTMLCollection.prototype.flatpickr=NodeList.prototype.flatpickr=function(e){return ge(this,e)},HTMLElement.prototype.flatpickr=function(e){return ge([this],e)});var be=function(e,t){return"string"==typeof e?ge(window.document.querySelectorAll(e),t):e instanceof Node?ge([e],t):ge(e,t)};be.defaultConfig={},be.l10ns={en:he({},K),default:he({},K)},be.localize=function(e){be.l10ns.default=he(he({},be.l10ns.default),e)},be.setDefaults=function(e){be.defaultConfig=he(he({},be.defaultConfig),e)},be.parseDate=pe({}),be.formatDate=de({}),be.compareDates=fe,"undefined"!=typeof jQuery&&void 0!==jQuery.fn&&(jQuery.fn.flatpickr=function(e){return ge(this,e)}),Date.prototype.fp_incr=function(e){return new Date(this.getFullYear(),this.getMonth(),this.getDate()+("string"==typeof e?parseInt(e,10):e))},"undefined"!=typeof window&&(window.flatpickr=be);const ve=be;var ke=n(921),ye={};ye.styleTagTransform=h(),ye.setAttributes=p(),ye.insert=c().bind(null,"head"),ye.domAPI=s(),ye.insertStyleElement=A(),r()(ke.A,ye),ke.A&&ke.A.locals&&ke.A.locals;class we extends z{#p=null;#f=null;#A=[];#u={};constructor(e){let{point:t={},destinations:n=[],offers:i={},onFormSubmit:a,onFormClose:r,onFormDelete:o}=e;super(),this.#A=n,this.#u=i,this._state=we.parsePointToState(t),this._onFormSubmit=a,this._onFormClose=r,this._onFormDelete=o,this._restoreHandlers()}get template(){const e=this.#A.find((e=>e.id===this._state.destination))||{},t=this.#u[this._state.type]||[];return`\n      <form class="event event--edit" action="#" method="post">\n        <header class="event__header">\n          <div class="event__type-wrapper">\n            <label class="event__type  event__type-btn" for="event-type-toggle-1">\n              <span class="visually-hidden">Choose event type</span>\n              <img class="event__type-icon" width="17" height="17" src="img/icons/${this._state.type}.png" alt="Event type icon">\n            </label>\n            <input class="event__type-toggle  visually-hidden" id="event-type-toggle-1" type="checkbox">\n            <div class="event__type-list">\n              <fieldset class="event__type-group">\n                <legend class="visually-hidden">Event type</legend>\n                ${Object.keys(this.#u).map((e=>`\n                  <div class="event__type-item">\n                    <input id="event-type-${e}-1" class="event__type-input  visually-hidden" type="radio" name="event-type" value="${e}" ${e===this._state.type?"checked":""}>\n                    <label class="event__type-label  event__type-label--${e}" for="event-type-${e}-1">${e}</label>\n                  </div>\n                `)).join("")}\n              </fieldset>\n            </div>\n          </div>\n\n          <div class="event__field-group  event__field-group--destination">\n            <label class="event__label  event__type-output" for="event-destination-1">\n              ${this._state.type}\n            </label>\n            <select class="event__input event__input--destination" id="event-destination-1" name="event-destination">\n              ${this.#A.map((e=>`\n                <option value="${e.name}" ${e.id===this._state.destination?"selected":""}>${e.name}</option>\n              `)).join("")}\n            </select>\n          </div>\n\n          <div class="event__field-group  event__field-group--time">\n            <label class="visually-hidden" for="event-start-time-1">Start time</label>\n            <input class="event__input  event__input--time" id="event-start-time-1" type="text" name="event-start" value="${x()(this._state.dateFrom).format("DD/MM/YYYY HH:mm")}">\n            &mdash;\n            <label class="visually-hidden" for="event-end-time-1">End time</label>\n            <input class="event__input  event__input--time" id="event-end-time-1" type="text" name="event-end" value="${x()(this._state.dateTo).format("DD/MM/YYYY HH:mm")}">\n          </div>\n\n          <div class="event__field-group  event__field-group--price">\n            <label class="event__label" for="event-price-1">\n              <span class="visually-hidden">Price</span>\n              &euro;\n            </label>\n            <input class="event__input  event__input--price" id="event-price-1" type="text" name="event-price" value="${this._state.basePrice}">\n          </div>\n\n          <button class="event__save-btn  btn  btn--blue" type="submit">Save</button>\n          <button class="event__reset-btn" type="reset">Delete</button>\n          <button class="event__rollup-btn" type="button">\n            <span class="visually-hidden">Open event</span>\n          </button>\n        </header>\n\n        <section class="event__details">\n          <section class="event__section  event__section--offers">\n            <h3 class="event__section-title  event__section-title--offers">Offers</h3>\n            <div class="event__available-offers">\n              ${t.map((e=>`\n                <div class="event__offer-selector">\n                  <input class="event__offer-checkbox  visually-hidden" id="event-offer-${e.id}" type="checkbox" name="event-offer" value="${e.id}" ${this._state.offers.includes(e.id)?"checked":""}>\n                  <label class="event__offer-label" for="event-offer-${e.id}">\n                    <span class="event__offer-title">${e.title}</span>\n                    &plus;&euro;&nbsp;<span class="event__offer-price">${e.price}</span>\n                  </label>\n                </div>\n              `)).join("")}\n            </div>\n          </section>\n\n          <section class="event__section  event__section--destination">\n            <h3 class="event__section-title  event__section-title--destination">Destination</h3>\n            <p class="event__destination-description">${e.description||""}</p>\n            <div class="event__photos-container">\n              <div class="event__photos-tape">\n                ${(e.pictures||[]).map((e=>`\n                  <img class="event__photo" src="${e.src}" alt="${e.description}">\n                `)).join("")}\n              </div>\n            </div>\n          </section>\n        </section>\n      </form>\n    `}_restoreHandlers(){this._setInnerHandlers();const e=this.element.querySelector(".event__rollup-btn");e&&e.addEventListener("click",this.#h),this.element.addEventListener("submit",this.#m),this.element.querySelector(".event__reset-btn").addEventListener("click",this.#C)}_setInnerHandlers(){this.element.querySelectorAll('input[name="event-type"]').forEach((e=>{e.addEventListener("change",this.#g)})),this.element.querySelector(".event__input--destination").addEventListener("change",this.#b),this.element.querySelectorAll(".event__offer-checkbox").forEach((e=>e.addEventListener("change",this.#v))),this.#k()}#k(){this.#p&&this.#p.destroy(),this.#f&&this.#f.destroy(),this.#p=ve(this.element.querySelector('input[name="event-start"]'),{enableTime:!0,dateFormat:"d/m/Y H:i",defaultDate:this._state.dateFrom,onChange:this.#y,time_24hr:!0}),this.#f=ve(this.element.querySelector('input[name="event-end"]'),{enableTime:!0,dateFormat:"d/m/Y H:i",defaultDate:this._state.dateTo,onChange:this.#w,time_24hr:!0})}#g=e=>{this.updateElement({type:e.target.value,offers:[]})};#b=e=>{const t=this.#A.find((t=>t.name===e.target.value));t&&this.updateElement({destination:t.id})};#v=()=>{const e=Array.from(this.element.querySelectorAll(".event__offer-checkbox:checked")).map((e=>e.value));this._setState({offers:e})};#y=e=>{let[t]=e;this._setState({dateFrom:t})};#w=e=>{let[t]=e;this._setState({dateTo:t})};#m=e=>{e.preventDefault(),this._onFormSubmit(we.parseStateToPoint(this._state))};#h=e=>{e.preventDefault(),this._onFormClose()};#C=e=>{e.preventDefault(),this._onFormDelete(we.parseStateToPoint(this._state))};static parsePointToState(e){return{...e,dateFrom:e.dateFrom?new Date(e.dateFrom):new Date,dateTo:e.dateTo?new Date(e.dateTo):new Date,offers:e.offers||[],destination:e.destination||""}}static parseStateToPoint(e){return{...e,dateFrom:e.dateFrom.toISOString(),dateTo:e.dateTo.toISOString()}}removeElement(){super.removeElement(),this.#p&&(this.#p.destroy(),this.#p=null),this.#f&&(this.#f.destroy(),this.#f=null)}}class xe extends z{#p=null;#f=null;#A=[];#u={};#x=null;#B=null;constructor(e){let{destinations:t=[],offers:n={},onFormSubmit:i,onFormClose:a}=e;super(),this.#A=t,this.#u=n,this._state=this.#D(),this.#x=i,this.#B=a,this._restoreHandlers()}#D(){return{type:"flight",destination:"",dateFrom:new Date,dateTo:new Date,basePrice:0,offers:[],isFavorite:!1}}get template(){const e=this.#A.find((e=>e.id===this._state.destination))||{},t=this.#u[this._state.type]||[];return`\n      <form class="event event--edit" action="#" method="post">\n        <header class="event__header">\n          <div class="event__type-wrapper">\n            <label class="event__type  event__type-btn" for="event-type-toggle-1">\n              <span class="visually-hidden">Choose event type</span>\n              <img class="event__type-icon" width="17" height="17" src="img/icons/${this._state.type}.png" alt="Event type icon">\n            </label>\n            <input class="event__type-toggle  visually-hidden" id="event-type-toggle-1" type="checkbox">\n            <div class="event__type-list">\n              <fieldset class="event__type-group">\n                <legend class="visually-hidden">Event type</legend>\n                ${B.map((e=>`\n                  <div class="event__type-item">\n                    <input id="event-type-${e}-1" class="event__type-input  visually-hidden" type="radio" name="event-type" value="${e}" ${e===this._state.type?"checked":""}>\n                    <label class="event__type-label  event__type-label--${e}" for="event-type-${e}-1">${e}</label>\n                  </div>\n                `)).join("")}\n              </fieldset>\n            </div>\n          </div>\n\n          <div class="event__field-group  event__field-group--destination">\n            <label class="event__label  event__type-output" for="event-destination-1">\n              ${this._state.type}\n            </label>\n            <select class="event__input event__input--destination" id="event-destination-1" name="event-destination" required>\n              <option value="" disabled ${""===this._state.destination?"selected":""}>Select destination</option>\n              ${this.#A.map((e=>`\n                <option value="${e.id}" ${this._state.destination===e.id?"selected":""}>${e.name}</option>\n              `)).join("")}\n            </select>\n          </div>\n\n          <div class="event__field-group  event__field-group--time">\n            <label class="visually-hidden" for="event-start-time-1">From</label>\n            <input class="event__input  event__input--time" id="event-start-time-1" type="text" name="event-start" value="${x()(this._state.dateFrom).format("DD/MM/YYYY HH:mm")}" required>\n            &mdash;\n            <label class="visually-hidden" for="event-end-time-1">To</label>\n            <input class="event__input  event__input--time" id="event-end-time-1" type="text" name="event-end" value="${x()(this._state.dateTo).format("DD/MM/YYYY HH:mm")}" required>\n          </div>\n\n          <div class="event__field-group  event__field-group--price">\n            <label class="event__label" for="event-price-1">\n              <span class="visually-hidden">Price</span>\n              &euro;\n            </label>\n            <input class="event__input  event__input--price" id="event-price-1" type="number" name="event-price" min="0" value="${this._state.basePrice}" required>\n          </div>\n\n          <button class="event__save-btn  btn  btn--blue" type="submit">Save</button>\n          <button class="event__reset-btn" type="reset">Cancel</button>\n        </header>\n\n        <section class="event__details">\n          ${t.length>0?`\n            <section class="event__section  event__section--offers">\n              <h3 class="event__section-title  event__section-title--offers">Offers</h3>\n              <div class="event__available-offers">\n                ${t.map((e=>`\n                  <div class="event__offer-selector">\n                    <input class="event__offer-checkbox  visually-hidden" id="event-offer-${e.id}" type="checkbox" name="event-offer" value="${e.id}" ${this._state.offers.includes(e.id)?"checked":""}>\n                    <label class="event__offer-label" for="event-offer-${e.id}">\n                      <span class="event__offer-title">${e.title}</span>\n                      &plus;&euro;&nbsp;<span class="event__offer-price">${e.price}</span>\n                    </label>\n                  </div>\n                `)).join("")}\n              </div>\n            </section>\n          `:""}\n\n          ${e.description?`\n            <section class="event__section  event__section--destination">\n              <h3 class="event__section-title  event__section-title--destination">Destination</h3>\n              <p class="event__destination-description">${e.description}</p>\n              ${e.pictures?.length?`\n                <div class="event__photos-container">\n                  <div class="event__photos-tape">\n                    ${e.pictures.map((e=>`\n                      <img class="event__photo" src="${e.src}" alt="${e.description}">\n                    `)).join("")}\n                  </div>\n                </div>\n              `:""}\n            </section>\n          `:""}\n        </section>\n      </form>\n    `}_restoreHandlers(){this.element.addEventListener("submit",this.#m);const e=this.element.querySelector(".event__reset-btn");e&&e.addEventListener("click",this.#h),this._setInnerHandlers()}_setInnerHandlers(){this.element.querySelectorAll('input[name="event-type"]').forEach((e=>{e.addEventListener("change",this.#g)})),this.element.querySelector(".event__input--destination").addEventListener("change",this.#b),this.element.querySelector(".event__input--price").addEventListener("input",this.#_),this.element.querySelectorAll(".event__offer-checkbox").forEach((e=>e.addEventListener("change",this.#v))),this.#k()}#k(){this.#p=ve(this.element.querySelector('input[name="event-start"]'),{enableTime:!0,dateFormat:"d/m/Y H:i",defaultDate:this._state.dateFrom,onChange:this.#y,time_24hr:!0}),this.#f=ve(this.element.querySelector('input[name="event-end"]'),{enableTime:!0,dateFormat:"d/m/Y H:i",defaultDate:this._state.dateTo,onChange:this.#w,time_24hr:!0})}#g=e=>{this.updateElement({type:e.target.value,offers:[]})};#b=e=>{const t=e.target.value;this.updateElement({destination:t})};#_=e=>{e.target.value=e.target.value.replace(/[^0-9]/g,""),this._state.basePrice=parseInt(e.target.value,10)||0};#v=()=>{const e=Array.from(this.element.querySelectorAll(".event__offer-checkbox:checked")).map((e=>e.value));this._setState({offers:e})};#y=e=>{let[t]=e;this._setState({dateFrom:t})};#w=e=>{let[t]=e;this._setState({dateTo:t})};#m=e=>{e.preventDefault();const t=this.element.querySelector(".event__input--destination"),n=this.#A.find((e=>e.id===t.value));if(!n)return t.setCustomValidity("Please select a destination from the list"),void t.reportValidity();this.#x({...this._state,destination:n.id})};#h=e=>{e.preventDefault(),this.#B()};removeElement(){super.removeElement(),this.#p&&(this.#p.destroy(),this.#p=null),this.#f&&(this.#f.destroy(),this.#f=null)}}function Be(e){return x()(e).format("HH:mm")}class De extends b{#M=null;#S=null;#u=[];#E=null;#T=null;constructor(e){let{point:t,destinations:n=[],offers:i={},onEditClick:a,onFavoriteClick:r}=e;super(),this.#M=t,this.#S=n.find((e=>e.id===t.destination))||null,this.#u=i[t.type]?.filter((e=>t.offers?.includes(e.id)))||[],this.#E=a,this.#T=r,this.element.querySelector(".event__rollup-btn")?.addEventListener("click",this.#F),this.element.querySelector(".event__favorite-btn")?.addEventListener("click",this.#I)}get template(){const{basePrice:e,dateFrom:t,dateTo:n,type:i,isFavorite:a}=this.#M,r=this.#S?.name||"",o=this.#u.length>0?this.#u.map((e=>`\n      <li class="event__offer">\n        <span class="event__offer-title">${e.title}</span>\n        &plus;&euro;&nbsp;<span class="event__offer-price">${e.price}</span>\n      </li>\n    `)).join(""):"";return`\n      <li class="trip-events__item">\n        <div class="event">\n          <time class="event__date" datetime="${x()(t).format("YYYY-MM-DD")}">${x()(t).format("MMM D")}</time>\n          <div class="event__type">\n            <img class="event__type-icon" width="42" height="42" src="img/icons/${i}.png" alt="Event type icon">\n          </div>\n          <h3 class="event__title">${i} ${r}</h3>\n          <div class="event__schedule">\n            <p class="event__time">\n              <time class="event__start-time" datetime="${x()(t).toISOString()}">${Be(t)}</time>\n              &mdash;\n              <time class="event__end-time" datetime="${x()(n).toISOString()}">${Be(n)}</time>\n            </p>\n            <p class="event__duration">${function(e,t){const n=x()(t).diff(x()(e)),i=Math.floor(n/6e4),a=Math.floor(i/60),r=i%60,o=a%24,s=Math.floor(a/24);return i<60?`${i}M`:a<24?`${o.toString().padStart(2,"0")}H ${r.toString().padStart(2,"0")}M`:`${s.toString().padStart(2,"0")}D ${o.toString().padStart(2,"0")}H ${r.toString().padStart(2,"0")}M`}(t,n)}</p>\n          </div>\n          <p class="event__price">\n            &euro;&nbsp;<span class="event__price-value">${e}</span>\n          </p>\n          <h4 class="visually-hidden">Offers:</h4>\n          <ul class="event__selected-offers">\n            ${o}\n          </ul>\n          <button class="event__favorite-btn ${a?"event__favorite-btn--active":""}" type="button">\n            <span class="visually-hidden">Add to favorite</span>\n            <svg class="event__favorite-icon" width="28" height="28" viewBox="0 0 28 28">\n              <path d="M14 21l-6.16 3.24 1.18-6.88L3 12.74l6.9-1L14 5l2.1 6.74 6.9 1-5 4.62 1.18 6.88z"/>\n            </svg>\n          </button>\n          <button class="event__rollup-btn" type="button">\n            <span class="visually-hidden">Open event</span>\n          </button>\n        </div>\n      </li>\n    `}#F=e=>{e.preventDefault(),this.#E()};#I=e=>{e.preventDefault(),this.#T()}}class _e{#H=null;#O=null;#$=null;#P=null;#Y=null;#R=null;#A=[];#u={};#W=!1;#M=null;#L=null;#N=!1;constructor(e){let{container:t,onDataChange:n,onModeChange:i,destinations:a,offers:r,isCreating:o=!1,handleDestroy:s}=e;this.#H=t,this.#Y=n,this.#R=i,this.#A=a,this.#u=r,this.#W=o,this.#L=s}init(e){this.#M=e,this.#W?this.#j():this.#z()}#z(){const e=this.#O;this.#O=new De({point:this.#M,destinations:this.#A,offers:this.#u,onEditClick:this.#E,onFavoriteClick:this.#T}),e?(k(this.#O,e),y(e)):v(this.#O,this.#H)}#q(){if(this.#N)return;this.#N=!0;const e=this.#$;this.#$=new we({point:this.#M,destinations:this.#A,offers:this.#u,onFormSubmit:this.#x,onFormClose:this.#B,onFormDelete:this.#U}),e?(k(this.#$,e),y(e)):this.#O?.element?.parentElement?k(this.#$,this.#O):v(this.#$,this.#H),document.addEventListener("keydown",this.#Q)}#j(){this.#N||(this.#N=!0,this.#P=new xe({destinations:this.#A,offers:this.#u,onFormSubmit:this.#x,onFormClose:this.#B}),v(this.#P,this.#H,"afterbegin"),document.addEventListener("keydown",this.#Q))}destroy(){this.#O&&(y(this.#O),this.#O=null),this.#$&&(y(this.#$),this.#$=null),this.#P&&(y(this.#P),this.#P=null),document.removeEventListener("keydown",this.#Q),this.#N=!1,this.#L&&this.#L()}resetView(){if(this.#W)return this.destroy(),document.removeEventListener("keydown",this.#Q),void(this.#N=!1);this.#$&&this.#O&&(k(this.#O,this.#$),y(this.#$),this.#$=null,document.removeEventListener("keydown",this.#Q),this.#N=!1)}#Q=e=>{"Escape"===e.key&&(e.preventDefault(),this.resetView())};#E=()=>{this.#R(this),this.#q()};#T=()=>{this.#Y(O,E,{...this.#M,isFavorite:!this.#M.isFavorite})};#x=e=>{const t=!this.#W;this.#Y(this.#W?I:O,t?T:E,e),this.destroy(),this.#W&&this.#R()};#B=()=>{this.resetView()};#U=e=>{this.#Y(H,T,e)}}const Me=new class extends i{#A=[];#u=[];#K=[];constructor(){super(),this.#A=t,this.#u={taxi:[{id:"taxi1",title:"Order Uber",price:20}],flight:[{id:"flight1",title:"Add luggage",price:50},{id:"flight2",title:"Switch to comfort",price:80}],drive:[{id:"drive1",title:"Rent a car",price:200}],"check-in":[{id:"checkin1",title:"Add breakfast",price:50}]},this.#K=(this.#A,[new e("p1","taxi","d1",new Date("2024-03-18T10:30:00"),new Date("2024-03-18T11:00:00"),20,["taxi1"],!1),new e("p2","flight","d2",new Date("2024-03-18T12:25:00"),new Date("2024-03-18T13:35:00"),160,["flight1","flight2"],!1),new e("p3","drive","d2",new Date("2024-03-18T14:30:00"),new Date("2024-03-18T16:05:00"),160,["drive1"],!1),new e("p4","check-in","d2",new Date("2024-03-18T16:20:00"),new Date("2024-03-18T17:00:00"),600,["checkin1"],!1)])}get destinations(){return this.#A}get offers(){return this.#u}get points(){return this.#K}getPointById(e){return this.#K.find((t=>t.id===e))||null}updatePoint(e,t){const n=this.#K.findIndex((e=>e.id===t.id));if(-1===n)throw new Error("Point not found");this.#K=[...this.#K.slice(0,n),t,...this.#K.slice(n+1)],this._notify(e,t)}addPoint(e,t){this.#K=[t,...this.#K],this._notify(e,t)}deletePoint(e,t){this.#K=this.#K.filter((e=>e.id!==t.id)),this._notify(e)}},Se=new class extends i{#G="everything";get filter(){return this.#G}setFilter(e,t){this.#G=t,this._notify(e,t)}},Ee=document.querySelector(".trip-main__event-add-btn"),Te=new class{#J=null;#V=null;#X=null;#Z=null;#ee=null;#te=null;#ne=null;#ie=(()=>new Map)();#o=(()=>$)();#W=!1;#ae=null;constructor(e){let{model:t,filterModel:n,newPointButton:i}=e;this.#J=t,this.#V=n,this.#ne=i,this.#J.addObserver(this.#re),this.#V.addObserver(this.#re),this.#ne&&this.#ne.addEventListener("click",this.#oe)}init(){this.#se(),this.#le(),this.#ce(),this.#de()}#se(){const e=this.#pe(),t=this.#Z;this.#Z=new W({filters:e,currentFilterType:this.#V.filter,onFilterTypeChange:this.#fe}),null===t?v(this.#Z,document.querySelector(".trip-controls__filters")):(k(this.#Z,t),y(t))}#pe(){const e=this.#J.points;return[{type:D,name:"Everything",isDisabled:0===e.length},{type:_,name:"Future",isDisabled:0===R[_](e).length},{type:M,name:"Present",isDisabled:0===R[M](e).length},{type:S,name:"Past",isDisabled:0===R[S](e).length}]}#le(){const e=this.#ee;this.#ee=new L({currentSortType:this.#o,onSortTypeChange:this.#s}),null===e?v(this.#ee,document.querySelector(".trip-events")):(k(this.#ee,e),y(e))}#ce(){const e=document.querySelector(".trip-events"),t=document.createElement("ul");t.classList.add("trip-events__list"),e.appendChild(t),this.#X=t}#de(){const e=this.#Ae(),t=this.#J.destinations,n=this.#J.offers;0!==e.length?e.forEach((e=>{const i=new _e({container:this.#X,onDataChange:this.#ue,onModeChange:this.#he,destinations:t,offers:n});i.init(e),this.#ie.set(e.id,i)})):this.#me()}#me(){this.#te=new j(this.#V.filter),v(this.#te,this.#X)}#Ce(){this.#ie.forEach((e=>e.destroy())),this.#ie.clear(),y(this.#te)}#Ae(){const e=[...R[this.#V.filter](this.#J.points)];switch(this.#o){case P:e.sort(((e,t)=>t.basePrice-e.basePrice));break;case Y:e.sort(((e,t)=>{const n=x()(e.dateTo).diff(x()(e.dateFrom));return x()(t.dateTo).diff(x()(t.dateFrom))-n}));break;default:e.sort(((e,t)=>x()(e.dateFrom).diff(x()(t.dateFrom))))}return e}#fe=e=>{this.#V.filter!==e&&(this.#V.setFilter(F,e),this.#o=$,this.#Ce(),this.#de())};#s=e=>{this.#o!==e&&(this.#o=e,this.#Ce(),this.#de())};#ue=(e,t,n)=>{switch(e){case I:this.#J.addPoint(t,n);break;case H:this.#J.deletePoint(t,n);break;case O:this.#J.updatePoint(t,n)}this.#Ce(),this.#de()};#he=(()=>{var e=this;return function(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;e.#ae=t,e.#W&&(e.#W=!1,e.#ne.disabled=!1);for(const t of e.#ie.values())t!==e.#ae&&t.resetView()}})();#re=(e,t)=>{switch(e){case E:this.#ie.get(t.id)?.init(t);break;case T:case F:this.#Ce(),this.#de()}};#oe=()=>{this.#W||(this.#W=!0,this.#ne.disabled=!0,this.#V.setFilter(F,D),this.#o=$,new _e({container:this.#X,onDataChange:this.#ue,onModeChange:this.#he,destinations:this.#J.destinations,offers:this.#J.offers,isCreating:!0,handleDestroy:()=>{this.#W=!1,this.#ne.disabled=!1}}).init())}}({model:Me,filterModel:Se,newPointButton:Ee});document.addEventListener("DOMContentLoaded",(()=>{Te.init()}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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TUFBSyxHQUNuQm96QixhQUFjcHpCLE1BQUssRUFBT296QixhQUMxQmpuQixPQUFRbk0sTUFBSyxFQUFPbU0sT0FDcEIrcEIsWUFBWSxFQUNaQyxjQVpvQkEsS0FDcEJuMkIsTUFBSyxHQUFjLEVBQ25CQSxNQUFLLEdBQWdCd2xCLFVBQVcsQ0FBSyxJQWF4QjNnQixPQUFNLEdIMVBlLENBQ3RDNnlCLE1BQU9mLEdBQ1BVLGVBQ0FFLG9CQUdGMzNCLFNBQVMyUCxpQkFBaUIsb0JBQW9CLEtBQzVDaW9CLEdBQWMzeUIsTUFBTSxHIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYmlnLXRyaXAvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanMiLCJ3ZWJwYWNrOi8vYmlnLXRyaXAvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanMiLCJ3ZWJwYWNrOi8vYmlnLXRyaXAvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qcyIsIndlYnBhY2s6Ly9iaWctdHJpcC8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanMiLCJ3ZWJwYWNrOi8vYmlnLXRyaXAvLi9ub2RlX21vZHVsZXMvZGF5anMvZGF5anMubWluLmpzIiwid2VicGFjazovL2JpZy10cmlwLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanMiLCJ3ZWJwYWNrOi8vYmlnLXRyaXAvLi9zcmMvZnJhbWV3b3JrL3ZpZXcvYWJzdHJhY3Qtdmlldy5jc3MiLCJ3ZWJwYWNrOi8vYmlnLXRyaXAvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanMiLCJ3ZWJwYWNrOi8vYmlnLXRyaXAvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzIiwid2VicGFjazovL2JpZy10cmlwLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanMiLCJ3ZWJwYWNrOi8vYmlnLXRyaXAvLi9ub2RlX21vZHVsZXMvZmxhdHBpY2tyL2Rpc3QvZmxhdHBpY2tyLm1pbi5jc3MiLCJ3ZWJwYWNrOi8vYmlnLXRyaXAvLi9ub2RlX21vZHVsZXMvZmxhdHBpY2tyL2Rpc3QvZXNtL3V0aWxzL3BvbHlmaWxscy5qcyIsIndlYnBhY2s6Ly9iaWctdHJpcC93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly9iaWctdHJpcC93ZWJwYWNrL3J1bnRpbWUvY29tcGF0IGdldCBkZWZhdWx0IGV4cG9ydCIsIndlYnBhY2s6Ly9iaWctdHJpcC93ZWJwYWNrL3J1bnRpbWUvZGVmaW5lIHByb3BlcnR5IGdldHRlcnMiLCJ3ZWJwYWNrOi8vYmlnLXRyaXAvd2VicGFjay9ydW50aW1lL2hhc093blByb3BlcnR5IHNob3J0aGFuZCIsIndlYnBhY2s6Ly9iaWctdHJpcC93ZWJwYWNrL3J1bnRpbWUvbm9uY2UiLCJ3ZWJwYWNrOi8vYmlnLXRyaXAvLi9zcmMvbW9kZWwvcG9pbnQuanMiLCJ3ZWJwYWNrOi8vYmlnLXRyaXAvLi9zcmMvbW9jay9tb2NrLmpzIiwid2VicGFjazovL2JpZy10cmlwLy4vc3JjL2ZyYW1ld29yay9vYnNlcnZhYmxlLmpzIiwid2VicGFjazovL2JpZy10cmlwLy4vc3JjL2ZyYW1ld29yay92aWV3L2Fic3RyYWN0LXZpZXcuY3NzP2RmYTYiLCJ3ZWJwYWNrOi8vYmlnLXRyaXAvLi9zcmMvZnJhbWV3b3JrL3ZpZXcvYWJzdHJhY3Qtdmlldy5qcyIsIndlYnBhY2s6Ly9iaWctdHJpcC8uL3NyYy9mcmFtZXdvcmsvcmVuZGVyLmpzIiwid2VicGFjazovL2JpZy10cmlwLy4vc3JjL2NvbnN0LmpzIiwid2VicGFjazovL2JpZy10cmlwLy4vc3JjL3V0aWxzL2ZpbHRlci5qcyIsIndlYnBhY2s6Ly9iaWctdHJpcC8uL3NyYy92aWV3L2ZpbHRlcnMtdmlldy5qcyIsIndlYnBhY2s6Ly9iaWctdHJpcC8uL3NyYy92aWV3L3NvcnQtdmlldy5qcyIsIndlYnBhY2s6Ly9iaWctdHJpcC8uL3NyYy92aWV3L2VtcHR5LWxpc3Qtdmlldy5qcyIsIndlYnBhY2s6Ly9iaWctdHJpcC8uL3NyYy9mcmFtZXdvcmsvdmlldy9hYnN0cmFjdC1zdGF0ZWZ1bC12aWV3LmpzIiwid2VicGFjazovL2JpZy10cmlwLy4vbm9kZV9tb2R1bGVzL2ZsYXRwaWNrci9kaXN0L2VzbS90eXBlcy9vcHRpb25zLmpzIiwid2VicGFjazovL2JpZy10cmlwLy4vbm9kZV9tb2R1bGVzL2ZsYXRwaWNrci9kaXN0L2VzbS9sMTBuL2RlZmF1bHQuanMiLCJ3ZWJwYWNrOi8vYmlnLXRyaXAvLi9ub2RlX21vZHVsZXMvZmxhdHBpY2tyL2Rpc3QvZXNtL3V0aWxzL2luZGV4LmpzIiwid2VicGFjazovL2JpZy10cmlwLy4vbm9kZV9tb2R1bGVzL2ZsYXRwaWNrci9kaXN0L2VzbS91dGlscy9kb20uanMiLCJ3ZWJwYWNrOi8vYmlnLXRyaXAvLi9ub2RlX21vZHVsZXMvZmxhdHBpY2tyL2Rpc3QvZXNtL3V0aWxzL2Zvcm1hdHRpbmcuanMiLCJ3ZWJwYWNrOi8vYmlnLXRyaXAvLi9ub2RlX21vZHVsZXMvZmxhdHBpY2tyL2Rpc3QvZXNtL3V0aWxzL2RhdGVzLmpzIiwid2VicGFjazovL2JpZy10cmlwLy4vbm9kZV9tb2R1bGVzL2ZsYXRwaWNrci9kaXN0L2VzbS9pbmRleC5qcyIsIndlYnBhY2s6Ly9iaWctdHJpcC8uL25vZGVfbW9kdWxlcy9mbGF0cGlja3IvZGlzdC9mbGF0cGlja3IubWluLmNzcz9lMDNiIiwid2VicGFjazovL2JpZy10cmlwLy4vc3JjL3ZpZXcvZm9ybS1lZGl0LXZpZXcuanMiLCJ3ZWJwYWNrOi8vYmlnLXRyaXAvLi9zcmMvdmlldy9mb3JtLWNyZWF0ZS12aWV3LmpzIiwid2VicGFjazovL2JpZy10cmlwLy4vc3JjL3ZpZXcvcG9pbnQtdmlldy5qcyIsIndlYnBhY2s6Ly9iaWctdHJpcC8uL3NyYy9wcmVzZW50ZXIvcG9pbnQtcHJlc2VudGVyLmpzIiwid2VicGFjazovL2JpZy10cmlwLy4vc3JjL21haW4uanMiLCJ3ZWJwYWNrOi8vYmlnLXRyaXAvLi9zcmMvbW9kZWwvbW9kZWwuanMiLCJ3ZWJwYWNrOi8vYmlnLXRyaXAvLi9zcmMvbW9kZWwvZmlsdGVyLW1vZGVsLmpzIiwid2VicGFjazovL2JpZy10cmlwLy4vc3JjL3ByZXNlbnRlci90cmlwLXByZXNlbnRlci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMoc3R5bGVFbGVtZW50KSB7XG4gIHZhciBub25jZSA9IHR5cGVvZiBfX3dlYnBhY2tfbm9uY2VfXyAhPT0gXCJ1bmRlZmluZWRcIiA/IF9fd2VicGFja19ub25jZV9fIDogbnVsbDtcbiAgaWYgKG5vbmNlKSB7XG4gICAgc3R5bGVFbGVtZW50LnNldEF0dHJpYnV0ZShcIm5vbmNlXCIsIG5vbmNlKTtcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXM7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBzdHlsZXNJbkRPTSA9IFtdO1xuZnVuY3Rpb24gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcikge1xuICB2YXIgcmVzdWx0ID0gLTE7XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgc3R5bGVzSW5ET00ubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAoc3R5bGVzSW5ET01baV0uaWRlbnRpZmllciA9PT0gaWRlbnRpZmllcikge1xuICAgICAgcmVzdWx0ID0gaTtcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuICByZXR1cm4gcmVzdWx0O1xufVxuZnVuY3Rpb24gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpIHtcbiAgdmFyIGlkQ291bnRNYXAgPSB7fTtcbiAgdmFyIGlkZW50aWZpZXJzID0gW107XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbGlzdC5sZW5ndGg7IGkrKykge1xuICAgIHZhciBpdGVtID0gbGlzdFtpXTtcbiAgICB2YXIgaWQgPSBvcHRpb25zLmJhc2UgPyBpdGVtWzBdICsgb3B0aW9ucy5iYXNlIDogaXRlbVswXTtcbiAgICB2YXIgY291bnQgPSBpZENvdW50TWFwW2lkXSB8fCAwO1xuICAgIHZhciBpZGVudGlmaWVyID0gXCJcIi5jb25jYXQoaWQsIFwiIFwiKS5jb25jYXQoY291bnQpO1xuICAgIGlkQ291bnRNYXBbaWRdID0gY291bnQgKyAxO1xuICAgIHZhciBpbmRleEJ5SWRlbnRpZmllciA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgIHZhciBvYmogPSB7XG4gICAgICBjc3M6IGl0ZW1bMV0sXG4gICAgICBtZWRpYTogaXRlbVsyXSxcbiAgICAgIHNvdXJjZU1hcDogaXRlbVszXSxcbiAgICAgIHN1cHBvcnRzOiBpdGVtWzRdLFxuICAgICAgbGF5ZXI6IGl0ZW1bNV1cbiAgICB9O1xuICAgIGlmIChpbmRleEJ5SWRlbnRpZmllciAhPT0gLTEpIHtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4QnlJZGVudGlmaWVyXS5yZWZlcmVuY2VzKys7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0udXBkYXRlcihvYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgdXBkYXRlciA9IGFkZEVsZW1lbnRTdHlsZShvYmosIG9wdGlvbnMpO1xuICAgICAgb3B0aW9ucy5ieUluZGV4ID0gaTtcbiAgICAgIHN0eWxlc0luRE9NLnNwbGljZShpLCAwLCB7XG4gICAgICAgIGlkZW50aWZpZXI6IGlkZW50aWZpZXIsXG4gICAgICAgIHVwZGF0ZXI6IHVwZGF0ZXIsXG4gICAgICAgIHJlZmVyZW5jZXM6IDFcbiAgICAgIH0pO1xuICAgIH1cbiAgICBpZGVudGlmaWVycy5wdXNoKGlkZW50aWZpZXIpO1xuICB9XG4gIHJldHVybiBpZGVudGlmaWVycztcbn1cbmZ1bmN0aW9uIGFkZEVsZW1lbnRTdHlsZShvYmosIG9wdGlvbnMpIHtcbiAgdmFyIGFwaSA9IG9wdGlvbnMuZG9tQVBJKG9wdGlvbnMpO1xuICBhcGkudXBkYXRlKG9iaik7XG4gIHZhciB1cGRhdGVyID0gZnVuY3Rpb24gdXBkYXRlcihuZXdPYmopIHtcbiAgICBpZiAobmV3T2JqKSB7XG4gICAgICBpZiAobmV3T2JqLmNzcyA9PT0gb2JqLmNzcyAmJiBuZXdPYmoubWVkaWEgPT09IG9iai5tZWRpYSAmJiBuZXdPYmouc291cmNlTWFwID09PSBvYmouc291cmNlTWFwICYmIG5ld09iai5zdXBwb3J0cyA9PT0gb2JqLnN1cHBvcnRzICYmIG5ld09iai5sYXllciA9PT0gb2JqLmxheWVyKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIGFwaS51cGRhdGUob2JqID0gbmV3T2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgYXBpLnJlbW92ZSgpO1xuICAgIH1cbiAgfTtcbiAgcmV0dXJuIHVwZGF0ZXI7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChsaXN0LCBvcHRpb25zKSB7XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICBsaXN0ID0gbGlzdCB8fCBbXTtcbiAgdmFyIGxhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZShuZXdMaXN0KSB7XG4gICAgbmV3TGlzdCA9IG5ld0xpc3QgfHwgW107XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBpZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW2ldO1xuICAgICAgdmFyIGluZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleF0ucmVmZXJlbmNlcy0tO1xuICAgIH1cbiAgICB2YXIgbmV3TGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKG5ld0xpc3QsIG9wdGlvbnMpO1xuICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICB2YXIgX2lkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbX2ldO1xuICAgICAgdmFyIF9pbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKF9pZGVudGlmaWVyKTtcbiAgICAgIGlmIChzdHlsZXNJbkRPTVtfaW5kZXhdLnJlZmVyZW5jZXMgPT09IDApIHtcbiAgICAgICAgc3R5bGVzSW5ET01bX2luZGV4XS51cGRhdGVyKCk7XG4gICAgICAgIHN0eWxlc0luRE9NLnNwbGljZShfaW5kZXgsIDEpO1xuICAgICAgfVxuICAgIH1cbiAgICBsYXN0SWRlbnRpZmllcnMgPSBuZXdMYXN0SWRlbnRpZmllcnM7XG4gIH07XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50KSB7XG4gIGlmIChzdHlsZUVsZW1lbnQuc3R5bGVTaGVldCkge1xuICAgIHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0LmNzc1RleHQgPSBjc3M7XG4gIH0gZWxzZSB7XG4gICAgd2hpbGUgKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKSB7XG4gICAgICBzdHlsZUVsZW1lbnQucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpO1xuICAgIH1cbiAgICBzdHlsZUVsZW1lbnQuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gc3R5bGVUYWdUcmFuc2Zvcm07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qXG4gIE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG4gIEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKSB7XG4gIHZhciBsaXN0ID0gW107XG5cbiAgLy8gcmV0dXJuIHRoZSBsaXN0IG9mIG1vZHVsZXMgYXMgY3NzIHN0cmluZ1xuICBsaXN0LnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgcmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICB2YXIgY29udGVudCA9IFwiXCI7XG4gICAgICB2YXIgbmVlZExheWVyID0gdHlwZW9mIGl0ZW1bNV0gIT09IFwidW5kZWZpbmVkXCI7XG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIik7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpO1xuICAgICAgfVxuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIik7XG4gICAgICB9XG4gICAgICBjb250ZW50ICs9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSk7XG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIHJldHVybiBjb250ZW50O1xuICAgIH0pLmpvaW4oXCJcIik7XG4gIH07XG5cbiAgLy8gaW1wb3J0IGEgbGlzdCBvZiBtb2R1bGVzIGludG8gdGhlIGxpc3RcbiAgbGlzdC5pID0gZnVuY3Rpb24gaShtb2R1bGVzLCBtZWRpYSwgZGVkdXBlLCBzdXBwb3J0cywgbGF5ZXIpIHtcbiAgICBpZiAodHlwZW9mIG1vZHVsZXMgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgIG1vZHVsZXMgPSBbW251bGwsIG1vZHVsZXMsIHVuZGVmaW5lZF1dO1xuICAgIH1cbiAgICB2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9O1xuICAgIGlmIChkZWR1cGUpIHtcbiAgICAgIGZvciAodmFyIGsgPSAwOyBrIDwgdGhpcy5sZW5ndGg7IGsrKykge1xuICAgICAgICB2YXIgaWQgPSB0aGlzW2tdWzBdO1xuICAgICAgICBpZiAoaWQgIT0gbnVsbCkge1xuICAgICAgICAgIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaWRdID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICBmb3IgKHZhciBfayA9IDA7IF9rIDwgbW9kdWxlcy5sZW5ndGg7IF9rKyspIHtcbiAgICAgIHZhciBpdGVtID0gW10uY29uY2F0KG1vZHVsZXNbX2tdKTtcbiAgICAgIGlmIChkZWR1cGUgJiYgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSkge1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cbiAgICAgIGlmICh0eXBlb2YgbGF5ZXIgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBpdGVtWzVdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAobWVkaWEpIHtcbiAgICAgICAgaWYgKCFpdGVtWzJdKSB7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKHN1cHBvcnRzKSB7XG4gICAgICAgIGlmICghaXRlbVs0XSkge1xuICAgICAgICAgIGl0ZW1bNF0gPSBcIlwiLmNvbmNhdChzdXBwb3J0cyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzRdID0gc3VwcG9ydHM7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGxpc3QucHVzaChpdGVtKTtcbiAgICB9XG4gIH07XG4gIHJldHVybiBsaXN0O1xufTsiLCIhZnVuY3Rpb24odCxlKXtcIm9iamVjdFwiPT10eXBlb2YgZXhwb3J0cyYmXCJ1bmRlZmluZWRcIiE9dHlwZW9mIG1vZHVsZT9tb2R1bGUuZXhwb3J0cz1lKCk6XCJmdW5jdGlvblwiPT10eXBlb2YgZGVmaW5lJiZkZWZpbmUuYW1kP2RlZmluZShlKToodD1cInVuZGVmaW5lZFwiIT10eXBlb2YgZ2xvYmFsVGhpcz9nbG9iYWxUaGlzOnR8fHNlbGYpLmRheWpzPWUoKX0odGhpcywoZnVuY3Rpb24oKXtcInVzZSBzdHJpY3RcIjt2YXIgdD0xZTMsZT02ZTQsbj0zNmU1LHI9XCJtaWxsaXNlY29uZFwiLGk9XCJzZWNvbmRcIixzPVwibWludXRlXCIsdT1cImhvdXJcIixhPVwiZGF5XCIsbz1cIndlZWtcIixjPVwibW9udGhcIixmPVwicXVhcnRlclwiLGg9XCJ5ZWFyXCIsZD1cImRhdGVcIixsPVwiSW52YWxpZCBEYXRlXCIsJD0vXihcXGR7NH0pWy0vXT8oXFxkezEsMn0pP1stL10/KFxcZHswLDJ9KVtUdFxcc10qKFxcZHsxLDJ9KT86PyhcXGR7MSwyfSk/Oj8oXFxkezEsMn0pP1suOl0/KFxcZCspPyQvLHk9L1xcWyhbXlxcXV0rKV18WXsxLDR9fE17MSw0fXxEezEsMn18ZHsxLDR9fEh7MSwyfXxoezEsMn18YXxBfG17MSwyfXxzezEsMn18WnsxLDJ9fFNTUy9nLE09e25hbWU6XCJlblwiLHdlZWtkYXlzOlwiU3VuZGF5X01vbmRheV9UdWVzZGF5X1dlZG5lc2RheV9UaHVyc2RheV9GcmlkYXlfU2F0dXJkYXlcIi5zcGxpdChcIl9cIiksbW9udGhzOlwiSmFudWFyeV9GZWJydWFyeV9NYXJjaF9BcHJpbF9NYXlfSnVuZV9KdWx5X0F1Z3VzdF9TZXB0ZW1iZXJfT2N0b2Jlcl9Ob3ZlbWJlcl9EZWNlbWJlclwiLnNwbGl0KFwiX1wiKSxvcmRpbmFsOmZ1bmN0aW9uKHQpe3ZhciBlPVtcInRoXCIsXCJzdFwiLFwibmRcIixcInJkXCJdLG49dCUxMDA7cmV0dXJuXCJbXCIrdCsoZVsobi0yMCklMTBdfHxlW25dfHxlWzBdKStcIl1cIn19LG09ZnVuY3Rpb24odCxlLG4pe3ZhciByPVN0cmluZyh0KTtyZXR1cm4hcnx8ci5sZW5ndGg+PWU/dDpcIlwiK0FycmF5KGUrMS1yLmxlbmd0aCkuam9pbihuKSt0fSx2PXtzOm0sejpmdW5jdGlvbih0KXt2YXIgZT0tdC51dGNPZmZzZXQoKSxuPU1hdGguYWJzKGUpLHI9TWF0aC5mbG9vcihuLzYwKSxpPW4lNjA7cmV0dXJuKGU8PTA/XCIrXCI6XCItXCIpK20ociwyLFwiMFwiKStcIjpcIittKGksMixcIjBcIil9LG06ZnVuY3Rpb24gdChlLG4pe2lmKGUuZGF0ZSgpPG4uZGF0ZSgpKXJldHVybi10KG4sZSk7dmFyIHI9MTIqKG4ueWVhcigpLWUueWVhcigpKSsobi5tb250aCgpLWUubW9udGgoKSksaT1lLmNsb25lKCkuYWRkKHIsYykscz1uLWk8MCx1PWUuY2xvbmUoKS5hZGQocisocz8tMToxKSxjKTtyZXR1cm4rKC0ocisobi1pKS8ocz9pLXU6dS1pKSl8fDApfSxhOmZ1bmN0aW9uKHQpe3JldHVybiB0PDA/TWF0aC5jZWlsKHQpfHwwOk1hdGguZmxvb3IodCl9LHA6ZnVuY3Rpb24odCl7cmV0dXJue006Yyx5OmgsdzpvLGQ6YSxEOmQsaDp1LG06cyxzOmksbXM6cixROmZ9W3RdfHxTdHJpbmcodHx8XCJcIikudG9Mb3dlckNhc2UoKS5yZXBsYWNlKC9zJC8sXCJcIil9LHU6ZnVuY3Rpb24odCl7cmV0dXJuIHZvaWQgMD09PXR9fSxnPVwiZW5cIixEPXt9O0RbZ109TTt2YXIgcD1cIiRpc0RheWpzT2JqZWN0XCIsUz1mdW5jdGlvbih0KXtyZXR1cm4gdCBpbnN0YW5jZW9mIF98fCEoIXR8fCF0W3BdKX0sdz1mdW5jdGlvbiB0KGUsbixyKXt2YXIgaTtpZighZSlyZXR1cm4gZztpZihcInN0cmluZ1wiPT10eXBlb2YgZSl7dmFyIHM9ZS50b0xvd2VyQ2FzZSgpO0Rbc10mJihpPXMpLG4mJihEW3NdPW4saT1zKTt2YXIgdT1lLnNwbGl0KFwiLVwiKTtpZighaSYmdS5sZW5ndGg+MSlyZXR1cm4gdCh1WzBdKX1lbHNle3ZhciBhPWUubmFtZTtEW2FdPWUsaT1hfXJldHVybiFyJiZpJiYoZz1pKSxpfHwhciYmZ30sTz1mdW5jdGlvbih0LGUpe2lmKFModCkpcmV0dXJuIHQuY2xvbmUoKTt2YXIgbj1cIm9iamVjdFwiPT10eXBlb2YgZT9lOnt9O3JldHVybiBuLmRhdGU9dCxuLmFyZ3M9YXJndW1lbnRzLG5ldyBfKG4pfSxiPXY7Yi5sPXcsYi5pPVMsYi53PWZ1bmN0aW9uKHQsZSl7cmV0dXJuIE8odCx7bG9jYWxlOmUuJEwsdXRjOmUuJHUseDplLiR4LCRvZmZzZXQ6ZS4kb2Zmc2V0fSl9O3ZhciBfPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gTSh0KXt0aGlzLiRMPXcodC5sb2NhbGUsbnVsbCwhMCksdGhpcy5wYXJzZSh0KSx0aGlzLiR4PXRoaXMuJHh8fHQueHx8e30sdGhpc1twXT0hMH12YXIgbT1NLnByb3RvdHlwZTtyZXR1cm4gbS5wYXJzZT1mdW5jdGlvbih0KXt0aGlzLiRkPWZ1bmN0aW9uKHQpe3ZhciBlPXQuZGF0ZSxuPXQudXRjO2lmKG51bGw9PT1lKXJldHVybiBuZXcgRGF0ZShOYU4pO2lmKGIudShlKSlyZXR1cm4gbmV3IERhdGU7aWYoZSBpbnN0YW5jZW9mIERhdGUpcmV0dXJuIG5ldyBEYXRlKGUpO2lmKFwic3RyaW5nXCI9PXR5cGVvZiBlJiYhL1okL2kudGVzdChlKSl7dmFyIHI9ZS5tYXRjaCgkKTtpZihyKXt2YXIgaT1yWzJdLTF8fDAscz0ocls3XXx8XCIwXCIpLnN1YnN0cmluZygwLDMpO3JldHVybiBuP25ldyBEYXRlKERhdGUuVVRDKHJbMV0saSxyWzNdfHwxLHJbNF18fDAscls1XXx8MCxyWzZdfHwwLHMpKTpuZXcgRGF0ZShyWzFdLGksclszXXx8MSxyWzRdfHwwLHJbNV18fDAscls2XXx8MCxzKX19cmV0dXJuIG5ldyBEYXRlKGUpfSh0KSx0aGlzLmluaXQoKX0sbS5pbml0PWZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy4kZDt0aGlzLiR5PXQuZ2V0RnVsbFllYXIoKSx0aGlzLiRNPXQuZ2V0TW9udGgoKSx0aGlzLiREPXQuZ2V0RGF0ZSgpLHRoaXMuJFc9dC5nZXREYXkoKSx0aGlzLiRIPXQuZ2V0SG91cnMoKSx0aGlzLiRtPXQuZ2V0TWludXRlcygpLHRoaXMuJHM9dC5nZXRTZWNvbmRzKCksdGhpcy4kbXM9dC5nZXRNaWxsaXNlY29uZHMoKX0sbS4kdXRpbHM9ZnVuY3Rpb24oKXtyZXR1cm4gYn0sbS5pc1ZhbGlkPWZ1bmN0aW9uKCl7cmV0dXJuISh0aGlzLiRkLnRvU3RyaW5nKCk9PT1sKX0sbS5pc1NhbWU9ZnVuY3Rpb24odCxlKXt2YXIgbj1PKHQpO3JldHVybiB0aGlzLnN0YXJ0T2YoZSk8PW4mJm48PXRoaXMuZW5kT2YoZSl9LG0uaXNBZnRlcj1mdW5jdGlvbih0LGUpe3JldHVybiBPKHQpPHRoaXMuc3RhcnRPZihlKX0sbS5pc0JlZm9yZT1mdW5jdGlvbih0LGUpe3JldHVybiB0aGlzLmVuZE9mKGUpPE8odCl9LG0uJGc9ZnVuY3Rpb24odCxlLG4pe3JldHVybiBiLnUodCk/dGhpc1tlXTp0aGlzLnNldChuLHQpfSxtLnVuaXg9ZnVuY3Rpb24oKXtyZXR1cm4gTWF0aC5mbG9vcih0aGlzLnZhbHVlT2YoKS8xZTMpfSxtLnZhbHVlT2Y9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy4kZC5nZXRUaW1lKCl9LG0uc3RhcnRPZj1mdW5jdGlvbih0LGUpe3ZhciBuPXRoaXMscj0hIWIudShlKXx8ZSxmPWIucCh0KSxsPWZ1bmN0aW9uKHQsZSl7dmFyIGk9Yi53KG4uJHU/RGF0ZS5VVEMobi4keSxlLHQpOm5ldyBEYXRlKG4uJHksZSx0KSxuKTtyZXR1cm4gcj9pOmkuZW5kT2YoYSl9LCQ9ZnVuY3Rpb24odCxlKXtyZXR1cm4gYi53KG4udG9EYXRlKClbdF0uYXBwbHkobi50b0RhdGUoXCJzXCIpLChyP1swLDAsMCwwXTpbMjMsNTksNTksOTk5XSkuc2xpY2UoZSkpLG4pfSx5PXRoaXMuJFcsTT10aGlzLiRNLG09dGhpcy4kRCx2PVwic2V0XCIrKHRoaXMuJHU/XCJVVENcIjpcIlwiKTtzd2l0Y2goZil7Y2FzZSBoOnJldHVybiByP2woMSwwKTpsKDMxLDExKTtjYXNlIGM6cmV0dXJuIHI/bCgxLE0pOmwoMCxNKzEpO2Nhc2Ugbzp2YXIgZz10aGlzLiRsb2NhbGUoKS53ZWVrU3RhcnR8fDAsRD0oeTxnP3krNzp5KS1nO3JldHVybiBsKHI/bS1EOm0rKDYtRCksTSk7Y2FzZSBhOmNhc2UgZDpyZXR1cm4gJCh2K1wiSG91cnNcIiwwKTtjYXNlIHU6cmV0dXJuICQoditcIk1pbnV0ZXNcIiwxKTtjYXNlIHM6cmV0dXJuICQoditcIlNlY29uZHNcIiwyKTtjYXNlIGk6cmV0dXJuICQoditcIk1pbGxpc2Vjb25kc1wiLDMpO2RlZmF1bHQ6cmV0dXJuIHRoaXMuY2xvbmUoKX19LG0uZW5kT2Y9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuc3RhcnRPZih0LCExKX0sbS4kc2V0PWZ1bmN0aW9uKHQsZSl7dmFyIG4sbz1iLnAodCksZj1cInNldFwiKyh0aGlzLiR1P1wiVVRDXCI6XCJcIiksbD0obj17fSxuW2FdPWYrXCJEYXRlXCIsbltkXT1mK1wiRGF0ZVwiLG5bY109ZitcIk1vbnRoXCIsbltoXT1mK1wiRnVsbFllYXJcIixuW3VdPWYrXCJIb3Vyc1wiLG5bc109ZitcIk1pbnV0ZXNcIixuW2ldPWYrXCJTZWNvbmRzXCIsbltyXT1mK1wiTWlsbGlzZWNvbmRzXCIsbilbb10sJD1vPT09YT90aGlzLiREKyhlLXRoaXMuJFcpOmU7aWYobz09PWN8fG89PT1oKXt2YXIgeT10aGlzLmNsb25lKCkuc2V0KGQsMSk7eS4kZFtsXSgkKSx5LmluaXQoKSx0aGlzLiRkPXkuc2V0KGQsTWF0aC5taW4odGhpcy4kRCx5LmRheXNJbk1vbnRoKCkpKS4kZH1lbHNlIGwmJnRoaXMuJGRbbF0oJCk7cmV0dXJuIHRoaXMuaW5pdCgpLHRoaXN9LG0uc2V0PWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHRoaXMuY2xvbmUoKS4kc2V0KHQsZSl9LG0uZ2V0PWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzW2IucCh0KV0oKX0sbS5hZGQ9ZnVuY3Rpb24ocixmKXt2YXIgZCxsPXRoaXM7cj1OdW1iZXIocik7dmFyICQ9Yi5wKGYpLHk9ZnVuY3Rpb24odCl7dmFyIGU9TyhsKTtyZXR1cm4gYi53KGUuZGF0ZShlLmRhdGUoKStNYXRoLnJvdW5kKHQqcikpLGwpfTtpZigkPT09YylyZXR1cm4gdGhpcy5zZXQoYyx0aGlzLiRNK3IpO2lmKCQ9PT1oKXJldHVybiB0aGlzLnNldChoLHRoaXMuJHkrcik7aWYoJD09PWEpcmV0dXJuIHkoMSk7aWYoJD09PW8pcmV0dXJuIHkoNyk7dmFyIE09KGQ9e30sZFtzXT1lLGRbdV09bixkW2ldPXQsZClbJF18fDEsbT10aGlzLiRkLmdldFRpbWUoKStyKk07cmV0dXJuIGIudyhtLHRoaXMpfSxtLnN1YnRyYWN0PWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHRoaXMuYWRkKC0xKnQsZSl9LG0uZm9ybWF0PWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMsbj10aGlzLiRsb2NhbGUoKTtpZighdGhpcy5pc1ZhbGlkKCkpcmV0dXJuIG4uaW52YWxpZERhdGV8fGw7dmFyIHI9dHx8XCJZWVlZLU1NLUREVEhIOm1tOnNzWlwiLGk9Yi56KHRoaXMpLHM9dGhpcy4kSCx1PXRoaXMuJG0sYT10aGlzLiRNLG89bi53ZWVrZGF5cyxjPW4ubW9udGhzLGY9bi5tZXJpZGllbSxoPWZ1bmN0aW9uKHQsbixpLHMpe3JldHVybiB0JiYodFtuXXx8dChlLHIpKXx8aVtuXS5zbGljZSgwLHMpfSxkPWZ1bmN0aW9uKHQpe3JldHVybiBiLnMocyUxMnx8MTIsdCxcIjBcIil9LCQ9Znx8ZnVuY3Rpb24odCxlLG4pe3ZhciByPXQ8MTI/XCJBTVwiOlwiUE1cIjtyZXR1cm4gbj9yLnRvTG93ZXJDYXNlKCk6cn07cmV0dXJuIHIucmVwbGFjZSh5LChmdW5jdGlvbih0LHIpe3JldHVybiByfHxmdW5jdGlvbih0KXtzd2l0Y2godCl7Y2FzZVwiWVlcIjpyZXR1cm4gU3RyaW5nKGUuJHkpLnNsaWNlKC0yKTtjYXNlXCJZWVlZXCI6cmV0dXJuIGIucyhlLiR5LDQsXCIwXCIpO2Nhc2VcIk1cIjpyZXR1cm4gYSsxO2Nhc2VcIk1NXCI6cmV0dXJuIGIucyhhKzEsMixcIjBcIik7Y2FzZVwiTU1NXCI6cmV0dXJuIGgobi5tb250aHNTaG9ydCxhLGMsMyk7Y2FzZVwiTU1NTVwiOnJldHVybiBoKGMsYSk7Y2FzZVwiRFwiOnJldHVybiBlLiREO2Nhc2VcIkREXCI6cmV0dXJuIGIucyhlLiRELDIsXCIwXCIpO2Nhc2VcImRcIjpyZXR1cm4gU3RyaW5nKGUuJFcpO2Nhc2VcImRkXCI6cmV0dXJuIGgobi53ZWVrZGF5c01pbixlLiRXLG8sMik7Y2FzZVwiZGRkXCI6cmV0dXJuIGgobi53ZWVrZGF5c1Nob3J0LGUuJFcsbywzKTtjYXNlXCJkZGRkXCI6cmV0dXJuIG9bZS4kV107Y2FzZVwiSFwiOnJldHVybiBTdHJpbmcocyk7Y2FzZVwiSEhcIjpyZXR1cm4gYi5zKHMsMixcIjBcIik7Y2FzZVwiaFwiOnJldHVybiBkKDEpO2Nhc2VcImhoXCI6cmV0dXJuIGQoMik7Y2FzZVwiYVwiOnJldHVybiAkKHMsdSwhMCk7Y2FzZVwiQVwiOnJldHVybiAkKHMsdSwhMSk7Y2FzZVwibVwiOnJldHVybiBTdHJpbmcodSk7Y2FzZVwibW1cIjpyZXR1cm4gYi5zKHUsMixcIjBcIik7Y2FzZVwic1wiOnJldHVybiBTdHJpbmcoZS4kcyk7Y2FzZVwic3NcIjpyZXR1cm4gYi5zKGUuJHMsMixcIjBcIik7Y2FzZVwiU1NTXCI6cmV0dXJuIGIucyhlLiRtcywzLFwiMFwiKTtjYXNlXCJaXCI6cmV0dXJuIGl9cmV0dXJuIG51bGx9KHQpfHxpLnJlcGxhY2UoXCI6XCIsXCJcIil9KSl9LG0udXRjT2Zmc2V0PWZ1bmN0aW9uKCl7cmV0dXJuIDE1Ki1NYXRoLnJvdW5kKHRoaXMuJGQuZ2V0VGltZXpvbmVPZmZzZXQoKS8xNSl9LG0uZGlmZj1mdW5jdGlvbihyLGQsbCl7dmFyICQseT10aGlzLE09Yi5wKGQpLG09TyhyKSx2PShtLnV0Y09mZnNldCgpLXRoaXMudXRjT2Zmc2V0KCkpKmUsZz10aGlzLW0sRD1mdW5jdGlvbigpe3JldHVybiBiLm0oeSxtKX07c3dpdGNoKE0pe2Nhc2UgaDokPUQoKS8xMjticmVhaztjYXNlIGM6JD1EKCk7YnJlYWs7Y2FzZSBmOiQ9RCgpLzM7YnJlYWs7Y2FzZSBvOiQ9KGctdikvNjA0OGU1O2JyZWFrO2Nhc2UgYTokPShnLXYpLzg2NGU1O2JyZWFrO2Nhc2UgdTokPWcvbjticmVhaztjYXNlIHM6JD1nL2U7YnJlYWs7Y2FzZSBpOiQ9Zy90O2JyZWFrO2RlZmF1bHQ6JD1nfXJldHVybiBsPyQ6Yi5hKCQpfSxtLmRheXNJbk1vbnRoPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZW5kT2YoYykuJER9LG0uJGxvY2FsZT1mdW5jdGlvbigpe3JldHVybiBEW3RoaXMuJExdfSxtLmxvY2FsZT1mdW5jdGlvbih0LGUpe2lmKCF0KXJldHVybiB0aGlzLiRMO3ZhciBuPXRoaXMuY2xvbmUoKSxyPXcodCxlLCEwKTtyZXR1cm4gciYmKG4uJEw9ciksbn0sbS5jbG9uZT1mdW5jdGlvbigpe3JldHVybiBiLncodGhpcy4kZCx0aGlzKX0sbS50b0RhdGU9ZnVuY3Rpb24oKXtyZXR1cm4gbmV3IERhdGUodGhpcy52YWx1ZU9mKCkpfSxtLnRvSlNPTj1mdW5jdGlvbigpe3JldHVybiB0aGlzLmlzVmFsaWQoKT90aGlzLnRvSVNPU3RyaW5nKCk6bnVsbH0sbS50b0lTT1N0cmluZz1mdW5jdGlvbigpe3JldHVybiB0aGlzLiRkLnRvSVNPU3RyaW5nKCl9LG0udG9TdHJpbmc9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy4kZC50b1VUQ1N0cmluZygpfSxNfSgpLGs9Xy5wcm90b3R5cGU7cmV0dXJuIE8ucHJvdG90eXBlPWssW1tcIiRtc1wiLHJdLFtcIiRzXCIsaV0sW1wiJG1cIixzXSxbXCIkSFwiLHVdLFtcIiRXXCIsYV0sW1wiJE1cIixjXSxbXCIkeVwiLGhdLFtcIiREXCIsZF1dLmZvckVhY2goKGZ1bmN0aW9uKHQpe2tbdFsxXV09ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMuJGcoZSx0WzBdLHRbMV0pfX0pKSxPLmV4dGVuZD1mdW5jdGlvbih0LGUpe3JldHVybiB0LiRpfHwodChlLF8sTyksdC4kaT0hMCksT30sTy5sb2NhbGU9dyxPLmlzRGF5anM9UyxPLnVuaXg9ZnVuY3Rpb24odCl7cmV0dXJuIE8oMWUzKnQpfSxPLmVuPURbZ10sTy5Mcz1ELE8ucD17fSxPfSkpOyIsIlwidXNlIHN0cmljdFwiO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdGVtKSB7XG4gIHZhciBjb250ZW50ID0gaXRlbVsxXTtcbiAgdmFyIGNzc01hcHBpbmcgPSBpdGVtWzNdO1xuICBpZiAoIWNzc01hcHBpbmcpIHtcbiAgICByZXR1cm4gY29udGVudDtcbiAgfVxuICBpZiAodHlwZW9mIGJ0b2EgPT09IFwiZnVuY3Rpb25cIikge1xuICAgIHZhciBiYXNlNjQgPSBidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShjc3NNYXBwaW5nKSkpKTtcbiAgICB2YXIgZGF0YSA9IFwic291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsXCIuY29uY2F0KGJhc2U2NCk7XG4gICAgdmFyIHNvdXJjZU1hcHBpbmcgPSBcIi8qIyBcIi5jb25jYXQoZGF0YSwgXCIgKi9cIik7XG4gICAgcmV0dXJuIFtjb250ZW50XS5jb25jYXQoW3NvdXJjZU1hcHBpbmddKS5qb2luKFwiXFxuXCIpO1xuICB9XG4gIHJldHVybiBbY29udGVudF0uam9pbihcIlxcblwiKTtcbn07IiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgYC5zaGFrZSB7XG4gIGFuaW1hdGlvbjogc2hha2UgMC42cztcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB6LWluZGV4OiAxMDtcbn1cblxuQGtleWZyYW1lcyBzaGFrZSB7XG4gIDAlLFxuICAxMDAlIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XG4gIH1cblxuICAxMCUsXG4gIDMwJSxcbiAgNTAlLFxuICA3MCUsXG4gIDkwJSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01cHgpO1xuICB9XG5cbiAgMjAlLFxuICA0MCUsXG4gIDYwJSxcbiAgODAlIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoNXB4KTtcbiAgfVxufVxuYCwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvZnJhbWV3b3JrL3ZpZXcvYWJzdHJhY3Qtdmlldy5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7RUFDRSxxQkFBcUI7RUFDckIsa0JBQWtCO0VBQ2xCLFdBQVc7QUFDYjs7QUFFQTtFQUNFOztJQUVFLHdCQUF3QjtFQUMxQjs7RUFFQTs7Ozs7SUFLRSwyQkFBMkI7RUFDN0I7O0VBRUE7Ozs7SUFJRSwwQkFBMEI7RUFDNUI7QUFDRlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCIuc2hha2Uge1xcbiAgYW5pbWF0aW9uOiBzaGFrZSAwLjZzO1xcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xcbiAgei1pbmRleDogMTA7XFxufVxcblxcbkBrZXlmcmFtZXMgc2hha2Uge1xcbiAgMCUsXFxuICAxMDAlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApO1xcbiAgfVxcblxcbiAgMTAlLFxcbiAgMzAlLFxcbiAgNTAlLFxcbiAgNzAlLFxcbiAgOTAlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01cHgpO1xcbiAgfVxcblxcbiAgMjAlLFxcbiAgNDAlLFxcbiAgNjAlLFxcbiAgODAlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDVweCk7XFxuICB9XFxufVxcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucykge1xuICB2YXIgZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiKTtcbiAgb3B0aW9ucy5zZXRBdHRyaWJ1dGVzKGVsZW1lbnQsIG9wdGlvbnMuYXR0cmlidXRlcyk7XG4gIG9wdGlvbnMuaW5zZXJ0KGVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG4gIHJldHVybiBlbGVtZW50O1xufVxubW9kdWxlLmV4cG9ydHMgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBtZW1vID0ge307XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gZ2V0VGFyZ2V0KHRhcmdldCkge1xuICBpZiAodHlwZW9mIG1lbW9bdGFyZ2V0XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHZhciBzdHlsZVRhcmdldCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGFyZ2V0KTtcblxuICAgIC8vIFNwZWNpYWwgY2FzZSB0byByZXR1cm4gaGVhZCBvZiBpZnJhbWUgaW5zdGVhZCBvZiBpZnJhbWUgaXRzZWxmXG4gICAgaWYgKHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCAmJiBzdHlsZVRhcmdldCBpbnN0YW5jZW9mIHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCkge1xuICAgICAgdHJ5IHtcbiAgICAgICAgLy8gVGhpcyB3aWxsIHRocm93IGFuIGV4Y2VwdGlvbiBpZiBhY2Nlc3MgdG8gaWZyYW1lIGlzIGJsb2NrZWRcbiAgICAgICAgLy8gZHVlIHRvIGNyb3NzLW9yaWdpbiByZXN0cmljdGlvbnNcbiAgICAgICAgc3R5bGVUYXJnZXQgPSBzdHlsZVRhcmdldC5jb250ZW50RG9jdW1lbnQuaGVhZDtcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgLy8gaXN0YW5idWwgaWdub3JlIG5leHRcbiAgICAgICAgc3R5bGVUYXJnZXQgPSBudWxsO1xuICAgICAgfVxuICAgIH1cbiAgICBtZW1vW3RhcmdldF0gPSBzdHlsZVRhcmdldDtcbiAgfVxuICByZXR1cm4gbWVtb1t0YXJnZXRdO1xufVxuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGluc2VydEJ5U2VsZWN0b3IoaW5zZXJ0LCBzdHlsZSkge1xuICB2YXIgdGFyZ2V0ID0gZ2V0VGFyZ2V0KGluc2VydCk7XG4gIGlmICghdGFyZ2V0KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiQ291bGRuJ3QgZmluZCBhIHN0eWxlIHRhcmdldC4gVGhpcyBwcm9iYWJseSBtZWFucyB0aGF0IHRoZSB2YWx1ZSBmb3IgdGhlICdpbnNlcnQnIHBhcmFtZXRlciBpcyBpbnZhbGlkLlwiKTtcbiAgfVxuICB0YXJnZXQuYXBwZW5kQ2hpbGQoc3R5bGUpO1xufVxubW9kdWxlLmV4cG9ydHMgPSBpbnNlcnRCeVNlbGVjdG9yOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKSB7XG4gIHZhciBjc3MgPSBcIlwiO1xuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQob2JqLnN1cHBvcnRzLCBcIikge1wiKTtcbiAgfVxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwiQG1lZGlhIFwiLmNvbmNhdChvYmoubWVkaWEsIFwiIHtcIik7XG4gIH1cbiAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBvYmoubGF5ZXIgIT09IFwidW5kZWZpbmVkXCI7XG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJAbGF5ZXJcIi5jb25jYXQob2JqLmxheWVyLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQob2JqLmxheWVyKSA6IFwiXCIsIFwiIHtcIik7XG4gIH1cbiAgY3NzICs9IG9iai5jc3M7XG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG4gIHZhciBzb3VyY2VNYXAgPSBvYmouc291cmNlTWFwO1xuICBpZiAoc291cmNlTWFwICYmIHR5cGVvZiBidG9hICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgY3NzICs9IFwiXFxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxcIi5jb25jYXQoYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKSwgXCIgKi9cIik7XG4gIH1cblxuICAvLyBGb3Igb2xkIElFXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAgKi9cbiAgb3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbn1cbmZ1bmN0aW9uIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpIHtcbiAgLy8gaXN0YW5idWwgaWdub3JlIGlmXG4gIGlmIChzdHlsZUVsZW1lbnQucGFyZW50Tm9kZSA9PT0gbnVsbCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICBzdHlsZUVsZW1lbnQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQpO1xufVxuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGRvbUFQSShvcHRpb25zKSB7XG4gIGlmICh0eXBlb2YgZG9jdW1lbnQgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICByZXR1cm4ge1xuICAgICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUoKSB7fSxcbiAgICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge31cbiAgICB9O1xuICB9XG4gIHZhciBzdHlsZUVsZW1lbnQgPSBvcHRpb25zLmluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKTtcbiAgcmV0dXJuIHtcbiAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZShvYmopIHtcbiAgICAgIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKTtcbiAgICB9LFxuICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge1xuICAgICAgcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCk7XG4gICAgfVxuICB9O1xufVxubW9kdWxlLmV4cG9ydHMgPSBkb21BUEk7IiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIGAuZmxhdHBpY2tyLWNhbGVuZGFye2JhY2tncm91bmQ6dHJhbnNwYXJlbnQ7b3BhY2l0eTowO2Rpc3BsYXk6bm9uZTt0ZXh0LWFsaWduOmNlbnRlcjt2aXNpYmlsaXR5OmhpZGRlbjtwYWRkaW5nOjA7LXdlYmtpdC1hbmltYXRpb246bm9uZTthbmltYXRpb246bm9uZTtkaXJlY3Rpb246bHRyO2JvcmRlcjowO2ZvbnQtc2l6ZToxNHB4O2xpbmUtaGVpZ2h0OjI0cHg7Ym9yZGVyLXJhZGl1czo1cHg7cG9zaXRpb246YWJzb2x1dGU7d2lkdGg6MzA3Ljg3NXB4Oy13ZWJraXQtYm94LXNpemluZzpib3JkZXItYm94O2JveC1zaXppbmc6Ym9yZGVyLWJveDstbXMtdG91Y2gtYWN0aW9uOm1hbmlwdWxhdGlvbjt0b3VjaC1hY3Rpb246bWFuaXB1bGF0aW9uO2JhY2tncm91bmQ6I2ZmZjstd2Via2l0LWJveC1zaGFkb3c6MXB4IDAgMCAjZTZlNmU2LC0xcHggMCAwICNlNmU2ZTYsMCAxcHggMCAjZTZlNmU2LDAgLTFweCAwICNlNmU2ZTYsMCAzcHggMTNweCByZ2JhKDAsMCwwLDAuMDgpO2JveC1zaGFkb3c6MXB4IDAgMCAjZTZlNmU2LC0xcHggMCAwICNlNmU2ZTYsMCAxcHggMCAjZTZlNmU2LDAgLTFweCAwICNlNmU2ZTYsMCAzcHggMTNweCByZ2JhKDAsMCwwLDAuMDgpfS5mbGF0cGlja3ItY2FsZW5kYXIub3BlbiwuZmxhdHBpY2tyLWNhbGVuZGFyLmlubGluZXtvcGFjaXR5OjE7bWF4LWhlaWdodDo2NDBweDt2aXNpYmlsaXR5OnZpc2libGV9LmZsYXRwaWNrci1jYWxlbmRhci5vcGVue2Rpc3BsYXk6aW5saW5lLWJsb2NrO3otaW5kZXg6OTk5OTl9LmZsYXRwaWNrci1jYWxlbmRhci5hbmltYXRlLm9wZW57LXdlYmtpdC1hbmltYXRpb246ZnBGYWRlSW5Eb3duIDMwMG1zIGN1YmljLWJlemllciguMjMsMSwuMzIsMSk7YW5pbWF0aW9uOmZwRmFkZUluRG93biAzMDBtcyBjdWJpYy1iZXppZXIoLjIzLDEsLjMyLDEpfS5mbGF0cGlja3ItY2FsZW5kYXIuaW5saW5le2Rpc3BsYXk6YmxvY2s7cG9zaXRpb246cmVsYXRpdmU7dG9wOjJweH0uZmxhdHBpY2tyLWNhbGVuZGFyLnN0YXRpY3twb3NpdGlvbjphYnNvbHV0ZTt0b3A6Y2FsYygxMDAlICsgMnB4KX0uZmxhdHBpY2tyLWNhbGVuZGFyLnN0YXRpYy5vcGVue3otaW5kZXg6OTk5O2Rpc3BsYXk6YmxvY2t9LmZsYXRwaWNrci1jYWxlbmRhci5tdWx0aU1vbnRoIC5mbGF0cGlja3ItZGF5cyAuZGF5Q29udGFpbmVyOm50aC1jaGlsZChuKzEpIC5mbGF0cGlja3ItZGF5LmluUmFuZ2U6bnRoLWNoaWxkKDduKzcpey13ZWJraXQtYm94LXNoYWRvdzpub25lICFpbXBvcnRhbnQ7Ym94LXNoYWRvdzpub25lICFpbXBvcnRhbnR9LmZsYXRwaWNrci1jYWxlbmRhci5tdWx0aU1vbnRoIC5mbGF0cGlja3ItZGF5cyAuZGF5Q29udGFpbmVyOm50aC1jaGlsZChuKzIpIC5mbGF0cGlja3ItZGF5LmluUmFuZ2U6bnRoLWNoaWxkKDduKzEpey13ZWJraXQtYm94LXNoYWRvdzotMnB4IDAgMCAjZTZlNmU2LDVweCAwIDAgI2U2ZTZlNjtib3gtc2hhZG93Oi0ycHggMCAwICNlNmU2ZTYsNXB4IDAgMCAjZTZlNmU2fS5mbGF0cGlja3ItY2FsZW5kYXIgLmhhc1dlZWtzIC5kYXlDb250YWluZXIsLmZsYXRwaWNrci1jYWxlbmRhciAuaGFzVGltZSAuZGF5Q29udGFpbmVye2JvcmRlci1ib3R0b206MDtib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czowO2JvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6MH0uZmxhdHBpY2tyLWNhbGVuZGFyIC5oYXNXZWVrcyAuZGF5Q29udGFpbmVye2JvcmRlci1sZWZ0OjB9LmZsYXRwaWNrci1jYWxlbmRhci5oYXNUaW1lIC5mbGF0cGlja3ItdGltZXtoZWlnaHQ6NDBweDtib3JkZXItdG9wOjFweCBzb2xpZCAjZTZlNmU2fS5mbGF0cGlja3ItY2FsZW5kYXIubm9DYWxlbmRhci5oYXNUaW1lIC5mbGF0cGlja3ItdGltZXtoZWlnaHQ6YXV0b30uZmxhdHBpY2tyLWNhbGVuZGFyOmJlZm9yZSwuZmxhdHBpY2tyLWNhbGVuZGFyOmFmdGVye3Bvc2l0aW9uOmFic29sdXRlO2Rpc3BsYXk6YmxvY2s7cG9pbnRlci1ldmVudHM6bm9uZTtib3JkZXI6c29saWQgdHJhbnNwYXJlbnQ7Y29udGVudDonJztoZWlnaHQ6MDt3aWR0aDowO2xlZnQ6MjJweH0uZmxhdHBpY2tyLWNhbGVuZGFyLnJpZ2h0TW9zdDpiZWZvcmUsLmZsYXRwaWNrci1jYWxlbmRhci5hcnJvd1JpZ2h0OmJlZm9yZSwuZmxhdHBpY2tyLWNhbGVuZGFyLnJpZ2h0TW9zdDphZnRlciwuZmxhdHBpY2tyLWNhbGVuZGFyLmFycm93UmlnaHQ6YWZ0ZXJ7bGVmdDphdXRvO3JpZ2h0OjIycHh9LmZsYXRwaWNrci1jYWxlbmRhci5hcnJvd0NlbnRlcjpiZWZvcmUsLmZsYXRwaWNrci1jYWxlbmRhci5hcnJvd0NlbnRlcjphZnRlcntsZWZ0OjUwJTtyaWdodDo1MCV9LmZsYXRwaWNrci1jYWxlbmRhcjpiZWZvcmV7Ym9yZGVyLXdpZHRoOjVweDttYXJnaW46MCAtNXB4fS5mbGF0cGlja3ItY2FsZW5kYXI6YWZ0ZXJ7Ym9yZGVyLXdpZHRoOjRweDttYXJnaW46MCAtNHB4fS5mbGF0cGlja3ItY2FsZW5kYXIuYXJyb3dUb3A6YmVmb3JlLC5mbGF0cGlja3ItY2FsZW5kYXIuYXJyb3dUb3A6YWZ0ZXJ7Ym90dG9tOjEwMCV9LmZsYXRwaWNrci1jYWxlbmRhci5hcnJvd1RvcDpiZWZvcmV7Ym9yZGVyLWJvdHRvbS1jb2xvcjojZTZlNmU2fS5mbGF0cGlja3ItY2FsZW5kYXIuYXJyb3dUb3A6YWZ0ZXJ7Ym9yZGVyLWJvdHRvbS1jb2xvcjojZmZmfS5mbGF0cGlja3ItY2FsZW5kYXIuYXJyb3dCb3R0b206YmVmb3JlLC5mbGF0cGlja3ItY2FsZW5kYXIuYXJyb3dCb3R0b206YWZ0ZXJ7dG9wOjEwMCV9LmZsYXRwaWNrci1jYWxlbmRhci5hcnJvd0JvdHRvbTpiZWZvcmV7Ym9yZGVyLXRvcC1jb2xvcjojZTZlNmU2fS5mbGF0cGlja3ItY2FsZW5kYXIuYXJyb3dCb3R0b206YWZ0ZXJ7Ym9yZGVyLXRvcC1jb2xvcjojZmZmfS5mbGF0cGlja3ItY2FsZW5kYXI6Zm9jdXN7b3V0bGluZTowfS5mbGF0cGlja3Itd3JhcHBlcntwb3NpdGlvbjpyZWxhdGl2ZTtkaXNwbGF5OmlubGluZS1ibG9ja30uZmxhdHBpY2tyLW1vbnRoc3tkaXNwbGF5Oi13ZWJraXQtYm94O2Rpc3BsYXk6LXdlYmtpdC1mbGV4O2Rpc3BsYXk6LW1zLWZsZXhib3g7ZGlzcGxheTpmbGV4fS5mbGF0cGlja3ItbW9udGhzIC5mbGF0cGlja3ItbW9udGh7YmFja2dyb3VuZDp0cmFuc3BhcmVudDtjb2xvcjpyZ2JhKDAsMCwwLDAuOSk7ZmlsbDpyZ2JhKDAsMCwwLDAuOSk7aGVpZ2h0OjM0cHg7bGluZS1oZWlnaHQ6MTt0ZXh0LWFsaWduOmNlbnRlcjtwb3NpdGlvbjpyZWxhdGl2ZTstd2Via2l0LXVzZXItc2VsZWN0Om5vbmU7LW1vei11c2VyLXNlbGVjdDpub25lOy1tcy11c2VyLXNlbGVjdDpub25lO3VzZXItc2VsZWN0Om5vbmU7b3ZlcmZsb3c6aGlkZGVuOy13ZWJraXQtYm94LWZsZXg6MTstd2Via2l0LWZsZXg6MTstbXMtZmxleDoxO2ZsZXg6MX0uZmxhdHBpY2tyLW1vbnRocyAuZmxhdHBpY2tyLXByZXYtbW9udGgsLmZsYXRwaWNrci1tb250aHMgLmZsYXRwaWNrci1uZXh0LW1vbnRoey13ZWJraXQtdXNlci1zZWxlY3Q6bm9uZTstbW96LXVzZXItc2VsZWN0Om5vbmU7LW1zLXVzZXItc2VsZWN0Om5vbmU7dXNlci1zZWxlY3Q6bm9uZTt0ZXh0LWRlY29yYXRpb246bm9uZTtjdXJzb3I6cG9pbnRlcjtwb3NpdGlvbjphYnNvbHV0ZTt0b3A6MDtoZWlnaHQ6MzRweDtwYWRkaW5nOjEwcHg7ei1pbmRleDozO2NvbG9yOnJnYmEoMCwwLDAsMC45KTtmaWxsOnJnYmEoMCwwLDAsMC45KX0uZmxhdHBpY2tyLW1vbnRocyAuZmxhdHBpY2tyLXByZXYtbW9udGguZmxhdHBpY2tyLWRpc2FibGVkLC5mbGF0cGlja3ItbW9udGhzIC5mbGF0cGlja3ItbmV4dC1tb250aC5mbGF0cGlja3ItZGlzYWJsZWR7ZGlzcGxheTpub25lfS5mbGF0cGlja3ItbW9udGhzIC5mbGF0cGlja3ItcHJldi1tb250aCBpLC5mbGF0cGlja3ItbW9udGhzIC5mbGF0cGlja3ItbmV4dC1tb250aCBpe3Bvc2l0aW9uOnJlbGF0aXZlfS5mbGF0cGlja3ItbW9udGhzIC5mbGF0cGlja3ItcHJldi1tb250aC5mbGF0cGlja3ItcHJldi1tb250aCwuZmxhdHBpY2tyLW1vbnRocyAuZmxhdHBpY2tyLW5leHQtbW9udGguZmxhdHBpY2tyLXByZXYtbW9udGh7LypcbiAgICAgIC8qcnRsOmJlZ2luOmlnbm9yZSovbGVmdDowLypcbiAgICAgIC8qcnRsOmVuZDppZ25vcmUqL30vKlxuICAgICAgLypydGw6YmVnaW46aWdub3JlKi9cbi8qXG4gICAgICAvKnJ0bDplbmQ6aWdub3JlKi9cbi5mbGF0cGlja3ItbW9udGhzIC5mbGF0cGlja3ItcHJldi1tb250aC5mbGF0cGlja3ItbmV4dC1tb250aCwuZmxhdHBpY2tyLW1vbnRocyAuZmxhdHBpY2tyLW5leHQtbW9udGguZmxhdHBpY2tyLW5leHQtbW9udGh7LypcbiAgICAgIC8qcnRsOmJlZ2luOmlnbm9yZSovcmlnaHQ6MC8qXG4gICAgICAvKnJ0bDplbmQ6aWdub3JlKi99LypcbiAgICAgIC8qcnRsOmJlZ2luOmlnbm9yZSovXG4vKlxuICAgICAgLypydGw6ZW5kOmlnbm9yZSovXG4uZmxhdHBpY2tyLW1vbnRocyAuZmxhdHBpY2tyLXByZXYtbW9udGg6aG92ZXIsLmZsYXRwaWNrci1tb250aHMgLmZsYXRwaWNrci1uZXh0LW1vbnRoOmhvdmVye2NvbG9yOiM5NTllYTl9LmZsYXRwaWNrci1tb250aHMgLmZsYXRwaWNrci1wcmV2LW1vbnRoOmhvdmVyIHN2ZywuZmxhdHBpY2tyLW1vbnRocyAuZmxhdHBpY2tyLW5leHQtbW9udGg6aG92ZXIgc3Zne2ZpbGw6I2Y2NDc0N30uZmxhdHBpY2tyLW1vbnRocyAuZmxhdHBpY2tyLXByZXYtbW9udGggc3ZnLC5mbGF0cGlja3ItbW9udGhzIC5mbGF0cGlja3ItbmV4dC1tb250aCBzdmd7d2lkdGg6MTRweDtoZWlnaHQ6MTRweH0uZmxhdHBpY2tyLW1vbnRocyAuZmxhdHBpY2tyLXByZXYtbW9udGggc3ZnIHBhdGgsLmZsYXRwaWNrci1tb250aHMgLmZsYXRwaWNrci1uZXh0LW1vbnRoIHN2ZyBwYXRoey13ZWJraXQtdHJhbnNpdGlvbjpmaWxsIC4xczt0cmFuc2l0aW9uOmZpbGwgLjFzO2ZpbGw6aW5oZXJpdH0ubnVtSW5wdXRXcmFwcGVye3Bvc2l0aW9uOnJlbGF0aXZlO2hlaWdodDphdXRvfS5udW1JbnB1dFdyYXBwZXIgaW5wdXQsLm51bUlucHV0V3JhcHBlciBzcGFue2Rpc3BsYXk6aW5saW5lLWJsb2NrfS5udW1JbnB1dFdyYXBwZXIgaW5wdXR7d2lkdGg6MTAwJX0ubnVtSW5wdXRXcmFwcGVyIGlucHV0OjotbXMtY2xlYXJ7ZGlzcGxheTpub25lfS5udW1JbnB1dFdyYXBwZXIgaW5wdXQ6Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b24sLm51bUlucHV0V3JhcHBlciBpbnB1dDo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbnttYXJnaW46MDstd2Via2l0LWFwcGVhcmFuY2U6bm9uZX0ubnVtSW5wdXRXcmFwcGVyIHNwYW57cG9zaXRpb246YWJzb2x1dGU7cmlnaHQ6MDt3aWR0aDoxNHB4O3BhZGRpbmc6MCA0cHggMCAycHg7aGVpZ2h0OjUwJTtsaW5lLWhlaWdodDo1MCU7b3BhY2l0eTowO2N1cnNvcjpwb2ludGVyO2JvcmRlcjoxcHggc29saWQgcmdiYSg1Nyw1Nyw1NywwLjE1KTstd2Via2l0LWJveC1zaXppbmc6Ym9yZGVyLWJveDtib3gtc2l6aW5nOmJvcmRlci1ib3h9Lm51bUlucHV0V3JhcHBlciBzcGFuOmhvdmVye2JhY2tncm91bmQ6cmdiYSgwLDAsMCwwLjEpfS5udW1JbnB1dFdyYXBwZXIgc3BhbjphY3RpdmV7YmFja2dyb3VuZDpyZ2JhKDAsMCwwLDAuMil9Lm51bUlucHV0V3JhcHBlciBzcGFuOmFmdGVye2Rpc3BsYXk6YmxvY2s7Y29udGVudDpcIlwiO3Bvc2l0aW9uOmFic29sdXRlfS5udW1JbnB1dFdyYXBwZXIgc3Bhbi5hcnJvd1Vwe3RvcDowO2JvcmRlci1ib3R0b206MH0ubnVtSW5wdXRXcmFwcGVyIHNwYW4uYXJyb3dVcDphZnRlcntib3JkZXItbGVmdDo0cHggc29saWQgdHJhbnNwYXJlbnQ7Ym9yZGVyLXJpZ2h0OjRweCBzb2xpZCB0cmFuc3BhcmVudDtib3JkZXItYm90dG9tOjRweCBzb2xpZCByZ2JhKDU3LDU3LDU3LDAuNik7dG9wOjI2JX0ubnVtSW5wdXRXcmFwcGVyIHNwYW4uYXJyb3dEb3due3RvcDo1MCV9Lm51bUlucHV0V3JhcHBlciBzcGFuLmFycm93RG93bjphZnRlcntib3JkZXItbGVmdDo0cHggc29saWQgdHJhbnNwYXJlbnQ7Ym9yZGVyLXJpZ2h0OjRweCBzb2xpZCB0cmFuc3BhcmVudDtib3JkZXItdG9wOjRweCBzb2xpZCByZ2JhKDU3LDU3LDU3LDAuNik7dG9wOjQwJX0ubnVtSW5wdXRXcmFwcGVyIHNwYW4gc3Zne3dpZHRoOmluaGVyaXQ7aGVpZ2h0OmF1dG99Lm51bUlucHV0V3JhcHBlciBzcGFuIHN2ZyBwYXRoe2ZpbGw6cmdiYSgwLDAsMCwwLjUpfS5udW1JbnB1dFdyYXBwZXI6aG92ZXJ7YmFja2dyb3VuZDpyZ2JhKDAsMCwwLDAuMDUpfS5udW1JbnB1dFdyYXBwZXI6aG92ZXIgc3BhbntvcGFjaXR5OjF9LmZsYXRwaWNrci1jdXJyZW50LW1vbnRoe2ZvbnQtc2l6ZToxMzUlO2xpbmUtaGVpZ2h0OmluaGVyaXQ7Zm9udC13ZWlnaHQ6MzAwO2NvbG9yOmluaGVyaXQ7cG9zaXRpb246YWJzb2x1dGU7d2lkdGg6NzUlO2xlZnQ6MTIuNSU7cGFkZGluZzo3LjQ4cHggMCAwIDA7bGluZS1oZWlnaHQ6MTtoZWlnaHQ6MzRweDtkaXNwbGF5OmlubGluZS1ibG9jazt0ZXh0LWFsaWduOmNlbnRlcjstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLDAsMCk7dHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsMCwwKX0uZmxhdHBpY2tyLWN1cnJlbnQtbW9udGggc3Bhbi5jdXItbW9udGh7Zm9udC1mYW1pbHk6aW5oZXJpdDtmb250LXdlaWdodDo3MDA7Y29sb3I6aW5oZXJpdDtkaXNwbGF5OmlubGluZS1ibG9jazttYXJnaW4tbGVmdDouNWNoO3BhZGRpbmc6MH0uZmxhdHBpY2tyLWN1cnJlbnQtbW9udGggc3Bhbi5jdXItbW9udGg6aG92ZXJ7YmFja2dyb3VuZDpyZ2JhKDAsMCwwLDAuMDUpfS5mbGF0cGlja3ItY3VycmVudC1tb250aCAubnVtSW5wdXRXcmFwcGVye3dpZHRoOjZjaDt3aWR0aDo3Y2hcXFxcMDtkaXNwbGF5OmlubGluZS1ibG9ja30uZmxhdHBpY2tyLWN1cnJlbnQtbW9udGggLm51bUlucHV0V3JhcHBlciBzcGFuLmFycm93VXA6YWZ0ZXJ7Ym9yZGVyLWJvdHRvbS1jb2xvcjpyZ2JhKDAsMCwwLDAuOSl9LmZsYXRwaWNrci1jdXJyZW50LW1vbnRoIC5udW1JbnB1dFdyYXBwZXIgc3Bhbi5hcnJvd0Rvd246YWZ0ZXJ7Ym9yZGVyLXRvcC1jb2xvcjpyZ2JhKDAsMCwwLDAuOSl9LmZsYXRwaWNrci1jdXJyZW50LW1vbnRoIGlucHV0LmN1ci15ZWFye2JhY2tncm91bmQ6dHJhbnNwYXJlbnQ7LXdlYmtpdC1ib3gtc2l6aW5nOmJvcmRlci1ib3g7Ym94LXNpemluZzpib3JkZXItYm94O2NvbG9yOmluaGVyaXQ7Y3Vyc29yOnRleHQ7cGFkZGluZzowIDAgMCAuNWNoO21hcmdpbjowO2Rpc3BsYXk6aW5saW5lLWJsb2NrO2ZvbnQtc2l6ZTppbmhlcml0O2ZvbnQtZmFtaWx5OmluaGVyaXQ7Zm9udC13ZWlnaHQ6MzAwO2xpbmUtaGVpZ2h0OmluaGVyaXQ7aGVpZ2h0OmF1dG87Ym9yZGVyOjA7Ym9yZGVyLXJhZGl1czowO3ZlcnRpY2FsLWFsaWduOmluaXRpYWw7LXdlYmtpdC1hcHBlYXJhbmNlOnRleHRmaWVsZDstbW96LWFwcGVhcmFuY2U6dGV4dGZpZWxkO2FwcGVhcmFuY2U6dGV4dGZpZWxkfS5mbGF0cGlja3ItY3VycmVudC1tb250aCBpbnB1dC5jdXIteWVhcjpmb2N1c3tvdXRsaW5lOjB9LmZsYXRwaWNrci1jdXJyZW50LW1vbnRoIGlucHV0LmN1ci15ZWFyW2Rpc2FibGVkXSwuZmxhdHBpY2tyLWN1cnJlbnQtbW9udGggaW5wdXQuY3VyLXllYXJbZGlzYWJsZWRdOmhvdmVye2ZvbnQtc2l6ZToxMDAlO2NvbG9yOnJnYmEoMCwwLDAsMC41KTtiYWNrZ3JvdW5kOnRyYW5zcGFyZW50O3BvaW50ZXItZXZlbnRzOm5vbmV9LmZsYXRwaWNrci1jdXJyZW50LW1vbnRoIC5mbGF0cGlja3ItbW9udGhEcm9wZG93bi1tb250aHN7YXBwZWFyYW5jZTptZW51bGlzdDtiYWNrZ3JvdW5kOnRyYW5zcGFyZW50O2JvcmRlcjpub25lO2JvcmRlci1yYWRpdXM6MDtib3gtc2l6aW5nOmJvcmRlci1ib3g7Y29sb3I6aW5oZXJpdDtjdXJzb3I6cG9pbnRlcjtmb250LXNpemU6aW5oZXJpdDtmb250LWZhbWlseTppbmhlcml0O2ZvbnQtd2VpZ2h0OjMwMDtoZWlnaHQ6YXV0bztsaW5lLWhlaWdodDppbmhlcml0O21hcmdpbjotMXB4IDAgMCAwO291dGxpbmU6bm9uZTtwYWRkaW5nOjAgMCAwIC41Y2g7cG9zaXRpb246cmVsYXRpdmU7dmVydGljYWwtYWxpZ246aW5pdGlhbDstd2Via2l0LWJveC1zaXppbmc6Ym9yZGVyLWJveDstd2Via2l0LWFwcGVhcmFuY2U6bWVudWxpc3Q7LW1vei1hcHBlYXJhbmNlOm1lbnVsaXN0O3dpZHRoOmF1dG99LmZsYXRwaWNrci1jdXJyZW50LW1vbnRoIC5mbGF0cGlja3ItbW9udGhEcm9wZG93bi1tb250aHM6Zm9jdXMsLmZsYXRwaWNrci1jdXJyZW50LW1vbnRoIC5mbGF0cGlja3ItbW9udGhEcm9wZG93bi1tb250aHM6YWN0aXZle291dGxpbmU6bm9uZX0uZmxhdHBpY2tyLWN1cnJlbnQtbW9udGggLmZsYXRwaWNrci1tb250aERyb3Bkb3duLW1vbnRoczpob3ZlcntiYWNrZ3JvdW5kOnJnYmEoMCwwLDAsMC4wNSl9LmZsYXRwaWNrci1jdXJyZW50LW1vbnRoIC5mbGF0cGlja3ItbW9udGhEcm9wZG93bi1tb250aHMgLmZsYXRwaWNrci1tb250aERyb3Bkb3duLW1vbnRoe2JhY2tncm91bmQtY29sb3I6dHJhbnNwYXJlbnQ7b3V0bGluZTpub25lO3BhZGRpbmc6MH0uZmxhdHBpY2tyLXdlZWtkYXlze2JhY2tncm91bmQ6dHJhbnNwYXJlbnQ7dGV4dC1hbGlnbjpjZW50ZXI7b3ZlcmZsb3c6aGlkZGVuO3dpZHRoOjEwMCU7ZGlzcGxheTotd2Via2l0LWJveDtkaXNwbGF5Oi13ZWJraXQtZmxleDtkaXNwbGF5Oi1tcy1mbGV4Ym94O2Rpc3BsYXk6ZmxleDstd2Via2l0LWJveC1hbGlnbjpjZW50ZXI7LXdlYmtpdC1hbGlnbi1pdGVtczpjZW50ZXI7LW1zLWZsZXgtYWxpZ246Y2VudGVyO2FsaWduLWl0ZW1zOmNlbnRlcjtoZWlnaHQ6MjhweH0uZmxhdHBpY2tyLXdlZWtkYXlzIC5mbGF0cGlja3Itd2Vla2RheWNvbnRhaW5lcntkaXNwbGF5Oi13ZWJraXQtYm94O2Rpc3BsYXk6LXdlYmtpdC1mbGV4O2Rpc3BsYXk6LW1zLWZsZXhib3g7ZGlzcGxheTpmbGV4Oy13ZWJraXQtYm94LWZsZXg6MTstd2Via2l0LWZsZXg6MTstbXMtZmxleDoxO2ZsZXg6MX1zcGFuLmZsYXRwaWNrci13ZWVrZGF5e2N1cnNvcjpkZWZhdWx0O2ZvbnQtc2l6ZTo5MCU7YmFja2dyb3VuZDp0cmFuc3BhcmVudDtjb2xvcjpyZ2JhKDAsMCwwLDAuNTQpO2xpbmUtaGVpZ2h0OjE7bWFyZ2luOjA7dGV4dC1hbGlnbjpjZW50ZXI7ZGlzcGxheTpibG9jazstd2Via2l0LWJveC1mbGV4OjE7LXdlYmtpdC1mbGV4OjE7LW1zLWZsZXg6MTtmbGV4OjE7Zm9udC13ZWlnaHQ6Ym9sZGVyfS5kYXlDb250YWluZXIsLmZsYXRwaWNrci13ZWVrc3twYWRkaW5nOjFweCAwIDAgMH0uZmxhdHBpY2tyLWRheXN7cG9zaXRpb246cmVsYXRpdmU7b3ZlcmZsb3c6aGlkZGVuO2Rpc3BsYXk6LXdlYmtpdC1ib3g7ZGlzcGxheTotd2Via2l0LWZsZXg7ZGlzcGxheTotbXMtZmxleGJveDtkaXNwbGF5OmZsZXg7LXdlYmtpdC1ib3gtYWxpZ246c3RhcnQ7LXdlYmtpdC1hbGlnbi1pdGVtczpmbGV4LXN0YXJ0Oy1tcy1mbGV4LWFsaWduOnN0YXJ0O2FsaWduLWl0ZW1zOmZsZXgtc3RhcnQ7d2lkdGg6MzA3Ljg3NXB4fS5mbGF0cGlja3ItZGF5czpmb2N1c3tvdXRsaW5lOjB9LmRheUNvbnRhaW5lcntwYWRkaW5nOjA7b3V0bGluZTowO3RleHQtYWxpZ246bGVmdDt3aWR0aDozMDcuODc1cHg7bWluLXdpZHRoOjMwNy44NzVweDttYXgtd2lkdGg6MzA3Ljg3NXB4Oy13ZWJraXQtYm94LXNpemluZzpib3JkZXItYm94O2JveC1zaXppbmc6Ym9yZGVyLWJveDtkaXNwbGF5OmlubGluZS1ibG9jaztkaXNwbGF5Oi1tcy1mbGV4Ym94O2Rpc3BsYXk6LXdlYmtpdC1ib3g7ZGlzcGxheTotd2Via2l0LWZsZXg7ZGlzcGxheTpmbGV4Oy13ZWJraXQtZmxleC13cmFwOndyYXA7ZmxleC13cmFwOndyYXA7LW1zLWZsZXgtd3JhcDp3cmFwOy1tcy1mbGV4LXBhY2s6anVzdGlmeTstd2Via2l0LWp1c3RpZnktY29udGVudDpzcGFjZS1hcm91bmQ7anVzdGlmeS1jb250ZW50OnNwYWNlLWFyb3VuZDstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLDAsMCk7dHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsMCwwKTtvcGFjaXR5OjF9LmRheUNvbnRhaW5lciArIC5kYXlDb250YWluZXJ7LXdlYmtpdC1ib3gtc2hhZG93Oi0xcHggMCAwICNlNmU2ZTY7Ym94LXNoYWRvdzotMXB4IDAgMCAjZTZlNmU2fS5mbGF0cGlja3ItZGF5e2JhY2tncm91bmQ6bm9uZTtib3JkZXI6MXB4IHNvbGlkIHRyYW5zcGFyZW50O2JvcmRlci1yYWRpdXM6MTUwcHg7LXdlYmtpdC1ib3gtc2l6aW5nOmJvcmRlci1ib3g7Ym94LXNpemluZzpib3JkZXItYm94O2NvbG9yOiMzOTM5Mzk7Y3Vyc29yOnBvaW50ZXI7Zm9udC13ZWlnaHQ6NDAwO3dpZHRoOjE0LjI4NTcxNDMlOy13ZWJraXQtZmxleC1iYXNpczoxNC4yODU3MTQzJTstbXMtZmxleC1wcmVmZXJyZWQtc2l6ZToxNC4yODU3MTQzJTtmbGV4LWJhc2lzOjE0LjI4NTcxNDMlO21heC13aWR0aDozOXB4O2hlaWdodDozOXB4O2xpbmUtaGVpZ2h0OjM5cHg7bWFyZ2luOjA7ZGlzcGxheTppbmxpbmUtYmxvY2s7cG9zaXRpb246cmVsYXRpdmU7LXdlYmtpdC1ib3gtcGFjazpjZW50ZXI7LXdlYmtpdC1qdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyOy1tcy1mbGV4LXBhY2s6Y2VudGVyO2p1c3RpZnktY29udGVudDpjZW50ZXI7dGV4dC1hbGlnbjpjZW50ZXJ9LmZsYXRwaWNrci1kYXkuaW5SYW5nZSwuZmxhdHBpY2tyLWRheS5wcmV2TW9udGhEYXkuaW5SYW5nZSwuZmxhdHBpY2tyLWRheS5uZXh0TW9udGhEYXkuaW5SYW5nZSwuZmxhdHBpY2tyLWRheS50b2RheS5pblJhbmdlLC5mbGF0cGlja3ItZGF5LnByZXZNb250aERheS50b2RheS5pblJhbmdlLC5mbGF0cGlja3ItZGF5Lm5leHRNb250aERheS50b2RheS5pblJhbmdlLC5mbGF0cGlja3ItZGF5OmhvdmVyLC5mbGF0cGlja3ItZGF5LnByZXZNb250aERheTpob3ZlciwuZmxhdHBpY2tyLWRheS5uZXh0TW9udGhEYXk6aG92ZXIsLmZsYXRwaWNrci1kYXk6Zm9jdXMsLmZsYXRwaWNrci1kYXkucHJldk1vbnRoRGF5OmZvY3VzLC5mbGF0cGlja3ItZGF5Lm5leHRNb250aERheTpmb2N1c3tjdXJzb3I6cG9pbnRlcjtvdXRsaW5lOjA7YmFja2dyb3VuZDojZTZlNmU2O2JvcmRlci1jb2xvcjojZTZlNmU2fS5mbGF0cGlja3ItZGF5LnRvZGF5e2JvcmRlci1jb2xvcjojOTU5ZWE5fS5mbGF0cGlja3ItZGF5LnRvZGF5OmhvdmVyLC5mbGF0cGlja3ItZGF5LnRvZGF5OmZvY3Vze2JvcmRlci1jb2xvcjojOTU5ZWE5O2JhY2tncm91bmQ6Izk1OWVhOTtjb2xvcjojZmZmfS5mbGF0cGlja3ItZGF5LnNlbGVjdGVkLC5mbGF0cGlja3ItZGF5LnN0YXJ0UmFuZ2UsLmZsYXRwaWNrci1kYXkuZW5kUmFuZ2UsLmZsYXRwaWNrci1kYXkuc2VsZWN0ZWQuaW5SYW5nZSwuZmxhdHBpY2tyLWRheS5zdGFydFJhbmdlLmluUmFuZ2UsLmZsYXRwaWNrci1kYXkuZW5kUmFuZ2UuaW5SYW5nZSwuZmxhdHBpY2tyLWRheS5zZWxlY3RlZDpmb2N1cywuZmxhdHBpY2tyLWRheS5zdGFydFJhbmdlOmZvY3VzLC5mbGF0cGlja3ItZGF5LmVuZFJhbmdlOmZvY3VzLC5mbGF0cGlja3ItZGF5LnNlbGVjdGVkOmhvdmVyLC5mbGF0cGlja3ItZGF5LnN0YXJ0UmFuZ2U6aG92ZXIsLmZsYXRwaWNrci1kYXkuZW5kUmFuZ2U6aG92ZXIsLmZsYXRwaWNrci1kYXkuc2VsZWN0ZWQucHJldk1vbnRoRGF5LC5mbGF0cGlja3ItZGF5LnN0YXJ0UmFuZ2UucHJldk1vbnRoRGF5LC5mbGF0cGlja3ItZGF5LmVuZFJhbmdlLnByZXZNb250aERheSwuZmxhdHBpY2tyLWRheS5zZWxlY3RlZC5uZXh0TW9udGhEYXksLmZsYXRwaWNrci1kYXkuc3RhcnRSYW5nZS5uZXh0TW9udGhEYXksLmZsYXRwaWNrci1kYXkuZW5kUmFuZ2UubmV4dE1vbnRoRGF5e2JhY2tncm91bmQ6IzU2OWZmNzstd2Via2l0LWJveC1zaGFkb3c6bm9uZTtib3gtc2hhZG93Om5vbmU7Y29sb3I6I2ZmZjtib3JkZXItY29sb3I6IzU2OWZmN30uZmxhdHBpY2tyLWRheS5zZWxlY3RlZC5zdGFydFJhbmdlLC5mbGF0cGlja3ItZGF5LnN0YXJ0UmFuZ2Uuc3RhcnRSYW5nZSwuZmxhdHBpY2tyLWRheS5lbmRSYW5nZS5zdGFydFJhbmdle2JvcmRlci1yYWRpdXM6NTBweCAwIDAgNTBweH0uZmxhdHBpY2tyLWRheS5zZWxlY3RlZC5lbmRSYW5nZSwuZmxhdHBpY2tyLWRheS5zdGFydFJhbmdlLmVuZFJhbmdlLC5mbGF0cGlja3ItZGF5LmVuZFJhbmdlLmVuZFJhbmdle2JvcmRlci1yYWRpdXM6MCA1MHB4IDUwcHggMH0uZmxhdHBpY2tyLWRheS5zZWxlY3RlZC5zdGFydFJhbmdlICsgLmVuZFJhbmdlOm5vdCg6bnRoLWNoaWxkKDduKzEpKSwuZmxhdHBpY2tyLWRheS5zdGFydFJhbmdlLnN0YXJ0UmFuZ2UgKyAuZW5kUmFuZ2U6bm90KDpudGgtY2hpbGQoN24rMSkpLC5mbGF0cGlja3ItZGF5LmVuZFJhbmdlLnN0YXJ0UmFuZ2UgKyAuZW5kUmFuZ2U6bm90KDpudGgtY2hpbGQoN24rMSkpey13ZWJraXQtYm94LXNoYWRvdzotMTBweCAwIDAgIzU2OWZmNztib3gtc2hhZG93Oi0xMHB4IDAgMCAjNTY5ZmY3fS5mbGF0cGlja3ItZGF5LnNlbGVjdGVkLnN0YXJ0UmFuZ2UuZW5kUmFuZ2UsLmZsYXRwaWNrci1kYXkuc3RhcnRSYW5nZS5zdGFydFJhbmdlLmVuZFJhbmdlLC5mbGF0cGlja3ItZGF5LmVuZFJhbmdlLnN0YXJ0UmFuZ2UuZW5kUmFuZ2V7Ym9yZGVyLXJhZGl1czo1MHB4fS5mbGF0cGlja3ItZGF5LmluUmFuZ2V7Ym9yZGVyLXJhZGl1czowOy13ZWJraXQtYm94LXNoYWRvdzotNXB4IDAgMCAjZTZlNmU2LDVweCAwIDAgI2U2ZTZlNjtib3gtc2hhZG93Oi01cHggMCAwICNlNmU2ZTYsNXB4IDAgMCAjZTZlNmU2fS5mbGF0cGlja3ItZGF5LmZsYXRwaWNrci1kaXNhYmxlZCwuZmxhdHBpY2tyLWRheS5mbGF0cGlja3ItZGlzYWJsZWQ6aG92ZXIsLmZsYXRwaWNrci1kYXkucHJldk1vbnRoRGF5LC5mbGF0cGlja3ItZGF5Lm5leHRNb250aERheSwuZmxhdHBpY2tyLWRheS5ub3RBbGxvd2VkLC5mbGF0cGlja3ItZGF5Lm5vdEFsbG93ZWQucHJldk1vbnRoRGF5LC5mbGF0cGlja3ItZGF5Lm5vdEFsbG93ZWQubmV4dE1vbnRoRGF5e2NvbG9yOnJnYmEoNTcsNTcsNTcsMC4zKTtiYWNrZ3JvdW5kOnRyYW5zcGFyZW50O2JvcmRlci1jb2xvcjp0cmFuc3BhcmVudDtjdXJzb3I6ZGVmYXVsdH0uZmxhdHBpY2tyLWRheS5mbGF0cGlja3ItZGlzYWJsZWQsLmZsYXRwaWNrci1kYXkuZmxhdHBpY2tyLWRpc2FibGVkOmhvdmVye2N1cnNvcjpub3QtYWxsb3dlZDtjb2xvcjpyZ2JhKDU3LDU3LDU3LDAuMSl9LmZsYXRwaWNrci1kYXkud2Vlay5zZWxlY3RlZHtib3JkZXItcmFkaXVzOjA7LXdlYmtpdC1ib3gtc2hhZG93Oi01cHggMCAwICM1NjlmZjcsNXB4IDAgMCAjNTY5ZmY3O2JveC1zaGFkb3c6LTVweCAwIDAgIzU2OWZmNyw1cHggMCAwICM1NjlmZjd9LmZsYXRwaWNrci1kYXkuaGlkZGVue3Zpc2liaWxpdHk6aGlkZGVufS5yYW5nZU1vZGUgLmZsYXRwaWNrci1kYXl7bWFyZ2luLXRvcDoxcHh9LmZsYXRwaWNrci13ZWVrd3JhcHBlcntmbG9hdDpsZWZ0fS5mbGF0cGlja3Itd2Vla3dyYXBwZXIgLmZsYXRwaWNrci13ZWVrc3twYWRkaW5nOjAgMTJweDstd2Via2l0LWJveC1zaGFkb3c6MXB4IDAgMCAjZTZlNmU2O2JveC1zaGFkb3c6MXB4IDAgMCAjZTZlNmU2fS5mbGF0cGlja3Itd2Vla3dyYXBwZXIgLmZsYXRwaWNrci13ZWVrZGF5e2Zsb2F0Om5vbmU7d2lkdGg6MTAwJTtsaW5lLWhlaWdodDoyOHB4fS5mbGF0cGlja3Itd2Vla3dyYXBwZXIgc3Bhbi5mbGF0cGlja3ItZGF5LC5mbGF0cGlja3Itd2Vla3dyYXBwZXIgc3Bhbi5mbGF0cGlja3ItZGF5OmhvdmVye2Rpc3BsYXk6YmxvY2s7d2lkdGg6MTAwJTttYXgtd2lkdGg6bm9uZTtjb2xvcjpyZ2JhKDU3LDU3LDU3LDAuMyk7YmFja2dyb3VuZDp0cmFuc3BhcmVudDtjdXJzb3I6ZGVmYXVsdDtib3JkZXI6bm9uZX0uZmxhdHBpY2tyLWlubmVyQ29udGFpbmVye2Rpc3BsYXk6YmxvY2s7ZGlzcGxheTotd2Via2l0LWJveDtkaXNwbGF5Oi13ZWJraXQtZmxleDtkaXNwbGF5Oi1tcy1mbGV4Ym94O2Rpc3BsYXk6ZmxleDstd2Via2l0LWJveC1zaXppbmc6Ym9yZGVyLWJveDtib3gtc2l6aW5nOmJvcmRlci1ib3g7b3ZlcmZsb3c6aGlkZGVufS5mbGF0cGlja3ItckNvbnRhaW5lcntkaXNwbGF5OmlubGluZS1ibG9jaztwYWRkaW5nOjA7LXdlYmtpdC1ib3gtc2l6aW5nOmJvcmRlci1ib3g7Ym94LXNpemluZzpib3JkZXItYm94fS5mbGF0cGlja3ItdGltZXt0ZXh0LWFsaWduOmNlbnRlcjtvdXRsaW5lOjA7ZGlzcGxheTpibG9jaztoZWlnaHQ6MDtsaW5lLWhlaWdodDo0MHB4O21heC1oZWlnaHQ6NDBweDstd2Via2l0LWJveC1zaXppbmc6Ym9yZGVyLWJveDtib3gtc2l6aW5nOmJvcmRlci1ib3g7b3ZlcmZsb3c6aGlkZGVuO2Rpc3BsYXk6LXdlYmtpdC1ib3g7ZGlzcGxheTotd2Via2l0LWZsZXg7ZGlzcGxheTotbXMtZmxleGJveDtkaXNwbGF5OmZsZXh9LmZsYXRwaWNrci10aW1lOmFmdGVye2NvbnRlbnQ6XCJcIjtkaXNwbGF5OnRhYmxlO2NsZWFyOmJvdGh9LmZsYXRwaWNrci10aW1lIC5udW1JbnB1dFdyYXBwZXJ7LXdlYmtpdC1ib3gtZmxleDoxOy13ZWJraXQtZmxleDoxOy1tcy1mbGV4OjE7ZmxleDoxO3dpZHRoOjQwJTtoZWlnaHQ6NDBweDtmbG9hdDpsZWZ0fS5mbGF0cGlja3ItdGltZSAubnVtSW5wdXRXcmFwcGVyIHNwYW4uYXJyb3dVcDphZnRlcntib3JkZXItYm90dG9tLWNvbG9yOiMzOTM5Mzl9LmZsYXRwaWNrci10aW1lIC5udW1JbnB1dFdyYXBwZXIgc3Bhbi5hcnJvd0Rvd246YWZ0ZXJ7Ym9yZGVyLXRvcC1jb2xvcjojMzkzOTM5fS5mbGF0cGlja3ItdGltZS5oYXNTZWNvbmRzIC5udW1JbnB1dFdyYXBwZXJ7d2lkdGg6MjYlfS5mbGF0cGlja3ItdGltZS50aW1lMjRociAubnVtSW5wdXRXcmFwcGVye3dpZHRoOjQ5JX0uZmxhdHBpY2tyLXRpbWUgaW5wdXR7YmFja2dyb3VuZDp0cmFuc3BhcmVudDstd2Via2l0LWJveC1zaGFkb3c6bm9uZTtib3gtc2hhZG93Om5vbmU7Ym9yZGVyOjA7Ym9yZGVyLXJhZGl1czowO3RleHQtYWxpZ246Y2VudGVyO21hcmdpbjowO3BhZGRpbmc6MDtoZWlnaHQ6aW5oZXJpdDtsaW5lLWhlaWdodDppbmhlcml0O2NvbG9yOiMzOTM5Mzk7Zm9udC1zaXplOjE0cHg7cG9zaXRpb246cmVsYXRpdmU7LXdlYmtpdC1ib3gtc2l6aW5nOmJvcmRlci1ib3g7Ym94LXNpemluZzpib3JkZXItYm94Oy13ZWJraXQtYXBwZWFyYW5jZTp0ZXh0ZmllbGQ7LW1vei1hcHBlYXJhbmNlOnRleHRmaWVsZDthcHBlYXJhbmNlOnRleHRmaWVsZH0uZmxhdHBpY2tyLXRpbWUgaW5wdXQuZmxhdHBpY2tyLWhvdXJ7Zm9udC13ZWlnaHQ6Ym9sZH0uZmxhdHBpY2tyLXRpbWUgaW5wdXQuZmxhdHBpY2tyLW1pbnV0ZSwuZmxhdHBpY2tyLXRpbWUgaW5wdXQuZmxhdHBpY2tyLXNlY29uZHtmb250LXdlaWdodDo0MDB9LmZsYXRwaWNrci10aW1lIGlucHV0OmZvY3Vze291dGxpbmU6MDtib3JkZXI6MH0uZmxhdHBpY2tyLXRpbWUgLmZsYXRwaWNrci10aW1lLXNlcGFyYXRvciwuZmxhdHBpY2tyLXRpbWUgLmZsYXRwaWNrci1hbS1wbXtoZWlnaHQ6aW5oZXJpdDtmbG9hdDpsZWZ0O2xpbmUtaGVpZ2h0OmluaGVyaXQ7Y29sb3I6IzM5MzkzOTtmb250LXdlaWdodDpib2xkO3dpZHRoOjIlOy13ZWJraXQtdXNlci1zZWxlY3Q6bm9uZTstbW96LXVzZXItc2VsZWN0Om5vbmU7LW1zLXVzZXItc2VsZWN0Om5vbmU7dXNlci1zZWxlY3Q6bm9uZTstd2Via2l0LWFsaWduLXNlbGY6Y2VudGVyOy1tcy1mbGV4LWl0ZW0tYWxpZ246Y2VudGVyO2FsaWduLXNlbGY6Y2VudGVyfS5mbGF0cGlja3ItdGltZSAuZmxhdHBpY2tyLWFtLXBte291dGxpbmU6MDt3aWR0aDoxOCU7Y3Vyc29yOnBvaW50ZXI7dGV4dC1hbGlnbjpjZW50ZXI7Zm9udC13ZWlnaHQ6NDAwfS5mbGF0cGlja3ItdGltZSBpbnB1dDpob3ZlciwuZmxhdHBpY2tyLXRpbWUgLmZsYXRwaWNrci1hbS1wbTpob3ZlciwuZmxhdHBpY2tyLXRpbWUgaW5wdXQ6Zm9jdXMsLmZsYXRwaWNrci10aW1lIC5mbGF0cGlja3ItYW0tcG06Zm9jdXN7YmFja2dyb3VuZDojZWVlfS5mbGF0cGlja3ItaW5wdXRbcmVhZG9ubHlde2N1cnNvcjpwb2ludGVyfUAtd2Via2l0LWtleWZyYW1lcyBmcEZhZGVJbkRvd257ZnJvbXtvcGFjaXR5OjA7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwtMjBweCwwKTt0cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwtMjBweCwwKX10b3tvcGFjaXR5OjE7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwwLDApO3RyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLDAsMCl9fUBrZXlmcmFtZXMgZnBGYWRlSW5Eb3due2Zyb217b3BhY2l0eTowOy13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsLTIwcHgsMCk7dHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsLTIwcHgsMCl9dG97b3BhY2l0eToxOy13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsMCwwKTt0cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwwLDApfX1gLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL25vZGVfbW9kdWxlcy9mbGF0cGlja3IvZGlzdC9mbGF0cGlja3IubWluLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQSxvQkFBb0Isc0JBQXNCLENBQUMsU0FBUyxDQUFDLFlBQVksQ0FBQyxpQkFBaUIsQ0FBQyxpQkFBaUIsQ0FBQyxTQUFTLENBQUMsc0JBQXNCLENBQUMsY0FBYyxDQUFDLGFBQWEsQ0FBQyxRQUFR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LENBQUMsY0FBYyxDQUFDLGlCQUFpQixDQUFDLDZCQUE2QixDQUFDLHFCQUFxQixDQUFDLDRCQUE0QixDQUFDLHlCQUF5QixDQUFDLG9CQUFvQixDQUFDLHFDQUFxQyxnQkFBZ0IsQ0FBQyw4RUFBOEUsZUFBZSxDQUFDLDRCQUE0QixTQUFTLENBQUMsUUFBUSxDQUFDLDJFQUEyRSxjQUFjLENBQUMsVUFBVSxDQUFDLG1CQUFtQixDQUFDLGFBQWEsQ0FBQyxnQkFBZ0IsQ0FBQyxRQUFRLENBQUMsd0JBQXdCLENBQUMscUJBQXFCLENBQUMsb0JBQW9CLENBQUMsZ0JBQWdCLENBQUMseUJBQXlCLENBQUMsMEJBQTBCLENBQUMsaUJBQWlCLENBQUMsaUNBQWlDLFNBQVMsQ0FBQyxTQUFTLENBQUMsY0FBYyxDQUFDLGlCQUFpQixDQUFDLGVBQWUsQ0FBQyxzSUFBc0ksZUFBZSxDQUFDLDJCQUEyQixjQUFjLENBQUMsZ0NBQWdDLEtBQUssU0FBUyxDQUFDLHdDQUF3QyxDQUFDLGdDQUFnQyxDQUFDLEdBQUcsU0FBUyxDQUFDLG9DQUFvQyxDQUFDLDRCQUE0QixDQUFDLENBQUMsd0JBQXdCLEtBQUssU0FBUyxDQUFDLHdDQUF3QyxDQUFDLGdDQUFnQyxDQUFDLEdBQUcsU0FBUyxDQUFDLG9DQUFvQyxDQUFDLDRCQUE0QixDQUFDXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIi5mbGF0cGlja3ItY2FsZW5kYXJ7YmFja2dyb3VuZDp0cmFuc3BhcmVudDtvcGFjaXR5OjA7ZGlzcGxheTpub25lO3RleHQtYWxpZ246Y2VudGVyO3Zpc2liaWxpdHk6aGlkZGVuO3BhZGRpbmc6MDstd2Via2l0LWFuaW1hdGlvbjpub25lO2FuaW1hdGlvbjpub25lO2RpcmVjdGlvbjpsdHI7Ym9yZGVyOjA7Zm9udC1zaXplOjE0cHg7bGluZS1oZWlnaHQ6MjRweDtib3JkZXItcmFkaXVzOjVweDtwb3NpdGlvbjphYnNvbHV0ZTt3aWR0aDozMDcuODc1cHg7LXdlYmtpdC1ib3gtc2l6aW5nOmJvcmRlci1ib3g7Ym94LXNpemluZzpib3JkZXItYm94Oy1tcy10b3VjaC1hY3Rpb246bWFuaXB1bGF0aW9uO3RvdWNoLWFjdGlvbjptYW5pcHVsYXRpb247YmFja2dyb3VuZDojZmZmOy13ZWJraXQtYm94LXNoYWRvdzoxcHggMCAwICNlNmU2ZTYsLTFweCAwIDAgI2U2ZTZlNiwwIDFweCAwICNlNmU2ZTYsMCAtMXB4IDAgI2U2ZTZlNiwwIDNweCAxM3B4IHJnYmEoMCwwLDAsMC4wOCk7Ym94LXNoYWRvdzoxcHggMCAwICNlNmU2ZTYsLTFweCAwIDAgI2U2ZTZlNiwwIDFweCAwICNlNmU2ZTYsMCAtMXB4IDAgI2U2ZTZlNiwwIDNweCAxM3B4IHJnYmEoMCwwLDAsMC4wOCl9LmZsYXRwaWNrci1jYWxlbmRhci5vcGVuLC5mbGF0cGlja3ItY2FsZW5kYXIuaW5saW5le29wYWNpdHk6MTttYXgtaGVpZ2h0OjY0MHB4O3Zpc2liaWxpdHk6dmlzaWJsZX0uZmxhdHBpY2tyLWNhbGVuZGFyLm9wZW57ZGlzcGxheTppbmxpbmUtYmxvY2s7ei1pbmRleDo5OTk5OX0uZmxhdHBpY2tyLWNhbGVuZGFyLmFuaW1hdGUub3Blbnstd2Via2l0LWFuaW1hdGlvbjpmcEZhZGVJbkRvd24gMzAwbXMgY3ViaWMtYmV6aWVyKC4yMywxLC4zMiwxKTthbmltYXRpb246ZnBGYWRlSW5Eb3duIDMwMG1zIGN1YmljLWJlemllciguMjMsMSwuMzIsMSl9LmZsYXRwaWNrci1jYWxlbmRhci5pbmxpbmV7ZGlzcGxheTpibG9jaztwb3NpdGlvbjpyZWxhdGl2ZTt0b3A6MnB4fS5mbGF0cGlja3ItY2FsZW5kYXIuc3RhdGlje3Bvc2l0aW9uOmFic29sdXRlO3RvcDpjYWxjKDEwMCUgKyAycHgpfS5mbGF0cGlja3ItY2FsZW5kYXIuc3RhdGljLm9wZW57ei1pbmRleDo5OTk7ZGlzcGxheTpibG9ja30uZmxhdHBpY2tyLWNhbGVuZGFyLm11bHRpTW9udGggLmZsYXRwaWNrci1kYXlzIC5kYXlDb250YWluZXI6bnRoLWNoaWxkKG4rMSkgLmZsYXRwaWNrci1kYXkuaW5SYW5nZTpudGgtY2hpbGQoN24rNyl7LXdlYmtpdC1ib3gtc2hhZG93Om5vbmUgIWltcG9ydGFudDtib3gtc2hhZG93Om5vbmUgIWltcG9ydGFudH0uZmxhdHBpY2tyLWNhbGVuZGFyLm11bHRpTW9udGggLmZsYXRwaWNrci1kYXlzIC5kYXlDb250YWluZXI6bnRoLWNoaWxkKG4rMikgLmZsYXRwaWNrci1kYXkuaW5SYW5nZTpudGgtY2hpbGQoN24rMSl7LXdlYmtpdC1ib3gtc2hhZG93Oi0ycHggMCAwICNlNmU2ZTYsNXB4IDAgMCAjZTZlNmU2O2JveC1zaGFkb3c6LTJweCAwIDAgI2U2ZTZlNiw1cHggMCAwICNlNmU2ZTZ9LmZsYXRwaWNrci1jYWxlbmRhciAuaGFzV2Vla3MgLmRheUNvbnRhaW5lciwuZmxhdHBpY2tyLWNhbGVuZGFyIC5oYXNUaW1lIC5kYXlDb250YWluZXJ7Ym9yZGVyLWJvdHRvbTowO2JvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOjA7Ym9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czowfS5mbGF0cGlja3ItY2FsZW5kYXIgLmhhc1dlZWtzIC5kYXlDb250YWluZXJ7Ym9yZGVyLWxlZnQ6MH0uZmxhdHBpY2tyLWNhbGVuZGFyLmhhc1RpbWUgLmZsYXRwaWNrci10aW1le2hlaWdodDo0MHB4O2JvcmRlci10b3A6MXB4IHNvbGlkICNlNmU2ZTZ9LmZsYXRwaWNrci1jYWxlbmRhci5ub0NhbGVuZGFyLmhhc1RpbWUgLmZsYXRwaWNrci10aW1le2hlaWdodDphdXRvfS5mbGF0cGlja3ItY2FsZW5kYXI6YmVmb3JlLC5mbGF0cGlja3ItY2FsZW5kYXI6YWZ0ZXJ7cG9zaXRpb246YWJzb2x1dGU7ZGlzcGxheTpibG9jaztwb2ludGVyLWV2ZW50czpub25lO2JvcmRlcjpzb2xpZCB0cmFuc3BhcmVudDtjb250ZW50OicnO2hlaWdodDowO3dpZHRoOjA7bGVmdDoyMnB4fS5mbGF0cGlja3ItY2FsZW5kYXIucmlnaHRNb3N0OmJlZm9yZSwuZmxhdHBpY2tyLWNhbGVuZGFyLmFycm93UmlnaHQ6YmVmb3JlLC5mbGF0cGlja3ItY2FsZW5kYXIucmlnaHRNb3N0OmFmdGVyLC5mbGF0cGlja3ItY2FsZW5kYXIuYXJyb3dSaWdodDphZnRlcntsZWZ0OmF1dG87cmlnaHQ6MjJweH0uZmxhdHBpY2tyLWNhbGVuZGFyLmFycm93Q2VudGVyOmJlZm9yZSwuZmxhdHBpY2tyLWNhbGVuZGFyLmFycm93Q2VudGVyOmFmdGVye2xlZnQ6NTAlO3JpZ2h0OjUwJX0uZmxhdHBpY2tyLWNhbGVuZGFyOmJlZm9yZXtib3JkZXItd2lkdGg6NXB4O21hcmdpbjowIC01cHh9LmZsYXRwaWNrci1jYWxlbmRhcjphZnRlcntib3JkZXItd2lkdGg6NHB4O21hcmdpbjowIC00cHh9LmZsYXRwaWNrci1jYWxlbmRhci5hcnJvd1RvcDpiZWZvcmUsLmZsYXRwaWNrci1jYWxlbmRhci5hcnJvd1RvcDphZnRlcntib3R0b206MTAwJX0uZmxhdHBpY2tyLWNhbGVuZGFyLmFycm93VG9wOmJlZm9yZXtib3JkZXItYm90dG9tLWNvbG9yOiNlNmU2ZTZ9LmZsYXRwaWNrci1jYWxlbmRhci5hcnJvd1RvcDphZnRlcntib3JkZXItYm90dG9tLWNvbG9yOiNmZmZ9LmZsYXRwaWNrci1jYWxlbmRhci5hcnJvd0JvdHRvbTpiZWZvcmUsLmZsYXRwaWNrci1jYWxlbmRhci5hcnJvd0JvdHRvbTphZnRlcnt0b3A6MTAwJX0uZmxhdHBpY2tyLWNhbGVuZGFyLmFycm93Qm90dG9tOmJlZm9yZXtib3JkZXItdG9wLWNvbG9yOiNlNmU2ZTZ9LmZsYXRwaWNrci1jYWxlbmRhci5hcnJvd0JvdHRvbTphZnRlcntib3JkZXItdG9wLWNvbG9yOiNmZmZ9LmZsYXRwaWNrci1jYWxlbmRhcjpmb2N1c3tvdXRsaW5lOjB9LmZsYXRwaWNrci13cmFwcGVye3Bvc2l0aW9uOnJlbGF0aXZlO2Rpc3BsYXk6aW5saW5lLWJsb2NrfS5mbGF0cGlja3ItbW9udGhze2Rpc3BsYXk6LXdlYmtpdC1ib3g7ZGlzcGxheTotd2Via2l0LWZsZXg7ZGlzcGxheTotbXMtZmxleGJveDtkaXNwbGF5OmZsZXh9LmZsYXRwaWNrci1tb250aHMgLmZsYXRwaWNrci1tb250aHtiYWNrZ3JvdW5kOnRyYW5zcGFyZW50O2NvbG9yOnJnYmEoMCwwLDAsMC45KTtmaWxsOnJnYmEoMCwwLDAsMC45KTtoZWlnaHQ6MzRweDtsaW5lLWhlaWdodDoxO3RleHQtYWxpZ246Y2VudGVyO3Bvc2l0aW9uOnJlbGF0aXZlOy13ZWJraXQtdXNlci1zZWxlY3Q6bm9uZTstbW96LXVzZXItc2VsZWN0Om5vbmU7LW1zLXVzZXItc2VsZWN0Om5vbmU7dXNlci1zZWxlY3Q6bm9uZTtvdmVyZmxvdzpoaWRkZW47LXdlYmtpdC1ib3gtZmxleDoxOy13ZWJraXQtZmxleDoxOy1tcy1mbGV4OjE7ZmxleDoxfS5mbGF0cGlja3ItbW9udGhzIC5mbGF0cGlja3ItcHJldi1tb250aCwuZmxhdHBpY2tyLW1vbnRocyAuZmxhdHBpY2tyLW5leHQtbW9udGh7LXdlYmtpdC11c2VyLXNlbGVjdDpub25lOy1tb3otdXNlci1zZWxlY3Q6bm9uZTstbXMtdXNlci1zZWxlY3Q6bm9uZTt1c2VyLXNlbGVjdDpub25lO3RleHQtZGVjb3JhdGlvbjpub25lO2N1cnNvcjpwb2ludGVyO3Bvc2l0aW9uOmFic29sdXRlO3RvcDowO2hlaWdodDozNHB4O3BhZGRpbmc6MTBweDt6LWluZGV4OjM7Y29sb3I6cmdiYSgwLDAsMCwwLjkpO2ZpbGw6cmdiYSgwLDAsMCwwLjkpfS5mbGF0cGlja3ItbW9udGhzIC5mbGF0cGlja3ItcHJldi1tb250aC5mbGF0cGlja3ItZGlzYWJsZWQsLmZsYXRwaWNrci1tb250aHMgLmZsYXRwaWNrci1uZXh0LW1vbnRoLmZsYXRwaWNrci1kaXNhYmxlZHtkaXNwbGF5Om5vbmV9LmZsYXRwaWNrci1tb250aHMgLmZsYXRwaWNrci1wcmV2LW1vbnRoIGksLmZsYXRwaWNrci1tb250aHMgLmZsYXRwaWNrci1uZXh0LW1vbnRoIGl7cG9zaXRpb246cmVsYXRpdmV9LmZsYXRwaWNrci1tb250aHMgLmZsYXRwaWNrci1wcmV2LW1vbnRoLmZsYXRwaWNrci1wcmV2LW1vbnRoLC5mbGF0cGlja3ItbW9udGhzIC5mbGF0cGlja3ItbmV4dC1tb250aC5mbGF0cGlja3ItcHJldi1tb250aHsvKlxcbiAgICAgIC8qcnRsOmJlZ2luOmlnbm9yZSovbGVmdDowLypcXG4gICAgICAvKnJ0bDplbmQ6aWdub3JlKi99LypcXG4gICAgICAvKnJ0bDpiZWdpbjppZ25vcmUqL1xcbi8qXFxuICAgICAgLypydGw6ZW5kOmlnbm9yZSovXFxuLmZsYXRwaWNrci1tb250aHMgLmZsYXRwaWNrci1wcmV2LW1vbnRoLmZsYXRwaWNrci1uZXh0LW1vbnRoLC5mbGF0cGlja3ItbW9udGhzIC5mbGF0cGlja3ItbmV4dC1tb250aC5mbGF0cGlja3ItbmV4dC1tb250aHsvKlxcbiAgICAgIC8qcnRsOmJlZ2luOmlnbm9yZSovcmlnaHQ6MC8qXFxuICAgICAgLypydGw6ZW5kOmlnbm9yZSovfS8qXFxuICAgICAgLypydGw6YmVnaW46aWdub3JlKi9cXG4vKlxcbiAgICAgIC8qcnRsOmVuZDppZ25vcmUqL1xcbi5mbGF0cGlja3ItbW9udGhzIC5mbGF0cGlja3ItcHJldi1tb250aDpob3ZlciwuZmxhdHBpY2tyLW1vbnRocyAuZmxhdHBpY2tyLW5leHQtbW9udGg6aG92ZXJ7Y29sb3I6Izk1OWVhOX0uZmxhdHBpY2tyLW1vbnRocyAuZmxhdHBpY2tyLXByZXYtbW9udGg6aG92ZXIgc3ZnLC5mbGF0cGlja3ItbW9udGhzIC5mbGF0cGlja3ItbmV4dC1tb250aDpob3ZlciBzdmd7ZmlsbDojZjY0NzQ3fS5mbGF0cGlja3ItbW9udGhzIC5mbGF0cGlja3ItcHJldi1tb250aCBzdmcsLmZsYXRwaWNrci1tb250aHMgLmZsYXRwaWNrci1uZXh0LW1vbnRoIHN2Z3t3aWR0aDoxNHB4O2hlaWdodDoxNHB4fS5mbGF0cGlja3ItbW9udGhzIC5mbGF0cGlja3ItcHJldi1tb250aCBzdmcgcGF0aCwuZmxhdHBpY2tyLW1vbnRocyAuZmxhdHBpY2tyLW5leHQtbW9udGggc3ZnIHBhdGh7LXdlYmtpdC10cmFuc2l0aW9uOmZpbGwgLjFzO3RyYW5zaXRpb246ZmlsbCAuMXM7ZmlsbDppbmhlcml0fS5udW1JbnB1dFdyYXBwZXJ7cG9zaXRpb246cmVsYXRpdmU7aGVpZ2h0OmF1dG99Lm51bUlucHV0V3JhcHBlciBpbnB1dCwubnVtSW5wdXRXcmFwcGVyIHNwYW57ZGlzcGxheTppbmxpbmUtYmxvY2t9Lm51bUlucHV0V3JhcHBlciBpbnB1dHt3aWR0aDoxMDAlfS5udW1JbnB1dFdyYXBwZXIgaW5wdXQ6Oi1tcy1jbGVhcntkaXNwbGF5Om5vbmV9Lm51bUlucHV0V3JhcHBlciBpbnB1dDo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbiwubnVtSW5wdXRXcmFwcGVyIGlucHV0Ojotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9ue21hcmdpbjowOy13ZWJraXQtYXBwZWFyYW5jZTpub25lfS5udW1JbnB1dFdyYXBwZXIgc3Bhbntwb3NpdGlvbjphYnNvbHV0ZTtyaWdodDowO3dpZHRoOjE0cHg7cGFkZGluZzowIDRweCAwIDJweDtoZWlnaHQ6NTAlO2xpbmUtaGVpZ2h0OjUwJTtvcGFjaXR5OjA7Y3Vyc29yOnBvaW50ZXI7Ym9yZGVyOjFweCBzb2xpZCByZ2JhKDU3LDU3LDU3LDAuMTUpOy13ZWJraXQtYm94LXNpemluZzpib3JkZXItYm94O2JveC1zaXppbmc6Ym9yZGVyLWJveH0ubnVtSW5wdXRXcmFwcGVyIHNwYW46aG92ZXJ7YmFja2dyb3VuZDpyZ2JhKDAsMCwwLDAuMSl9Lm51bUlucHV0V3JhcHBlciBzcGFuOmFjdGl2ZXtiYWNrZ3JvdW5kOnJnYmEoMCwwLDAsMC4yKX0ubnVtSW5wdXRXcmFwcGVyIHNwYW46YWZ0ZXJ7ZGlzcGxheTpibG9jaztjb250ZW50OlxcXCJcXFwiO3Bvc2l0aW9uOmFic29sdXRlfS5udW1JbnB1dFdyYXBwZXIgc3Bhbi5hcnJvd1Vwe3RvcDowO2JvcmRlci1ib3R0b206MH0ubnVtSW5wdXRXcmFwcGVyIHNwYW4uYXJyb3dVcDphZnRlcntib3JkZXItbGVmdDo0cHggc29saWQgdHJhbnNwYXJlbnQ7Ym9yZGVyLXJpZ2h0OjRweCBzb2xpZCB0cmFuc3BhcmVudDtib3JkZXItYm90dG9tOjRweCBzb2xpZCByZ2JhKDU3LDU3LDU3LDAuNik7dG9wOjI2JX0ubnVtSW5wdXRXcmFwcGVyIHNwYW4uYXJyb3dEb3due3RvcDo1MCV9Lm51bUlucHV0V3JhcHBlciBzcGFuLmFycm93RG93bjphZnRlcntib3JkZXItbGVmdDo0cHggc29saWQgdHJhbnNwYXJlbnQ7Ym9yZGVyLXJpZ2h0OjRweCBzb2xpZCB0cmFuc3BhcmVudDtib3JkZXItdG9wOjRweCBzb2xpZCByZ2JhKDU3LDU3LDU3LDAuNik7dG9wOjQwJX0ubnVtSW5wdXRXcmFwcGVyIHNwYW4gc3Zne3dpZHRoOmluaGVyaXQ7aGVpZ2h0OmF1dG99Lm51bUlucHV0V3JhcHBlciBzcGFuIHN2ZyBwYXRoe2ZpbGw6cmdiYSgwLDAsMCwwLjUpfS5udW1JbnB1dFdyYXBwZXI6aG92ZXJ7YmFja2dyb3VuZDpyZ2JhKDAsMCwwLDAuMDUpfS5udW1JbnB1dFdyYXBwZXI6aG92ZXIgc3BhbntvcGFjaXR5OjF9LmZsYXRwaWNrci1jdXJyZW50LW1vbnRoe2ZvbnQtc2l6ZToxMzUlO2xpbmUtaGVpZ2h0OmluaGVyaXQ7Zm9udC13ZWlnaHQ6MzAwO2NvbG9yOmluaGVyaXQ7cG9zaXRpb246YWJzb2x1dGU7d2lkdGg6NzUlO2xlZnQ6MTIuNSU7cGFkZGluZzo3LjQ4cHggMCAwIDA7bGluZS1oZWlnaHQ6MTtoZWlnaHQ6MzRweDtkaXNwbGF5OmlubGluZS1ibG9jazt0ZXh0LWFsaWduOmNlbnRlcjstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLDAsMCk7dHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsMCwwKX0uZmxhdHBpY2tyLWN1cnJlbnQtbW9udGggc3Bhbi5jdXItbW9udGh7Zm9udC1mYW1pbHk6aW5oZXJpdDtmb250LXdlaWdodDo3MDA7Y29sb3I6aW5oZXJpdDtkaXNwbGF5OmlubGluZS1ibG9jazttYXJnaW4tbGVmdDouNWNoO3BhZGRpbmc6MH0uZmxhdHBpY2tyLWN1cnJlbnQtbW9udGggc3Bhbi5jdXItbW9udGg6aG92ZXJ7YmFja2dyb3VuZDpyZ2JhKDAsMCwwLDAuMDUpfS5mbGF0cGlja3ItY3VycmVudC1tb250aCAubnVtSW5wdXRXcmFwcGVye3dpZHRoOjZjaDt3aWR0aDo3Y2hcXFxcMDtkaXNwbGF5OmlubGluZS1ibG9ja30uZmxhdHBpY2tyLWN1cnJlbnQtbW9udGggLm51bUlucHV0V3JhcHBlciBzcGFuLmFycm93VXA6YWZ0ZXJ7Ym9yZGVyLWJvdHRvbS1jb2xvcjpyZ2JhKDAsMCwwLDAuOSl9LmZsYXRwaWNrci1jdXJyZW50LW1vbnRoIC5udW1JbnB1dFdyYXBwZXIgc3Bhbi5hcnJvd0Rvd246YWZ0ZXJ7Ym9yZGVyLXRvcC1jb2xvcjpyZ2JhKDAsMCwwLDAuOSl9LmZsYXRwaWNrci1jdXJyZW50LW1vbnRoIGlucHV0LmN1ci15ZWFye2JhY2tncm91bmQ6dHJhbnNwYXJlbnQ7LXdlYmtpdC1ib3gtc2l6aW5nOmJvcmRlci1ib3g7Ym94LXNpemluZzpib3JkZXItYm94O2NvbG9yOmluaGVyaXQ7Y3Vyc29yOnRleHQ7cGFkZGluZzowIDAgMCAuNWNoO21hcmdpbjowO2Rpc3BsYXk6aW5saW5lLWJsb2NrO2ZvbnQtc2l6ZTppbmhlcml0O2ZvbnQtZmFtaWx5OmluaGVyaXQ7Zm9udC13ZWlnaHQ6MzAwO2xpbmUtaGVpZ2h0OmluaGVyaXQ7aGVpZ2h0OmF1dG87Ym9yZGVyOjA7Ym9yZGVyLXJhZGl1czowO3ZlcnRpY2FsLWFsaWduOmluaXRpYWw7LXdlYmtpdC1hcHBlYXJhbmNlOnRleHRmaWVsZDstbW96LWFwcGVhcmFuY2U6dGV4dGZpZWxkO2FwcGVhcmFuY2U6dGV4dGZpZWxkfS5mbGF0cGlja3ItY3VycmVudC1tb250aCBpbnB1dC5jdXIteWVhcjpmb2N1c3tvdXRsaW5lOjB9LmZsYXRwaWNrci1jdXJyZW50LW1vbnRoIGlucHV0LmN1ci15ZWFyW2Rpc2FibGVkXSwuZmxhdHBpY2tyLWN1cnJlbnQtbW9udGggaW5wdXQuY3VyLXllYXJbZGlzYWJsZWRdOmhvdmVye2ZvbnQtc2l6ZToxMDAlO2NvbG9yOnJnYmEoMCwwLDAsMC41KTtiYWNrZ3JvdW5kOnRyYW5zcGFyZW50O3BvaW50ZXItZXZlbnRzOm5vbmV9LmZsYXRwaWNrci1jdXJyZW50LW1vbnRoIC5mbGF0cGlja3ItbW9udGhEcm9wZG93bi1tb250aHN7YXBwZWFyYW5jZTptZW51bGlzdDtiYWNrZ3JvdW5kOnRyYW5zcGFyZW50O2JvcmRlcjpub25lO2JvcmRlci1yYWRpdXM6MDtib3gtc2l6aW5nOmJvcmRlci1ib3g7Y29sb3I6aW5oZXJpdDtjdXJzb3I6cG9pbnRlcjtmb250LXNpemU6aW5oZXJpdDtmb250LWZhbWlseTppbmhlcml0O2ZvbnQtd2VpZ2h0OjMwMDtoZWlnaHQ6YXV0bztsaW5lLWhlaWdodDppbmhlcml0O21hcmdpbjotMXB4IDAgMCAwO291dGxpbmU6bm9uZTtwYWRkaW5nOjAgMCAwIC41Y2g7cG9zaXRpb246cmVsYXRpdmU7dmVydGljYWwtYWxpZ246aW5pdGlhbDstd2Via2l0LWJveC1zaXppbmc6Ym9yZGVyLWJveDstd2Via2l0LWFwcGVhcmFuY2U6bWVudWxpc3Q7LW1vei1hcHBlYXJhbmNlOm1lbnVsaXN0O3dpZHRoOmF1dG99LmZsYXRwaWNrci1jdXJyZW50LW1vbnRoIC5mbGF0cGlja3ItbW9udGhEcm9wZG93bi1tb250aHM6Zm9jdXMsLmZsYXRwaWNrci1jdXJyZW50LW1vbnRoIC5mbGF0cGlja3ItbW9udGhEcm9wZG93bi1tb250aHM6YWN0aXZle291dGxpbmU6bm9uZX0uZmxhdHBpY2tyLWN1cnJlbnQtbW9udGggLmZsYXRwaWNrci1tb250aERyb3Bkb3duLW1vbnRoczpob3ZlcntiYWNrZ3JvdW5kOnJnYmEoMCwwLDAsMC4wNSl9LmZsYXRwaWNrci1jdXJyZW50LW1vbnRoIC5mbGF0cGlja3ItbW9udGhEcm9wZG93bi1tb250aHMgLmZsYXRwaWNrci1tb250aERyb3Bkb3duLW1vbnRoe2JhY2tncm91bmQtY29sb3I6dHJhbnNwYXJlbnQ7b3V0bGluZTpub25lO3BhZGRpbmc6MH0uZmxhdHBpY2tyLXdlZWtkYXlze2JhY2tncm91bmQ6dHJhbnNwYXJlbnQ7dGV4dC1hbGlnbjpjZW50ZXI7b3ZlcmZsb3c6aGlkZGVuO3dpZHRoOjEwMCU7ZGlzcGxheTotd2Via2l0LWJveDtkaXNwbGF5Oi13ZWJraXQtZmxleDtkaXNwbGF5Oi1tcy1mbGV4Ym94O2Rpc3BsYXk6ZmxleDstd2Via2l0LWJveC1hbGlnbjpjZW50ZXI7LXdlYmtpdC1hbGlnbi1pdGVtczpjZW50ZXI7LW1zLWZsZXgtYWxpZ246Y2VudGVyO2FsaWduLWl0ZW1zOmNlbnRlcjtoZWlnaHQ6MjhweH0uZmxhdHBpY2tyLXdlZWtkYXlzIC5mbGF0cGlja3Itd2Vla2RheWNvbnRhaW5lcntkaXNwbGF5Oi13ZWJraXQtYm94O2Rpc3BsYXk6LXdlYmtpdC1mbGV4O2Rpc3BsYXk6LW1zLWZsZXhib3g7ZGlzcGxheTpmbGV4Oy13ZWJraXQtYm94LWZsZXg6MTstd2Via2l0LWZsZXg6MTstbXMtZmxleDoxO2ZsZXg6MX1zcGFuLmZsYXRwaWNrci13ZWVrZGF5e2N1cnNvcjpkZWZhdWx0O2ZvbnQtc2l6ZTo5MCU7YmFja2dyb3VuZDp0cmFuc3BhcmVudDtjb2xvcjpyZ2JhKDAsMCwwLDAuNTQpO2xpbmUtaGVpZ2h0OjE7bWFyZ2luOjA7dGV4dC1hbGlnbjpjZW50ZXI7ZGlzcGxheTpibG9jazstd2Via2l0LWJveC1mbGV4OjE7LXdlYmtpdC1mbGV4OjE7LW1zLWZsZXg6MTtmbGV4OjE7Zm9udC13ZWlnaHQ6Ym9sZGVyfS5kYXlDb250YWluZXIsLmZsYXRwaWNrci13ZWVrc3twYWRkaW5nOjFweCAwIDAgMH0uZmxhdHBpY2tyLWRheXN7cG9zaXRpb246cmVsYXRpdmU7b3ZlcmZsb3c6aGlkZGVuO2Rpc3BsYXk6LXdlYmtpdC1ib3g7ZGlzcGxheTotd2Via2l0LWZsZXg7ZGlzcGxheTotbXMtZmxleGJveDtkaXNwbGF5OmZsZXg7LXdlYmtpdC1ib3gtYWxpZ246c3RhcnQ7LXdlYmtpdC1hbGlnbi1pdGVtczpmbGV4LXN0YXJ0Oy1tcy1mbGV4LWFsaWduOnN0YXJ0O2FsaWduLWl0ZW1zOmZsZXgtc3RhcnQ7d2lkdGg6MzA3Ljg3NXB4fS5mbGF0cGlja3ItZGF5czpmb2N1c3tvdXRsaW5lOjB9LmRheUNvbnRhaW5lcntwYWRkaW5nOjA7b3V0bGluZTowO3RleHQtYWxpZ246bGVmdDt3aWR0aDozMDcuODc1cHg7bWluLXdpZHRoOjMwNy44NzVweDttYXgtd2lkdGg6MzA3Ljg3NXB4Oy13ZWJraXQtYm94LXNpemluZzpib3JkZXItYm94O2JveC1zaXppbmc6Ym9yZGVyLWJveDtkaXNwbGF5OmlubGluZS1ibG9jaztkaXNwbGF5Oi1tcy1mbGV4Ym94O2Rpc3BsYXk6LXdlYmtpdC1ib3g7ZGlzcGxheTotd2Via2l0LWZsZXg7ZGlzcGxheTpmbGV4Oy13ZWJraXQtZmxleC13cmFwOndyYXA7ZmxleC13cmFwOndyYXA7LW1zLWZsZXgtd3JhcDp3cmFwOy1tcy1mbGV4LXBhY2s6anVzdGlmeTstd2Via2l0LWp1c3RpZnktY29udGVudDpzcGFjZS1hcm91bmQ7anVzdGlmeS1jb250ZW50OnNwYWNlLWFyb3VuZDstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLDAsMCk7dHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsMCwwKTtvcGFjaXR5OjF9LmRheUNvbnRhaW5lciArIC5kYXlDb250YWluZXJ7LXdlYmtpdC1ib3gtc2hhZG93Oi0xcHggMCAwICNlNmU2ZTY7Ym94LXNoYWRvdzotMXB4IDAgMCAjZTZlNmU2fS5mbGF0cGlja3ItZGF5e2JhY2tncm91bmQ6bm9uZTtib3JkZXI6MXB4IHNvbGlkIHRyYW5zcGFyZW50O2JvcmRlci1yYWRpdXM6MTUwcHg7LXdlYmtpdC1ib3gtc2l6aW5nOmJvcmRlci1ib3g7Ym94LXNpemluZzpib3JkZXItYm94O2NvbG9yOiMzOTM5Mzk7Y3Vyc29yOnBvaW50ZXI7Zm9udC13ZWlnaHQ6NDAwO3dpZHRoOjE0LjI4NTcxNDMlOy13ZWJraXQtZmxleC1iYXNpczoxNC4yODU3MTQzJTstbXMtZmxleC1wcmVmZXJyZWQtc2l6ZToxNC4yODU3MTQzJTtmbGV4LWJhc2lzOjE0LjI4NTcxNDMlO21heC13aWR0aDozOXB4O2hlaWdodDozOXB4O2xpbmUtaGVpZ2h0OjM5cHg7bWFyZ2luOjA7ZGlzcGxheTppbmxpbmUtYmxvY2s7cG9zaXRpb246cmVsYXRpdmU7LXdlYmtpdC1ib3gtcGFjazpjZW50ZXI7LXdlYmtpdC1qdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyOy1tcy1mbGV4LXBhY2s6Y2VudGVyO2p1c3RpZnktY29udGVudDpjZW50ZXI7dGV4dC1hbGlnbjpjZW50ZXJ9LmZsYXRwaWNrci1kYXkuaW5SYW5nZSwuZmxhdHBpY2tyLWRheS5wcmV2TW9udGhEYXkuaW5SYW5nZSwuZmxhdHBpY2tyLWRheS5uZXh0TW9udGhEYXkuaW5SYW5nZSwuZmxhdHBpY2tyLWRheS50b2RheS5pblJhbmdlLC5mbGF0cGlja3ItZGF5LnByZXZNb250aERheS50b2RheS5pblJhbmdlLC5mbGF0cGlja3ItZGF5Lm5leHRNb250aERheS50b2RheS5pblJhbmdlLC5mbGF0cGlja3ItZGF5OmhvdmVyLC5mbGF0cGlja3ItZGF5LnByZXZNb250aERheTpob3ZlciwuZmxhdHBpY2tyLWRheS5uZXh0TW9udGhEYXk6aG92ZXIsLmZsYXRwaWNrci1kYXk6Zm9jdXMsLmZsYXRwaWNrci1kYXkucHJldk1vbnRoRGF5OmZvY3VzLC5mbGF0cGlja3ItZGF5Lm5leHRNb250aERheTpmb2N1c3tjdXJzb3I6cG9pbnRlcjtvdXRsaW5lOjA7YmFja2dyb3VuZDojZTZlNmU2O2JvcmRlci1jb2xvcjojZTZlNmU2fS5mbGF0cGlja3ItZGF5LnRvZGF5e2JvcmRlci1jb2xvcjojOTU5ZWE5fS5mbGF0cGlja3ItZGF5LnRvZGF5OmhvdmVyLC5mbGF0cGlja3ItZGF5LnRvZGF5OmZvY3Vze2JvcmRlci1jb2xvcjojOTU5ZWE5O2JhY2tncm91bmQ6Izk1OWVhOTtjb2xvcjojZmZmfS5mbGF0cGlja3ItZGF5LnNlbGVjdGVkLC5mbGF0cGlja3ItZGF5LnN0YXJ0UmFuZ2UsLmZsYXRwaWNrci1kYXkuZW5kUmFuZ2UsLmZsYXRwaWNrci1kYXkuc2VsZWN0ZWQuaW5SYW5nZSwuZmxhdHBpY2tyLWRheS5zdGFydFJhbmdlLmluUmFuZ2UsLmZsYXRwaWNrci1kYXkuZW5kUmFuZ2UuaW5SYW5nZSwuZmxhdHBpY2tyLWRheS5zZWxlY3RlZDpmb2N1cywuZmxhdHBpY2tyLWRheS5zdGFydFJhbmdlOmZvY3VzLC5mbGF0cGlja3ItZGF5LmVuZFJhbmdlOmZvY3VzLC5mbGF0cGlja3ItZGF5LnNlbGVjdGVkOmhvdmVyLC5mbGF0cGlja3ItZGF5LnN0YXJ0UmFuZ2U6aG92ZXIsLmZsYXRwaWNrci1kYXkuZW5kUmFuZ2U6aG92ZXIsLmZsYXRwaWNrci1kYXkuc2VsZWN0ZWQucHJldk1vbnRoRGF5LC5mbGF0cGlja3ItZGF5LnN0YXJ0UmFuZ2UucHJldk1vbnRoRGF5LC5mbGF0cGlja3ItZGF5LmVuZFJhbmdlLnByZXZNb250aERheSwuZmxhdHBpY2tyLWRheS5zZWxlY3RlZC5uZXh0TW9udGhEYXksLmZsYXRwaWNrci1kYXkuc3RhcnRSYW5nZS5uZXh0TW9udGhEYXksLmZsYXRwaWNrci1kYXkuZW5kUmFuZ2UubmV4dE1vbnRoRGF5e2JhY2tncm91bmQ6IzU2OWZmNzstd2Via2l0LWJveC1zaGFkb3c6bm9uZTtib3gtc2hhZG93Om5vbmU7Y29sb3I6I2ZmZjtib3JkZXItY29sb3I6IzU2OWZmN30uZmxhdHBpY2tyLWRheS5zZWxlY3RlZC5zdGFydFJhbmdlLC5mbGF0cGlja3ItZGF5LnN0YXJ0UmFuZ2Uuc3RhcnRSYW5nZSwuZmxhdHBpY2tyLWRheS5lbmRSYW5nZS5zdGFydFJhbmdle2JvcmRlci1yYWRpdXM6NTBweCAwIDAgNTBweH0uZmxhdHBpY2tyLWRheS5zZWxlY3RlZC5lbmRSYW5nZSwuZmxhdHBpY2tyLWRheS5zdGFydFJhbmdlLmVuZFJhbmdlLC5mbGF0cGlja3ItZGF5LmVuZFJhbmdlLmVuZFJhbmdle2JvcmRlci1yYWRpdXM6MCA1MHB4IDUwcHggMH0uZmxhdHBpY2tyLWRheS5zZWxlY3RlZC5zdGFydFJhbmdlICsgLmVuZFJhbmdlOm5vdCg6bnRoLWNoaWxkKDduKzEpKSwuZmxhdHBpY2tyLWRheS5zdGFydFJhbmdlLnN0YXJ0UmFuZ2UgKyAuZW5kUmFuZ2U6bm90KDpudGgtY2hpbGQoN24rMSkpLC5mbGF0cGlja3ItZGF5LmVuZFJhbmdlLnN0YXJ0UmFuZ2UgKyAuZW5kUmFuZ2U6bm90KDpudGgtY2hpbGQoN24rMSkpey13ZWJraXQtYm94LXNoYWRvdzotMTBweCAwIDAgIzU2OWZmNztib3gtc2hhZG93Oi0xMHB4IDAgMCAjNTY5ZmY3fS5mbGF0cGlja3ItZGF5LnNlbGVjdGVkLnN0YXJ0UmFuZ2UuZW5kUmFuZ2UsLmZsYXRwaWNrci1kYXkuc3RhcnRSYW5nZS5zdGFydFJhbmdlLmVuZFJhbmdlLC5mbGF0cGlja3ItZGF5LmVuZFJhbmdlLnN0YXJ0UmFuZ2UuZW5kUmFuZ2V7Ym9yZGVyLXJhZGl1czo1MHB4fS5mbGF0cGlja3ItZGF5LmluUmFuZ2V7Ym9yZGVyLXJhZGl1czowOy13ZWJraXQtYm94LXNoYWRvdzotNXB4IDAgMCAjZTZlNmU2LDVweCAwIDAgI2U2ZTZlNjtib3gtc2hhZG93Oi01cHggMCAwICNlNmU2ZTYsNXB4IDAgMCAjZTZlNmU2fS5mbGF0cGlja3ItZGF5LmZsYXRwaWNrci1kaXNhYmxlZCwuZmxhdHBpY2tyLWRheS5mbGF0cGlja3ItZGlzYWJsZWQ6aG92ZXIsLmZsYXRwaWNrci1kYXkucHJldk1vbnRoRGF5LC5mbGF0cGlja3ItZGF5Lm5leHRNb250aERheSwuZmxhdHBpY2tyLWRheS5ub3RBbGxvd2VkLC5mbGF0cGlja3ItZGF5Lm5vdEFsbG93ZWQucHJldk1vbnRoRGF5LC5mbGF0cGlja3ItZGF5Lm5vdEFsbG93ZWQubmV4dE1vbnRoRGF5e2NvbG9yOnJnYmEoNTcsNTcsNTcsMC4zKTtiYWNrZ3JvdW5kOnRyYW5zcGFyZW50O2JvcmRlci1jb2xvcjp0cmFuc3BhcmVudDtjdXJzb3I6ZGVmYXVsdH0uZmxhdHBpY2tyLWRheS5mbGF0cGlja3ItZGlzYWJsZWQsLmZsYXRwaWNrci1kYXkuZmxhdHBpY2tyLWRpc2FibGVkOmhvdmVye2N1cnNvcjpub3QtYWxsb3dlZDtjb2xvcjpyZ2JhKDU3LDU3LDU3LDAuMSl9LmZsYXRwaWNrci1kYXkud2Vlay5zZWxlY3RlZHtib3JkZXItcmFkaXVzOjA7LXdlYmtpdC1ib3gtc2hhZG93Oi01cHggMCAwICM1NjlmZjcsNXB4IDAgMCAjNTY5ZmY3O2JveC1zaGFkb3c6LTVweCAwIDAgIzU2OWZmNyw1cHggMCAwICM1NjlmZjd9LmZsYXRwaWNrci1kYXkuaGlkZGVue3Zpc2liaWxpdHk6aGlkZGVufS5yYW5nZU1vZGUgLmZsYXRwaWNrci1kYXl7bWFyZ2luLXRvcDoxcHh9LmZsYXRwaWNrci13ZWVrd3JhcHBlcntmbG9hdDpsZWZ0fS5mbGF0cGlja3Itd2Vla3dyYXBwZXIgLmZsYXRwaWNrci13ZWVrc3twYWRkaW5nOjAgMTJweDstd2Via2l0LWJveC1zaGFkb3c6MXB4IDAgMCAjZTZlNmU2O2JveC1zaGFkb3c6MXB4IDAgMCAjZTZlNmU2fS5mbGF0cGlja3Itd2Vla3dyYXBwZXIgLmZsYXRwaWNrci13ZWVrZGF5e2Zsb2F0Om5vbmU7d2lkdGg6MTAwJTtsaW5lLWhlaWdodDoyOHB4fS5mbGF0cGlja3Itd2Vla3dyYXBwZXIgc3Bhbi5mbGF0cGlja3ItZGF5LC5mbGF0cGlja3Itd2Vla3dyYXBwZXIgc3Bhbi5mbGF0cGlja3ItZGF5OmhvdmVye2Rpc3BsYXk6YmxvY2s7d2lkdGg6MTAwJTttYXgtd2lkdGg6bm9uZTtjb2xvcjpyZ2JhKDU3LDU3LDU3LDAuMyk7YmFja2dyb3VuZDp0cmFuc3BhcmVudDtjdXJzb3I6ZGVmYXVsdDtib3JkZXI6bm9uZX0uZmxhdHBpY2tyLWlubmVyQ29udGFpbmVye2Rpc3BsYXk6YmxvY2s7ZGlzcGxheTotd2Via2l0LWJveDtkaXNwbGF5Oi13ZWJraXQtZmxleDtkaXNwbGF5Oi1tcy1mbGV4Ym94O2Rpc3BsYXk6ZmxleDstd2Via2l0LWJveC1zaXppbmc6Ym9yZGVyLWJveDtib3gtc2l6aW5nOmJvcmRlci1ib3g7b3ZlcmZsb3c6aGlkZGVufS5mbGF0cGlja3ItckNvbnRhaW5lcntkaXNwbGF5OmlubGluZS1ibG9jaztwYWRkaW5nOjA7LXdlYmtpdC1ib3gtc2l6aW5nOmJvcmRlci1ib3g7Ym94LXNpemluZzpib3JkZXItYm94fS5mbGF0cGlja3ItdGltZXt0ZXh0LWFsaWduOmNlbnRlcjtvdXRsaW5lOjA7ZGlzcGxheTpibG9jaztoZWlnaHQ6MDtsaW5lLWhlaWdodDo0MHB4O21heC1oZWlnaHQ6NDBweDstd2Via2l0LWJveC1zaXppbmc6Ym9yZGVyLWJveDtib3gtc2l6aW5nOmJvcmRlci1ib3g7b3ZlcmZsb3c6aGlkZGVuO2Rpc3BsYXk6LXdlYmtpdC1ib3g7ZGlzcGxheTotd2Via2l0LWZsZXg7ZGlzcGxheTotbXMtZmxleGJveDtkaXNwbGF5OmZsZXh9LmZsYXRwaWNrci10aW1lOmFmdGVye2NvbnRlbnQ6XFxcIlxcXCI7ZGlzcGxheTp0YWJsZTtjbGVhcjpib3RofS5mbGF0cGlja3ItdGltZSAubnVtSW5wdXRXcmFwcGVyey13ZWJraXQtYm94LWZsZXg6MTstd2Via2l0LWZsZXg6MTstbXMtZmxleDoxO2ZsZXg6MTt3aWR0aDo0MCU7aGVpZ2h0OjQwcHg7ZmxvYXQ6bGVmdH0uZmxhdHBpY2tyLXRpbWUgLm51bUlucHV0V3JhcHBlciBzcGFuLmFycm93VXA6YWZ0ZXJ7Ym9yZGVyLWJvdHRvbS1jb2xvcjojMzkzOTM5fS5mbGF0cGlja3ItdGltZSAubnVtSW5wdXRXcmFwcGVyIHNwYW4uYXJyb3dEb3duOmFmdGVye2JvcmRlci10b3AtY29sb3I6IzM5MzkzOX0uZmxhdHBpY2tyLXRpbWUuaGFzU2Vjb25kcyAubnVtSW5wdXRXcmFwcGVye3dpZHRoOjI2JX0uZmxhdHBpY2tyLXRpbWUudGltZTI0aHIgLm51bUlucHV0V3JhcHBlcnt3aWR0aDo0OSV9LmZsYXRwaWNrci10aW1lIGlucHV0e2JhY2tncm91bmQ6dHJhbnNwYXJlbnQ7LXdlYmtpdC1ib3gtc2hhZG93Om5vbmU7Ym94LXNoYWRvdzpub25lO2JvcmRlcjowO2JvcmRlci1yYWRpdXM6MDt0ZXh0LWFsaWduOmNlbnRlcjttYXJnaW46MDtwYWRkaW5nOjA7aGVpZ2h0OmluaGVyaXQ7bGluZS1oZWlnaHQ6aW5oZXJpdDtjb2xvcjojMzkzOTM5O2ZvbnQtc2l6ZToxNHB4O3Bvc2l0aW9uOnJlbGF0aXZlOy13ZWJraXQtYm94LXNpemluZzpib3JkZXItYm94O2JveC1zaXppbmc6Ym9yZGVyLWJveDstd2Via2l0LWFwcGVhcmFuY2U6dGV4dGZpZWxkOy1tb3otYXBwZWFyYW5jZTp0ZXh0ZmllbGQ7YXBwZWFyYW5jZTp0ZXh0ZmllbGR9LmZsYXRwaWNrci10aW1lIGlucHV0LmZsYXRwaWNrci1ob3Vye2ZvbnQtd2VpZ2h0OmJvbGR9LmZsYXRwaWNrci10aW1lIGlucHV0LmZsYXRwaWNrci1taW51dGUsLmZsYXRwaWNrci10aW1lIGlucHV0LmZsYXRwaWNrci1zZWNvbmR7Zm9udC13ZWlnaHQ6NDAwfS5mbGF0cGlja3ItdGltZSBpbnB1dDpmb2N1c3tvdXRsaW5lOjA7Ym9yZGVyOjB9LmZsYXRwaWNrci10aW1lIC5mbGF0cGlja3ItdGltZS1zZXBhcmF0b3IsLmZsYXRwaWNrci10aW1lIC5mbGF0cGlja3ItYW0tcG17aGVpZ2h0OmluaGVyaXQ7ZmxvYXQ6bGVmdDtsaW5lLWhlaWdodDppbmhlcml0O2NvbG9yOiMzOTM5Mzk7Zm9udC13ZWlnaHQ6Ym9sZDt3aWR0aDoyJTstd2Via2l0LXVzZXItc2VsZWN0Om5vbmU7LW1vei11c2VyLXNlbGVjdDpub25lOy1tcy11c2VyLXNlbGVjdDpub25lO3VzZXItc2VsZWN0Om5vbmU7LXdlYmtpdC1hbGlnbi1zZWxmOmNlbnRlcjstbXMtZmxleC1pdGVtLWFsaWduOmNlbnRlcjthbGlnbi1zZWxmOmNlbnRlcn0uZmxhdHBpY2tyLXRpbWUgLmZsYXRwaWNrci1hbS1wbXtvdXRsaW5lOjA7d2lkdGg6MTglO2N1cnNvcjpwb2ludGVyO3RleHQtYWxpZ246Y2VudGVyO2ZvbnQtd2VpZ2h0OjQwMH0uZmxhdHBpY2tyLXRpbWUgaW5wdXQ6aG92ZXIsLmZsYXRwaWNrci10aW1lIC5mbGF0cGlja3ItYW0tcG06aG92ZXIsLmZsYXRwaWNrci10aW1lIGlucHV0OmZvY3VzLC5mbGF0cGlja3ItdGltZSAuZmxhdHBpY2tyLWFtLXBtOmZvY3Vze2JhY2tncm91bmQ6I2VlZX0uZmxhdHBpY2tyLWlucHV0W3JlYWRvbmx5XXtjdXJzb3I6cG9pbnRlcn1ALXdlYmtpdC1rZXlmcmFtZXMgZnBGYWRlSW5Eb3due2Zyb217b3BhY2l0eTowOy13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsLTIwcHgsMCk7dHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsLTIwcHgsMCl9dG97b3BhY2l0eToxOy13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsMCwwKTt0cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwwLDApfX1Aa2V5ZnJhbWVzIGZwRmFkZUluRG93bntmcm9te29wYWNpdHk6MDstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLC0yMHB4LDApO3RyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLC0yMHB4LDApfXRve29wYWNpdHk6MTstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLDAsMCk7dHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsMCwwKX19XCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIlwidXNlIHN0cmljdFwiO1xuaWYgKHR5cGVvZiBPYmplY3QuYXNzaWduICE9PSBcImZ1bmN0aW9uXCIpIHtcbiAgICBPYmplY3QuYXNzaWduID0gZnVuY3Rpb24gKHRhcmdldCkge1xuICAgICAgICB2YXIgYXJncyA9IFtdO1xuICAgICAgICBmb3IgKHZhciBfaSA9IDE7IF9pIDwgYXJndW1lbnRzLmxlbmd0aDsgX2krKykge1xuICAgICAgICAgICAgYXJnc1tfaSAtIDFdID0gYXJndW1lbnRzW19pXTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIXRhcmdldCkge1xuICAgICAgICAgICAgdGhyb3cgVHlwZUVycm9yKFwiQ2Fubm90IGNvbnZlcnQgdW5kZWZpbmVkIG9yIG51bGwgdG8gb2JqZWN0XCIpO1xuICAgICAgICB9XG4gICAgICAgIHZhciBfbG9vcF8xID0gZnVuY3Rpb24gKHNvdXJjZSkge1xuICAgICAgICAgICAgaWYgKHNvdXJjZSkge1xuICAgICAgICAgICAgICAgIE9iamVjdC5rZXlzKHNvdXJjZSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IHJldHVybiAodGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XSk7IH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICBmb3IgKHZhciBfYSA9IDAsIGFyZ3NfMSA9IGFyZ3M7IF9hIDwgYXJnc18xLmxlbmd0aDsgX2ErKykge1xuICAgICAgICAgICAgdmFyIHNvdXJjZSA9IGFyZ3NfMVtfYV07XG4gICAgICAgICAgICBfbG9vcF8xKHNvdXJjZSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRhcmdldDtcbiAgICB9O1xufVxuIiwiLy8gVGhlIG1vZHVsZSBjYWNoZVxudmFyIF9fd2VicGFja19tb2R1bGVfY2FjaGVfXyA9IHt9O1xuXG4vLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcblx0dmFyIGNhY2hlZE1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF07XG5cdGlmIChjYWNoZWRNb2R1bGUgIT09IHVuZGVmaW5lZCkge1xuXHRcdHJldHVybiBjYWNoZWRNb2R1bGUuZXhwb3J0cztcblx0fVxuXHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuXHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXSA9IHtcblx0XHRpZDogbW9kdWxlSWQsXG5cdFx0Ly8gbm8gbW9kdWxlLmxvYWRlZCBuZWVkZWRcblx0XHRleHBvcnRzOiB7fVxuXHR9O1xuXG5cdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuXHRfX3dlYnBhY2tfbW9kdWxlc19fW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuXHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuXHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG59XG5cbiIsIi8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSAobW9kdWxlKSA9PiB7XG5cdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuXHRcdCgpID0+IChtb2R1bGVbJ2RlZmF1bHQnXSkgOlxuXHRcdCgpID0+IChtb2R1bGUpO1xuXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCB7IGE6IGdldHRlciB9KTtcblx0cmV0dXJuIGdldHRlcjtcbn07IiwiLy8gZGVmaW5lIGdldHRlciBmdW5jdGlvbnMgZm9yIGhhcm1vbnkgZXhwb3J0c1xuX193ZWJwYWNrX3JlcXVpcmVfXy5kID0gKGV4cG9ydHMsIGRlZmluaXRpb24pID0+IHtcblx0Zm9yKHZhciBrZXkgaW4gZGVmaW5pdGlvbikge1xuXHRcdGlmKF9fd2VicGFja19yZXF1aXJlX18ubyhkZWZpbml0aW9uLCBrZXkpICYmICFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywga2V5KSkge1xuXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIGtleSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGRlZmluaXRpb25ba2V5XSB9KTtcblx0XHR9XG5cdH1cbn07IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5vID0gKG9iaiwgcHJvcCkgPT4gKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIHByb3ApKSIsIl9fd2VicGFja19yZXF1aXJlX18ubmMgPSB1bmRlZmluZWQ7IiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9pbnQge1xuICBjb25zdHJ1Y3RvcihpZCwgdHlwZSwgZGVzdGluYXRpb24sIGRhdGVGcm9tLCBkYXRlVG8sIGJhc2VQcmljZSwgb2ZmZXJzLCBpc0Zhdm9yaXRlKSB7XG4gICAgdGhpcy5pZCA9IGlkO1xuICAgIHRoaXMudHlwZSA9IHR5cGU7XG4gICAgdGhpcy5kZXN0aW5hdGlvbiA9IGRlc3RpbmF0aW9uO1xuICAgIHRoaXMuZGF0ZUZyb20gPSBkYXRlRnJvbTtcbiAgICB0aGlzLmRhdGVUbyA9IGRhdGVUbztcbiAgICB0aGlzLmJhc2VQcmljZSA9IGJhc2VQcmljZTtcbiAgICB0aGlzLm9mZmVycyA9IG9mZmVycztcbiAgICB0aGlzLmlzRmF2b3JpdGUgPSBpc0Zhdm9yaXRlO1xuICB9XG59XG4iLCJpbXBvcnQgUG9pbnQgZnJvbSAnLi4vbW9kZWwvcG9pbnQuanMnO1xuXG5jb25zdCBERVNUSU5BVElPTlMgPSBbXG4gIHtcbiAgICBpZDogJ2QxJyxcbiAgICBuYW1lOiAnQW1zdGVyZGFtJyxcbiAgICBkZXNjcmlwdGlvbjogJ0Ftc3RlcmRhbSwgY2FwaXRhbCBvZiB0aGUgTmV0aGVybGFuZHMnLFxuICAgIHBpY3R1cmVzOiBbXVxuICB9LFxuICB7XG4gICAgaWQ6ICdkMicsXG4gICAgbmFtZTogJ0NoYW1vbml4JyxcbiAgICBkZXNjcmlwdGlvbjogJ0NoYW1vbml4LCBhIHJlc29ydCBhcmVhIG5lYXIgTW9udCBCbGFuYycsXG4gICAgcGljdHVyZXM6IFtdXG4gIH0sXG4gIHtcbiAgICBpZDogJ2QzJyxcbiAgICBuYW1lOiAnR2VuZXZhJyxcbiAgICBkZXNjcmlwdGlvbjogJ0dlbmV2YSwgU3dpc3MgY2l0eSBvbiBMYWtlIEdlbmV2YScsXG4gICAgcGljdHVyZXM6IFtdXG4gIH1cbl07XG5cbmV4cG9ydCBjb25zdCBnZW5lcmF0ZURlc3RpbmF0aW9ucyA9ICgpID0+IERFU1RJTkFUSU9OUztcblxuZXhwb3J0IGNvbnN0IGdlbmVyYXRlT2ZmZXJzID0gKCkgPT4gKHtcbiAgdGF4aTogW1xuICAgIHtpZDogJ3RheGkxJywgdGl0bGU6ICdPcmRlciBVYmVyJywgcHJpY2U6IDIwfVxuICBdLFxuICBmbGlnaHQ6IFtcbiAgICB7aWQ6ICdmbGlnaHQxJywgdGl0bGU6ICdBZGQgbHVnZ2FnZScsIHByaWNlOiA1MH0sXG4gICAge2lkOiAnZmxpZ2h0MicsIHRpdGxlOiAnU3dpdGNoIHRvIGNvbWZvcnQnLCBwcmljZTogODB9XG4gIF0sXG4gIGRyaXZlOiBbXG4gICAge2lkOiAnZHJpdmUxJywgdGl0bGU6ICdSZW50IGEgY2FyJywgcHJpY2U6IDIwMH1cbiAgXSxcbiAgJ2NoZWNrLWluJzogW1xuICAgIHtpZDogJ2NoZWNraW4xJywgdGl0bGU6ICdBZGQgYnJlYWtmYXN0JywgcHJpY2U6IDUwfVxuICBdXG59KTtcblxuZXhwb3J0IGNvbnN0IGdlbmVyYXRlUG9pbnRzID0gKCkgPT4gW1xuICBuZXcgUG9pbnQoXG4gICAgJ3AxJyxcbiAgICAndGF4aScsXG4gICAgJ2QxJyxcbiAgICBuZXcgRGF0ZSgnMjAyNC0wMy0xOFQxMDozMDowMCcpLFxuICAgIG5ldyBEYXRlKCcyMDI0LTAzLTE4VDExOjAwOjAwJyksXG4gICAgMjAsXG4gICAgWyd0YXhpMSddLFxuICAgIGZhbHNlXG4gICksXG4gIG5ldyBQb2ludChcbiAgICAncDInLFxuICAgICdmbGlnaHQnLFxuICAgICdkMicsXG4gICAgbmV3IERhdGUoJzIwMjQtMDMtMThUMTI6MjU6MDAnKSxcbiAgICBuZXcgRGF0ZSgnMjAyNC0wMy0xOFQxMzozNTowMCcpLFxuICAgIDE2MCxcbiAgICBbJ2ZsaWdodDEnLCAnZmxpZ2h0MiddLFxuICAgIGZhbHNlXG4gICksXG4gIG5ldyBQb2ludChcbiAgICAncDMnLFxuICAgICdkcml2ZScsXG4gICAgJ2QyJyxcbiAgICBuZXcgRGF0ZSgnMjAyNC0wMy0xOFQxNDozMDowMCcpLFxuICAgIG5ldyBEYXRlKCcyMDI0LTAzLTE4VDE2OjA1OjAwJyksXG4gICAgMTYwLFxuICAgIFsnZHJpdmUxJ10sXG4gICAgZmFsc2VcbiAgKSxcbiAgbmV3IFBvaW50KFxuICAgICdwNCcsXG4gICAgJ2NoZWNrLWluJyxcbiAgICAnZDInLFxuICAgIG5ldyBEYXRlKCcyMDI0LTAzLTE4VDE2OjIwOjAwJyksXG4gICAgbmV3IERhdGUoJzIwMjQtMDMtMThUMTc6MDA6MDAnKSxcbiAgICA2MDAsXG4gICAgWydjaGVja2luMSddLFxuICAgIGZhbHNlXG4gIClcbl07XG5cbmV4cG9ydCBjb25zdCBnZW5lcmF0ZUZpbHRlcnMgPSAocG9pbnRzKSA9PiBbXG4gIHsgdHlwZTogJ2V2ZXJ5dGhpbmcnLCBuYW1lOiAnRXZlcnl0aGluZycsIGlzRGlzYWJsZWQ6IGZhbHNlLCBpc0NoZWNrZWQ6IHRydWUgfSxcbiAgeyB0eXBlOiAnZnV0dXJlJywgbmFtZTogJ0Z1dHVyZScsIGlzRGlzYWJsZWQ6IHBvaW50cy5sZW5ndGggPT09IDAsIGlzQ2hlY2tlZDogZmFsc2UgfSxcbiAgeyB0eXBlOiAncHJlc2VudCcsIG5hbWU6ICdQcmVzZW50JywgaXNEaXNhYmxlZDogdHJ1ZSwgaXNDaGVja2VkOiBmYWxzZSB9LFxuICB7IHR5cGU6ICdwYXN0JywgbmFtZTogJ1Bhc3QnLCBpc0Rpc2FibGVkOiBmYWxzZSwgaXNDaGVja2VkOiBmYWxzZSB9XG5dO1xuXG4iLCIvKipcbiAqINCa0LvQsNGB0YEsINGA0LXQsNC70LjQt9GD0Y7RidC40Lkg0L/QsNGC0YLQtdGA0L0g0J3QsNCx0LvRjtC00LDRgtC10LvRjC5cbiAqL1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgT2JzZXJ2YWJsZSB7XG4gIC8qKiBAdHlwZSB7U2V0PG9ic2VydmVyQ2FsbGJhY2s+fSDQnNC90L7QttC10YHRgtCy0L4g0YTRg9C90LrRhtC40Lkg0YLQuNC/0LAgb2JzZXJ2ZXJDYWxsYmFjayAqL1xuICAjb2JzZXJ2ZXJzID0gbmV3IFNldCgpO1xuXG4gIC8qKlxuICAgKiDQnNC10YLQvtC0LCDQv9C+0LfQstC+0LvRj9GO0YnQuNC5INC/0L7QtNC/0LjRgdCw0YLRjNGB0Y8g0L3QsCDRgdC+0LHRi9GC0LjQtVxuICAgKiBAcGFyYW0ge29ic2VydmVyQ2FsbGJhY2t9IG9ic2VydmVyINCk0YPQvdC60YbQuNGPLCDQutC+0YLQvtGA0LDRjyDQsdGD0LTQtdGCINCy0YvQt9Cy0LDQvdCwINC/0YDQuCDQvdCw0YHRgtGD0L/Qu9C10L3QuNC4INGB0L7QsdGL0YLQuNGPXG4gICAqL1xuICBhZGRPYnNlcnZlcihvYnNlcnZlcikge1xuICAgIHRoaXMuI29ic2VydmVycy5hZGQob2JzZXJ2ZXIpO1xuICB9XG5cbiAgLyoqXG4gICAqINCc0LXRgtC+0LQsINC/0L7Qt9Cy0L7Qu9GP0Y7RidC40Lkg0L7RgtC/0LjRgdCw0YLRjNGB0Y8g0L7RgiDRgdC+0LHRi9GC0LjRj1xuICAgKiBAcGFyYW0ge29ic2VydmVyQ2FsbGJhY2t9IG9ic2VydmVyINCk0YPQvdC60YbQuNGPLCDQutC+0YLQvtGA0YPRjiDQsdC+0LvRjNGI0LUg0L3QtSDQvdGD0LbQvdC+INCy0YvQt9GL0LLQsNGC0Ywg0L/RgNC4INC90LDRgdGC0YPQv9C70LXQvdC40Lgg0YHQvtCx0YvRgtC40Y9cbiAgICovXG4gIHJlbW92ZU9ic2VydmVyKG9ic2VydmVyKSB7XG4gICAgdGhpcy4jb2JzZXJ2ZXJzLmRlbGV0ZShvYnNlcnZlcik7XG4gIH1cblxuICAvKipcbiAgICog0JzQtdGC0L7QtCDQtNC70Y8g0L7Qv9C+0LLQtdGJ0LXQvdC40Y8g0L/QvtC00L/QuNGB0YfQuNC60L7QsiDQviDQvdCw0YHRgtGD0L/Qu9C10L3QuNC4INGB0L7QsdGL0YLQuNGPXG4gICAqIEBwYXJhbSB7Kn0gZXZlbnQg0KLQuNC/INGB0L7QsdGL0YLQuNGPXG4gICAqIEBwYXJhbSB7Kn0gcGF5bG9hZCDQlNC+0L/QvtC70L3QuNGC0LXQu9GM0L3QsNGPINC40L3RhNC+0YDQvNCw0YbQuNGPXG4gICAqL1xuICBfbm90aWZ5KGV2ZW50LCBwYXlsb2FkKSB7XG4gICAgdGhpcy4jb2JzZXJ2ZXJzLmZvckVhY2goKG9ic2VydmVyKSA9PiBvYnNlcnZlcihldmVudCwgcGF5bG9hZCkpO1xuICB9XG59XG5cbi8qKlxuICog0KTRg9C90LrRhtC40Y8sINC60L7RgtC+0YDQsNGPINCx0YPQtNC10YIg0LLRi9C30LLQsNC90LAg0L/RgNC4INC90LDRgdGC0YPQv9C70LXQvdC40Lgg0YHQvtCx0YvRgtC40Y9cbiAqIEBjYWxsYmFjayBvYnNlcnZlckNhbGxiYWNrXG4gKiBAcGFyYW0geyp9IGV2ZW50INCi0LjQvyDRgdC+0LHRi9GC0LjRj1xuICogQHBhcmFtIHsqfSBbcGF5bG9hZF0g0JTQvtC/0L7Qu9C90LjRgtC10LvRjNC90LDRjyDQuNC90YTQvtGA0LzQsNGG0LjRj1xuICovXG4iLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vYWJzdHJhY3Qtdmlldy5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcbm9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9hYnN0cmFjdC12aWV3LmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsImltcG9ydCB7Y3JlYXRlRWxlbWVudH0gZnJvbSAnLi4vcmVuZGVyLmpzJztcbmltcG9ydCAnLi9hYnN0cmFjdC12aWV3LmNzcyc7XG5cbi8qKiBAY29uc3Qge3N0cmluZ30g0JrQu9Cw0YHRgSwg0YDQtdCw0LvQuNC30YPRjtGJ0LjQuSDRjdGE0YTQtdC60YIgXCLQv9C+0LrQsNGH0LjQstCw0L3QuNGPINCz0L7Qu9C+0LLQvtC5XCIgKi9cbmNvbnN0IFNIQUtFX0NMQVNTX05BTUUgPSAnc2hha2UnO1xuXG4vKiogQGNvbnN0IHtudW1iZXJ9INCS0YDQtdC80Y8g0LDQvdC40LzQsNGG0LjQuCDQsiDQvNC40LvQu9C40YHQtdC60YPQvdC00LDRhSAqL1xuY29uc3QgU0hBS0VfQU5JTUFUSU9OX1RJTUVPVVQgPSA2MDA7XG5cbi8qKlxuICog0JDQsdGB0YLRgNCw0LrRgtC90YvQuSDQutC70LDRgdGBINC/0YDQtdC00YHRgtCw0LLQu9C10L3QuNGPXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEFic3RyYWN0VmlldyB7XG4gIC8qKiBAdHlwZSB7SFRNTEVsZW1lbnR8bnVsbH0g0K3Qu9C10LzQtdC90YIg0L/RgNC10LTRgdGC0LDQstC70LXQvdC40Y8gKi9cbiAgI2VsZW1lbnQgPSBudWxsO1xuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIGlmIChuZXcudGFyZ2V0ID09PSBBYnN0cmFjdFZpZXcpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignQ2FuXFwndCBpbnN0YW50aWF0ZSBBYnN0cmFjdFZpZXcsIG9ubHkgY29uY3JldGUgb25lLicpO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiDQk9C10YLRgtC10YAg0LTQu9GPINC/0L7Qu9GD0YfQtdC90LjRjyDRjdC70LXQvNC10L3RgtCwXG4gICAqIEByZXR1cm5zIHtIVE1MRWxlbWVudH0g0K3Qu9C10LzQtdC90YIg0L/RgNC10LTRgdGC0LDQstC70LXQvdC40Y9cbiAgICovXG4gIGdldCBlbGVtZW50KCkge1xuICAgIGlmICghdGhpcy4jZWxlbWVudCkge1xuICAgICAgdGhpcy4jZWxlbWVudCA9IGNyZWF0ZUVsZW1lbnQodGhpcy50ZW1wbGF0ZSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRoaXMuI2VsZW1lbnQ7XG4gIH1cblxuICAvKipcbiAgICog0JPQtdGC0YLQtdGAINC00LvRjyDQv9C+0LvRg9GH0LXQvdC40Y8g0YDQsNC30LzQtdGC0LrQuCDRjdC70LXQvNC10L3RgtCwXG4gICAqIEBhYnN0cmFjdFxuICAgKiBAcmV0dXJucyB7c3RyaW5nfSDQoNCw0LfQvNC10YLQutCwINGN0LvQtdC80LXQvdGC0LAg0LIg0LLQuNC00LUg0YHRgtGA0L7QutC4XG4gICAqL1xuICBnZXQgdGVtcGxhdGUoKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdBYnN0cmFjdCBtZXRob2Qgbm90IGltcGxlbWVudGVkOiBnZXQgdGVtcGxhdGUnKTtcbiAgfVxuXG4gIC8qKiDQnNC10YLQvtC0INC00LvRjyDRg9C00LDQu9C10L3QuNGPINGN0LvQtdC80LXQvdGC0LAgKi9cbiAgcmVtb3ZlRWxlbWVudCgpIHtcbiAgICB0aGlzLiNlbGVtZW50ID0gbnVsbDtcbiAgfVxuXG4gIC8qKlxuICAgKiDQnNC10YLQvtC0LCDRgNC10LDQu9C40LfRg9GO0YnQuNC5INGN0YTRhNC10LrRgiBcItC/0L7QutCw0YfQuNCy0LDQvdC40Y8g0LPQvtC70L7QstC+0LlcIlxuICAgKiBAcGFyYW0ge3NoYWtlQ2FsbGJhY2t9IFtjYWxsYmFja10g0KTRg9C90LrRhtC40Y8sINC60L7RgtC+0YDQsNGPINCx0YPQtNC10YIg0LLRi9C30LLQsNC90LAg0L/QvtGB0LvQtSDQt9Cw0LLQtdGA0YjQtdC90LjRjyDQsNC90LjQvNCw0YbQuNC4XG4gICAqL1xuICBzaGFrZShjYWxsYmFjaykge1xuICAgIHRoaXMuZWxlbWVudC5jbGFzc0xpc3QuYWRkKFNIQUtFX0NMQVNTX05BTUUpO1xuICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgdGhpcy5lbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoU0hBS0VfQ0xBU1NfTkFNRSk7XG4gICAgICBjYWxsYmFjaz8uKCk7XG4gICAgfSwgU0hBS0VfQU5JTUFUSU9OX1RJTUVPVVQpO1xuICB9XG59XG5cbi8qKlxuICog0KTRg9C90LrRhtC40Y8sINC60L7RgtC+0YDQsNGPINCx0YPQtNC10YIg0LLRi9C30LLQsNC90LAg0LzQtdGC0L7QtNC+0Lwgc2hha2Ug0L/QvtGB0LvQtSDQt9Cw0LLQtdGA0YjQtdC90LjRjyDQsNC90LjQvNCw0YbQuNC4XG4gKiBAY2FsbGJhY2sgc2hha2VDYWxsYmFja1xuICovXG4iLCJpbXBvcnQgQWJzdHJhY3RWaWV3IGZyb20gJy4vdmlldy9hYnN0cmFjdC12aWV3LmpzJztcblxuLyoqIEBlbnVtIHtzdHJpbmd9INCf0LXRgNC10YfQuNGB0LvQtdC90LjQtSDQstC+0LfQvNC+0LbQvdGL0YUg0L/QvtC30LjRhtC40Lkg0LTQu9GPINC+0YLRgNC40YHQvtCy0LrQuCAqL1xuY29uc3QgUmVuZGVyUG9zaXRpb24gPSB7XG4gIEJFRk9SRUJFR0lOOiAnYmVmb3JlYmVnaW4nLFxuICBBRlRFUkJFR0lOOiAnYWZ0ZXJiZWdpbicsXG4gIEJFRk9SRUVORDogJ2JlZm9yZWVuZCcsXG4gIEFGVEVSRU5EOiAnYWZ0ZXJlbmQnLFxufTtcblxuLyoqXG4gKiDQpNGD0L3QutGG0LjRjyDQtNC70Y8g0YHQvtC30LTQsNC90LjRjyDRjdC70LXQvNC10L3RgtCwINC90LAg0L7RgdC90L7QstC1INGA0LDQt9C80LXRgtC60LhcbiAqIEBwYXJhbSB7c3RyaW5nfSB0ZW1wbGF0ZSDQoNCw0LfQvNC10YLQutCwINCyINCy0LjQtNC1INGB0YLRgNC+0LrQuFxuICogQHJldHVybnMge0hUTUxFbGVtZW50fSDQodC+0LfQtNCw0L3QvdGL0Lkg0Y3Qu9C10LzQtdC90YJcbiAqL1xuZnVuY3Rpb24gY3JlYXRlRWxlbWVudCh0ZW1wbGF0ZSkge1xuICBjb25zdCBuZXdFbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gIG5ld0VsZW1lbnQuaW5uZXJIVE1MID0gdGVtcGxhdGU7XG5cbiAgcmV0dXJuIG5ld0VsZW1lbnQuZmlyc3RFbGVtZW50Q2hpbGQ7XG59XG5cbi8qKlxuICog0KTRg9C90LrRhtC40Y8g0LTQu9GPINC+0YLRgNC40YHQvtCy0LrQuCDRjdC70LXQvNC10L3RgtCwXG4gKiBAcGFyYW0ge0Fic3RyYWN0Vmlld30gY29tcG9uZW50INCa0L7QvNC/0L7QvdC10L3Rgiwg0LrQvtGC0L7RgNGL0Lkg0LTQvtC70LbQtdC9INCx0YvQuyDQvtGC0YDQuNGB0L7QstCw0L1cbiAqIEBwYXJhbSB7SFRNTEVsZW1lbnR9IGNvbnRhaW5lciDQrdC70LXQvNC10L3RgiDQsiDQutC+0YLQvtGA0L7QvCDQsdGD0LTQtdGCINC+0YLRgNC40YHQvtCy0LDQvSDQutC+0LzQv9C+0L3QtdC90YJcbiAqIEBwYXJhbSB7c3RyaW5nfSBwbGFjZSDQn9C+0LfQuNGG0LjRjyDQutC+0LzQv9C+0L3QtdC90YLQsCDQvtGC0L3QvtGB0LjRgtC10LvRjNC90L4g0LrQvtC90YLQtdC50L3QtdGA0LAuINCf0L4g0YPQvNC+0LvRh9Cw0L3QuNGOIC0gYGJlZm9yZWVuZGBcbiAqL1xuZnVuY3Rpb24gcmVuZGVyKGNvbXBvbmVudCwgY29udGFpbmVyLCBwbGFjZSA9IFJlbmRlclBvc2l0aW9uLkJFRk9SRUVORCkge1xuICBpZiAoIShjb21wb25lbnQgaW5zdGFuY2VvZiBBYnN0cmFjdFZpZXcpKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdDYW4gcmVuZGVyIG9ubHkgY29tcG9uZW50cycpO1xuICB9XG5cbiAgaWYgKGNvbnRhaW5lciA9PT0gbnVsbCkge1xuICAgIHRocm93IG5ldyBFcnJvcignQ29udGFpbmVyIGVsZW1lbnQgZG9lc25cXCd0IGV4aXN0Jyk7XG4gIH1cblxuICBjb250YWluZXIuaW5zZXJ0QWRqYWNlbnRFbGVtZW50KHBsYWNlLCBjb21wb25lbnQuZWxlbWVudCk7XG59XG5cbi8qKlxuICog0KTRg9C90LrRhtC40Y8g0LTQu9GPINC30LDQvNC10L3RiyDQvtC00L3QvtCz0L4g0LrQvtC80L/QvtC90LXQvdGC0LAg0L3QsCDQtNGA0YPQs9C+0LlcbiAqIEBwYXJhbSB7QWJzdHJhY3RWaWV3fSBuZXdDb21wb25lbnQg0JrQvtC80L/QvtC90LXQvdGCLCDQutC+0YLQvtGA0YvQuSDQvdGD0LbQvdC+INC/0L7QutCw0LfQsNGC0YxcbiAqIEBwYXJhbSB7QWJzdHJhY3RWaWV3fSBvbGRDb21wb25lbnQg0JrQvtC80L/QvtC90LXQvdGCLCDQutC+0YLQvtGA0YvQuSDQvdGD0LbQvdC+INGB0LrRgNGL0YLRjFxuICovXG5mdW5jdGlvbiByZXBsYWNlKG5ld0NvbXBvbmVudCwgb2xkQ29tcG9uZW50KSB7XG4gIGlmICghKG5ld0NvbXBvbmVudCBpbnN0YW5jZW9mIEFic3RyYWN0VmlldyAmJiBvbGRDb21wb25lbnQgaW5zdGFuY2VvZiBBYnN0cmFjdFZpZXcpKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdDYW4gcmVwbGFjZSBvbmx5IGNvbXBvbmVudHMnKTtcbiAgfVxuXG4gIGNvbnN0IG5ld0VsZW1lbnQgPSBuZXdDb21wb25lbnQuZWxlbWVudDtcbiAgY29uc3Qgb2xkRWxlbWVudCA9IG9sZENvbXBvbmVudC5lbGVtZW50O1xuXG4gIGNvbnN0IHBhcmVudCA9IG9sZEVsZW1lbnQucGFyZW50RWxlbWVudDtcblxuICBpZiAocGFyZW50ID09PSBudWxsKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdQYXJlbnQgZWxlbWVudCBkb2VzblxcJ3QgZXhpc3QnKTtcbiAgfVxuXG4gIHBhcmVudC5yZXBsYWNlQ2hpbGQobmV3RWxlbWVudCwgb2xkRWxlbWVudCk7XG59XG5cbi8qKlxuICog0KTRg9C90LrRhtC40Y8g0LTQu9GPINGD0LTQsNC70LXQvdC40Y8g0LrQvtC80L/QvtC90LXQvdGC0LBcbiAqIEBwYXJhbSB7QWJzdHJhY3RWaWV3fSBjb21wb25lbnQg0JrQvtC80L/QvtC90LXQvdGCLCDQutC+0YLQvtGA0YvQuSDQvdGD0LbQvdC+INGD0LTQsNC70LjRgtGMXG4gKi9cbmZ1bmN0aW9uIHJlbW92ZShjb21wb25lbnQpIHtcbiAgaWYgKGNvbXBvbmVudCA9PT0gbnVsbCkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGlmICghKGNvbXBvbmVudCBpbnN0YW5jZW9mIEFic3RyYWN0VmlldykpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0NhbiByZW1vdmUgb25seSBjb21wb25lbnRzJyk7XG4gIH1cblxuICBjb21wb25lbnQuZWxlbWVudC5yZW1vdmUoKTtcbiAgY29tcG9uZW50LnJlbW92ZUVsZW1lbnQoKTtcbn1cblxuZXhwb3J0IHtSZW5kZXJQb3NpdGlvbiwgY3JlYXRlRWxlbWVudCwgcmVuZGVyLCByZXBsYWNlLCByZW1vdmV9O1xuIiwiZXhwb3J0IGNvbnN0IFBPSU5UX1RZUEVTID0gW1xuICAndGF4aScsICdidXMnLCAndHJhaW4nLCAnc2hpcCcsICdkcml2ZScsICdmbGlnaHQnLCAnY2hlY2staW4nLCAnc2lnaHRzZWVpbmcnLCAncmVzdGF1cmFudCdcbl07XG5cbmV4cG9ydCBjb25zdCBGaWx0ZXJUeXBlID0ge1xuICBFVkVSWVRISU5HOiAnZXZlcnl0aGluZycsXG4gIEZVVFVSRTogJ2Z1dHVyZScsXG4gIFBSRVNFTlQ6ICdwcmVzZW50JyxcbiAgUEFTVDogJ3Bhc3QnXG59O1xuXG5leHBvcnQgY29uc3QgVXBkYXRlVHlwZSA9IHtcbiAgUEFUQ0g6ICdQQVRDSCcsXG4gIE1JTk9SOiAnTUlOT1InLFxuICBNQUpPUjogJ01BSk9SJyxcbiAgSU5JVDogJ0lOSVQnXG59O1xuXG5leHBvcnQgY29uc3QgVXNlckFjdGlvbiA9IHtcbiAgQUREX1BPSU5UOiAnQUREX1BPSU5UJyxcbiAgREVMRVRFX1BPSU5UOiAnREVMRVRFX1BPSU5UJyxcbiAgVVBEQVRFX1BPSU5UOiAnVVBEQVRFX1BPSU5UJ1xufTtcblxuZXhwb3J0IGNvbnN0IFNvcnRUeXBlID0ge1xuICBEQVk6ICdkYXknLFxuICBQUklDRTogJ3ByaWNlJyxcbiAgVElNRTogJ3RpbWUnXG59O1xuIiwiaW1wb3J0IGRheWpzIGZyb20gJ2RheWpzJztcbmltcG9ydCB7IEZpbHRlclR5cGUgfSBmcm9tICcuLi9jb25zdC5qcyc7XG5cbmV4cG9ydCBjb25zdCBmaWx0ZXIgPSB7XG4gIFtGaWx0ZXJUeXBlLkVWRVJZVEhJTkddOiAocG9pbnRzKSA9PiBwb2ludHMsXG4gIFtGaWx0ZXJUeXBlLkZVVFVSRV06IChwb2ludHMpID0+IHBvaW50cy5maWx0ZXIoKHBvaW50KSA9PiBkYXlqcyhwb2ludC5kYXRlRnJvbSkuaXNBZnRlcihkYXlqcygpKSksXG4gIFtGaWx0ZXJUeXBlLlBSRVNFTlRdOiAocG9pbnRzKSA9PiBwb2ludHMuZmlsdGVyKChwb2ludCkgPT5cbiAgICBkYXlqcyhwb2ludC5kYXRlRnJvbSkuaXNCZWZvcmUoZGF5anMoKSkgJiYgZGF5anMocG9pbnQuZGF0ZVRvKS5pc0FmdGVyKGRheWpzKCkpXG4gICksXG4gIFtGaWx0ZXJUeXBlLlBBU1RdOiAocG9pbnRzKSA9PiBwb2ludHMuZmlsdGVyKChwb2ludCkgPT4gZGF5anMocG9pbnQuZGF0ZVRvKS5pc0JlZm9yZShkYXlqcygpKSlcbn07XG4iLCJpbXBvcnQgQWJzdHJhY3RWaWV3IGZyb20gJy4uL2ZyYW1ld29yay92aWV3L2Fic3RyYWN0LXZpZXcuanMnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBGaWx0ZXJzVmlldyBleHRlbmRzIEFic3RyYWN0VmlldyB7XG4gICNmaWx0ZXJzID0gW107XG4gICNjdXJyZW50RmlsdGVyVHlwZSA9IG51bGw7XG4gICNoYW5kbGVGaWx0ZXJDaGFuZ2UgPSBudWxsO1xuXG4gIGNvbnN0cnVjdG9yKHsgZmlsdGVycywgY3VycmVudEZpbHRlclR5cGUsIG9uRmlsdGVyVHlwZUNoYW5nZSB9KSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLiNmaWx0ZXJzID0gZmlsdGVycztcbiAgICB0aGlzLiNjdXJyZW50RmlsdGVyVHlwZSA9IGN1cnJlbnRGaWx0ZXJUeXBlO1xuICAgIHRoaXMuI2hhbmRsZUZpbHRlckNoYW5nZSA9IG9uRmlsdGVyVHlwZUNoYW5nZTtcblxuICAgIHRoaXMuZWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCB0aGlzLiNmaWx0ZXJDaGFuZ2VIYW5kbGVyKTtcbiAgfVxuXG4gIGdldCB0ZW1wbGF0ZSgpIHtcbiAgICByZXR1cm4gYFxuICAgICAgPGZvcm0gY2xhc3M9XCJ0cmlwLWZpbHRlcnNcIj5cbiAgICAgICAgJHt0aGlzLiNmaWx0ZXJzLm1hcCgoZmlsdGVyKSA9PiBgXG4gICAgICAgICAgPGRpdiBjbGFzcz1cInRyaXAtZmlsdGVyc19fZmlsdGVyXCI+XG4gICAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgICAgaWQ9XCJmaWx0ZXItJHtmaWx0ZXIudHlwZX1cIlxuICAgICAgICAgICAgICBjbGFzcz1cInRyaXAtZmlsdGVyc19fZmlsdGVyLWlucHV0IHZpc3VhbGx5LWhpZGRlblwiXG4gICAgICAgICAgICAgIHR5cGU9XCJyYWRpb1wiXG4gICAgICAgICAgICAgIG5hbWU9XCJ0cmlwLWZpbHRlclwiXG4gICAgICAgICAgICAgIHZhbHVlPVwiJHtmaWx0ZXIudHlwZX1cIlxuICAgICAgICAgICAgICAke3RoaXMuI2N1cnJlbnRGaWx0ZXJUeXBlID09PSBmaWx0ZXIudHlwZSA/ICdjaGVja2VkJyA6ICcnfVxuICAgICAgICAgICAgICAke2ZpbHRlci5pc0Rpc2FibGVkID8gJ2Rpc2FibGVkJyA6ICcnfVxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgPGxhYmVsIGNsYXNzPVwidHJpcC1maWx0ZXJzX19maWx0ZXItbGFiZWxcIiBmb3I9XCJmaWx0ZXItJHtmaWx0ZXIudHlwZX1cIj5cbiAgICAgICAgICAgICAgJHtmaWx0ZXIubmFtZX1cbiAgICAgICAgICAgIDwvbGFiZWw+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIGApLmpvaW4oJycpfVxuICAgICAgPC9mb3JtPlxuICAgIGA7XG4gIH1cblxuICAjZmlsdGVyQ2hhbmdlSGFuZGxlciA9IChldnQpID0+IHtcbiAgICBpZiAoZXZ0LnRhcmdldC50YWdOYW1lID09PSAnSU5QVVQnKSB7XG4gICAgICB0aGlzLiNoYW5kbGVGaWx0ZXJDaGFuZ2UoZXZ0LnRhcmdldC52YWx1ZSk7XG4gICAgfVxuICB9O1xufVxuIiwiaW1wb3J0IEFic3RyYWN0VmlldyBmcm9tICcuLi9mcmFtZXdvcmsvdmlldy9hYnN0cmFjdC12aWV3LmpzJztcbmltcG9ydCB7IFNvcnRUeXBlIH0gZnJvbSAnLi4vY29uc3QuanMnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBTb3J0VmlldyBleHRlbmRzIEFic3RyYWN0VmlldyB7XG4gICNjdXJyZW50U29ydFR5cGUgPSBudWxsO1xuICAjaGFuZGxlU29ydFR5cGVDaGFuZ2UgPSBudWxsO1xuXG4gIGNvbnN0cnVjdG9yKHsgY3VycmVudFNvcnRUeXBlLCBvblNvcnRUeXBlQ2hhbmdlIH0pIHtcbiAgICBzdXBlcigpO1xuICAgIHRoaXMuI2N1cnJlbnRTb3J0VHlwZSA9IGN1cnJlbnRTb3J0VHlwZTtcbiAgICB0aGlzLiNoYW5kbGVTb3J0VHlwZUNoYW5nZSA9IG9uU29ydFR5cGVDaGFuZ2U7XG5cbiAgICB0aGlzLmVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCB0aGlzLiNzb3J0VHlwZUNoYW5nZUhhbmRsZXIpO1xuICB9XG5cbiAgZ2V0IHRlbXBsYXRlKCkge1xuICAgIHJldHVybiBgXG4gICAgICA8Zm9ybSBjbGFzcz1cInRyaXAtZXZlbnRzX190cmlwLXNvcnQgdHJpcC1zb3J0XCIgYWN0aW9uPVwiI1wiIG1ldGhvZD1cImdldFwiPlxuICAgICAgICA8ZGl2IGNsYXNzPVwidHJpcC1zb3J0X19pdGVtIHRyaXAtc29ydF9faXRlbS0tZGF5XCI+XG4gICAgICAgICAgPGlucHV0IGlkPVwic29ydC1kYXlcIiBjbGFzcz1cInRyaXAtc29ydF9faW5wdXQgdmlzdWFsbHktaGlkZGVuXCIgdHlwZT1cInJhZGlvXCIgbmFtZT1cInRyaXAtc29ydFwiIHZhbHVlPVwiZGF5XCJcbiAgICAgICAgICAgICR7dGhpcy4jY3VycmVudFNvcnRUeXBlID09PSBTb3J0VHlwZS5EQVkgPyAnY2hlY2tlZCcgOiAnJ30+XG4gICAgICAgICAgPGxhYmVsIGNsYXNzPVwidHJpcC1zb3J0X19idG5cIiBmb3I9XCJzb3J0LWRheVwiPkRheTwvbGFiZWw+XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8ZGl2IGNsYXNzPVwidHJpcC1zb3J0X19pdGVtIHRyaXAtc29ydF9faXRlbS0tZXZlbnRcIj5cbiAgICAgICAgICA8aW5wdXQgaWQ9XCJzb3J0LWV2ZW50XCIgY2xhc3M9XCJ0cmlwLXNvcnRfX2lucHV0IHZpc3VhbGx5LWhpZGRlblwiIHR5cGU9XCJyYWRpb1wiIG5hbWU9XCJ0cmlwLXNvcnRcIiB2YWx1ZT1cImV2ZW50XCIgZGlzYWJsZWQ+XG4gICAgICAgICAgPGxhYmVsIGNsYXNzPVwidHJpcC1zb3J0X19idG5cIiBmb3I9XCJzb3J0LWV2ZW50XCI+RXZlbnQ8L2xhYmVsPlxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPGRpdiBjbGFzcz1cInRyaXAtc29ydF9faXRlbSB0cmlwLXNvcnRfX2l0ZW0tLXRpbWVcIj5cbiAgICAgICAgICA8aW5wdXQgaWQ9XCJzb3J0LXRpbWVcIiBjbGFzcz1cInRyaXAtc29ydF9faW5wdXQgdmlzdWFsbHktaGlkZGVuXCIgdHlwZT1cInJhZGlvXCIgbmFtZT1cInRyaXAtc29ydFwiIHZhbHVlPVwidGltZVwiXG4gICAgICAgICAgICAke3RoaXMuI2N1cnJlbnRTb3J0VHlwZSA9PT0gU29ydFR5cGUuVElNRSA/ICdjaGVja2VkJyA6ICcnfT5cbiAgICAgICAgICA8bGFiZWwgY2xhc3M9XCJ0cmlwLXNvcnRfX2J0blwiIGZvcj1cInNvcnQtdGltZVwiPlRpbWU8L2xhYmVsPlxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPGRpdiBjbGFzcz1cInRyaXAtc29ydF9faXRlbSB0cmlwLXNvcnRfX2l0ZW0tLXByaWNlXCI+XG4gICAgICAgICAgPGlucHV0IGlkPVwic29ydC1wcmljZVwiIGNsYXNzPVwidHJpcC1zb3J0X19pbnB1dCB2aXN1YWxseS1oaWRkZW5cIiB0eXBlPVwicmFkaW9cIiBuYW1lPVwidHJpcC1zb3J0XCIgdmFsdWU9XCJwcmljZVwiXG4gICAgICAgICAgICAke3RoaXMuI2N1cnJlbnRTb3J0VHlwZSA9PT0gU29ydFR5cGUuUFJJQ0UgPyAnY2hlY2tlZCcgOiAnJ30+XG4gICAgICAgICAgPGxhYmVsIGNsYXNzPVwidHJpcC1zb3J0X19idG5cIiBmb3I9XCJzb3J0LXByaWNlXCI+UHJpY2U8L2xhYmVsPlxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPGRpdiBjbGFzcz1cInRyaXAtc29ydF9faXRlbSB0cmlwLXNvcnRfX2l0ZW0tLW9mZmVyXCI+XG4gICAgICAgICAgPGlucHV0IGlkPVwic29ydC1vZmZlclwiIGNsYXNzPVwidHJpcC1zb3J0X19pbnB1dCB2aXN1YWxseS1oaWRkZW5cIiB0eXBlPVwicmFkaW9cIiBuYW1lPVwidHJpcC1zb3J0XCIgdmFsdWU9XCJvZmZlclwiIGRpc2FibGVkPlxuICAgICAgICAgIDxsYWJlbCBjbGFzcz1cInRyaXAtc29ydF9fYnRuXCIgZm9yPVwic29ydC1vZmZlclwiPk9mZmVyczwvbGFiZWw+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9mb3JtPlxuICAgIGA7XG4gIH1cblxuICAjc29ydFR5cGVDaGFuZ2VIYW5kbGVyID0gKGV2dCkgPT4ge1xuICAgIGlmIChldnQudGFyZ2V0LnRhZ05hbWUgIT09ICdJTlBVVCcpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgdGhpcy4jaGFuZGxlU29ydFR5cGVDaGFuZ2UoZXZ0LnRhcmdldC52YWx1ZSk7XG4gIH07XG59XG4iLCJpbXBvcnQgQWJzdHJhY3RWaWV3IGZyb20gJy4uL2ZyYW1ld29yay92aWV3L2Fic3RyYWN0LXZpZXcuanMnO1xuaW1wb3J0IHsgRmlsdGVyVHlwZSB9IGZyb20gJy4uL2NvbnN0LmpzJztcblxuY29uc3QgRW1wdHlMaXN0VGV4dFR5cGUgPSB7XG4gIFtGaWx0ZXJUeXBlLkVWRVJZVEhJTkddOiAnQ2xpY2sgTmV3IEV2ZW50IHRvIGNyZWF0ZSB5b3VyIGZpcnN0IHBvaW50JyxcbiAgW0ZpbHRlclR5cGUuRlVUVVJFXTogJ1RoZXJlIGFyZSBubyBmdXR1cmUgZXZlbnRzIG5vdycsXG4gIFtGaWx0ZXJUeXBlLlBSRVNFTlRdOiAnVGhlcmUgYXJlIG5vIHByZXNlbnQgZXZlbnRzIG5vdycsXG4gIFtGaWx0ZXJUeXBlLlBBU1RdOiAnVGhlcmUgYXJlIG5vIHBhc3QgZXZlbnRzIG5vdydcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEVtcHR5TGlzdFZpZXcgZXh0ZW5kcyBBYnN0cmFjdFZpZXcge1xuICAjZmlsdGVyVHlwZSA9IG51bGw7XG5cbiAgY29uc3RydWN0b3IoZmlsdGVyVHlwZSkge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy4jZmlsdGVyVHlwZSA9IGZpbHRlclR5cGU7XG4gIH1cblxuICBnZXQgdGVtcGxhdGUoKSB7XG4gICAgcmV0dXJuIGBcbiAgICAgIDxwIGNsYXNzPVwidHJpcC1ldmVudHNfX21zZ1wiPlxuICAgICAgICAke0VtcHR5TGlzdFRleHRUeXBlW3RoaXMuI2ZpbHRlclR5cGVdfVxuICAgICAgPC9wPlxuICAgIGA7XG4gIH1cbn1cbiIsImltcG9ydCBBYnN0cmFjdFZpZXcgZnJvbSAnLi9hYnN0cmFjdC12aWV3LmpzJztcblxuLyoqXG4gKiDQkNCx0YHRgtGA0LDQutGC0L3Ri9C5INC60LvQsNGB0YEg0L/RgNC10LTRgdGC0LDQstC70LXQvdC40Y8g0YEg0YHQvtGB0YLQvtGP0L3QuNC10LxcbiAqL1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQWJzdHJhY3RTdGF0ZWZ1bFZpZXcgZXh0ZW5kcyBBYnN0cmFjdFZpZXcge1xuICAvKiogQHR5cGUge09iamVjdH0g0J7QsdGK0LXQutGCINGB0L7RgdGC0L7Rj9C90LjRjyAqL1xuICBfc3RhdGUgPSB7fTtcblxuICAvKipcbiAgICog0JzQtdGC0L7QtCDQtNC70Y8g0L7QsdC90L7QstC70LXQvdC40Y8g0YHQvtGB0YLQvtGP0L3QuNGPINC4INC/0LXRgNC10YDQuNGB0L7QstC60Lgg0Y3Qu9C10LzQtdC90YLQsFxuICAgKiBAcGFyYW0ge09iamVjdH0gdXBkYXRlINCe0LHRitC10LrRgiDRgSDQvtCx0L3QvtCy0LvRkdC90L3QvtC5INGH0LDRgdGC0YzRjiDRgdC+0YHRgtC+0Y/QvdC40Y9cbiAgICovXG4gIHVwZGF0ZUVsZW1lbnQodXBkYXRlKSB7XG4gICAgaWYgKCF1cGRhdGUpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICB0aGlzLl9zZXRTdGF0ZSh1cGRhdGUpO1xuXG4gICAgdGhpcy4jcmVyZW5kZXJFbGVtZW50KCk7XG4gIH1cblxuICAvKipcbiAgICog0JzQtdGC0L7QtCDQtNC70Y8g0LLQvtGB0YHRgtCw0L3QvtCy0LvQtdC90LjRjyDQvtCx0YDQsNCx0L7RgtGH0LjQutC+0LIg0L/QvtGB0LvQtSDQv9C10YDQtdGA0LjRgdC+0LLQutC4INGN0LvQtdC80LXQvdGC0LBcbiAgICogQGFic3RyYWN0XG4gICAqL1xuICBfcmVzdG9yZUhhbmRsZXJzKCkge1xuICAgIHRocm93IG5ldyBFcnJvcignQWJzdHJhY3QgbWV0aG9kIG5vdCBpbXBsZW1lbnRlZDogcmVzdG9yZUhhbmRsZXJzJyk7XG4gIH1cblxuICAvKipcbiAgICog0JzQtdGC0L7QtCDQtNC70Y8g0L7QsdC90L7QstC70LXQvdC40Y8g0YHQvtGB0YLQvtGP0L3QuNGPXG4gICAqIEBwYXJhbSB7T2JqZWN0fSB1cGRhdGUg0J7QsdGK0LXQutGCINGBINC+0LHQvdC+0LLQu9GR0L3QvdC+0Lkg0YfQsNGB0YLRjNGOINGB0L7RgdGC0L7Rj9C90LjRj1xuICAgKi9cbiAgX3NldFN0YXRlKHVwZGF0ZSkge1xuICAgIHRoaXMuX3N0YXRlID0gc3RydWN0dXJlZENsb25lKHsuLi50aGlzLl9zdGF0ZSwgLi4udXBkYXRlfSk7XG4gIH1cblxuICAvKiog0JzQtdGC0L7QtCDQtNC70Y8g0L/QtdGA0LXRgNC40YHQvtCy0LrQuCDRjdC70LXQvNC10L3RgtCwICovXG4gICNyZXJlbmRlckVsZW1lbnQoKSB7XG4gICAgY29uc3QgcHJldkVsZW1lbnQgPSB0aGlzLmVsZW1lbnQ7XG4gICAgY29uc3QgcGFyZW50ID0gcHJldkVsZW1lbnQucGFyZW50RWxlbWVudDtcbiAgICB0aGlzLnJlbW92ZUVsZW1lbnQoKTtcblxuICAgIGNvbnN0IG5ld0VsZW1lbnQgPSB0aGlzLmVsZW1lbnQ7XG5cbiAgICBwYXJlbnQucmVwbGFjZUNoaWxkKG5ld0VsZW1lbnQsIHByZXZFbGVtZW50KTtcblxuICAgIHRoaXMuX3Jlc3RvcmVIYW5kbGVycygpO1xuICB9XG59XG4iLCJleHBvcnQgdmFyIEhPT0tTID0gW1xuICAgIFwib25DaGFuZ2VcIixcbiAgICBcIm9uQ2xvc2VcIixcbiAgICBcIm9uRGF5Q3JlYXRlXCIsXG4gICAgXCJvbkRlc3Ryb3lcIixcbiAgICBcIm9uS2V5RG93blwiLFxuICAgIFwib25Nb250aENoYW5nZVwiLFxuICAgIFwib25PcGVuXCIsXG4gICAgXCJvblBhcnNlQ29uZmlnXCIsXG4gICAgXCJvblJlYWR5XCIsXG4gICAgXCJvblZhbHVlVXBkYXRlXCIsXG4gICAgXCJvblllYXJDaGFuZ2VcIixcbiAgICBcIm9uUHJlQ2FsZW5kYXJQb3NpdGlvblwiLFxuXTtcbmV4cG9ydCB2YXIgZGVmYXVsdHMgPSB7XG4gICAgX2Rpc2FibGU6IFtdLFxuICAgIGFsbG93SW5wdXQ6IGZhbHNlLFxuICAgIGFsbG93SW52YWxpZFByZWxvYWQ6IGZhbHNlLFxuICAgIGFsdEZvcm1hdDogXCJGIGosIFlcIixcbiAgICBhbHRJbnB1dDogZmFsc2UsXG4gICAgYWx0SW5wdXRDbGFzczogXCJmb3JtLWNvbnRyb2wgaW5wdXRcIixcbiAgICBhbmltYXRlOiB0eXBlb2Ygd2luZG93ID09PSBcIm9iamVjdFwiICYmXG4gICAgICAgIHdpbmRvdy5uYXZpZ2F0b3IudXNlckFnZW50LmluZGV4T2YoXCJNU0lFXCIpID09PSAtMSxcbiAgICBhcmlhRGF0ZUZvcm1hdDogXCJGIGosIFlcIixcbiAgICBhdXRvRmlsbERlZmF1bHRUaW1lOiB0cnVlLFxuICAgIGNsaWNrT3BlbnM6IHRydWUsXG4gICAgY2xvc2VPblNlbGVjdDogdHJ1ZSxcbiAgICBjb25qdW5jdGlvbjogXCIsIFwiLFxuICAgIGRhdGVGb3JtYXQ6IFwiWS1tLWRcIixcbiAgICBkZWZhdWx0SG91cjogMTIsXG4gICAgZGVmYXVsdE1pbnV0ZTogMCxcbiAgICBkZWZhdWx0U2Vjb25kczogMCxcbiAgICBkaXNhYmxlOiBbXSxcbiAgICBkaXNhYmxlTW9iaWxlOiBmYWxzZSxcbiAgICBlbmFibGVTZWNvbmRzOiBmYWxzZSxcbiAgICBlbmFibGVUaW1lOiBmYWxzZSxcbiAgICBlcnJvckhhbmRsZXI6IGZ1bmN0aW9uIChlcnIpIHtcbiAgICAgICAgcmV0dXJuIHR5cGVvZiBjb25zb2xlICE9PSBcInVuZGVmaW5lZFwiICYmIGNvbnNvbGUud2FybihlcnIpO1xuICAgIH0sXG4gICAgZ2V0V2VlazogZnVuY3Rpb24gKGdpdmVuRGF0ZSkge1xuICAgICAgICB2YXIgZGF0ZSA9IG5ldyBEYXRlKGdpdmVuRGF0ZS5nZXRUaW1lKCkpO1xuICAgICAgICBkYXRlLnNldEhvdXJzKDAsIDAsIDAsIDApO1xuICAgICAgICBkYXRlLnNldERhdGUoZGF0ZS5nZXREYXRlKCkgKyAzIC0gKChkYXRlLmdldERheSgpICsgNikgJSA3KSk7XG4gICAgICAgIHZhciB3ZWVrMSA9IG5ldyBEYXRlKGRhdGUuZ2V0RnVsbFllYXIoKSwgMCwgNCk7XG4gICAgICAgIHJldHVybiAoMSArXG4gICAgICAgICAgICBNYXRoLnJvdW5kKCgoZGF0ZS5nZXRUaW1lKCkgLSB3ZWVrMS5nZXRUaW1lKCkpIC8gODY0MDAwMDAgLVxuICAgICAgICAgICAgICAgIDMgK1xuICAgICAgICAgICAgICAgICgod2VlazEuZ2V0RGF5KCkgKyA2KSAlIDcpKSAvXG4gICAgICAgICAgICAgICAgNykpO1xuICAgIH0sXG4gICAgaG91ckluY3JlbWVudDogMSxcbiAgICBpZ25vcmVkRm9jdXNFbGVtZW50czogW10sXG4gICAgaW5saW5lOiBmYWxzZSxcbiAgICBsb2NhbGU6IFwiZGVmYXVsdFwiLFxuICAgIG1pbnV0ZUluY3JlbWVudDogNSxcbiAgICBtb2RlOiBcInNpbmdsZVwiLFxuICAgIG1vbnRoU2VsZWN0b3JUeXBlOiBcImRyb3Bkb3duXCIsXG4gICAgbmV4dEFycm93OiBcIjxzdmcgdmVyc2lvbj0nMS4xJyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHhtbG5zOnhsaW5rPSdodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rJyB2aWV3Qm94PScwIDAgMTcgMTcnPjxnPjwvZz48cGF0aCBkPSdNMTMuMjA3IDguNDcybC03Ljg1NCA3Ljg1NC0wLjcwNy0wLjcwNyA3LjE0Ni03LjE0Ni03LjE0Ni03LjE0OCAwLjcwNy0wLjcwNyA3Ljg1NCA3Ljg1NHonIC8+PC9zdmc+XCIsXG4gICAgbm9DYWxlbmRhcjogZmFsc2UsXG4gICAgbm93OiBuZXcgRGF0ZSgpLFxuICAgIG9uQ2hhbmdlOiBbXSxcbiAgICBvbkNsb3NlOiBbXSxcbiAgICBvbkRheUNyZWF0ZTogW10sXG4gICAgb25EZXN0cm95OiBbXSxcbiAgICBvbktleURvd246IFtdLFxuICAgIG9uTW9udGhDaGFuZ2U6IFtdLFxuICAgIG9uT3BlbjogW10sXG4gICAgb25QYXJzZUNvbmZpZzogW10sXG4gICAgb25SZWFkeTogW10sXG4gICAgb25WYWx1ZVVwZGF0ZTogW10sXG4gICAgb25ZZWFyQ2hhbmdlOiBbXSxcbiAgICBvblByZUNhbGVuZGFyUG9zaXRpb246IFtdLFxuICAgIHBsdWdpbnM6IFtdLFxuICAgIHBvc2l0aW9uOiBcImF1dG9cIixcbiAgICBwb3NpdGlvbkVsZW1lbnQ6IHVuZGVmaW5lZCxcbiAgICBwcmV2QXJyb3c6IFwiPHN2ZyB2ZXJzaW9uPScxLjEnIHhtbG5zPSdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZycgeG1sbnM6eGxpbms9J2h0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsnIHZpZXdCb3g9JzAgMCAxNyAxNyc+PGc+PC9nPjxwYXRoIGQ9J001LjIwNyA4LjQ3MWw3LjE0NiA3LjE0Ny0wLjcwNyAwLjcwNy03Ljg1My03Ljg1NCA3Ljg1NC03Ljg1MyAwLjcwNyAwLjcwNy03LjE0NyA3LjE0NnonIC8+PC9zdmc+XCIsXG4gICAgc2hvcnRoYW5kQ3VycmVudE1vbnRoOiBmYWxzZSxcbiAgICBzaG93TW9udGhzOiAxLFxuICAgIHN0YXRpYzogZmFsc2UsXG4gICAgdGltZV8yNGhyOiBmYWxzZSxcbiAgICB3ZWVrTnVtYmVyczogZmFsc2UsXG4gICAgd3JhcDogZmFsc2UsXG59O1xuIiwiZXhwb3J0IHZhciBlbmdsaXNoID0ge1xuICAgIHdlZWtkYXlzOiB7XG4gICAgICAgIHNob3J0aGFuZDogW1wiU3VuXCIsIFwiTW9uXCIsIFwiVHVlXCIsIFwiV2VkXCIsIFwiVGh1XCIsIFwiRnJpXCIsIFwiU2F0XCJdLFxuICAgICAgICBsb25naGFuZDogW1xuICAgICAgICAgICAgXCJTdW5kYXlcIixcbiAgICAgICAgICAgIFwiTW9uZGF5XCIsXG4gICAgICAgICAgICBcIlR1ZXNkYXlcIixcbiAgICAgICAgICAgIFwiV2VkbmVzZGF5XCIsXG4gICAgICAgICAgICBcIlRodXJzZGF5XCIsXG4gICAgICAgICAgICBcIkZyaWRheVwiLFxuICAgICAgICAgICAgXCJTYXR1cmRheVwiLFxuICAgICAgICBdLFxuICAgIH0sXG4gICAgbW9udGhzOiB7XG4gICAgICAgIHNob3J0aGFuZDogW1xuICAgICAgICAgICAgXCJKYW5cIixcbiAgICAgICAgICAgIFwiRmViXCIsXG4gICAgICAgICAgICBcIk1hclwiLFxuICAgICAgICAgICAgXCJBcHJcIixcbiAgICAgICAgICAgIFwiTWF5XCIsXG4gICAgICAgICAgICBcIkp1blwiLFxuICAgICAgICAgICAgXCJKdWxcIixcbiAgICAgICAgICAgIFwiQXVnXCIsXG4gICAgICAgICAgICBcIlNlcFwiLFxuICAgICAgICAgICAgXCJPY3RcIixcbiAgICAgICAgICAgIFwiTm92XCIsXG4gICAgICAgICAgICBcIkRlY1wiLFxuICAgICAgICBdLFxuICAgICAgICBsb25naGFuZDogW1xuICAgICAgICAgICAgXCJKYW51YXJ5XCIsXG4gICAgICAgICAgICBcIkZlYnJ1YXJ5XCIsXG4gICAgICAgICAgICBcIk1hcmNoXCIsXG4gICAgICAgICAgICBcIkFwcmlsXCIsXG4gICAgICAgICAgICBcIk1heVwiLFxuICAgICAgICAgICAgXCJKdW5lXCIsXG4gICAgICAgICAgICBcIkp1bHlcIixcbiAgICAgICAgICAgIFwiQXVndXN0XCIsXG4gICAgICAgICAgICBcIlNlcHRlbWJlclwiLFxuICAgICAgICAgICAgXCJPY3RvYmVyXCIsXG4gICAgICAgICAgICBcIk5vdmVtYmVyXCIsXG4gICAgICAgICAgICBcIkRlY2VtYmVyXCIsXG4gICAgICAgIF0sXG4gICAgfSxcbiAgICBkYXlzSW5Nb250aDogWzMxLCAyOCwgMzEsIDMwLCAzMSwgMzAsIDMxLCAzMSwgMzAsIDMxLCAzMCwgMzFdLFxuICAgIGZpcnN0RGF5T2ZXZWVrOiAwLFxuICAgIG9yZGluYWw6IGZ1bmN0aW9uIChudGgpIHtcbiAgICAgICAgdmFyIHMgPSBudGggJSAxMDA7XG4gICAgICAgIGlmIChzID4gMyAmJiBzIDwgMjEpXG4gICAgICAgICAgICByZXR1cm4gXCJ0aFwiO1xuICAgICAgICBzd2l0Y2ggKHMgJSAxMCkge1xuICAgICAgICAgICAgY2FzZSAxOlxuICAgICAgICAgICAgICAgIHJldHVybiBcInN0XCI7XG4gICAgICAgICAgICBjYXNlIDI6XG4gICAgICAgICAgICAgICAgcmV0dXJuIFwibmRcIjtcbiAgICAgICAgICAgIGNhc2UgMzpcbiAgICAgICAgICAgICAgICByZXR1cm4gXCJyZFwiO1xuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICByZXR1cm4gXCJ0aFwiO1xuICAgICAgICB9XG4gICAgfSxcbiAgICByYW5nZVNlcGFyYXRvcjogXCIgdG8gXCIsXG4gICAgd2Vla0FiYnJldmlhdGlvbjogXCJXa1wiLFxuICAgIHNjcm9sbFRpdGxlOiBcIlNjcm9sbCB0byBpbmNyZW1lbnRcIixcbiAgICB0b2dnbGVUaXRsZTogXCJDbGljayB0byB0b2dnbGVcIixcbiAgICBhbVBNOiBbXCJBTVwiLCBcIlBNXCJdLFxuICAgIHllYXJBcmlhTGFiZWw6IFwiWWVhclwiLFxuICAgIG1vbnRoQXJpYUxhYmVsOiBcIk1vbnRoXCIsXG4gICAgaG91ckFyaWFMYWJlbDogXCJIb3VyXCIsXG4gICAgbWludXRlQXJpYUxhYmVsOiBcIk1pbnV0ZVwiLFxuICAgIHRpbWVfMjRocjogZmFsc2UsXG59O1xuZXhwb3J0IGRlZmF1bHQgZW5nbGlzaDtcbiIsImV4cG9ydCB2YXIgcGFkID0gZnVuY3Rpb24gKG51bWJlciwgbGVuZ3RoKSB7XG4gICAgaWYgKGxlbmd0aCA9PT0gdm9pZCAwKSB7IGxlbmd0aCA9IDI7IH1cbiAgICByZXR1cm4gKFwiMDAwXCIgKyBudW1iZXIpLnNsaWNlKGxlbmd0aCAqIC0xKTtcbn07XG5leHBvcnQgdmFyIGludCA9IGZ1bmN0aW9uIChib29sKSB7IHJldHVybiAoYm9vbCA9PT0gdHJ1ZSA/IDEgOiAwKTsgfTtcbmV4cG9ydCBmdW5jdGlvbiBkZWJvdW5jZShmbiwgd2FpdCkge1xuICAgIHZhciB0O1xuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICAgIHZhciBhcmdzID0gYXJndW1lbnRzO1xuICAgICAgICBjbGVhclRpbWVvdXQodCk7XG4gICAgICAgIHQgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsgcmV0dXJuIGZuLmFwcGx5KF90aGlzLCBhcmdzKTsgfSwgd2FpdCk7XG4gICAgfTtcbn1cbmV4cG9ydCB2YXIgYXJyYXlpZnkgPSBmdW5jdGlvbiAob2JqKSB7XG4gICAgcmV0dXJuIG9iaiBpbnN0YW5jZW9mIEFycmF5ID8gb2JqIDogW29ial07XG59O1xuIiwiZXhwb3J0IGZ1bmN0aW9uIHRvZ2dsZUNsYXNzKGVsZW0sIGNsYXNzTmFtZSwgYm9vbCkge1xuICAgIGlmIChib29sID09PSB0cnVlKVxuICAgICAgICByZXR1cm4gZWxlbS5jbGFzc0xpc3QuYWRkKGNsYXNzTmFtZSk7XG4gICAgZWxlbS5jbGFzc0xpc3QucmVtb3ZlKGNsYXNzTmFtZSk7XG59XG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlRWxlbWVudCh0YWcsIGNsYXNzTmFtZSwgY29udGVudCkge1xuICAgIHZhciBlID0gd2luZG93LmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQodGFnKTtcbiAgICBjbGFzc05hbWUgPSBjbGFzc05hbWUgfHwgXCJcIjtcbiAgICBjb250ZW50ID0gY29udGVudCB8fCBcIlwiO1xuICAgIGUuY2xhc3NOYW1lID0gY2xhc3NOYW1lO1xuICAgIGlmIChjb250ZW50ICE9PSB1bmRlZmluZWQpXG4gICAgICAgIGUudGV4dENvbnRlbnQgPSBjb250ZW50O1xuICAgIHJldHVybiBlO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGNsZWFyTm9kZShub2RlKSB7XG4gICAgd2hpbGUgKG5vZGUuZmlyc3RDaGlsZClcbiAgICAgICAgbm9kZS5yZW1vdmVDaGlsZChub2RlLmZpcnN0Q2hpbGQpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGZpbmRQYXJlbnQobm9kZSwgY29uZGl0aW9uKSB7XG4gICAgaWYgKGNvbmRpdGlvbihub2RlKSlcbiAgICAgICAgcmV0dXJuIG5vZGU7XG4gICAgZWxzZSBpZiAobm9kZS5wYXJlbnROb2RlKVxuICAgICAgICByZXR1cm4gZmluZFBhcmVudChub2RlLnBhcmVudE5vZGUsIGNvbmRpdGlvbik7XG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcbn1cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVOdW1iZXJJbnB1dChpbnB1dENsYXNzTmFtZSwgb3B0cykge1xuICAgIHZhciB3cmFwcGVyID0gY3JlYXRlRWxlbWVudChcImRpdlwiLCBcIm51bUlucHV0V3JhcHBlclwiKSwgbnVtSW5wdXQgPSBjcmVhdGVFbGVtZW50KFwiaW5wdXRcIiwgXCJudW1JbnB1dCBcIiArIGlucHV0Q2xhc3NOYW1lKSwgYXJyb3dVcCA9IGNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsIFwiYXJyb3dVcFwiKSwgYXJyb3dEb3duID0gY3JlYXRlRWxlbWVudChcInNwYW5cIiwgXCJhcnJvd0Rvd25cIik7XG4gICAgaWYgKG5hdmlnYXRvci51c2VyQWdlbnQuaW5kZXhPZihcIk1TSUUgOS4wXCIpID09PSAtMSkge1xuICAgICAgICBudW1JbnB1dC50eXBlID0gXCJudW1iZXJcIjtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIG51bUlucHV0LnR5cGUgPSBcInRleHRcIjtcbiAgICAgICAgbnVtSW5wdXQucGF0dGVybiA9IFwiXFxcXGQqXCI7XG4gICAgfVxuICAgIGlmIChvcHRzICE9PSB1bmRlZmluZWQpXG4gICAgICAgIGZvciAodmFyIGtleSBpbiBvcHRzKVxuICAgICAgICAgICAgbnVtSW5wdXQuc2V0QXR0cmlidXRlKGtleSwgb3B0c1trZXldKTtcbiAgICB3cmFwcGVyLmFwcGVuZENoaWxkKG51bUlucHV0KTtcbiAgICB3cmFwcGVyLmFwcGVuZENoaWxkKGFycm93VXApO1xuICAgIHdyYXBwZXIuYXBwZW5kQ2hpbGQoYXJyb3dEb3duKTtcbiAgICByZXR1cm4gd3JhcHBlcjtcbn1cbmV4cG9ydCBmdW5jdGlvbiBnZXRFdmVudFRhcmdldChldmVudCkge1xuICAgIHRyeSB7XG4gICAgICAgIGlmICh0eXBlb2YgZXZlbnQuY29tcG9zZWRQYXRoID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgICAgIHZhciBwYXRoID0gZXZlbnQuY29tcG9zZWRQYXRoKCk7XG4gICAgICAgICAgICByZXR1cm4gcGF0aFswXTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZXZlbnQudGFyZ2V0O1xuICAgIH1cbiAgICBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgcmV0dXJuIGV2ZW50LnRhcmdldDtcbiAgICB9XG59XG4iLCJpbXBvcnQgeyBpbnQsIHBhZCB9IGZyb20gXCIuLi91dGlsc1wiO1xudmFyIGRvTm90aGluZyA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHVuZGVmaW5lZDsgfTtcbmV4cG9ydCB2YXIgbW9udGhUb1N0ciA9IGZ1bmN0aW9uIChtb250aE51bWJlciwgc2hvcnRoYW5kLCBsb2NhbGUpIHsgcmV0dXJuIGxvY2FsZS5tb250aHNbc2hvcnRoYW5kID8gXCJzaG9ydGhhbmRcIiA6IFwibG9uZ2hhbmRcIl1bbW9udGhOdW1iZXJdOyB9O1xuZXhwb3J0IHZhciByZXZGb3JtYXQgPSB7XG4gICAgRDogZG9Ob3RoaW5nLFxuICAgIEY6IGZ1bmN0aW9uIChkYXRlT2JqLCBtb250aE5hbWUsIGxvY2FsZSkge1xuICAgICAgICBkYXRlT2JqLnNldE1vbnRoKGxvY2FsZS5tb250aHMubG9uZ2hhbmQuaW5kZXhPZihtb250aE5hbWUpKTtcbiAgICB9LFxuICAgIEc6IGZ1bmN0aW9uIChkYXRlT2JqLCBob3VyKSB7XG4gICAgICAgIGRhdGVPYmouc2V0SG91cnMoKGRhdGVPYmouZ2V0SG91cnMoKSA+PSAxMiA/IDEyIDogMCkgKyBwYXJzZUZsb2F0KGhvdXIpKTtcbiAgICB9LFxuICAgIEg6IGZ1bmN0aW9uIChkYXRlT2JqLCBob3VyKSB7XG4gICAgICAgIGRhdGVPYmouc2V0SG91cnMocGFyc2VGbG9hdChob3VyKSk7XG4gICAgfSxcbiAgICBKOiBmdW5jdGlvbiAoZGF0ZU9iaiwgZGF5KSB7XG4gICAgICAgIGRhdGVPYmouc2V0RGF0ZShwYXJzZUZsb2F0KGRheSkpO1xuICAgIH0sXG4gICAgSzogZnVuY3Rpb24gKGRhdGVPYmosIGFtUE0sIGxvY2FsZSkge1xuICAgICAgICBkYXRlT2JqLnNldEhvdXJzKChkYXRlT2JqLmdldEhvdXJzKCkgJSAxMikgK1xuICAgICAgICAgICAgMTIgKiBpbnQobmV3IFJlZ0V4cChsb2NhbGUuYW1QTVsxXSwgXCJpXCIpLnRlc3QoYW1QTSkpKTtcbiAgICB9LFxuICAgIE06IGZ1bmN0aW9uIChkYXRlT2JqLCBzaG9ydE1vbnRoLCBsb2NhbGUpIHtcbiAgICAgICAgZGF0ZU9iai5zZXRNb250aChsb2NhbGUubW9udGhzLnNob3J0aGFuZC5pbmRleE9mKHNob3J0TW9udGgpKTtcbiAgICB9LFxuICAgIFM6IGZ1bmN0aW9uIChkYXRlT2JqLCBzZWNvbmRzKSB7XG4gICAgICAgIGRhdGVPYmouc2V0U2Vjb25kcyhwYXJzZUZsb2F0KHNlY29uZHMpKTtcbiAgICB9LFxuICAgIFU6IGZ1bmN0aW9uIChfLCB1bml4U2Vjb25kcykgeyByZXR1cm4gbmV3IERhdGUocGFyc2VGbG9hdCh1bml4U2Vjb25kcykgKiAxMDAwKTsgfSxcbiAgICBXOiBmdW5jdGlvbiAoZGF0ZU9iaiwgd2Vla051bSwgbG9jYWxlKSB7XG4gICAgICAgIHZhciB3ZWVrTnVtYmVyID0gcGFyc2VJbnQod2Vla051bSk7XG4gICAgICAgIHZhciBkYXRlID0gbmV3IERhdGUoZGF0ZU9iai5nZXRGdWxsWWVhcigpLCAwLCAyICsgKHdlZWtOdW1iZXIgLSAxKSAqIDcsIDAsIDAsIDAsIDApO1xuICAgICAgICBkYXRlLnNldERhdGUoZGF0ZS5nZXREYXRlKCkgLSBkYXRlLmdldERheSgpICsgbG9jYWxlLmZpcnN0RGF5T2ZXZWVrKTtcbiAgICAgICAgcmV0dXJuIGRhdGU7XG4gICAgfSxcbiAgICBZOiBmdW5jdGlvbiAoZGF0ZU9iaiwgeWVhcikge1xuICAgICAgICBkYXRlT2JqLnNldEZ1bGxZZWFyKHBhcnNlRmxvYXQoeWVhcikpO1xuICAgIH0sXG4gICAgWjogZnVuY3Rpb24gKF8sIElTT0RhdGUpIHsgcmV0dXJuIG5ldyBEYXRlKElTT0RhdGUpOyB9LFxuICAgIGQ6IGZ1bmN0aW9uIChkYXRlT2JqLCBkYXkpIHtcbiAgICAgICAgZGF0ZU9iai5zZXREYXRlKHBhcnNlRmxvYXQoZGF5KSk7XG4gICAgfSxcbiAgICBoOiBmdW5jdGlvbiAoZGF0ZU9iaiwgaG91cikge1xuICAgICAgICBkYXRlT2JqLnNldEhvdXJzKChkYXRlT2JqLmdldEhvdXJzKCkgPj0gMTIgPyAxMiA6IDApICsgcGFyc2VGbG9hdChob3VyKSk7XG4gICAgfSxcbiAgICBpOiBmdW5jdGlvbiAoZGF0ZU9iaiwgbWludXRlcykge1xuICAgICAgICBkYXRlT2JqLnNldE1pbnV0ZXMocGFyc2VGbG9hdChtaW51dGVzKSk7XG4gICAgfSxcbiAgICBqOiBmdW5jdGlvbiAoZGF0ZU9iaiwgZGF5KSB7XG4gICAgICAgIGRhdGVPYmouc2V0RGF0ZShwYXJzZUZsb2F0KGRheSkpO1xuICAgIH0sXG4gICAgbDogZG9Ob3RoaW5nLFxuICAgIG06IGZ1bmN0aW9uIChkYXRlT2JqLCBtb250aCkge1xuICAgICAgICBkYXRlT2JqLnNldE1vbnRoKHBhcnNlRmxvYXQobW9udGgpIC0gMSk7XG4gICAgfSxcbiAgICBuOiBmdW5jdGlvbiAoZGF0ZU9iaiwgbW9udGgpIHtcbiAgICAgICAgZGF0ZU9iai5zZXRNb250aChwYXJzZUZsb2F0KG1vbnRoKSAtIDEpO1xuICAgIH0sXG4gICAgczogZnVuY3Rpb24gKGRhdGVPYmosIHNlY29uZHMpIHtcbiAgICAgICAgZGF0ZU9iai5zZXRTZWNvbmRzKHBhcnNlRmxvYXQoc2Vjb25kcykpO1xuICAgIH0sXG4gICAgdTogZnVuY3Rpb24gKF8sIHVuaXhNaWxsU2Vjb25kcykge1xuICAgICAgICByZXR1cm4gbmV3IERhdGUocGFyc2VGbG9hdCh1bml4TWlsbFNlY29uZHMpKTtcbiAgICB9LFxuICAgIHc6IGRvTm90aGluZyxcbiAgICB5OiBmdW5jdGlvbiAoZGF0ZU9iaiwgeWVhcikge1xuICAgICAgICBkYXRlT2JqLnNldEZ1bGxZZWFyKDIwMDAgKyBwYXJzZUZsb2F0KHllYXIpKTtcbiAgICB9LFxufTtcbmV4cG9ydCB2YXIgdG9rZW5SZWdleCA9IHtcbiAgICBEOiBcIlwiLFxuICAgIEY6IFwiXCIsXG4gICAgRzogXCIoXFxcXGRcXFxcZHxcXFxcZClcIixcbiAgICBIOiBcIihcXFxcZFxcXFxkfFxcXFxkKVwiLFxuICAgIEo6IFwiKFxcXFxkXFxcXGR8XFxcXGQpXFxcXHcrXCIsXG4gICAgSzogXCJcIixcbiAgICBNOiBcIlwiLFxuICAgIFM6IFwiKFxcXFxkXFxcXGR8XFxcXGQpXCIsXG4gICAgVTogXCIoLispXCIsXG4gICAgVzogXCIoXFxcXGRcXFxcZHxcXFxcZClcIixcbiAgICBZOiBcIihcXFxcZHs0fSlcIixcbiAgICBaOiBcIiguKylcIixcbiAgICBkOiBcIihcXFxcZFxcXFxkfFxcXFxkKVwiLFxuICAgIGg6IFwiKFxcXFxkXFxcXGR8XFxcXGQpXCIsXG4gICAgaTogXCIoXFxcXGRcXFxcZHxcXFxcZClcIixcbiAgICBqOiBcIihcXFxcZFxcXFxkfFxcXFxkKVwiLFxuICAgIGw6IFwiXCIsXG4gICAgbTogXCIoXFxcXGRcXFxcZHxcXFxcZClcIixcbiAgICBuOiBcIihcXFxcZFxcXFxkfFxcXFxkKVwiLFxuICAgIHM6IFwiKFxcXFxkXFxcXGR8XFxcXGQpXCIsXG4gICAgdTogXCIoLispXCIsXG4gICAgdzogXCIoXFxcXGRcXFxcZHxcXFxcZClcIixcbiAgICB5OiBcIihcXFxcZHsyfSlcIixcbn07XG5leHBvcnQgdmFyIGZvcm1hdHMgPSB7XG4gICAgWjogZnVuY3Rpb24gKGRhdGUpIHsgcmV0dXJuIGRhdGUudG9JU09TdHJpbmcoKTsgfSxcbiAgICBEOiBmdW5jdGlvbiAoZGF0ZSwgbG9jYWxlLCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiBsb2NhbGUud2Vla2RheXMuc2hvcnRoYW5kW2Zvcm1hdHMudyhkYXRlLCBsb2NhbGUsIG9wdGlvbnMpXTtcbiAgICB9LFxuICAgIEY6IGZ1bmN0aW9uIChkYXRlLCBsb2NhbGUsIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIG1vbnRoVG9TdHIoZm9ybWF0cy5uKGRhdGUsIGxvY2FsZSwgb3B0aW9ucykgLSAxLCBmYWxzZSwgbG9jYWxlKTtcbiAgICB9LFxuICAgIEc6IGZ1bmN0aW9uIChkYXRlLCBsb2NhbGUsIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHBhZChmb3JtYXRzLmgoZGF0ZSwgbG9jYWxlLCBvcHRpb25zKSk7XG4gICAgfSxcbiAgICBIOiBmdW5jdGlvbiAoZGF0ZSkgeyByZXR1cm4gcGFkKGRhdGUuZ2V0SG91cnMoKSk7IH0sXG4gICAgSjogZnVuY3Rpb24gKGRhdGUsIGxvY2FsZSkge1xuICAgICAgICByZXR1cm4gbG9jYWxlLm9yZGluYWwgIT09IHVuZGVmaW5lZFxuICAgICAgICAgICAgPyBkYXRlLmdldERhdGUoKSArIGxvY2FsZS5vcmRpbmFsKGRhdGUuZ2V0RGF0ZSgpKVxuICAgICAgICAgICAgOiBkYXRlLmdldERhdGUoKTtcbiAgICB9LFxuICAgIEs6IGZ1bmN0aW9uIChkYXRlLCBsb2NhbGUpIHsgcmV0dXJuIGxvY2FsZS5hbVBNW2ludChkYXRlLmdldEhvdXJzKCkgPiAxMSldOyB9LFxuICAgIE06IGZ1bmN0aW9uIChkYXRlLCBsb2NhbGUpIHtcbiAgICAgICAgcmV0dXJuIG1vbnRoVG9TdHIoZGF0ZS5nZXRNb250aCgpLCB0cnVlLCBsb2NhbGUpO1xuICAgIH0sXG4gICAgUzogZnVuY3Rpb24gKGRhdGUpIHsgcmV0dXJuIHBhZChkYXRlLmdldFNlY29uZHMoKSk7IH0sXG4gICAgVTogZnVuY3Rpb24gKGRhdGUpIHsgcmV0dXJuIGRhdGUuZ2V0VGltZSgpIC8gMTAwMDsgfSxcbiAgICBXOiBmdW5jdGlvbiAoZGF0ZSwgXywgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gb3B0aW9ucy5nZXRXZWVrKGRhdGUpO1xuICAgIH0sXG4gICAgWTogZnVuY3Rpb24gKGRhdGUpIHsgcmV0dXJuIHBhZChkYXRlLmdldEZ1bGxZZWFyKCksIDQpOyB9LFxuICAgIGQ6IGZ1bmN0aW9uIChkYXRlKSB7IHJldHVybiBwYWQoZGF0ZS5nZXREYXRlKCkpOyB9LFxuICAgIGg6IGZ1bmN0aW9uIChkYXRlKSB7IHJldHVybiAoZGF0ZS5nZXRIb3VycygpICUgMTIgPyBkYXRlLmdldEhvdXJzKCkgJSAxMiA6IDEyKTsgfSxcbiAgICBpOiBmdW5jdGlvbiAoZGF0ZSkgeyByZXR1cm4gcGFkKGRhdGUuZ2V0TWludXRlcygpKTsgfSxcbiAgICBqOiBmdW5jdGlvbiAoZGF0ZSkgeyByZXR1cm4gZGF0ZS5nZXREYXRlKCk7IH0sXG4gICAgbDogZnVuY3Rpb24gKGRhdGUsIGxvY2FsZSkge1xuICAgICAgICByZXR1cm4gbG9jYWxlLndlZWtkYXlzLmxvbmdoYW5kW2RhdGUuZ2V0RGF5KCldO1xuICAgIH0sXG4gICAgbTogZnVuY3Rpb24gKGRhdGUpIHsgcmV0dXJuIHBhZChkYXRlLmdldE1vbnRoKCkgKyAxKTsgfSxcbiAgICBuOiBmdW5jdGlvbiAoZGF0ZSkgeyByZXR1cm4gZGF0ZS5nZXRNb250aCgpICsgMTsgfSxcbiAgICBzOiBmdW5jdGlvbiAoZGF0ZSkgeyByZXR1cm4gZGF0ZS5nZXRTZWNvbmRzKCk7IH0sXG4gICAgdTogZnVuY3Rpb24gKGRhdGUpIHsgcmV0dXJuIGRhdGUuZ2V0VGltZSgpOyB9LFxuICAgIHc6IGZ1bmN0aW9uIChkYXRlKSB7IHJldHVybiBkYXRlLmdldERheSgpOyB9LFxuICAgIHk6IGZ1bmN0aW9uIChkYXRlKSB7IHJldHVybiBTdHJpbmcoZGF0ZS5nZXRGdWxsWWVhcigpKS5zdWJzdHJpbmcoMik7IH0sXG59O1xuIiwiaW1wb3J0IHsgdG9rZW5SZWdleCwgcmV2Rm9ybWF0LCBmb3JtYXRzLCB9IGZyb20gXCIuL2Zvcm1hdHRpbmdcIjtcbmltcG9ydCB7IGRlZmF1bHRzIH0gZnJvbSBcIi4uL3R5cGVzL29wdGlvbnNcIjtcbmltcG9ydCB7IGVuZ2xpc2ggfSBmcm9tIFwiLi4vbDEwbi9kZWZhdWx0XCI7XG5leHBvcnQgdmFyIGNyZWF0ZURhdGVGb3JtYXR0ZXIgPSBmdW5jdGlvbiAoX2EpIHtcbiAgICB2YXIgX2IgPSBfYS5jb25maWcsIGNvbmZpZyA9IF9iID09PSB2b2lkIDAgPyBkZWZhdWx0cyA6IF9iLCBfYyA9IF9hLmwxMG4sIGwxMG4gPSBfYyA9PT0gdm9pZCAwID8gZW5nbGlzaCA6IF9jLCBfZCA9IF9hLmlzTW9iaWxlLCBpc01vYmlsZSA9IF9kID09PSB2b2lkIDAgPyBmYWxzZSA6IF9kO1xuICAgIHJldHVybiBmdW5jdGlvbiAoZGF0ZU9iaiwgZnJtdCwgb3ZlcnJpZGVMb2NhbGUpIHtcbiAgICAgICAgdmFyIGxvY2FsZSA9IG92ZXJyaWRlTG9jYWxlIHx8IGwxMG47XG4gICAgICAgIGlmIChjb25maWcuZm9ybWF0RGF0ZSAhPT0gdW5kZWZpbmVkICYmICFpc01vYmlsZSkge1xuICAgICAgICAgICAgcmV0dXJuIGNvbmZpZy5mb3JtYXREYXRlKGRhdGVPYmosIGZybXQsIGxvY2FsZSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGZybXRcbiAgICAgICAgICAgIC5zcGxpdChcIlwiKVxuICAgICAgICAgICAgLm1hcChmdW5jdGlvbiAoYywgaSwgYXJyKSB7XG4gICAgICAgICAgICByZXR1cm4gZm9ybWF0c1tjXSAmJiBhcnJbaSAtIDFdICE9PSBcIlxcXFxcIlxuICAgICAgICAgICAgICAgID8gZm9ybWF0c1tjXShkYXRlT2JqLCBsb2NhbGUsIGNvbmZpZylcbiAgICAgICAgICAgICAgICA6IGMgIT09IFwiXFxcXFwiXG4gICAgICAgICAgICAgICAgICAgID8gY1xuICAgICAgICAgICAgICAgICAgICA6IFwiXCI7XG4gICAgICAgIH0pXG4gICAgICAgICAgICAuam9pbihcIlwiKTtcbiAgICB9O1xufTtcbmV4cG9ydCB2YXIgY3JlYXRlRGF0ZVBhcnNlciA9IGZ1bmN0aW9uIChfYSkge1xuICAgIHZhciBfYiA9IF9hLmNvbmZpZywgY29uZmlnID0gX2IgPT09IHZvaWQgMCA/IGRlZmF1bHRzIDogX2IsIF9jID0gX2EubDEwbiwgbDEwbiA9IF9jID09PSB2b2lkIDAgPyBlbmdsaXNoIDogX2M7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChkYXRlLCBnaXZlbkZvcm1hdCwgdGltZWxlc3MsIGN1c3RvbUxvY2FsZSkge1xuICAgICAgICBpZiAoZGF0ZSAhPT0gMCAmJiAhZGF0ZSlcbiAgICAgICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgICAgIHZhciBsb2NhbGUgPSBjdXN0b21Mb2NhbGUgfHwgbDEwbjtcbiAgICAgICAgdmFyIHBhcnNlZERhdGU7XG4gICAgICAgIHZhciBkYXRlT3JpZyA9IGRhdGU7XG4gICAgICAgIGlmIChkYXRlIGluc3RhbmNlb2YgRGF0ZSlcbiAgICAgICAgICAgIHBhcnNlZERhdGUgPSBuZXcgRGF0ZShkYXRlLmdldFRpbWUoKSk7XG4gICAgICAgIGVsc2UgaWYgKHR5cGVvZiBkYXRlICE9PSBcInN0cmluZ1wiICYmXG4gICAgICAgICAgICBkYXRlLnRvRml4ZWQgIT09IHVuZGVmaW5lZClcbiAgICAgICAgICAgIHBhcnNlZERhdGUgPSBuZXcgRGF0ZShkYXRlKTtcbiAgICAgICAgZWxzZSBpZiAodHlwZW9mIGRhdGUgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgICAgIHZhciBmb3JtYXQgPSBnaXZlbkZvcm1hdCB8fCAoY29uZmlnIHx8IGRlZmF1bHRzKS5kYXRlRm9ybWF0O1xuICAgICAgICAgICAgdmFyIGRhdGVzdHIgPSBTdHJpbmcoZGF0ZSkudHJpbSgpO1xuICAgICAgICAgICAgaWYgKGRhdGVzdHIgPT09IFwidG9kYXlcIikge1xuICAgICAgICAgICAgICAgIHBhcnNlZERhdGUgPSBuZXcgRGF0ZSgpO1xuICAgICAgICAgICAgICAgIHRpbWVsZXNzID0gdHJ1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKGNvbmZpZyAmJiBjb25maWcucGFyc2VEYXRlKSB7XG4gICAgICAgICAgICAgICAgcGFyc2VkRGF0ZSA9IGNvbmZpZy5wYXJzZURhdGUoZGF0ZSwgZm9ybWF0KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKC9aJC8udGVzdChkYXRlc3RyKSB8fFxuICAgICAgICAgICAgICAgIC9HTVQkLy50ZXN0KGRhdGVzdHIpKSB7XG4gICAgICAgICAgICAgICAgcGFyc2VkRGF0ZSA9IG5ldyBEYXRlKGRhdGUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgdmFyIG1hdGNoZWQgPSB2b2lkIDAsIG9wcyA9IFtdO1xuICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwLCBtYXRjaEluZGV4ID0gMCwgcmVnZXhTdHIgPSBcIlwiOyBpIDwgZm9ybWF0Lmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciB0b2tlbiA9IGZvcm1hdFtpXTtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGlzQmFja1NsYXNoID0gdG9rZW4gPT09IFwiXFxcXFwiO1xuICAgICAgICAgICAgICAgICAgICB2YXIgZXNjYXBlZCA9IGZvcm1hdFtpIC0gMV0gPT09IFwiXFxcXFwiIHx8IGlzQmFja1NsYXNoO1xuICAgICAgICAgICAgICAgICAgICBpZiAodG9rZW5SZWdleFt0b2tlbl0gJiYgIWVzY2FwZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlZ2V4U3RyICs9IHRva2VuUmVnZXhbdG9rZW5dO1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIG1hdGNoID0gbmV3IFJlZ0V4cChyZWdleFN0cikuZXhlYyhkYXRlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChtYXRjaCAmJiAobWF0Y2hlZCA9IHRydWUpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb3BzW3Rva2VuICE9PSBcIllcIiA/IFwicHVzaFwiIDogXCJ1bnNoaWZ0XCJdKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm46IHJldkZvcm1hdFt0b2tlbl0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbDogbWF0Y2hbKyttYXRjaEluZGV4XSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlIGlmICghaXNCYWNrU2xhc2gpXG4gICAgICAgICAgICAgICAgICAgICAgICByZWdleFN0ciArPSBcIi5cIjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcGFyc2VkRGF0ZSA9XG4gICAgICAgICAgICAgICAgICAgICFjb25maWcgfHwgIWNvbmZpZy5ub0NhbGVuZGFyXG4gICAgICAgICAgICAgICAgICAgICAgICA/IG5ldyBEYXRlKG5ldyBEYXRlKCkuZ2V0RnVsbFllYXIoKSwgMCwgMSwgMCwgMCwgMCwgMClcbiAgICAgICAgICAgICAgICAgICAgICAgIDogbmV3IERhdGUobmV3IERhdGUoKS5zZXRIb3VycygwLCAwLCAwLCAwKSk7XG4gICAgICAgICAgICAgICAgb3BzLmZvckVhY2goZnVuY3Rpb24gKF9hKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBmbiA9IF9hLmZuLCB2YWwgPSBfYS52YWw7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiAocGFyc2VkRGF0ZSA9IGZuKHBhcnNlZERhdGUsIHZhbCwgbG9jYWxlKSB8fCBwYXJzZWREYXRlKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICBwYXJzZWREYXRlID0gbWF0Y2hlZCA/IHBhcnNlZERhdGUgOiB1bmRlZmluZWQ7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCEocGFyc2VkRGF0ZSBpbnN0YW5jZW9mIERhdGUgJiYgIWlzTmFOKHBhcnNlZERhdGUuZ2V0VGltZSgpKSkpIHtcbiAgICAgICAgICAgIGNvbmZpZy5lcnJvckhhbmRsZXIobmV3IEVycm9yKFwiSW52YWxpZCBkYXRlIHByb3ZpZGVkOiBcIiArIGRhdGVPcmlnKSk7XG4gICAgICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aW1lbGVzcyA9PT0gdHJ1ZSlcbiAgICAgICAgICAgIHBhcnNlZERhdGUuc2V0SG91cnMoMCwgMCwgMCwgMCk7XG4gICAgICAgIHJldHVybiBwYXJzZWREYXRlO1xuICAgIH07XG59O1xuZXhwb3J0IGZ1bmN0aW9uIGNvbXBhcmVEYXRlcyhkYXRlMSwgZGF0ZTIsIHRpbWVsZXNzKSB7XG4gICAgaWYgKHRpbWVsZXNzID09PSB2b2lkIDApIHsgdGltZWxlc3MgPSB0cnVlOyB9XG4gICAgaWYgKHRpbWVsZXNzICE9PSBmYWxzZSkge1xuICAgICAgICByZXR1cm4gKG5ldyBEYXRlKGRhdGUxLmdldFRpbWUoKSkuc2V0SG91cnMoMCwgMCwgMCwgMCkgLVxuICAgICAgICAgICAgbmV3IERhdGUoZGF0ZTIuZ2V0VGltZSgpKS5zZXRIb3VycygwLCAwLCAwLCAwKSk7XG4gICAgfVxuICAgIHJldHVybiBkYXRlMS5nZXRUaW1lKCkgLSBkYXRlMi5nZXRUaW1lKCk7XG59XG5leHBvcnQgZnVuY3Rpb24gY29tcGFyZVRpbWVzKGRhdGUxLCBkYXRlMikge1xuICAgIHJldHVybiAoMzYwMCAqIChkYXRlMS5nZXRIb3VycygpIC0gZGF0ZTIuZ2V0SG91cnMoKSkgK1xuICAgICAgICA2MCAqIChkYXRlMS5nZXRNaW51dGVzKCkgLSBkYXRlMi5nZXRNaW51dGVzKCkpICtcbiAgICAgICAgZGF0ZTEuZ2V0U2Vjb25kcygpIC1cbiAgICAgICAgZGF0ZTIuZ2V0U2Vjb25kcygpKTtcbn1cbmV4cG9ydCB2YXIgaXNCZXR3ZWVuID0gZnVuY3Rpb24gKHRzLCB0czEsIHRzMikge1xuICAgIHJldHVybiB0cyA+IE1hdGgubWluKHRzMSwgdHMyKSAmJiB0cyA8IE1hdGgubWF4KHRzMSwgdHMyKTtcbn07XG5leHBvcnQgdmFyIGNhbGN1bGF0ZVNlY29uZHNTaW5jZU1pZG5pZ2h0ID0gZnVuY3Rpb24gKGhvdXJzLCBtaW51dGVzLCBzZWNvbmRzKSB7XG4gICAgcmV0dXJuIGhvdXJzICogMzYwMCArIG1pbnV0ZXMgKiA2MCArIHNlY29uZHM7XG59O1xuZXhwb3J0IHZhciBwYXJzZVNlY29uZHMgPSBmdW5jdGlvbiAoc2Vjb25kc1NpbmNlTWlkbmlnaHQpIHtcbiAgICB2YXIgaG91cnMgPSBNYXRoLmZsb29yKHNlY29uZHNTaW5jZU1pZG5pZ2h0IC8gMzYwMCksIG1pbnV0ZXMgPSAoc2Vjb25kc1NpbmNlTWlkbmlnaHQgLSBob3VycyAqIDM2MDApIC8gNjA7XG4gICAgcmV0dXJuIFtob3VycywgbWludXRlcywgc2Vjb25kc1NpbmNlTWlkbmlnaHQgLSBob3VycyAqIDM2MDAgLSBtaW51dGVzICogNjBdO1xufTtcbmV4cG9ydCB2YXIgZHVyYXRpb24gPSB7XG4gICAgREFZOiA4NjQwMDAwMCxcbn07XG5leHBvcnQgZnVuY3Rpb24gZ2V0RGVmYXVsdEhvdXJzKGNvbmZpZykge1xuICAgIHZhciBob3VycyA9IGNvbmZpZy5kZWZhdWx0SG91cjtcbiAgICB2YXIgbWludXRlcyA9IGNvbmZpZy5kZWZhdWx0TWludXRlO1xuICAgIHZhciBzZWNvbmRzID0gY29uZmlnLmRlZmF1bHRTZWNvbmRzO1xuICAgIGlmIChjb25maWcubWluRGF0ZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHZhciBtaW5Ib3VyID0gY29uZmlnLm1pbkRhdGUuZ2V0SG91cnMoKTtcbiAgICAgICAgdmFyIG1pbk1pbnV0ZXMgPSBjb25maWcubWluRGF0ZS5nZXRNaW51dGVzKCk7XG4gICAgICAgIHZhciBtaW5TZWNvbmRzID0gY29uZmlnLm1pbkRhdGUuZ2V0U2Vjb25kcygpO1xuICAgICAgICBpZiAoaG91cnMgPCBtaW5Ib3VyKSB7XG4gICAgICAgICAgICBob3VycyA9IG1pbkhvdXI7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGhvdXJzID09PSBtaW5Ib3VyICYmIG1pbnV0ZXMgPCBtaW5NaW51dGVzKSB7XG4gICAgICAgICAgICBtaW51dGVzID0gbWluTWludXRlcztcbiAgICAgICAgfVxuICAgICAgICBpZiAoaG91cnMgPT09IG1pbkhvdXIgJiYgbWludXRlcyA9PT0gbWluTWludXRlcyAmJiBzZWNvbmRzIDwgbWluU2Vjb25kcylcbiAgICAgICAgICAgIHNlY29uZHMgPSBjb25maWcubWluRGF0ZS5nZXRTZWNvbmRzKCk7XG4gICAgfVxuICAgIGlmIChjb25maWcubWF4RGF0ZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHZhciBtYXhIciA9IGNvbmZpZy5tYXhEYXRlLmdldEhvdXJzKCk7XG4gICAgICAgIHZhciBtYXhNaW51dGVzID0gY29uZmlnLm1heERhdGUuZ2V0TWludXRlcygpO1xuICAgICAgICBob3VycyA9IE1hdGgubWluKGhvdXJzLCBtYXhIcik7XG4gICAgICAgIGlmIChob3VycyA9PT0gbWF4SHIpXG4gICAgICAgICAgICBtaW51dGVzID0gTWF0aC5taW4obWF4TWludXRlcywgbWludXRlcyk7XG4gICAgICAgIGlmIChob3VycyA9PT0gbWF4SHIgJiYgbWludXRlcyA9PT0gbWF4TWludXRlcylcbiAgICAgICAgICAgIHNlY29uZHMgPSBjb25maWcubWF4RGF0ZS5nZXRTZWNvbmRzKCk7XG4gICAgfVxuICAgIHJldHVybiB7IGhvdXJzOiBob3VycywgbWludXRlczogbWludXRlcywgc2Vjb25kczogc2Vjb25kcyB9O1xufVxuIiwidmFyIF9fYXNzaWduID0gKHRoaXMgJiYgdGhpcy5fX2Fzc2lnbikgfHwgZnVuY3Rpb24gKCkge1xuICAgIF9fYXNzaWduID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbih0KSB7XG4gICAgICAgIGZvciAodmFyIHMsIGkgPSAxLCBuID0gYXJndW1lbnRzLmxlbmd0aDsgaSA8IG47IGkrKykge1xuICAgICAgICAgICAgcyA9IGFyZ3VtZW50c1tpXTtcbiAgICAgICAgICAgIGZvciAodmFyIHAgaW4gcykgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLCBwKSlcbiAgICAgICAgICAgICAgICB0W3BdID0gc1twXTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdDtcbiAgICB9O1xuICAgIHJldHVybiBfX2Fzc2lnbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xufTtcbnZhciBfX3NwcmVhZEFycmF5cyA9ICh0aGlzICYmIHRoaXMuX19zcHJlYWRBcnJheXMpIHx8IGZ1bmN0aW9uICgpIHtcbiAgICBmb3IgKHZhciBzID0gMCwgaSA9IDAsIGlsID0gYXJndW1lbnRzLmxlbmd0aDsgaSA8IGlsOyBpKyspIHMgKz0gYXJndW1lbnRzW2ldLmxlbmd0aDtcbiAgICBmb3IgKHZhciByID0gQXJyYXkocyksIGsgPSAwLCBpID0gMDsgaSA8IGlsOyBpKyspXG4gICAgICAgIGZvciAodmFyIGEgPSBhcmd1bWVudHNbaV0sIGogPSAwLCBqbCA9IGEubGVuZ3RoOyBqIDwgamw7IGorKywgaysrKVxuICAgICAgICAgICAgcltrXSA9IGFbal07XG4gICAgcmV0dXJuIHI7XG59O1xuaW1wb3J0IHsgZGVmYXVsdHMgYXMgZGVmYXVsdE9wdGlvbnMsIEhPT0tTLCB9IGZyb20gXCIuL3R5cGVzL29wdGlvbnNcIjtcbmltcG9ydCBFbmdsaXNoIGZyb20gXCIuL2wxMG4vZGVmYXVsdFwiO1xuaW1wb3J0IHsgYXJyYXlpZnksIGRlYm91bmNlLCBpbnQsIHBhZCB9IGZyb20gXCIuL3V0aWxzXCI7XG5pbXBvcnQgeyBjbGVhck5vZGUsIGNyZWF0ZUVsZW1lbnQsIGNyZWF0ZU51bWJlcklucHV0LCBmaW5kUGFyZW50LCB0b2dnbGVDbGFzcywgZ2V0RXZlbnRUYXJnZXQsIH0gZnJvbSBcIi4vdXRpbHMvZG9tXCI7XG5pbXBvcnQgeyBjb21wYXJlRGF0ZXMsIGNyZWF0ZURhdGVQYXJzZXIsIGNyZWF0ZURhdGVGb3JtYXR0ZXIsIGR1cmF0aW9uLCBpc0JldHdlZW4sIGdldERlZmF1bHRIb3VycywgY2FsY3VsYXRlU2Vjb25kc1NpbmNlTWlkbmlnaHQsIHBhcnNlU2Vjb25kcywgfSBmcm9tIFwiLi91dGlscy9kYXRlc1wiO1xuaW1wb3J0IHsgdG9rZW5SZWdleCwgbW9udGhUb1N0ciB9IGZyb20gXCIuL3V0aWxzL2Zvcm1hdHRpbmdcIjtcbmltcG9ydCBcIi4vdXRpbHMvcG9seWZpbGxzXCI7XG52YXIgREVCT1VOQ0VEX0NIQU5HRV9NUyA9IDMwMDtcbmZ1bmN0aW9uIEZsYXRwaWNrckluc3RhbmNlKGVsZW1lbnQsIGluc3RhbmNlQ29uZmlnKSB7XG4gICAgdmFyIHNlbGYgPSB7XG4gICAgICAgIGNvbmZpZzogX19hc3NpZ24oX19hc3NpZ24oe30sIGRlZmF1bHRPcHRpb25zKSwgZmxhdHBpY2tyLmRlZmF1bHRDb25maWcpLFxuICAgICAgICBsMTBuOiBFbmdsaXNoLFxuICAgIH07XG4gICAgc2VsZi5wYXJzZURhdGUgPSBjcmVhdGVEYXRlUGFyc2VyKHsgY29uZmlnOiBzZWxmLmNvbmZpZywgbDEwbjogc2VsZi5sMTBuIH0pO1xuICAgIHNlbGYuX2hhbmRsZXJzID0gW107XG4gICAgc2VsZi5wbHVnaW5FbGVtZW50cyA9IFtdO1xuICAgIHNlbGYubG9hZGVkUGx1Z2lucyA9IFtdO1xuICAgIHNlbGYuX2JpbmQgPSBiaW5kO1xuICAgIHNlbGYuX3NldEhvdXJzRnJvbURhdGUgPSBzZXRIb3Vyc0Zyb21EYXRlO1xuICAgIHNlbGYuX3Bvc2l0aW9uQ2FsZW5kYXIgPSBwb3NpdGlvbkNhbGVuZGFyO1xuICAgIHNlbGYuY2hhbmdlTW9udGggPSBjaGFuZ2VNb250aDtcbiAgICBzZWxmLmNoYW5nZVllYXIgPSBjaGFuZ2VZZWFyO1xuICAgIHNlbGYuY2xlYXIgPSBjbGVhcjtcbiAgICBzZWxmLmNsb3NlID0gY2xvc2U7XG4gICAgc2VsZi5vbk1vdXNlT3ZlciA9IG9uTW91c2VPdmVyO1xuICAgIHNlbGYuX2NyZWF0ZUVsZW1lbnQgPSBjcmVhdGVFbGVtZW50O1xuICAgIHNlbGYuY3JlYXRlRGF5ID0gY3JlYXRlRGF5O1xuICAgIHNlbGYuZGVzdHJveSA9IGRlc3Ryb3k7XG4gICAgc2VsZi5pc0VuYWJsZWQgPSBpc0VuYWJsZWQ7XG4gICAgc2VsZi5qdW1wVG9EYXRlID0ganVtcFRvRGF0ZTtcbiAgICBzZWxmLnVwZGF0ZVZhbHVlID0gdXBkYXRlVmFsdWU7XG4gICAgc2VsZi5vcGVuID0gb3BlbjtcbiAgICBzZWxmLnJlZHJhdyA9IHJlZHJhdztcbiAgICBzZWxmLnNldCA9IHNldDtcbiAgICBzZWxmLnNldERhdGUgPSBzZXREYXRlO1xuICAgIHNlbGYudG9nZ2xlID0gdG9nZ2xlO1xuICAgIGZ1bmN0aW9uIHNldHVwSGVscGVyRnVuY3Rpb25zKCkge1xuICAgICAgICBzZWxmLnV0aWxzID0ge1xuICAgICAgICAgICAgZ2V0RGF5c0luTW9udGg6IGZ1bmN0aW9uIChtb250aCwgeXIpIHtcbiAgICAgICAgICAgICAgICBpZiAobW9udGggPT09IHZvaWQgMCkgeyBtb250aCA9IHNlbGYuY3VycmVudE1vbnRoOyB9XG4gICAgICAgICAgICAgICAgaWYgKHlyID09PSB2b2lkIDApIHsgeXIgPSBzZWxmLmN1cnJlbnRZZWFyOyB9XG4gICAgICAgICAgICAgICAgaWYgKG1vbnRoID09PSAxICYmICgoeXIgJSA0ID09PSAwICYmIHlyICUgMTAwICE9PSAwKSB8fCB5ciAlIDQwMCA9PT0gMCkpXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiAyOTtcbiAgICAgICAgICAgICAgICByZXR1cm4gc2VsZi5sMTBuLmRheXNJbk1vbnRoW21vbnRoXTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH07XG4gICAgfVxuICAgIGZ1bmN0aW9uIGluaXQoKSB7XG4gICAgICAgIHNlbGYuZWxlbWVudCA9IHNlbGYuaW5wdXQgPSBlbGVtZW50O1xuICAgICAgICBzZWxmLmlzT3BlbiA9IGZhbHNlO1xuICAgICAgICBwYXJzZUNvbmZpZygpO1xuICAgICAgICBzZXR1cExvY2FsZSgpO1xuICAgICAgICBzZXR1cElucHV0cygpO1xuICAgICAgICBzZXR1cERhdGVzKCk7XG4gICAgICAgIHNldHVwSGVscGVyRnVuY3Rpb25zKCk7XG4gICAgICAgIGlmICghc2VsZi5pc01vYmlsZSlcbiAgICAgICAgICAgIGJ1aWxkKCk7XG4gICAgICAgIGJpbmRFdmVudHMoKTtcbiAgICAgICAgaWYgKHNlbGYuc2VsZWN0ZWREYXRlcy5sZW5ndGggfHwgc2VsZi5jb25maWcubm9DYWxlbmRhcikge1xuICAgICAgICAgICAgaWYgKHNlbGYuY29uZmlnLmVuYWJsZVRpbWUpIHtcbiAgICAgICAgICAgICAgICBzZXRIb3Vyc0Zyb21EYXRlKHNlbGYuY29uZmlnLm5vQ2FsZW5kYXIgPyBzZWxmLmxhdGVzdFNlbGVjdGVkRGF0ZU9iaiA6IHVuZGVmaW5lZCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB1cGRhdGVWYWx1ZShmYWxzZSk7XG4gICAgICAgIH1cbiAgICAgICAgc2V0Q2FsZW5kYXJXaWR0aCgpO1xuICAgICAgICB2YXIgaXNTYWZhcmkgPSAvXigoPyFjaHJvbWV8YW5kcm9pZCkuKSpzYWZhcmkvaS50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQpO1xuICAgICAgICBpZiAoIXNlbGYuaXNNb2JpbGUgJiYgaXNTYWZhcmkpIHtcbiAgICAgICAgICAgIHBvc2l0aW9uQ2FsZW5kYXIoKTtcbiAgICAgICAgfVxuICAgICAgICB0cmlnZ2VyRXZlbnQoXCJvblJlYWR5XCIpO1xuICAgIH1cbiAgICBmdW5jdGlvbiBnZXRDbG9zZXN0QWN0aXZlRWxlbWVudCgpIHtcbiAgICAgICAgdmFyIF9hO1xuICAgICAgICByZXR1cm4gKCgoX2EgPSBzZWxmLmNhbGVuZGFyQ29udGFpbmVyKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EuZ2V0Um9vdE5vZGUoKSlcbiAgICAgICAgICAgIC5hY3RpdmVFbGVtZW50IHx8IGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQpO1xuICAgIH1cbiAgICBmdW5jdGlvbiBiaW5kVG9JbnN0YW5jZShmbikge1xuICAgICAgICByZXR1cm4gZm4uYmluZChzZWxmKTtcbiAgICB9XG4gICAgZnVuY3Rpb24gc2V0Q2FsZW5kYXJXaWR0aCgpIHtcbiAgICAgICAgdmFyIGNvbmZpZyA9IHNlbGYuY29uZmlnO1xuICAgICAgICBpZiAoY29uZmlnLndlZWtOdW1iZXJzID09PSBmYWxzZSAmJiBjb25maWcuc2hvd01vbnRocyA9PT0gMSkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGNvbmZpZy5ub0NhbGVuZGFyICE9PSB0cnVlKSB7XG4gICAgICAgICAgICB3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICBpZiAoc2VsZi5jYWxlbmRhckNvbnRhaW5lciAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgICAgIHNlbGYuY2FsZW5kYXJDb250YWluZXIuc3R5bGUudmlzaWJpbGl0eSA9IFwiaGlkZGVuXCI7XG4gICAgICAgICAgICAgICAgICAgIHNlbGYuY2FsZW5kYXJDb250YWluZXIuc3R5bGUuZGlzcGxheSA9IFwiYmxvY2tcIjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKHNlbGYuZGF5c0NvbnRhaW5lciAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBkYXlzV2lkdGggPSAoc2VsZi5kYXlzLm9mZnNldFdpZHRoICsgMSkgKiBjb25maWcuc2hvd01vbnRocztcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5kYXlzQ29udGFpbmVyLnN0eWxlLndpZHRoID0gZGF5c1dpZHRoICsgXCJweFwiO1xuICAgICAgICAgICAgICAgICAgICBzZWxmLmNhbGVuZGFyQ29udGFpbmVyLnN0eWxlLndpZHRoID1cbiAgICAgICAgICAgICAgICAgICAgICAgIGRheXNXaWR0aCArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKHNlbGYud2Vla1dyYXBwZXIgIT09IHVuZGVmaW5lZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IHNlbGYud2Vla1dyYXBwZXIub2Zmc2V0V2lkdGhcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOiAwKSArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJweFwiO1xuICAgICAgICAgICAgICAgICAgICBzZWxmLmNhbGVuZGFyQ29udGFpbmVyLnN0eWxlLnJlbW92ZVByb3BlcnR5KFwidmlzaWJpbGl0eVwiKTtcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5jYWxlbmRhckNvbnRhaW5lci5zdHlsZS5yZW1vdmVQcm9wZXJ0eShcImRpc3BsYXlcIik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZnVuY3Rpb24gdXBkYXRlVGltZShlKSB7XG4gICAgICAgIGlmIChzZWxmLnNlbGVjdGVkRGF0ZXMubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICB2YXIgZGVmYXVsdERhdGUgPSBzZWxmLmNvbmZpZy5taW5EYXRlID09PSB1bmRlZmluZWQgfHxcbiAgICAgICAgICAgICAgICBjb21wYXJlRGF0ZXMobmV3IERhdGUoKSwgc2VsZi5jb25maWcubWluRGF0ZSkgPj0gMFxuICAgICAgICAgICAgICAgID8gbmV3IERhdGUoKVxuICAgICAgICAgICAgICAgIDogbmV3IERhdGUoc2VsZi5jb25maWcubWluRGF0ZS5nZXRUaW1lKCkpO1xuICAgICAgICAgICAgdmFyIGRlZmF1bHRzID0gZ2V0RGVmYXVsdEhvdXJzKHNlbGYuY29uZmlnKTtcbiAgICAgICAgICAgIGRlZmF1bHREYXRlLnNldEhvdXJzKGRlZmF1bHRzLmhvdXJzLCBkZWZhdWx0cy5taW51dGVzLCBkZWZhdWx0cy5zZWNvbmRzLCBkZWZhdWx0RGF0ZS5nZXRNaWxsaXNlY29uZHMoKSk7XG4gICAgICAgICAgICBzZWxmLnNlbGVjdGVkRGF0ZXMgPSBbZGVmYXVsdERhdGVdO1xuICAgICAgICAgICAgc2VsZi5sYXRlc3RTZWxlY3RlZERhdGVPYmogPSBkZWZhdWx0RGF0ZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoZSAhPT0gdW5kZWZpbmVkICYmIGUudHlwZSAhPT0gXCJibHVyXCIpIHtcbiAgICAgICAgICAgIHRpbWVXcmFwcGVyKGUpO1xuICAgICAgICB9XG4gICAgICAgIHZhciBwcmV2VmFsdWUgPSBzZWxmLl9pbnB1dC52YWx1ZTtcbiAgICAgICAgc2V0SG91cnNGcm9tSW5wdXRzKCk7XG4gICAgICAgIHVwZGF0ZVZhbHVlKCk7XG4gICAgICAgIGlmIChzZWxmLl9pbnB1dC52YWx1ZSAhPT0gcHJldlZhbHVlKSB7XG4gICAgICAgICAgICBzZWxmLl9kZWJvdW5jZWRDaGFuZ2UoKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBmdW5jdGlvbiBhbXBtMm1pbGl0YXJ5KGhvdXIsIGFtUE0pIHtcbiAgICAgICAgcmV0dXJuIChob3VyICUgMTIpICsgMTIgKiBpbnQoYW1QTSA9PT0gc2VsZi5sMTBuLmFtUE1bMV0pO1xuICAgIH1cbiAgICBmdW5jdGlvbiBtaWxpdGFyeTJhbXBtKGhvdXIpIHtcbiAgICAgICAgc3dpdGNoIChob3VyICUgMjQpIHtcbiAgICAgICAgICAgIGNhc2UgMDpcbiAgICAgICAgICAgIGNhc2UgMTI6XG4gICAgICAgICAgICAgICAgcmV0dXJuIDEyO1xuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICByZXR1cm4gaG91ciAlIDEyO1xuICAgICAgICB9XG4gICAgfVxuICAgIGZ1bmN0aW9uIHNldEhvdXJzRnJvbUlucHV0cygpIHtcbiAgICAgICAgaWYgKHNlbGYuaG91ckVsZW1lbnQgPT09IHVuZGVmaW5lZCB8fCBzZWxmLm1pbnV0ZUVsZW1lbnQgPT09IHVuZGVmaW5lZClcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgdmFyIGhvdXJzID0gKHBhcnNlSW50KHNlbGYuaG91ckVsZW1lbnQudmFsdWUuc2xpY2UoLTIpLCAxMCkgfHwgMCkgJSAyNCwgbWludXRlcyA9IChwYXJzZUludChzZWxmLm1pbnV0ZUVsZW1lbnQudmFsdWUsIDEwKSB8fCAwKSAlIDYwLCBzZWNvbmRzID0gc2VsZi5zZWNvbmRFbGVtZW50ICE9PSB1bmRlZmluZWRcbiAgICAgICAgICAgID8gKHBhcnNlSW50KHNlbGYuc2Vjb25kRWxlbWVudC52YWx1ZSwgMTApIHx8IDApICUgNjBcbiAgICAgICAgICAgIDogMDtcbiAgICAgICAgaWYgKHNlbGYuYW1QTSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICBob3VycyA9IGFtcG0ybWlsaXRhcnkoaG91cnMsIHNlbGYuYW1QTS50ZXh0Q29udGVudCk7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIGxpbWl0TWluSG91cnMgPSBzZWxmLmNvbmZpZy5taW5UaW1lICE9PSB1bmRlZmluZWQgfHxcbiAgICAgICAgICAgIChzZWxmLmNvbmZpZy5taW5EYXRlICYmXG4gICAgICAgICAgICAgICAgc2VsZi5taW5EYXRlSGFzVGltZSAmJlxuICAgICAgICAgICAgICAgIHNlbGYubGF0ZXN0U2VsZWN0ZWREYXRlT2JqICYmXG4gICAgICAgICAgICAgICAgY29tcGFyZURhdGVzKHNlbGYubGF0ZXN0U2VsZWN0ZWREYXRlT2JqLCBzZWxmLmNvbmZpZy5taW5EYXRlLCB0cnVlKSA9PT1cbiAgICAgICAgICAgICAgICAgICAgMCk7XG4gICAgICAgIHZhciBsaW1pdE1heEhvdXJzID0gc2VsZi5jb25maWcubWF4VGltZSAhPT0gdW5kZWZpbmVkIHx8XG4gICAgICAgICAgICAoc2VsZi5jb25maWcubWF4RGF0ZSAmJlxuICAgICAgICAgICAgICAgIHNlbGYubWF4RGF0ZUhhc1RpbWUgJiZcbiAgICAgICAgICAgICAgICBzZWxmLmxhdGVzdFNlbGVjdGVkRGF0ZU9iaiAmJlxuICAgICAgICAgICAgICAgIGNvbXBhcmVEYXRlcyhzZWxmLmxhdGVzdFNlbGVjdGVkRGF0ZU9iaiwgc2VsZi5jb25maWcubWF4RGF0ZSwgdHJ1ZSkgPT09XG4gICAgICAgICAgICAgICAgICAgIDApO1xuICAgICAgICBpZiAoc2VsZi5jb25maWcubWF4VGltZSAhPT0gdW5kZWZpbmVkICYmXG4gICAgICAgICAgICBzZWxmLmNvbmZpZy5taW5UaW1lICE9PSB1bmRlZmluZWQgJiZcbiAgICAgICAgICAgIHNlbGYuY29uZmlnLm1pblRpbWUgPiBzZWxmLmNvbmZpZy5tYXhUaW1lKSB7XG4gICAgICAgICAgICB2YXIgbWluQm91bmQgPSBjYWxjdWxhdGVTZWNvbmRzU2luY2VNaWRuaWdodChzZWxmLmNvbmZpZy5taW5UaW1lLmdldEhvdXJzKCksIHNlbGYuY29uZmlnLm1pblRpbWUuZ2V0TWludXRlcygpLCBzZWxmLmNvbmZpZy5taW5UaW1lLmdldFNlY29uZHMoKSk7XG4gICAgICAgICAgICB2YXIgbWF4Qm91bmQgPSBjYWxjdWxhdGVTZWNvbmRzU2luY2VNaWRuaWdodChzZWxmLmNvbmZpZy5tYXhUaW1lLmdldEhvdXJzKCksIHNlbGYuY29uZmlnLm1heFRpbWUuZ2V0TWludXRlcygpLCBzZWxmLmNvbmZpZy5tYXhUaW1lLmdldFNlY29uZHMoKSk7XG4gICAgICAgICAgICB2YXIgY3VycmVudFRpbWUgPSBjYWxjdWxhdGVTZWNvbmRzU2luY2VNaWRuaWdodChob3VycywgbWludXRlcywgc2Vjb25kcyk7XG4gICAgICAgICAgICBpZiAoY3VycmVudFRpbWUgPiBtYXhCb3VuZCAmJiBjdXJyZW50VGltZSA8IG1pbkJvdW5kKSB7XG4gICAgICAgICAgICAgICAgdmFyIHJlc3VsdCA9IHBhcnNlU2Vjb25kcyhtaW5Cb3VuZCk7XG4gICAgICAgICAgICAgICAgaG91cnMgPSByZXN1bHRbMF07XG4gICAgICAgICAgICAgICAgbWludXRlcyA9IHJlc3VsdFsxXTtcbiAgICAgICAgICAgICAgICBzZWNvbmRzID0gcmVzdWx0WzJdO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgaWYgKGxpbWl0TWF4SG91cnMpIHtcbiAgICAgICAgICAgICAgICB2YXIgbWF4VGltZSA9IHNlbGYuY29uZmlnLm1heFRpbWUgIT09IHVuZGVmaW5lZFxuICAgICAgICAgICAgICAgICAgICA/IHNlbGYuY29uZmlnLm1heFRpbWVcbiAgICAgICAgICAgICAgICAgICAgOiBzZWxmLmNvbmZpZy5tYXhEYXRlO1xuICAgICAgICAgICAgICAgIGhvdXJzID0gTWF0aC5taW4oaG91cnMsIG1heFRpbWUuZ2V0SG91cnMoKSk7XG4gICAgICAgICAgICAgICAgaWYgKGhvdXJzID09PSBtYXhUaW1lLmdldEhvdXJzKCkpXG4gICAgICAgICAgICAgICAgICAgIG1pbnV0ZXMgPSBNYXRoLm1pbihtaW51dGVzLCBtYXhUaW1lLmdldE1pbnV0ZXMoKSk7XG4gICAgICAgICAgICAgICAgaWYgKG1pbnV0ZXMgPT09IG1heFRpbWUuZ2V0TWludXRlcygpKVxuICAgICAgICAgICAgICAgICAgICBzZWNvbmRzID0gTWF0aC5taW4oc2Vjb25kcywgbWF4VGltZS5nZXRTZWNvbmRzKCkpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGxpbWl0TWluSG91cnMpIHtcbiAgICAgICAgICAgICAgICB2YXIgbWluVGltZSA9IHNlbGYuY29uZmlnLm1pblRpbWUgIT09IHVuZGVmaW5lZFxuICAgICAgICAgICAgICAgICAgICA/IHNlbGYuY29uZmlnLm1pblRpbWVcbiAgICAgICAgICAgICAgICAgICAgOiBzZWxmLmNvbmZpZy5taW5EYXRlO1xuICAgICAgICAgICAgICAgIGhvdXJzID0gTWF0aC5tYXgoaG91cnMsIG1pblRpbWUuZ2V0SG91cnMoKSk7XG4gICAgICAgICAgICAgICAgaWYgKGhvdXJzID09PSBtaW5UaW1lLmdldEhvdXJzKCkgJiYgbWludXRlcyA8IG1pblRpbWUuZ2V0TWludXRlcygpKVxuICAgICAgICAgICAgICAgICAgICBtaW51dGVzID0gbWluVGltZS5nZXRNaW51dGVzKCk7XG4gICAgICAgICAgICAgICAgaWYgKG1pbnV0ZXMgPT09IG1pblRpbWUuZ2V0TWludXRlcygpKVxuICAgICAgICAgICAgICAgICAgICBzZWNvbmRzID0gTWF0aC5tYXgoc2Vjb25kcywgbWluVGltZS5nZXRTZWNvbmRzKCkpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHNldEhvdXJzKGhvdXJzLCBtaW51dGVzLCBzZWNvbmRzKTtcbiAgICB9XG4gICAgZnVuY3Rpb24gc2V0SG91cnNGcm9tRGF0ZShkYXRlT2JqKSB7XG4gICAgICAgIHZhciBkYXRlID0gZGF0ZU9iaiB8fCBzZWxmLmxhdGVzdFNlbGVjdGVkRGF0ZU9iajtcbiAgICAgICAgaWYgKGRhdGUgJiYgZGF0ZSBpbnN0YW5jZW9mIERhdGUpIHtcbiAgICAgICAgICAgIHNldEhvdXJzKGRhdGUuZ2V0SG91cnMoKSwgZGF0ZS5nZXRNaW51dGVzKCksIGRhdGUuZ2V0U2Vjb25kcygpKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBmdW5jdGlvbiBzZXRIb3Vycyhob3VycywgbWludXRlcywgc2Vjb25kcykge1xuICAgICAgICBpZiAoc2VsZi5sYXRlc3RTZWxlY3RlZERhdGVPYmogIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgc2VsZi5sYXRlc3RTZWxlY3RlZERhdGVPYmouc2V0SG91cnMoaG91cnMgJSAyNCwgbWludXRlcywgc2Vjb25kcyB8fCAwLCAwKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIXNlbGYuaG91ckVsZW1lbnQgfHwgIXNlbGYubWludXRlRWxlbWVudCB8fCBzZWxmLmlzTW9iaWxlKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICBzZWxmLmhvdXJFbGVtZW50LnZhbHVlID0gcGFkKCFzZWxmLmNvbmZpZy50aW1lXzI0aHJcbiAgICAgICAgICAgID8gKCgxMiArIGhvdXJzKSAlIDEyKSArIDEyICogaW50KGhvdXJzICUgMTIgPT09IDApXG4gICAgICAgICAgICA6IGhvdXJzKTtcbiAgICAgICAgc2VsZi5taW51dGVFbGVtZW50LnZhbHVlID0gcGFkKG1pbnV0ZXMpO1xuICAgICAgICBpZiAoc2VsZi5hbVBNICE9PSB1bmRlZmluZWQpXG4gICAgICAgICAgICBzZWxmLmFtUE0udGV4dENvbnRlbnQgPSBzZWxmLmwxMG4uYW1QTVtpbnQoaG91cnMgPj0gMTIpXTtcbiAgICAgICAgaWYgKHNlbGYuc2Vjb25kRWxlbWVudCAhPT0gdW5kZWZpbmVkKVxuICAgICAgICAgICAgc2VsZi5zZWNvbmRFbGVtZW50LnZhbHVlID0gcGFkKHNlY29uZHMpO1xuICAgIH1cbiAgICBmdW5jdGlvbiBvblllYXJJbnB1dChldmVudCkge1xuICAgICAgICB2YXIgZXZlbnRUYXJnZXQgPSBnZXRFdmVudFRhcmdldChldmVudCk7XG4gICAgICAgIHZhciB5ZWFyID0gcGFyc2VJbnQoZXZlbnRUYXJnZXQudmFsdWUpICsgKGV2ZW50LmRlbHRhIHx8IDApO1xuICAgICAgICBpZiAoeWVhciAvIDEwMDAgPiAxIHx8XG4gICAgICAgICAgICAoZXZlbnQua2V5ID09PSBcIkVudGVyXCIgJiYgIS9bXlxcZF0vLnRlc3QoeWVhci50b1N0cmluZygpKSkpIHtcbiAgICAgICAgICAgIGNoYW5nZVllYXIoeWVhcik7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZnVuY3Rpb24gYmluZChlbGVtZW50LCBldmVudCwgaGFuZGxlciwgb3B0aW9ucykge1xuICAgICAgICBpZiAoZXZlbnQgaW5zdGFuY2VvZiBBcnJheSlcbiAgICAgICAgICAgIHJldHVybiBldmVudC5mb3JFYWNoKGZ1bmN0aW9uIChldikgeyByZXR1cm4gYmluZChlbGVtZW50LCBldiwgaGFuZGxlciwgb3B0aW9ucyk7IH0pO1xuICAgICAgICBpZiAoZWxlbWVudCBpbnN0YW5jZW9mIEFycmF5KVxuICAgICAgICAgICAgcmV0dXJuIGVsZW1lbnQuZm9yRWFjaChmdW5jdGlvbiAoZWwpIHsgcmV0dXJuIGJpbmQoZWwsIGV2ZW50LCBoYW5kbGVyLCBvcHRpb25zKTsgfSk7XG4gICAgICAgIGVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihldmVudCwgaGFuZGxlciwgb3B0aW9ucyk7XG4gICAgICAgIHNlbGYuX2hhbmRsZXJzLnB1c2goe1xuICAgICAgICAgICAgcmVtb3ZlOiBmdW5jdGlvbiAoKSB7IHJldHVybiBlbGVtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoZXZlbnQsIGhhbmRsZXIsIG9wdGlvbnMpOyB9LFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgZnVuY3Rpb24gdHJpZ2dlckNoYW5nZSgpIHtcbiAgICAgICAgdHJpZ2dlckV2ZW50KFwib25DaGFuZ2VcIik7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGJpbmRFdmVudHMoKSB7XG4gICAgICAgIGlmIChzZWxmLmNvbmZpZy53cmFwKSB7XG4gICAgICAgICAgICBbXCJvcGVuXCIsIFwiY2xvc2VcIiwgXCJ0b2dnbGVcIiwgXCJjbGVhclwiXS5mb3JFYWNoKGZ1bmN0aW9uIChldnQpIHtcbiAgICAgICAgICAgICAgICBBcnJheS5wcm90b3R5cGUuZm9yRWFjaC5jYWxsKHNlbGYuZWxlbWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiW2RhdGEtXCIgKyBldnQgKyBcIl1cIiksIGZ1bmN0aW9uIChlbCkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gYmluZChlbCwgXCJjbGlja1wiLCBzZWxmW2V2dF0pO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHNlbGYuaXNNb2JpbGUpIHtcbiAgICAgICAgICAgIHNldHVwTW9iaWxlKCk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgdmFyIGRlYm91bmNlZFJlc2l6ZSA9IGRlYm91bmNlKG9uUmVzaXplLCA1MCk7XG4gICAgICAgIHNlbGYuX2RlYm91bmNlZENoYW5nZSA9IGRlYm91bmNlKHRyaWdnZXJDaGFuZ2UsIERFQk9VTkNFRF9DSEFOR0VfTVMpO1xuICAgICAgICBpZiAoc2VsZi5kYXlzQ29udGFpbmVyICYmICEvaVBob25lfGlQYWR8aVBvZC9pLnRlc3QobmF2aWdhdG9yLnVzZXJBZ2VudCkpXG4gICAgICAgICAgICBiaW5kKHNlbGYuZGF5c0NvbnRhaW5lciwgXCJtb3VzZW92ZXJcIiwgZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICAgICAgICBpZiAoc2VsZi5jb25maWcubW9kZSA9PT0gXCJyYW5nZVwiKVxuICAgICAgICAgICAgICAgICAgICBvbk1vdXNlT3ZlcihnZXRFdmVudFRhcmdldChlKSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgYmluZChzZWxmLl9pbnB1dCwgXCJrZXlkb3duXCIsIG9uS2V5RG93bik7XG4gICAgICAgIGlmIChzZWxmLmNhbGVuZGFyQ29udGFpbmVyICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIGJpbmQoc2VsZi5jYWxlbmRhckNvbnRhaW5lciwgXCJrZXlkb3duXCIsIG9uS2V5RG93bik7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCFzZWxmLmNvbmZpZy5pbmxpbmUgJiYgIXNlbGYuY29uZmlnLnN0YXRpYylcbiAgICAgICAgICAgIGJpbmQod2luZG93LCBcInJlc2l6ZVwiLCBkZWJvdW5jZWRSZXNpemUpO1xuICAgICAgICBpZiAod2luZG93Lm9udG91Y2hzdGFydCAhPT0gdW5kZWZpbmVkKVxuICAgICAgICAgICAgYmluZCh3aW5kb3cuZG9jdW1lbnQsIFwidG91Y2hzdGFydFwiLCBkb2N1bWVudENsaWNrKTtcbiAgICAgICAgZWxzZVxuICAgICAgICAgICAgYmluZCh3aW5kb3cuZG9jdW1lbnQsIFwibW91c2Vkb3duXCIsIGRvY3VtZW50Q2xpY2spO1xuICAgICAgICBiaW5kKHdpbmRvdy5kb2N1bWVudCwgXCJmb2N1c1wiLCBkb2N1bWVudENsaWNrLCB7IGNhcHR1cmU6IHRydWUgfSk7XG4gICAgICAgIGlmIChzZWxmLmNvbmZpZy5jbGlja09wZW5zID09PSB0cnVlKSB7XG4gICAgICAgICAgICBiaW5kKHNlbGYuX2lucHV0LCBcImZvY3VzXCIsIHNlbGYub3Blbik7XG4gICAgICAgICAgICBiaW5kKHNlbGYuX2lucHV0LCBcImNsaWNrXCIsIHNlbGYub3Blbik7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHNlbGYuZGF5c0NvbnRhaW5lciAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICBiaW5kKHNlbGYubW9udGhOYXYsIFwiY2xpY2tcIiwgb25Nb250aE5hdkNsaWNrKTtcbiAgICAgICAgICAgIGJpbmQoc2VsZi5tb250aE5hdiwgW1wia2V5dXBcIiwgXCJpbmNyZW1lbnRcIl0sIG9uWWVhcklucHV0KTtcbiAgICAgICAgICAgIGJpbmQoc2VsZi5kYXlzQ29udGFpbmVyLCBcImNsaWNrXCIsIHNlbGVjdERhdGUpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChzZWxmLnRpbWVDb250YWluZXIgIT09IHVuZGVmaW5lZCAmJlxuICAgICAgICAgICAgc2VsZi5taW51dGVFbGVtZW50ICE9PSB1bmRlZmluZWQgJiZcbiAgICAgICAgICAgIHNlbGYuaG91ckVsZW1lbnQgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgdmFyIHNlbFRleHQgPSBmdW5jdGlvbiAoZSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBnZXRFdmVudFRhcmdldChlKS5zZWxlY3QoKTtcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICBiaW5kKHNlbGYudGltZUNvbnRhaW5lciwgW1wiaW5jcmVtZW50XCJdLCB1cGRhdGVUaW1lKTtcbiAgICAgICAgICAgIGJpbmQoc2VsZi50aW1lQ29udGFpbmVyLCBcImJsdXJcIiwgdXBkYXRlVGltZSwgeyBjYXB0dXJlOiB0cnVlIH0pO1xuICAgICAgICAgICAgYmluZChzZWxmLnRpbWVDb250YWluZXIsIFwiY2xpY2tcIiwgdGltZUluY3JlbWVudCk7XG4gICAgICAgICAgICBiaW5kKFtzZWxmLmhvdXJFbGVtZW50LCBzZWxmLm1pbnV0ZUVsZW1lbnRdLCBbXCJmb2N1c1wiLCBcImNsaWNrXCJdLCBzZWxUZXh0KTtcbiAgICAgICAgICAgIGlmIChzZWxmLnNlY29uZEVsZW1lbnQgIT09IHVuZGVmaW5lZClcbiAgICAgICAgICAgICAgICBiaW5kKHNlbGYuc2Vjb25kRWxlbWVudCwgXCJmb2N1c1wiLCBmdW5jdGlvbiAoKSB7IHJldHVybiBzZWxmLnNlY29uZEVsZW1lbnQgJiYgc2VsZi5zZWNvbmRFbGVtZW50LnNlbGVjdCgpOyB9KTtcbiAgICAgICAgICAgIGlmIChzZWxmLmFtUE0gIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgIGJpbmQoc2VsZi5hbVBNLCBcImNsaWNrXCIsIGZ1bmN0aW9uIChlKSB7XG4gICAgICAgICAgICAgICAgICAgIHVwZGF0ZVRpbWUoZSk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHNlbGYuY29uZmlnLmFsbG93SW5wdXQpIHtcbiAgICAgICAgICAgIGJpbmQoc2VsZi5faW5wdXQsIFwiYmx1clwiLCBvbkJsdXIpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGZ1bmN0aW9uIGp1bXBUb0RhdGUoanVtcERhdGUsIHRyaWdnZXJDaGFuZ2UpIHtcbiAgICAgICAgdmFyIGp1bXBUbyA9IGp1bXBEYXRlICE9PSB1bmRlZmluZWRcbiAgICAgICAgICAgID8gc2VsZi5wYXJzZURhdGUoanVtcERhdGUpXG4gICAgICAgICAgICA6IHNlbGYubGF0ZXN0U2VsZWN0ZWREYXRlT2JqIHx8XG4gICAgICAgICAgICAgICAgKHNlbGYuY29uZmlnLm1pbkRhdGUgJiYgc2VsZi5jb25maWcubWluRGF0ZSA+IHNlbGYubm93XG4gICAgICAgICAgICAgICAgICAgID8gc2VsZi5jb25maWcubWluRGF0ZVxuICAgICAgICAgICAgICAgICAgICA6IHNlbGYuY29uZmlnLm1heERhdGUgJiYgc2VsZi5jb25maWcubWF4RGF0ZSA8IHNlbGYubm93XG4gICAgICAgICAgICAgICAgICAgICAgICA/IHNlbGYuY29uZmlnLm1heERhdGVcbiAgICAgICAgICAgICAgICAgICAgICAgIDogc2VsZi5ub3cpO1xuICAgICAgICB2YXIgb2xkWWVhciA9IHNlbGYuY3VycmVudFllYXI7XG4gICAgICAgIHZhciBvbGRNb250aCA9IHNlbGYuY3VycmVudE1vbnRoO1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgaWYgKGp1bXBUbyAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgc2VsZi5jdXJyZW50WWVhciA9IGp1bXBUby5nZXRGdWxsWWVhcigpO1xuICAgICAgICAgICAgICAgIHNlbGYuY3VycmVudE1vbnRoID0ganVtcFRvLmdldE1vbnRoKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgIGUubWVzc2FnZSA9IFwiSW52YWxpZCBkYXRlIHN1cHBsaWVkOiBcIiArIGp1bXBUbztcbiAgICAgICAgICAgIHNlbGYuY29uZmlnLmVycm9ySGFuZGxlcihlKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodHJpZ2dlckNoYW5nZSAmJiBzZWxmLmN1cnJlbnRZZWFyICE9PSBvbGRZZWFyKSB7XG4gICAgICAgICAgICB0cmlnZ2VyRXZlbnQoXCJvblllYXJDaGFuZ2VcIik7XG4gICAgICAgICAgICBidWlsZE1vbnRoU3dpdGNoKCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRyaWdnZXJDaGFuZ2UgJiZcbiAgICAgICAgICAgIChzZWxmLmN1cnJlbnRZZWFyICE9PSBvbGRZZWFyIHx8IHNlbGYuY3VycmVudE1vbnRoICE9PSBvbGRNb250aCkpIHtcbiAgICAgICAgICAgIHRyaWdnZXJFdmVudChcIm9uTW9udGhDaGFuZ2VcIik7XG4gICAgICAgIH1cbiAgICAgICAgc2VsZi5yZWRyYXcoKTtcbiAgICB9XG4gICAgZnVuY3Rpb24gdGltZUluY3JlbWVudChlKSB7XG4gICAgICAgIHZhciBldmVudFRhcmdldCA9IGdldEV2ZW50VGFyZ2V0KGUpO1xuICAgICAgICBpZiAofmV2ZW50VGFyZ2V0LmNsYXNzTmFtZS5pbmRleE9mKFwiYXJyb3dcIikpXG4gICAgICAgICAgICBpbmNyZW1lbnROdW1JbnB1dChlLCBldmVudFRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoXCJhcnJvd1VwXCIpID8gMSA6IC0xKTtcbiAgICB9XG4gICAgZnVuY3Rpb24gaW5jcmVtZW50TnVtSW5wdXQoZSwgZGVsdGEsIGlucHV0RWxlbSkge1xuICAgICAgICB2YXIgdGFyZ2V0ID0gZSAmJiBnZXRFdmVudFRhcmdldChlKTtcbiAgICAgICAgdmFyIGlucHV0ID0gaW5wdXRFbGVtIHx8XG4gICAgICAgICAgICAodGFyZ2V0ICYmIHRhcmdldC5wYXJlbnROb2RlICYmIHRhcmdldC5wYXJlbnROb2RlLmZpcnN0Q2hpbGQpO1xuICAgICAgICB2YXIgZXZlbnQgPSBjcmVhdGVFdmVudChcImluY3JlbWVudFwiKTtcbiAgICAgICAgZXZlbnQuZGVsdGEgPSBkZWx0YTtcbiAgICAgICAgaW5wdXQgJiYgaW5wdXQuZGlzcGF0Y2hFdmVudChldmVudCk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGJ1aWxkKCkge1xuICAgICAgICB2YXIgZnJhZ21lbnQgPSB3aW5kb3cuZG9jdW1lbnQuY3JlYXRlRG9jdW1lbnRGcmFnbWVudCgpO1xuICAgICAgICBzZWxmLmNhbGVuZGFyQ29udGFpbmVyID0gY3JlYXRlRWxlbWVudChcImRpdlwiLCBcImZsYXRwaWNrci1jYWxlbmRhclwiKTtcbiAgICAgICAgc2VsZi5jYWxlbmRhckNvbnRhaW5lci50YWJJbmRleCA9IC0xO1xuICAgICAgICBpZiAoIXNlbGYuY29uZmlnLm5vQ2FsZW5kYXIpIHtcbiAgICAgICAgICAgIGZyYWdtZW50LmFwcGVuZENoaWxkKGJ1aWxkTW9udGhOYXYoKSk7XG4gICAgICAgICAgICBzZWxmLmlubmVyQ29udGFpbmVyID0gY3JlYXRlRWxlbWVudChcImRpdlwiLCBcImZsYXRwaWNrci1pbm5lckNvbnRhaW5lclwiKTtcbiAgICAgICAgICAgIGlmIChzZWxmLmNvbmZpZy53ZWVrTnVtYmVycykge1xuICAgICAgICAgICAgICAgIHZhciBfYSA9IGJ1aWxkV2Vla3MoKSwgd2Vla1dyYXBwZXIgPSBfYS53ZWVrV3JhcHBlciwgd2Vla051bWJlcnMgPSBfYS53ZWVrTnVtYmVycztcbiAgICAgICAgICAgICAgICBzZWxmLmlubmVyQ29udGFpbmVyLmFwcGVuZENoaWxkKHdlZWtXcmFwcGVyKTtcbiAgICAgICAgICAgICAgICBzZWxmLndlZWtOdW1iZXJzID0gd2Vla051bWJlcnM7XG4gICAgICAgICAgICAgICAgc2VsZi53ZWVrV3JhcHBlciA9IHdlZWtXcmFwcGVyO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgc2VsZi5yQ29udGFpbmVyID0gY3JlYXRlRWxlbWVudChcImRpdlwiLCBcImZsYXRwaWNrci1yQ29udGFpbmVyXCIpO1xuICAgICAgICAgICAgc2VsZi5yQ29udGFpbmVyLmFwcGVuZENoaWxkKGJ1aWxkV2Vla2RheXMoKSk7XG4gICAgICAgICAgICBpZiAoIXNlbGYuZGF5c0NvbnRhaW5lcikge1xuICAgICAgICAgICAgICAgIHNlbGYuZGF5c0NvbnRhaW5lciA9IGNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgXCJmbGF0cGlja3ItZGF5c1wiKTtcbiAgICAgICAgICAgICAgICBzZWxmLmRheXNDb250YWluZXIudGFiSW5kZXggPSAtMTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGJ1aWxkRGF5cygpO1xuICAgICAgICAgICAgc2VsZi5yQ29udGFpbmVyLmFwcGVuZENoaWxkKHNlbGYuZGF5c0NvbnRhaW5lcik7XG4gICAgICAgICAgICBzZWxmLmlubmVyQ29udGFpbmVyLmFwcGVuZENoaWxkKHNlbGYuckNvbnRhaW5lcik7XG4gICAgICAgICAgICBmcmFnbWVudC5hcHBlbmRDaGlsZChzZWxmLmlubmVyQ29udGFpbmVyKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoc2VsZi5jb25maWcuZW5hYmxlVGltZSkge1xuICAgICAgICAgICAgZnJhZ21lbnQuYXBwZW5kQ2hpbGQoYnVpbGRUaW1lKCkpO1xuICAgICAgICB9XG4gICAgICAgIHRvZ2dsZUNsYXNzKHNlbGYuY2FsZW5kYXJDb250YWluZXIsIFwicmFuZ2VNb2RlXCIsIHNlbGYuY29uZmlnLm1vZGUgPT09IFwicmFuZ2VcIik7XG4gICAgICAgIHRvZ2dsZUNsYXNzKHNlbGYuY2FsZW5kYXJDb250YWluZXIsIFwiYW5pbWF0ZVwiLCBzZWxmLmNvbmZpZy5hbmltYXRlID09PSB0cnVlKTtcbiAgICAgICAgdG9nZ2xlQ2xhc3Moc2VsZi5jYWxlbmRhckNvbnRhaW5lciwgXCJtdWx0aU1vbnRoXCIsIHNlbGYuY29uZmlnLnNob3dNb250aHMgPiAxKTtcbiAgICAgICAgc2VsZi5jYWxlbmRhckNvbnRhaW5lci5hcHBlbmRDaGlsZChmcmFnbWVudCk7XG4gICAgICAgIHZhciBjdXN0b21BcHBlbmQgPSBzZWxmLmNvbmZpZy5hcHBlbmRUbyAhPT0gdW5kZWZpbmVkICYmXG4gICAgICAgICAgICBzZWxmLmNvbmZpZy5hcHBlbmRUby5ub2RlVHlwZSAhPT0gdW5kZWZpbmVkO1xuICAgICAgICBpZiAoc2VsZi5jb25maWcuaW5saW5lIHx8IHNlbGYuY29uZmlnLnN0YXRpYykge1xuICAgICAgICAgICAgc2VsZi5jYWxlbmRhckNvbnRhaW5lci5jbGFzc0xpc3QuYWRkKHNlbGYuY29uZmlnLmlubGluZSA/IFwiaW5saW5lXCIgOiBcInN0YXRpY1wiKTtcbiAgICAgICAgICAgIGlmIChzZWxmLmNvbmZpZy5pbmxpbmUpIHtcbiAgICAgICAgICAgICAgICBpZiAoIWN1c3RvbUFwcGVuZCAmJiBzZWxmLmVsZW1lbnQucGFyZW50Tm9kZSlcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5lbGVtZW50LnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKHNlbGYuY2FsZW5kYXJDb250YWluZXIsIHNlbGYuX2lucHV0Lm5leHRTaWJsaW5nKTtcbiAgICAgICAgICAgICAgICBlbHNlIGlmIChzZWxmLmNvbmZpZy5hcHBlbmRUbyAhPT0gdW5kZWZpbmVkKVxuICAgICAgICAgICAgICAgICAgICBzZWxmLmNvbmZpZy5hcHBlbmRUby5hcHBlbmRDaGlsZChzZWxmLmNhbGVuZGFyQ29udGFpbmVyKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChzZWxmLmNvbmZpZy5zdGF0aWMpIHtcbiAgICAgICAgICAgICAgICB2YXIgd3JhcHBlciA9IGNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgXCJmbGF0cGlja3Itd3JhcHBlclwiKTtcbiAgICAgICAgICAgICAgICBpZiAoc2VsZi5lbGVtZW50LnBhcmVudE5vZGUpXG4gICAgICAgICAgICAgICAgICAgIHNlbGYuZWxlbWVudC5wYXJlbnROb2RlLmluc2VydEJlZm9yZSh3cmFwcGVyLCBzZWxmLmVsZW1lbnQpO1xuICAgICAgICAgICAgICAgIHdyYXBwZXIuYXBwZW5kQ2hpbGQoc2VsZi5lbGVtZW50KTtcbiAgICAgICAgICAgICAgICBpZiAoc2VsZi5hbHRJbnB1dClcbiAgICAgICAgICAgICAgICAgICAgd3JhcHBlci5hcHBlbmRDaGlsZChzZWxmLmFsdElucHV0KTtcbiAgICAgICAgICAgICAgICB3cmFwcGVyLmFwcGVuZENoaWxkKHNlbGYuY2FsZW5kYXJDb250YWluZXIpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmICghc2VsZi5jb25maWcuc3RhdGljICYmICFzZWxmLmNvbmZpZy5pbmxpbmUpXG4gICAgICAgICAgICAoc2VsZi5jb25maWcuYXBwZW5kVG8gIT09IHVuZGVmaW5lZFxuICAgICAgICAgICAgICAgID8gc2VsZi5jb25maWcuYXBwZW5kVG9cbiAgICAgICAgICAgICAgICA6IHdpbmRvdy5kb2N1bWVudC5ib2R5KS5hcHBlbmRDaGlsZChzZWxmLmNhbGVuZGFyQ29udGFpbmVyKTtcbiAgICB9XG4gICAgZnVuY3Rpb24gY3JlYXRlRGF5KGNsYXNzTmFtZSwgZGF0ZSwgX2RheU51bWJlciwgaSkge1xuICAgICAgICB2YXIgZGF0ZUlzRW5hYmxlZCA9IGlzRW5hYmxlZChkYXRlLCB0cnVlKSwgZGF5RWxlbWVudCA9IGNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsIGNsYXNzTmFtZSwgZGF0ZS5nZXREYXRlKCkudG9TdHJpbmcoKSk7XG4gICAgICAgIGRheUVsZW1lbnQuZGF0ZU9iaiA9IGRhdGU7XG4gICAgICAgIGRheUVsZW1lbnQuJGkgPSBpO1xuICAgICAgICBkYXlFbGVtZW50LnNldEF0dHJpYnV0ZShcImFyaWEtbGFiZWxcIiwgc2VsZi5mb3JtYXREYXRlKGRhdGUsIHNlbGYuY29uZmlnLmFyaWFEYXRlRm9ybWF0KSk7XG4gICAgICAgIGlmIChjbGFzc05hbWUuaW5kZXhPZihcImhpZGRlblwiKSA9PT0gLTEgJiZcbiAgICAgICAgICAgIGNvbXBhcmVEYXRlcyhkYXRlLCBzZWxmLm5vdykgPT09IDApIHtcbiAgICAgICAgICAgIHNlbGYudG9kYXlEYXRlRWxlbSA9IGRheUVsZW1lbnQ7XG4gICAgICAgICAgICBkYXlFbGVtZW50LmNsYXNzTGlzdC5hZGQoXCJ0b2RheVwiKTtcbiAgICAgICAgICAgIGRheUVsZW1lbnQuc2V0QXR0cmlidXRlKFwiYXJpYS1jdXJyZW50XCIsIFwiZGF0ZVwiKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoZGF0ZUlzRW5hYmxlZCkge1xuICAgICAgICAgICAgZGF5RWxlbWVudC50YWJJbmRleCA9IC0xO1xuICAgICAgICAgICAgaWYgKGlzRGF0ZVNlbGVjdGVkKGRhdGUpKSB7XG4gICAgICAgICAgICAgICAgZGF5RWxlbWVudC5jbGFzc0xpc3QuYWRkKFwic2VsZWN0ZWRcIik7XG4gICAgICAgICAgICAgICAgc2VsZi5zZWxlY3RlZERhdGVFbGVtID0gZGF5RWxlbWVudDtcbiAgICAgICAgICAgICAgICBpZiAoc2VsZi5jb25maWcubW9kZSA9PT0gXCJyYW5nZVwiKSB7XG4gICAgICAgICAgICAgICAgICAgIHRvZ2dsZUNsYXNzKGRheUVsZW1lbnQsIFwic3RhcnRSYW5nZVwiLCBzZWxmLnNlbGVjdGVkRGF0ZXNbMF0gJiZcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbXBhcmVEYXRlcyhkYXRlLCBzZWxmLnNlbGVjdGVkRGF0ZXNbMF0sIHRydWUpID09PSAwKTtcbiAgICAgICAgICAgICAgICAgICAgdG9nZ2xlQ2xhc3MoZGF5RWxlbWVudCwgXCJlbmRSYW5nZVwiLCBzZWxmLnNlbGVjdGVkRGF0ZXNbMV0gJiZcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbXBhcmVEYXRlcyhkYXRlLCBzZWxmLnNlbGVjdGVkRGF0ZXNbMV0sIHRydWUpID09PSAwKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGNsYXNzTmFtZSA9PT0gXCJuZXh0TW9udGhEYXlcIilcbiAgICAgICAgICAgICAgICAgICAgICAgIGRheUVsZW1lbnQuY2xhc3NMaXN0LmFkZChcImluUmFuZ2VcIik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgZGF5RWxlbWVudC5jbGFzc0xpc3QuYWRkKFwiZmxhdHBpY2tyLWRpc2FibGVkXCIpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChzZWxmLmNvbmZpZy5tb2RlID09PSBcInJhbmdlXCIpIHtcbiAgICAgICAgICAgIGlmIChpc0RhdGVJblJhbmdlKGRhdGUpICYmICFpc0RhdGVTZWxlY3RlZChkYXRlKSlcbiAgICAgICAgICAgICAgICBkYXlFbGVtZW50LmNsYXNzTGlzdC5hZGQoXCJpblJhbmdlXCIpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChzZWxmLndlZWtOdW1iZXJzICYmXG4gICAgICAgICAgICBzZWxmLmNvbmZpZy5zaG93TW9udGhzID09PSAxICYmXG4gICAgICAgICAgICBjbGFzc05hbWUgIT09IFwicHJldk1vbnRoRGF5XCIgJiZcbiAgICAgICAgICAgIGkgJSA3ID09PSA2KSB7XG4gICAgICAgICAgICBzZWxmLndlZWtOdW1iZXJzLmluc2VydEFkamFjZW50SFRNTChcImJlZm9yZWVuZFwiLCBcIjxzcGFuIGNsYXNzPSdmbGF0cGlja3ItZGF5Jz5cIiArIHNlbGYuY29uZmlnLmdldFdlZWsoZGF0ZSkgKyBcIjwvc3Bhbj5cIik7XG4gICAgICAgIH1cbiAgICAgICAgdHJpZ2dlckV2ZW50KFwib25EYXlDcmVhdGVcIiwgZGF5RWxlbWVudCk7XG4gICAgICAgIHJldHVybiBkYXlFbGVtZW50O1xuICAgIH1cbiAgICBmdW5jdGlvbiBmb2N1c09uRGF5RWxlbSh0YXJnZXROb2RlKSB7XG4gICAgICAgIHRhcmdldE5vZGUuZm9jdXMoKTtcbiAgICAgICAgaWYgKHNlbGYuY29uZmlnLm1vZGUgPT09IFwicmFuZ2VcIilcbiAgICAgICAgICAgIG9uTW91c2VPdmVyKHRhcmdldE5vZGUpO1xuICAgIH1cbiAgICBmdW5jdGlvbiBnZXRGaXJzdEF2YWlsYWJsZURheShkZWx0YSkge1xuICAgICAgICB2YXIgc3RhcnRNb250aCA9IGRlbHRhID4gMCA/IDAgOiBzZWxmLmNvbmZpZy5zaG93TW9udGhzIC0gMTtcbiAgICAgICAgdmFyIGVuZE1vbnRoID0gZGVsdGEgPiAwID8gc2VsZi5jb25maWcuc2hvd01vbnRocyA6IC0xO1xuICAgICAgICBmb3IgKHZhciBtID0gc3RhcnRNb250aDsgbSAhPSBlbmRNb250aDsgbSArPSBkZWx0YSkge1xuICAgICAgICAgICAgdmFyIG1vbnRoID0gc2VsZi5kYXlzQ29udGFpbmVyLmNoaWxkcmVuW21dO1xuICAgICAgICAgICAgdmFyIHN0YXJ0SW5kZXggPSBkZWx0YSA+IDAgPyAwIDogbW9udGguY2hpbGRyZW4ubGVuZ3RoIC0gMTtcbiAgICAgICAgICAgIHZhciBlbmRJbmRleCA9IGRlbHRhID4gMCA/IG1vbnRoLmNoaWxkcmVuLmxlbmd0aCA6IC0xO1xuICAgICAgICAgICAgZm9yICh2YXIgaSA9IHN0YXJ0SW5kZXg7IGkgIT0gZW5kSW5kZXg7IGkgKz0gZGVsdGEpIHtcbiAgICAgICAgICAgICAgICB2YXIgYyA9IG1vbnRoLmNoaWxkcmVuW2ldO1xuICAgICAgICAgICAgICAgIGlmIChjLmNsYXNzTmFtZS5pbmRleE9mKFwiaGlkZGVuXCIpID09PSAtMSAmJiBpc0VuYWJsZWQoYy5kYXRlT2JqKSlcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGM7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgZnVuY3Rpb24gZ2V0TmV4dEF2YWlsYWJsZURheShjdXJyZW50LCBkZWx0YSkge1xuICAgICAgICB2YXIgZ2l2ZW5Nb250aCA9IGN1cnJlbnQuY2xhc3NOYW1lLmluZGV4T2YoXCJNb250aFwiKSA9PT0gLTFcbiAgICAgICAgICAgID8gY3VycmVudC5kYXRlT2JqLmdldE1vbnRoKClcbiAgICAgICAgICAgIDogc2VsZi5jdXJyZW50TW9udGg7XG4gICAgICAgIHZhciBlbmRNb250aCA9IGRlbHRhID4gMCA/IHNlbGYuY29uZmlnLnNob3dNb250aHMgOiAtMTtcbiAgICAgICAgdmFyIGxvb3BEZWx0YSA9IGRlbHRhID4gMCA/IDEgOiAtMTtcbiAgICAgICAgZm9yICh2YXIgbSA9IGdpdmVuTW9udGggLSBzZWxmLmN1cnJlbnRNb250aDsgbSAhPSBlbmRNb250aDsgbSArPSBsb29wRGVsdGEpIHtcbiAgICAgICAgICAgIHZhciBtb250aCA9IHNlbGYuZGF5c0NvbnRhaW5lci5jaGlsZHJlblttXTtcbiAgICAgICAgICAgIHZhciBzdGFydEluZGV4ID0gZ2l2ZW5Nb250aCAtIHNlbGYuY3VycmVudE1vbnRoID09PSBtXG4gICAgICAgICAgICAgICAgPyBjdXJyZW50LiRpICsgZGVsdGFcbiAgICAgICAgICAgICAgICA6IGRlbHRhIDwgMFxuICAgICAgICAgICAgICAgICAgICA/IG1vbnRoLmNoaWxkcmVuLmxlbmd0aCAtIDFcbiAgICAgICAgICAgICAgICAgICAgOiAwO1xuICAgICAgICAgICAgdmFyIG51bU1vbnRoRGF5cyA9IG1vbnRoLmNoaWxkcmVuLmxlbmd0aDtcbiAgICAgICAgICAgIGZvciAodmFyIGkgPSBzdGFydEluZGV4OyBpID49IDAgJiYgaSA8IG51bU1vbnRoRGF5cyAmJiBpICE9IChkZWx0YSA+IDAgPyBudW1Nb250aERheXMgOiAtMSk7IGkgKz0gbG9vcERlbHRhKSB7XG4gICAgICAgICAgICAgICAgdmFyIGMgPSBtb250aC5jaGlsZHJlbltpXTtcbiAgICAgICAgICAgICAgICBpZiAoYy5jbGFzc05hbWUuaW5kZXhPZihcImhpZGRlblwiKSA9PT0gLTEgJiZcbiAgICAgICAgICAgICAgICAgICAgaXNFbmFibGVkKGMuZGF0ZU9iaikgJiZcbiAgICAgICAgICAgICAgICAgICAgTWF0aC5hYnMoY3VycmVudC4kaSAtIGkpID49IE1hdGguYWJzKGRlbHRhKSlcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZvY3VzT25EYXlFbGVtKGMpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHNlbGYuY2hhbmdlTW9udGgobG9vcERlbHRhKTtcbiAgICAgICAgZm9jdXNPbkRheShnZXRGaXJzdEF2YWlsYWJsZURheShsb29wRGVsdGEpLCAwKTtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgZnVuY3Rpb24gZm9jdXNPbkRheShjdXJyZW50LCBvZmZzZXQpIHtcbiAgICAgICAgdmFyIGFjdGl2ZUVsZW1lbnQgPSBnZXRDbG9zZXN0QWN0aXZlRWxlbWVudCgpO1xuICAgICAgICB2YXIgZGF5Rm9jdXNlZCA9IGlzSW5WaWV3KGFjdGl2ZUVsZW1lbnQgfHwgZG9jdW1lbnQuYm9keSk7XG4gICAgICAgIHZhciBzdGFydEVsZW0gPSBjdXJyZW50ICE9PSB1bmRlZmluZWRcbiAgICAgICAgICAgID8gY3VycmVudFxuICAgICAgICAgICAgOiBkYXlGb2N1c2VkXG4gICAgICAgICAgICAgICAgPyBhY3RpdmVFbGVtZW50XG4gICAgICAgICAgICAgICAgOiBzZWxmLnNlbGVjdGVkRGF0ZUVsZW0gIT09IHVuZGVmaW5lZCAmJiBpc0luVmlldyhzZWxmLnNlbGVjdGVkRGF0ZUVsZW0pXG4gICAgICAgICAgICAgICAgICAgID8gc2VsZi5zZWxlY3RlZERhdGVFbGVtXG4gICAgICAgICAgICAgICAgICAgIDogc2VsZi50b2RheURhdGVFbGVtICE9PSB1bmRlZmluZWQgJiYgaXNJblZpZXcoc2VsZi50b2RheURhdGVFbGVtKVxuICAgICAgICAgICAgICAgICAgICAgICAgPyBzZWxmLnRvZGF5RGF0ZUVsZW1cbiAgICAgICAgICAgICAgICAgICAgICAgIDogZ2V0Rmlyc3RBdmFpbGFibGVEYXkob2Zmc2V0ID4gMCA/IDEgOiAtMSk7XG4gICAgICAgIGlmIChzdGFydEVsZW0gPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgc2VsZi5faW5wdXQuZm9jdXMoKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICghZGF5Rm9jdXNlZCkge1xuICAgICAgICAgICAgZm9jdXNPbkRheUVsZW0oc3RhcnRFbGVtKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGdldE5leHRBdmFpbGFibGVEYXkoc3RhcnRFbGVtLCBvZmZzZXQpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGZ1bmN0aW9uIGJ1aWxkTW9udGhEYXlzKHllYXIsIG1vbnRoKSB7XG4gICAgICAgIHZhciBmaXJzdE9mTW9udGggPSAobmV3IERhdGUoeWVhciwgbW9udGgsIDEpLmdldERheSgpIC0gc2VsZi5sMTBuLmZpcnN0RGF5T2ZXZWVrICsgNykgJSA3O1xuICAgICAgICB2YXIgcHJldk1vbnRoRGF5cyA9IHNlbGYudXRpbHMuZ2V0RGF5c0luTW9udGgoKG1vbnRoIC0gMSArIDEyKSAlIDEyLCB5ZWFyKTtcbiAgICAgICAgdmFyIGRheXNJbk1vbnRoID0gc2VsZi51dGlscy5nZXREYXlzSW5Nb250aChtb250aCwgeWVhciksIGRheXMgPSB3aW5kb3cuZG9jdW1lbnQuY3JlYXRlRG9jdW1lbnRGcmFnbWVudCgpLCBpc011bHRpTW9udGggPSBzZWxmLmNvbmZpZy5zaG93TW9udGhzID4gMSwgcHJldk1vbnRoRGF5Q2xhc3MgPSBpc011bHRpTW9udGggPyBcInByZXZNb250aERheSBoaWRkZW5cIiA6IFwicHJldk1vbnRoRGF5XCIsIG5leHRNb250aERheUNsYXNzID0gaXNNdWx0aU1vbnRoID8gXCJuZXh0TW9udGhEYXkgaGlkZGVuXCIgOiBcIm5leHRNb250aERheVwiO1xuICAgICAgICB2YXIgZGF5TnVtYmVyID0gcHJldk1vbnRoRGF5cyArIDEgLSBmaXJzdE9mTW9udGgsIGRheUluZGV4ID0gMDtcbiAgICAgICAgZm9yICg7IGRheU51bWJlciA8PSBwcmV2TW9udGhEYXlzOyBkYXlOdW1iZXIrKywgZGF5SW5kZXgrKykge1xuICAgICAgICAgICAgZGF5cy5hcHBlbmRDaGlsZChjcmVhdGVEYXkoXCJmbGF0cGlja3ItZGF5IFwiICsgcHJldk1vbnRoRGF5Q2xhc3MsIG5ldyBEYXRlKHllYXIsIG1vbnRoIC0gMSwgZGF5TnVtYmVyKSwgZGF5TnVtYmVyLCBkYXlJbmRleCkpO1xuICAgICAgICB9XG4gICAgICAgIGZvciAoZGF5TnVtYmVyID0gMTsgZGF5TnVtYmVyIDw9IGRheXNJbk1vbnRoOyBkYXlOdW1iZXIrKywgZGF5SW5kZXgrKykge1xuICAgICAgICAgICAgZGF5cy5hcHBlbmRDaGlsZChjcmVhdGVEYXkoXCJmbGF0cGlja3ItZGF5XCIsIG5ldyBEYXRlKHllYXIsIG1vbnRoLCBkYXlOdW1iZXIpLCBkYXlOdW1iZXIsIGRheUluZGV4KSk7XG4gICAgICAgIH1cbiAgICAgICAgZm9yICh2YXIgZGF5TnVtID0gZGF5c0luTW9udGggKyAxOyBkYXlOdW0gPD0gNDIgLSBmaXJzdE9mTW9udGggJiZcbiAgICAgICAgICAgIChzZWxmLmNvbmZpZy5zaG93TW9udGhzID09PSAxIHx8IGRheUluZGV4ICUgNyAhPT0gMCk7IGRheU51bSsrLCBkYXlJbmRleCsrKSB7XG4gICAgICAgICAgICBkYXlzLmFwcGVuZENoaWxkKGNyZWF0ZURheShcImZsYXRwaWNrci1kYXkgXCIgKyBuZXh0TW9udGhEYXlDbGFzcywgbmV3IERhdGUoeWVhciwgbW9udGggKyAxLCBkYXlOdW0gJSBkYXlzSW5Nb250aCksIGRheU51bSwgZGF5SW5kZXgpKTtcbiAgICAgICAgfVxuICAgICAgICB2YXIgZGF5Q29udGFpbmVyID0gY3JlYXRlRWxlbWVudChcImRpdlwiLCBcImRheUNvbnRhaW5lclwiKTtcbiAgICAgICAgZGF5Q29udGFpbmVyLmFwcGVuZENoaWxkKGRheXMpO1xuICAgICAgICByZXR1cm4gZGF5Q29udGFpbmVyO1xuICAgIH1cbiAgICBmdW5jdGlvbiBidWlsZERheXMoKSB7XG4gICAgICAgIGlmIChzZWxmLmRheXNDb250YWluZXIgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGNsZWFyTm9kZShzZWxmLmRheXNDb250YWluZXIpO1xuICAgICAgICBpZiAoc2VsZi53ZWVrTnVtYmVycylcbiAgICAgICAgICAgIGNsZWFyTm9kZShzZWxmLndlZWtOdW1iZXJzKTtcbiAgICAgICAgdmFyIGZyYWcgPSBkb2N1bWVudC5jcmVhdGVEb2N1bWVudEZyYWdtZW50KCk7XG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgc2VsZi5jb25maWcuc2hvd01vbnRoczsgaSsrKSB7XG4gICAgICAgICAgICB2YXIgZCA9IG5ldyBEYXRlKHNlbGYuY3VycmVudFllYXIsIHNlbGYuY3VycmVudE1vbnRoLCAxKTtcbiAgICAgICAgICAgIGQuc2V0TW9udGgoc2VsZi5jdXJyZW50TW9udGggKyBpKTtcbiAgICAgICAgICAgIGZyYWcuYXBwZW5kQ2hpbGQoYnVpbGRNb250aERheXMoZC5nZXRGdWxsWWVhcigpLCBkLmdldE1vbnRoKCkpKTtcbiAgICAgICAgfVxuICAgICAgICBzZWxmLmRheXNDb250YWluZXIuYXBwZW5kQ2hpbGQoZnJhZyk7XG4gICAgICAgIHNlbGYuZGF5cyA9IHNlbGYuZGF5c0NvbnRhaW5lci5maXJzdENoaWxkO1xuICAgICAgICBpZiAoc2VsZi5jb25maWcubW9kZSA9PT0gXCJyYW5nZVwiICYmIHNlbGYuc2VsZWN0ZWREYXRlcy5sZW5ndGggPT09IDEpIHtcbiAgICAgICAgICAgIG9uTW91c2VPdmVyKCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZnVuY3Rpb24gYnVpbGRNb250aFN3aXRjaCgpIHtcbiAgICAgICAgaWYgKHNlbGYuY29uZmlnLnNob3dNb250aHMgPiAxIHx8XG4gICAgICAgICAgICBzZWxmLmNvbmZpZy5tb250aFNlbGVjdG9yVHlwZSAhPT0gXCJkcm9wZG93blwiKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB2YXIgc2hvdWxkQnVpbGRNb250aCA9IGZ1bmN0aW9uIChtb250aCkge1xuICAgICAgICAgICAgaWYgKHNlbGYuY29uZmlnLm1pbkRhdGUgIT09IHVuZGVmaW5lZCAmJlxuICAgICAgICAgICAgICAgIHNlbGYuY3VycmVudFllYXIgPT09IHNlbGYuY29uZmlnLm1pbkRhdGUuZ2V0RnVsbFllYXIoKSAmJlxuICAgICAgICAgICAgICAgIG1vbnRoIDwgc2VsZi5jb25maWcubWluRGF0ZS5nZXRNb250aCgpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuICEoc2VsZi5jb25maWcubWF4RGF0ZSAhPT0gdW5kZWZpbmVkICYmXG4gICAgICAgICAgICAgICAgc2VsZi5jdXJyZW50WWVhciA9PT0gc2VsZi5jb25maWcubWF4RGF0ZS5nZXRGdWxsWWVhcigpICYmXG4gICAgICAgICAgICAgICAgbW9udGggPiBzZWxmLmNvbmZpZy5tYXhEYXRlLmdldE1vbnRoKCkpO1xuICAgICAgICB9O1xuICAgICAgICBzZWxmLm1vbnRoc0Ryb3Bkb3duQ29udGFpbmVyLnRhYkluZGV4ID0gLTE7XG4gICAgICAgIHNlbGYubW9udGhzRHJvcGRvd25Db250YWluZXIuaW5uZXJIVE1MID0gXCJcIjtcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCAxMjsgaSsrKSB7XG4gICAgICAgICAgICBpZiAoIXNob3VsZEJ1aWxkTW9udGgoaSkpXG4gICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICB2YXIgbW9udGggPSBjcmVhdGVFbGVtZW50KFwib3B0aW9uXCIsIFwiZmxhdHBpY2tyLW1vbnRoRHJvcGRvd24tbW9udGhcIik7XG4gICAgICAgICAgICBtb250aC52YWx1ZSA9IG5ldyBEYXRlKHNlbGYuY3VycmVudFllYXIsIGkpLmdldE1vbnRoKCkudG9TdHJpbmcoKTtcbiAgICAgICAgICAgIG1vbnRoLnRleHRDb250ZW50ID0gbW9udGhUb1N0cihpLCBzZWxmLmNvbmZpZy5zaG9ydGhhbmRDdXJyZW50TW9udGgsIHNlbGYubDEwbik7XG4gICAgICAgICAgICBtb250aC50YWJJbmRleCA9IC0xO1xuICAgICAgICAgICAgaWYgKHNlbGYuY3VycmVudE1vbnRoID09PSBpKSB7XG4gICAgICAgICAgICAgICAgbW9udGguc2VsZWN0ZWQgPSB0cnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgc2VsZi5tb250aHNEcm9wZG93bkNvbnRhaW5lci5hcHBlbmRDaGlsZChtb250aCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZnVuY3Rpb24gYnVpbGRNb250aCgpIHtcbiAgICAgICAgdmFyIGNvbnRhaW5lciA9IGNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgXCJmbGF0cGlja3ItbW9udGhcIik7XG4gICAgICAgIHZhciBtb250aE5hdkZyYWdtZW50ID0gd2luZG93LmRvY3VtZW50LmNyZWF0ZURvY3VtZW50RnJhZ21lbnQoKTtcbiAgICAgICAgdmFyIG1vbnRoRWxlbWVudDtcbiAgICAgICAgaWYgKHNlbGYuY29uZmlnLnNob3dNb250aHMgPiAxIHx8XG4gICAgICAgICAgICBzZWxmLmNvbmZpZy5tb250aFNlbGVjdG9yVHlwZSA9PT0gXCJzdGF0aWNcIikge1xuICAgICAgICAgICAgbW9udGhFbGVtZW50ID0gY3JlYXRlRWxlbWVudChcInNwYW5cIiwgXCJjdXItbW9udGhcIik7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBzZWxmLm1vbnRoc0Ryb3Bkb3duQ29udGFpbmVyID0gY3JlYXRlRWxlbWVudChcInNlbGVjdFwiLCBcImZsYXRwaWNrci1tb250aERyb3Bkb3duLW1vbnRoc1wiKTtcbiAgICAgICAgICAgIHNlbGYubW9udGhzRHJvcGRvd25Db250YWluZXIuc2V0QXR0cmlidXRlKFwiYXJpYS1sYWJlbFwiLCBzZWxmLmwxMG4ubW9udGhBcmlhTGFiZWwpO1xuICAgICAgICAgICAgYmluZChzZWxmLm1vbnRoc0Ryb3Bkb3duQ29udGFpbmVyLCBcImNoYW5nZVwiLCBmdW5jdGlvbiAoZSkge1xuICAgICAgICAgICAgICAgIHZhciB0YXJnZXQgPSBnZXRFdmVudFRhcmdldChlKTtcbiAgICAgICAgICAgICAgICB2YXIgc2VsZWN0ZWRNb250aCA9IHBhcnNlSW50KHRhcmdldC52YWx1ZSwgMTApO1xuICAgICAgICAgICAgICAgIHNlbGYuY2hhbmdlTW9udGgoc2VsZWN0ZWRNb250aCAtIHNlbGYuY3VycmVudE1vbnRoKTtcbiAgICAgICAgICAgICAgICB0cmlnZ2VyRXZlbnQoXCJvbk1vbnRoQ2hhbmdlXCIpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBidWlsZE1vbnRoU3dpdGNoKCk7XG4gICAgICAgICAgICBtb250aEVsZW1lbnQgPSBzZWxmLm1vbnRoc0Ryb3Bkb3duQ29udGFpbmVyO1xuICAgICAgICB9XG4gICAgICAgIHZhciB5ZWFySW5wdXQgPSBjcmVhdGVOdW1iZXJJbnB1dChcImN1ci15ZWFyXCIsIHsgdGFiaW5kZXg6IFwiLTFcIiB9KTtcbiAgICAgICAgdmFyIHllYXJFbGVtZW50ID0geWVhcklucHV0LmdldEVsZW1lbnRzQnlUYWdOYW1lKFwiaW5wdXRcIilbMF07XG4gICAgICAgIHllYXJFbGVtZW50LnNldEF0dHJpYnV0ZShcImFyaWEtbGFiZWxcIiwgc2VsZi5sMTBuLnllYXJBcmlhTGFiZWwpO1xuICAgICAgICBpZiAoc2VsZi5jb25maWcubWluRGF0ZSkge1xuICAgICAgICAgICAgeWVhckVsZW1lbnQuc2V0QXR0cmlidXRlKFwibWluXCIsIHNlbGYuY29uZmlnLm1pbkRhdGUuZ2V0RnVsbFllYXIoKS50b1N0cmluZygpKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoc2VsZi5jb25maWcubWF4RGF0ZSkge1xuICAgICAgICAgICAgeWVhckVsZW1lbnQuc2V0QXR0cmlidXRlKFwibWF4XCIsIHNlbGYuY29uZmlnLm1heERhdGUuZ2V0RnVsbFllYXIoKS50b1N0cmluZygpKTtcbiAgICAgICAgICAgIHllYXJFbGVtZW50LmRpc2FibGVkID1cbiAgICAgICAgICAgICAgICAhIXNlbGYuY29uZmlnLm1pbkRhdGUgJiZcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5jb25maWcubWluRGF0ZS5nZXRGdWxsWWVhcigpID09PSBzZWxmLmNvbmZpZy5tYXhEYXRlLmdldEZ1bGxZZWFyKCk7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIGN1cnJlbnRNb250aCA9IGNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgXCJmbGF0cGlja3ItY3VycmVudC1tb250aFwiKTtcbiAgICAgICAgY3VycmVudE1vbnRoLmFwcGVuZENoaWxkKG1vbnRoRWxlbWVudCk7XG4gICAgICAgIGN1cnJlbnRNb250aC5hcHBlbmRDaGlsZCh5ZWFySW5wdXQpO1xuICAgICAgICBtb250aE5hdkZyYWdtZW50LmFwcGVuZENoaWxkKGN1cnJlbnRNb250aCk7XG4gICAgICAgIGNvbnRhaW5lci5hcHBlbmRDaGlsZChtb250aE5hdkZyYWdtZW50KTtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGNvbnRhaW5lcjogY29udGFpbmVyLFxuICAgICAgICAgICAgeWVhckVsZW1lbnQ6IHllYXJFbGVtZW50LFxuICAgICAgICAgICAgbW9udGhFbGVtZW50OiBtb250aEVsZW1lbnQsXG4gICAgICAgIH07XG4gICAgfVxuICAgIGZ1bmN0aW9uIGJ1aWxkTW9udGhzKCkge1xuICAgICAgICBjbGVhck5vZGUoc2VsZi5tb250aE5hdik7XG4gICAgICAgIHNlbGYubW9udGhOYXYuYXBwZW5kQ2hpbGQoc2VsZi5wcmV2TW9udGhOYXYpO1xuICAgICAgICBpZiAoc2VsZi5jb25maWcuc2hvd01vbnRocykge1xuICAgICAgICAgICAgc2VsZi55ZWFyRWxlbWVudHMgPSBbXTtcbiAgICAgICAgICAgIHNlbGYubW9udGhFbGVtZW50cyA9IFtdO1xuICAgICAgICB9XG4gICAgICAgIGZvciAodmFyIG0gPSBzZWxmLmNvbmZpZy5zaG93TW9udGhzOyBtLS07KSB7XG4gICAgICAgICAgICB2YXIgbW9udGggPSBidWlsZE1vbnRoKCk7XG4gICAgICAgICAgICBzZWxmLnllYXJFbGVtZW50cy5wdXNoKG1vbnRoLnllYXJFbGVtZW50KTtcbiAgICAgICAgICAgIHNlbGYubW9udGhFbGVtZW50cy5wdXNoKG1vbnRoLm1vbnRoRWxlbWVudCk7XG4gICAgICAgICAgICBzZWxmLm1vbnRoTmF2LmFwcGVuZENoaWxkKG1vbnRoLmNvbnRhaW5lcik7XG4gICAgICAgIH1cbiAgICAgICAgc2VsZi5tb250aE5hdi5hcHBlbmRDaGlsZChzZWxmLm5leHRNb250aE5hdik7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGJ1aWxkTW9udGhOYXYoKSB7XG4gICAgICAgIHNlbGYubW9udGhOYXYgPSBjcmVhdGVFbGVtZW50KFwiZGl2XCIsIFwiZmxhdHBpY2tyLW1vbnRoc1wiKTtcbiAgICAgICAgc2VsZi55ZWFyRWxlbWVudHMgPSBbXTtcbiAgICAgICAgc2VsZi5tb250aEVsZW1lbnRzID0gW107XG4gICAgICAgIHNlbGYucHJldk1vbnRoTmF2ID0gY3JlYXRlRWxlbWVudChcInNwYW5cIiwgXCJmbGF0cGlja3ItcHJldi1tb250aFwiKTtcbiAgICAgICAgc2VsZi5wcmV2TW9udGhOYXYuaW5uZXJIVE1MID0gc2VsZi5jb25maWcucHJldkFycm93O1xuICAgICAgICBzZWxmLm5leHRNb250aE5hdiA9IGNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsIFwiZmxhdHBpY2tyLW5leHQtbW9udGhcIik7XG4gICAgICAgIHNlbGYubmV4dE1vbnRoTmF2LmlubmVySFRNTCA9IHNlbGYuY29uZmlnLm5leHRBcnJvdztcbiAgICAgICAgYnVpbGRNb250aHMoKTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHNlbGYsIFwiX2hpZGVQcmV2TW9udGhBcnJvd1wiLCB7XG4gICAgICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHNlbGYuX19oaWRlUHJldk1vbnRoQXJyb3c7IH0sXG4gICAgICAgICAgICBzZXQ6IGZ1bmN0aW9uIChib29sKSB7XG4gICAgICAgICAgICAgICAgaWYgKHNlbGYuX19oaWRlUHJldk1vbnRoQXJyb3cgIT09IGJvb2wpIHtcbiAgICAgICAgICAgICAgICAgICAgdG9nZ2xlQ2xhc3Moc2VsZi5wcmV2TW9udGhOYXYsIFwiZmxhdHBpY2tyLWRpc2FibGVkXCIsIGJvb2wpO1xuICAgICAgICAgICAgICAgICAgICBzZWxmLl9faGlkZVByZXZNb250aEFycm93ID0gYm9vbDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LFxuICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHNlbGYsIFwiX2hpZGVOZXh0TW9udGhBcnJvd1wiLCB7XG4gICAgICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHNlbGYuX19oaWRlTmV4dE1vbnRoQXJyb3c7IH0sXG4gICAgICAgICAgICBzZXQ6IGZ1bmN0aW9uIChib29sKSB7XG4gICAgICAgICAgICAgICAgaWYgKHNlbGYuX19oaWRlTmV4dE1vbnRoQXJyb3cgIT09IGJvb2wpIHtcbiAgICAgICAgICAgICAgICAgICAgdG9nZ2xlQ2xhc3Moc2VsZi5uZXh0TW9udGhOYXYsIFwiZmxhdHBpY2tyLWRpc2FibGVkXCIsIGJvb2wpO1xuICAgICAgICAgICAgICAgICAgICBzZWxmLl9faGlkZU5leHRNb250aEFycm93ID0gYm9vbDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LFxuICAgICAgICB9KTtcbiAgICAgICAgc2VsZi5jdXJyZW50WWVhckVsZW1lbnQgPSBzZWxmLnllYXJFbGVtZW50c1swXTtcbiAgICAgICAgdXBkYXRlTmF2aWdhdGlvbkN1cnJlbnRNb250aCgpO1xuICAgICAgICByZXR1cm4gc2VsZi5tb250aE5hdjtcbiAgICB9XG4gICAgZnVuY3Rpb24gYnVpbGRUaW1lKCkge1xuICAgICAgICBzZWxmLmNhbGVuZGFyQ29udGFpbmVyLmNsYXNzTGlzdC5hZGQoXCJoYXNUaW1lXCIpO1xuICAgICAgICBpZiAoc2VsZi5jb25maWcubm9DYWxlbmRhcilcbiAgICAgICAgICAgIHNlbGYuY2FsZW5kYXJDb250YWluZXIuY2xhc3NMaXN0LmFkZChcIm5vQ2FsZW5kYXJcIik7XG4gICAgICAgIHZhciBkZWZhdWx0cyA9IGdldERlZmF1bHRIb3VycyhzZWxmLmNvbmZpZyk7XG4gICAgICAgIHNlbGYudGltZUNvbnRhaW5lciA9IGNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgXCJmbGF0cGlja3ItdGltZVwiKTtcbiAgICAgICAgc2VsZi50aW1lQ29udGFpbmVyLnRhYkluZGV4ID0gLTE7XG4gICAgICAgIHZhciBzZXBhcmF0b3IgPSBjcmVhdGVFbGVtZW50KFwic3BhblwiLCBcImZsYXRwaWNrci10aW1lLXNlcGFyYXRvclwiLCBcIjpcIik7XG4gICAgICAgIHZhciBob3VySW5wdXQgPSBjcmVhdGVOdW1iZXJJbnB1dChcImZsYXRwaWNrci1ob3VyXCIsIHtcbiAgICAgICAgICAgIFwiYXJpYS1sYWJlbFwiOiBzZWxmLmwxMG4uaG91ckFyaWFMYWJlbCxcbiAgICAgICAgfSk7XG4gICAgICAgIHNlbGYuaG91ckVsZW1lbnQgPSBob3VySW5wdXQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJpbnB1dFwiKVswXTtcbiAgICAgICAgdmFyIG1pbnV0ZUlucHV0ID0gY3JlYXRlTnVtYmVySW5wdXQoXCJmbGF0cGlja3ItbWludXRlXCIsIHtcbiAgICAgICAgICAgIFwiYXJpYS1sYWJlbFwiOiBzZWxmLmwxMG4ubWludXRlQXJpYUxhYmVsLFxuICAgICAgICB9KTtcbiAgICAgICAgc2VsZi5taW51dGVFbGVtZW50ID0gbWludXRlSW5wdXQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJpbnB1dFwiKVswXTtcbiAgICAgICAgc2VsZi5ob3VyRWxlbWVudC50YWJJbmRleCA9IHNlbGYubWludXRlRWxlbWVudC50YWJJbmRleCA9IC0xO1xuICAgICAgICBzZWxmLmhvdXJFbGVtZW50LnZhbHVlID0gcGFkKHNlbGYubGF0ZXN0U2VsZWN0ZWREYXRlT2JqXG4gICAgICAgICAgICA/IHNlbGYubGF0ZXN0U2VsZWN0ZWREYXRlT2JqLmdldEhvdXJzKClcbiAgICAgICAgICAgIDogc2VsZi5jb25maWcudGltZV8yNGhyXG4gICAgICAgICAgICAgICAgPyBkZWZhdWx0cy5ob3Vyc1xuICAgICAgICAgICAgICAgIDogbWlsaXRhcnkyYW1wbShkZWZhdWx0cy5ob3VycykpO1xuICAgICAgICBzZWxmLm1pbnV0ZUVsZW1lbnQudmFsdWUgPSBwYWQoc2VsZi5sYXRlc3RTZWxlY3RlZERhdGVPYmpcbiAgICAgICAgICAgID8gc2VsZi5sYXRlc3RTZWxlY3RlZERhdGVPYmouZ2V0TWludXRlcygpXG4gICAgICAgICAgICA6IGRlZmF1bHRzLm1pbnV0ZXMpO1xuICAgICAgICBzZWxmLmhvdXJFbGVtZW50LnNldEF0dHJpYnV0ZShcInN0ZXBcIiwgc2VsZi5jb25maWcuaG91ckluY3JlbWVudC50b1N0cmluZygpKTtcbiAgICAgICAgc2VsZi5taW51dGVFbGVtZW50LnNldEF0dHJpYnV0ZShcInN0ZXBcIiwgc2VsZi5jb25maWcubWludXRlSW5jcmVtZW50LnRvU3RyaW5nKCkpO1xuICAgICAgICBzZWxmLmhvdXJFbGVtZW50LnNldEF0dHJpYnV0ZShcIm1pblwiLCBzZWxmLmNvbmZpZy50aW1lXzI0aHIgPyBcIjBcIiA6IFwiMVwiKTtcbiAgICAgICAgc2VsZi5ob3VyRWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJtYXhcIiwgc2VsZi5jb25maWcudGltZV8yNGhyID8gXCIyM1wiIDogXCIxMlwiKTtcbiAgICAgICAgc2VsZi5ob3VyRWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJtYXhsZW5ndGhcIiwgXCIyXCIpO1xuICAgICAgICBzZWxmLm1pbnV0ZUVsZW1lbnQuc2V0QXR0cmlidXRlKFwibWluXCIsIFwiMFwiKTtcbiAgICAgICAgc2VsZi5taW51dGVFbGVtZW50LnNldEF0dHJpYnV0ZShcIm1heFwiLCBcIjU5XCIpO1xuICAgICAgICBzZWxmLm1pbnV0ZUVsZW1lbnQuc2V0QXR0cmlidXRlKFwibWF4bGVuZ3RoXCIsIFwiMlwiKTtcbiAgICAgICAgc2VsZi50aW1lQ29udGFpbmVyLmFwcGVuZENoaWxkKGhvdXJJbnB1dCk7XG4gICAgICAgIHNlbGYudGltZUNvbnRhaW5lci5hcHBlbmRDaGlsZChzZXBhcmF0b3IpO1xuICAgICAgICBzZWxmLnRpbWVDb250YWluZXIuYXBwZW5kQ2hpbGQobWludXRlSW5wdXQpO1xuICAgICAgICBpZiAoc2VsZi5jb25maWcudGltZV8yNGhyKVxuICAgICAgICAgICAgc2VsZi50aW1lQ29udGFpbmVyLmNsYXNzTGlzdC5hZGQoXCJ0aW1lMjRoclwiKTtcbiAgICAgICAgaWYgKHNlbGYuY29uZmlnLmVuYWJsZVNlY29uZHMpIHtcbiAgICAgICAgICAgIHNlbGYudGltZUNvbnRhaW5lci5jbGFzc0xpc3QuYWRkKFwiaGFzU2Vjb25kc1wiKTtcbiAgICAgICAgICAgIHZhciBzZWNvbmRJbnB1dCA9IGNyZWF0ZU51bWJlcklucHV0KFwiZmxhdHBpY2tyLXNlY29uZFwiKTtcbiAgICAgICAgICAgIHNlbGYuc2Vjb25kRWxlbWVudCA9IHNlY29uZElucHV0LmdldEVsZW1lbnRzQnlUYWdOYW1lKFwiaW5wdXRcIilbMF07XG4gICAgICAgICAgICBzZWxmLnNlY29uZEVsZW1lbnQudmFsdWUgPSBwYWQoc2VsZi5sYXRlc3RTZWxlY3RlZERhdGVPYmpcbiAgICAgICAgICAgICAgICA/IHNlbGYubGF0ZXN0U2VsZWN0ZWREYXRlT2JqLmdldFNlY29uZHMoKVxuICAgICAgICAgICAgICAgIDogZGVmYXVsdHMuc2Vjb25kcyk7XG4gICAgICAgICAgICBzZWxmLnNlY29uZEVsZW1lbnQuc2V0QXR0cmlidXRlKFwic3RlcFwiLCBzZWxmLm1pbnV0ZUVsZW1lbnQuZ2V0QXR0cmlidXRlKFwic3RlcFwiKSk7XG4gICAgICAgICAgICBzZWxmLnNlY29uZEVsZW1lbnQuc2V0QXR0cmlidXRlKFwibWluXCIsIFwiMFwiKTtcbiAgICAgICAgICAgIHNlbGYuc2Vjb25kRWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJtYXhcIiwgXCI1OVwiKTtcbiAgICAgICAgICAgIHNlbGYuc2Vjb25kRWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJtYXhsZW5ndGhcIiwgXCIyXCIpO1xuICAgICAgICAgICAgc2VsZi50aW1lQ29udGFpbmVyLmFwcGVuZENoaWxkKGNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsIFwiZmxhdHBpY2tyLXRpbWUtc2VwYXJhdG9yXCIsIFwiOlwiKSk7XG4gICAgICAgICAgICBzZWxmLnRpbWVDb250YWluZXIuYXBwZW5kQ2hpbGQoc2Vjb25kSW5wdXQpO1xuICAgICAgICB9XG4gICAgICAgIGlmICghc2VsZi5jb25maWcudGltZV8yNGhyKSB7XG4gICAgICAgICAgICBzZWxmLmFtUE0gPSBjcmVhdGVFbGVtZW50KFwic3BhblwiLCBcImZsYXRwaWNrci1hbS1wbVwiLCBzZWxmLmwxMG4uYW1QTVtpbnQoKHNlbGYubGF0ZXN0U2VsZWN0ZWREYXRlT2JqXG4gICAgICAgICAgICAgICAgPyBzZWxmLmhvdXJFbGVtZW50LnZhbHVlXG4gICAgICAgICAgICAgICAgOiBzZWxmLmNvbmZpZy5kZWZhdWx0SG91cikgPiAxMSldKTtcbiAgICAgICAgICAgIHNlbGYuYW1QTS50aXRsZSA9IHNlbGYubDEwbi50b2dnbGVUaXRsZTtcbiAgICAgICAgICAgIHNlbGYuYW1QTS50YWJJbmRleCA9IC0xO1xuICAgICAgICAgICAgc2VsZi50aW1lQ29udGFpbmVyLmFwcGVuZENoaWxkKHNlbGYuYW1QTSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHNlbGYudGltZUNvbnRhaW5lcjtcbiAgICB9XG4gICAgZnVuY3Rpb24gYnVpbGRXZWVrZGF5cygpIHtcbiAgICAgICAgaWYgKCFzZWxmLndlZWtkYXlDb250YWluZXIpXG4gICAgICAgICAgICBzZWxmLndlZWtkYXlDb250YWluZXIgPSBjcmVhdGVFbGVtZW50KFwiZGl2XCIsIFwiZmxhdHBpY2tyLXdlZWtkYXlzXCIpO1xuICAgICAgICBlbHNlXG4gICAgICAgICAgICBjbGVhck5vZGUoc2VsZi53ZWVrZGF5Q29udGFpbmVyKTtcbiAgICAgICAgZm9yICh2YXIgaSA9IHNlbGYuY29uZmlnLnNob3dNb250aHM7IGktLTspIHtcbiAgICAgICAgICAgIHZhciBjb250YWluZXIgPSBjcmVhdGVFbGVtZW50KFwiZGl2XCIsIFwiZmxhdHBpY2tyLXdlZWtkYXljb250YWluZXJcIik7XG4gICAgICAgICAgICBzZWxmLndlZWtkYXlDb250YWluZXIuYXBwZW5kQ2hpbGQoY29udGFpbmVyKTtcbiAgICAgICAgfVxuICAgICAgICB1cGRhdGVXZWVrZGF5cygpO1xuICAgICAgICByZXR1cm4gc2VsZi53ZWVrZGF5Q29udGFpbmVyO1xuICAgIH1cbiAgICBmdW5jdGlvbiB1cGRhdGVXZWVrZGF5cygpIHtcbiAgICAgICAgaWYgKCFzZWxmLndlZWtkYXlDb250YWluZXIpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICB2YXIgZmlyc3REYXlPZldlZWsgPSBzZWxmLmwxMG4uZmlyc3REYXlPZldlZWs7XG4gICAgICAgIHZhciB3ZWVrZGF5cyA9IF9fc3ByZWFkQXJyYXlzKHNlbGYubDEwbi53ZWVrZGF5cy5zaG9ydGhhbmQpO1xuICAgICAgICBpZiAoZmlyc3REYXlPZldlZWsgPiAwICYmIGZpcnN0RGF5T2ZXZWVrIDwgd2Vla2RheXMubGVuZ3RoKSB7XG4gICAgICAgICAgICB3ZWVrZGF5cyA9IF9fc3ByZWFkQXJyYXlzKHdlZWtkYXlzLnNwbGljZShmaXJzdERheU9mV2Vlaywgd2Vla2RheXMubGVuZ3RoKSwgd2Vla2RheXMuc3BsaWNlKDAsIGZpcnN0RGF5T2ZXZWVrKSk7XG4gICAgICAgIH1cbiAgICAgICAgZm9yICh2YXIgaSA9IHNlbGYuY29uZmlnLnNob3dNb250aHM7IGktLTspIHtcbiAgICAgICAgICAgIHNlbGYud2Vla2RheUNvbnRhaW5lci5jaGlsZHJlbltpXS5pbm5lckhUTUwgPSBcIlxcbiAgICAgIDxzcGFuIGNsYXNzPSdmbGF0cGlja3Itd2Vla2RheSc+XFxuICAgICAgICBcIiArIHdlZWtkYXlzLmpvaW4oXCI8L3NwYW4+PHNwYW4gY2xhc3M9J2ZsYXRwaWNrci13ZWVrZGF5Jz5cIikgKyBcIlxcbiAgICAgIDwvc3Bhbj5cXG4gICAgICBcIjtcbiAgICAgICAgfVxuICAgIH1cbiAgICBmdW5jdGlvbiBidWlsZFdlZWtzKCkge1xuICAgICAgICBzZWxmLmNhbGVuZGFyQ29udGFpbmVyLmNsYXNzTGlzdC5hZGQoXCJoYXNXZWVrc1wiKTtcbiAgICAgICAgdmFyIHdlZWtXcmFwcGVyID0gY3JlYXRlRWxlbWVudChcImRpdlwiLCBcImZsYXRwaWNrci13ZWVrd3JhcHBlclwiKTtcbiAgICAgICAgd2Vla1dyYXBwZXIuYXBwZW5kQ2hpbGQoY3JlYXRlRWxlbWVudChcInNwYW5cIiwgXCJmbGF0cGlja3Itd2Vla2RheVwiLCBzZWxmLmwxMG4ud2Vla0FiYnJldmlhdGlvbikpO1xuICAgICAgICB2YXIgd2Vla051bWJlcnMgPSBjcmVhdGVFbGVtZW50KFwiZGl2XCIsIFwiZmxhdHBpY2tyLXdlZWtzXCIpO1xuICAgICAgICB3ZWVrV3JhcHBlci5hcHBlbmRDaGlsZCh3ZWVrTnVtYmVycyk7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICB3ZWVrV3JhcHBlcjogd2Vla1dyYXBwZXIsXG4gICAgICAgICAgICB3ZWVrTnVtYmVyczogd2Vla051bWJlcnMsXG4gICAgICAgIH07XG4gICAgfVxuICAgIGZ1bmN0aW9uIGNoYW5nZU1vbnRoKHZhbHVlLCBpc09mZnNldCkge1xuICAgICAgICBpZiAoaXNPZmZzZXQgPT09IHZvaWQgMCkgeyBpc09mZnNldCA9IHRydWU7IH1cbiAgICAgICAgdmFyIGRlbHRhID0gaXNPZmZzZXQgPyB2YWx1ZSA6IHZhbHVlIC0gc2VsZi5jdXJyZW50TW9udGg7XG4gICAgICAgIGlmICgoZGVsdGEgPCAwICYmIHNlbGYuX2hpZGVQcmV2TW9udGhBcnJvdyA9PT0gdHJ1ZSkgfHxcbiAgICAgICAgICAgIChkZWx0YSA+IDAgJiYgc2VsZi5faGlkZU5leHRNb250aEFycm93ID09PSB0cnVlKSlcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgc2VsZi5jdXJyZW50TW9udGggKz0gZGVsdGE7XG4gICAgICAgIGlmIChzZWxmLmN1cnJlbnRNb250aCA8IDAgfHwgc2VsZi5jdXJyZW50TW9udGggPiAxMSkge1xuICAgICAgICAgICAgc2VsZi5jdXJyZW50WWVhciArPSBzZWxmLmN1cnJlbnRNb250aCA+IDExID8gMSA6IC0xO1xuICAgICAgICAgICAgc2VsZi5jdXJyZW50TW9udGggPSAoc2VsZi5jdXJyZW50TW9udGggKyAxMikgJSAxMjtcbiAgICAgICAgICAgIHRyaWdnZXJFdmVudChcIm9uWWVhckNoYW5nZVwiKTtcbiAgICAgICAgICAgIGJ1aWxkTW9udGhTd2l0Y2goKTtcbiAgICAgICAgfVxuICAgICAgICBidWlsZERheXMoKTtcbiAgICAgICAgdHJpZ2dlckV2ZW50KFwib25Nb250aENoYW5nZVwiKTtcbiAgICAgICAgdXBkYXRlTmF2aWdhdGlvbkN1cnJlbnRNb250aCgpO1xuICAgIH1cbiAgICBmdW5jdGlvbiBjbGVhcih0cmlnZ2VyQ2hhbmdlRXZlbnQsIHRvSW5pdGlhbCkge1xuICAgICAgICBpZiAodHJpZ2dlckNoYW5nZUV2ZW50ID09PSB2b2lkIDApIHsgdHJpZ2dlckNoYW5nZUV2ZW50ID0gdHJ1ZTsgfVxuICAgICAgICBpZiAodG9Jbml0aWFsID09PSB2b2lkIDApIHsgdG9Jbml0aWFsID0gdHJ1ZTsgfVxuICAgICAgICBzZWxmLmlucHV0LnZhbHVlID0gXCJcIjtcbiAgICAgICAgaWYgKHNlbGYuYWx0SW5wdXQgIT09IHVuZGVmaW5lZClcbiAgICAgICAgICAgIHNlbGYuYWx0SW5wdXQudmFsdWUgPSBcIlwiO1xuICAgICAgICBpZiAoc2VsZi5tb2JpbGVJbnB1dCAhPT0gdW5kZWZpbmVkKVxuICAgICAgICAgICAgc2VsZi5tb2JpbGVJbnB1dC52YWx1ZSA9IFwiXCI7XG4gICAgICAgIHNlbGYuc2VsZWN0ZWREYXRlcyA9IFtdO1xuICAgICAgICBzZWxmLmxhdGVzdFNlbGVjdGVkRGF0ZU9iaiA9IHVuZGVmaW5lZDtcbiAgICAgICAgaWYgKHRvSW5pdGlhbCA9PT0gdHJ1ZSkge1xuICAgICAgICAgICAgc2VsZi5jdXJyZW50WWVhciA9IHNlbGYuX2luaXRpYWxEYXRlLmdldEZ1bGxZZWFyKCk7XG4gICAgICAgICAgICBzZWxmLmN1cnJlbnRNb250aCA9IHNlbGYuX2luaXRpYWxEYXRlLmdldE1vbnRoKCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHNlbGYuY29uZmlnLmVuYWJsZVRpbWUgPT09IHRydWUpIHtcbiAgICAgICAgICAgIHZhciBfYSA9IGdldERlZmF1bHRIb3VycyhzZWxmLmNvbmZpZyksIGhvdXJzID0gX2EuaG91cnMsIG1pbnV0ZXMgPSBfYS5taW51dGVzLCBzZWNvbmRzID0gX2Euc2Vjb25kcztcbiAgICAgICAgICAgIHNldEhvdXJzKGhvdXJzLCBtaW51dGVzLCBzZWNvbmRzKTtcbiAgICAgICAgfVxuICAgICAgICBzZWxmLnJlZHJhdygpO1xuICAgICAgICBpZiAodHJpZ2dlckNoYW5nZUV2ZW50KVxuICAgICAgICAgICAgdHJpZ2dlckV2ZW50KFwib25DaGFuZ2VcIik7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGNsb3NlKCkge1xuICAgICAgICBzZWxmLmlzT3BlbiA9IGZhbHNlO1xuICAgICAgICBpZiAoIXNlbGYuaXNNb2JpbGUpIHtcbiAgICAgICAgICAgIGlmIChzZWxmLmNhbGVuZGFyQ29udGFpbmVyICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICBzZWxmLmNhbGVuZGFyQ29udGFpbmVyLmNsYXNzTGlzdC5yZW1vdmUoXCJvcGVuXCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHNlbGYuX2lucHV0ICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICBzZWxmLl9pbnB1dC5jbGFzc0xpc3QucmVtb3ZlKFwiYWN0aXZlXCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHRyaWdnZXJFdmVudChcIm9uQ2xvc2VcIik7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGRlc3Ryb3koKSB7XG4gICAgICAgIGlmIChzZWxmLmNvbmZpZyAhPT0gdW5kZWZpbmVkKVxuICAgICAgICAgICAgdHJpZ2dlckV2ZW50KFwib25EZXN0cm95XCIpO1xuICAgICAgICBmb3IgKHZhciBpID0gc2VsZi5faGFuZGxlcnMubGVuZ3RoOyBpLS07KSB7XG4gICAgICAgICAgICBzZWxmLl9oYW5kbGVyc1tpXS5yZW1vdmUoKTtcbiAgICAgICAgfVxuICAgICAgICBzZWxmLl9oYW5kbGVycyA9IFtdO1xuICAgICAgICBpZiAoc2VsZi5tb2JpbGVJbnB1dCkge1xuICAgICAgICAgICAgaWYgKHNlbGYubW9iaWxlSW5wdXQucGFyZW50Tm9kZSlcbiAgICAgICAgICAgICAgICBzZWxmLm1vYmlsZUlucHV0LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc2VsZi5tb2JpbGVJbnB1dCk7XG4gICAgICAgICAgICBzZWxmLm1vYmlsZUlucHV0ID0gdW5kZWZpbmVkO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHNlbGYuY2FsZW5kYXJDb250YWluZXIgJiYgc2VsZi5jYWxlbmRhckNvbnRhaW5lci5wYXJlbnROb2RlKSB7XG4gICAgICAgICAgICBpZiAoc2VsZi5jb25maWcuc3RhdGljICYmIHNlbGYuY2FsZW5kYXJDb250YWluZXIucGFyZW50Tm9kZSkge1xuICAgICAgICAgICAgICAgIHZhciB3cmFwcGVyID0gc2VsZi5jYWxlbmRhckNvbnRhaW5lci5wYXJlbnROb2RlO1xuICAgICAgICAgICAgICAgIHdyYXBwZXIubGFzdENoaWxkICYmIHdyYXBwZXIucmVtb3ZlQ2hpbGQod3JhcHBlci5sYXN0Q2hpbGQpO1xuICAgICAgICAgICAgICAgIGlmICh3cmFwcGVyLnBhcmVudE5vZGUpIHtcbiAgICAgICAgICAgICAgICAgICAgd2hpbGUgKHdyYXBwZXIuZmlyc3RDaGlsZClcbiAgICAgICAgICAgICAgICAgICAgICAgIHdyYXBwZXIucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUod3JhcHBlci5maXJzdENoaWxkLCB3cmFwcGVyKTtcbiAgICAgICAgICAgICAgICAgICAgd3JhcHBlci5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHdyYXBwZXIpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2VcbiAgICAgICAgICAgICAgICBzZWxmLmNhbGVuZGFyQ29udGFpbmVyLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc2VsZi5jYWxlbmRhckNvbnRhaW5lcik7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHNlbGYuYWx0SW5wdXQpIHtcbiAgICAgICAgICAgIHNlbGYuaW5wdXQudHlwZSA9IFwidGV4dFwiO1xuICAgICAgICAgICAgaWYgKHNlbGYuYWx0SW5wdXQucGFyZW50Tm9kZSlcbiAgICAgICAgICAgICAgICBzZWxmLmFsdElucHV0LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc2VsZi5hbHRJbnB1dCk7XG4gICAgICAgICAgICBkZWxldGUgc2VsZi5hbHRJbnB1dDtcbiAgICAgICAgfVxuICAgICAgICBpZiAoc2VsZi5pbnB1dCkge1xuICAgICAgICAgICAgc2VsZi5pbnB1dC50eXBlID0gc2VsZi5pbnB1dC5fdHlwZTtcbiAgICAgICAgICAgIHNlbGYuaW5wdXQuY2xhc3NMaXN0LnJlbW92ZShcImZsYXRwaWNrci1pbnB1dFwiKTtcbiAgICAgICAgICAgIHNlbGYuaW5wdXQucmVtb3ZlQXR0cmlidXRlKFwicmVhZG9ubHlcIik7XG4gICAgICAgIH1cbiAgICAgICAgW1xuICAgICAgICAgICAgXCJfc2hvd1RpbWVJbnB1dFwiLFxuICAgICAgICAgICAgXCJsYXRlc3RTZWxlY3RlZERhdGVPYmpcIixcbiAgICAgICAgICAgIFwiX2hpZGVOZXh0TW9udGhBcnJvd1wiLFxuICAgICAgICAgICAgXCJfaGlkZVByZXZNb250aEFycm93XCIsXG4gICAgICAgICAgICBcIl9faGlkZU5leHRNb250aEFycm93XCIsXG4gICAgICAgICAgICBcIl9faGlkZVByZXZNb250aEFycm93XCIsXG4gICAgICAgICAgICBcImlzTW9iaWxlXCIsXG4gICAgICAgICAgICBcImlzT3BlblwiLFxuICAgICAgICAgICAgXCJzZWxlY3RlZERhdGVFbGVtXCIsXG4gICAgICAgICAgICBcIm1pbkRhdGVIYXNUaW1lXCIsXG4gICAgICAgICAgICBcIm1heERhdGVIYXNUaW1lXCIsXG4gICAgICAgICAgICBcImRheXNcIixcbiAgICAgICAgICAgIFwiZGF5c0NvbnRhaW5lclwiLFxuICAgICAgICAgICAgXCJfaW5wdXRcIixcbiAgICAgICAgICAgIFwiX3Bvc2l0aW9uRWxlbWVudFwiLFxuICAgICAgICAgICAgXCJpbm5lckNvbnRhaW5lclwiLFxuICAgICAgICAgICAgXCJyQ29udGFpbmVyXCIsXG4gICAgICAgICAgICBcIm1vbnRoTmF2XCIsXG4gICAgICAgICAgICBcInRvZGF5RGF0ZUVsZW1cIixcbiAgICAgICAgICAgIFwiY2FsZW5kYXJDb250YWluZXJcIixcbiAgICAgICAgICAgIFwid2Vla2RheUNvbnRhaW5lclwiLFxuICAgICAgICAgICAgXCJwcmV2TW9udGhOYXZcIixcbiAgICAgICAgICAgIFwibmV4dE1vbnRoTmF2XCIsXG4gICAgICAgICAgICBcIm1vbnRoc0Ryb3Bkb3duQ29udGFpbmVyXCIsXG4gICAgICAgICAgICBcImN1cnJlbnRNb250aEVsZW1lbnRcIixcbiAgICAgICAgICAgIFwiY3VycmVudFllYXJFbGVtZW50XCIsXG4gICAgICAgICAgICBcIm5hdmlnYXRpb25DdXJyZW50TW9udGhcIixcbiAgICAgICAgICAgIFwic2VsZWN0ZWREYXRlRWxlbVwiLFxuICAgICAgICAgICAgXCJjb25maWdcIixcbiAgICAgICAgXS5mb3JFYWNoKGZ1bmN0aW9uIChrKSB7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIGRlbGV0ZSBzZWxmW2tdO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY2F0Y2ggKF8pIHsgfVxuICAgICAgICB9KTtcbiAgICB9XG4gICAgZnVuY3Rpb24gaXNDYWxlbmRhckVsZW0oZWxlbSkge1xuICAgICAgICByZXR1cm4gc2VsZi5jYWxlbmRhckNvbnRhaW5lci5jb250YWlucyhlbGVtKTtcbiAgICB9XG4gICAgZnVuY3Rpb24gZG9jdW1lbnRDbGljayhlKSB7XG4gICAgICAgIGlmIChzZWxmLmlzT3BlbiAmJiAhc2VsZi5jb25maWcuaW5saW5lKSB7XG4gICAgICAgICAgICB2YXIgZXZlbnRUYXJnZXRfMSA9IGdldEV2ZW50VGFyZ2V0KGUpO1xuICAgICAgICAgICAgdmFyIGlzQ2FsZW5kYXJFbGVtZW50ID0gaXNDYWxlbmRhckVsZW0oZXZlbnRUYXJnZXRfMSk7XG4gICAgICAgICAgICB2YXIgaXNJbnB1dCA9IGV2ZW50VGFyZ2V0XzEgPT09IHNlbGYuaW5wdXQgfHxcbiAgICAgICAgICAgICAgICBldmVudFRhcmdldF8xID09PSBzZWxmLmFsdElucHV0IHx8XG4gICAgICAgICAgICAgICAgc2VsZi5lbGVtZW50LmNvbnRhaW5zKGV2ZW50VGFyZ2V0XzEpIHx8XG4gICAgICAgICAgICAgICAgKGUucGF0aCAmJlxuICAgICAgICAgICAgICAgICAgICBlLnBhdGguaW5kZXhPZiAmJlxuICAgICAgICAgICAgICAgICAgICAofmUucGF0aC5pbmRleE9mKHNlbGYuaW5wdXQpIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICB+ZS5wYXRoLmluZGV4T2Yoc2VsZi5hbHRJbnB1dCkpKTtcbiAgICAgICAgICAgIHZhciBsb3N0Rm9jdXMgPSAhaXNJbnB1dCAmJlxuICAgICAgICAgICAgICAgICFpc0NhbGVuZGFyRWxlbWVudCAmJlxuICAgICAgICAgICAgICAgICFpc0NhbGVuZGFyRWxlbShlLnJlbGF0ZWRUYXJnZXQpO1xuICAgICAgICAgICAgdmFyIGlzSWdub3JlZCA9ICFzZWxmLmNvbmZpZy5pZ25vcmVkRm9jdXNFbGVtZW50cy5zb21lKGZ1bmN0aW9uIChlbGVtKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGVsZW0uY29udGFpbnMoZXZlbnRUYXJnZXRfMSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIGlmIChsb3N0Rm9jdXMgJiYgaXNJZ25vcmVkKSB7XG4gICAgICAgICAgICAgICAgaWYgKHNlbGYuY29uZmlnLmFsbG93SW5wdXQpIHtcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5zZXREYXRlKHNlbGYuX2lucHV0LnZhbHVlLCBmYWxzZSwgc2VsZi5jb25maWcuYWx0SW5wdXRcbiAgICAgICAgICAgICAgICAgICAgICAgID8gc2VsZi5jb25maWcuYWx0Rm9ybWF0XG4gICAgICAgICAgICAgICAgICAgICAgICA6IHNlbGYuY29uZmlnLmRhdGVGb3JtYXQpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoc2VsZi50aW1lQ29udGFpbmVyICE9PSB1bmRlZmluZWQgJiZcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5taW51dGVFbGVtZW50ICE9PSB1bmRlZmluZWQgJiZcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5ob3VyRWxlbWVudCAhPT0gdW5kZWZpbmVkICYmXG4gICAgICAgICAgICAgICAgICAgIHNlbGYuaW5wdXQudmFsdWUgIT09IFwiXCIgJiZcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5pbnB1dC52YWx1ZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgICAgIHVwZGF0ZVRpbWUoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgc2VsZi5jbG9zZSgpO1xuICAgICAgICAgICAgICAgIGlmIChzZWxmLmNvbmZpZyAmJlxuICAgICAgICAgICAgICAgICAgICBzZWxmLmNvbmZpZy5tb2RlID09PSBcInJhbmdlXCIgJiZcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5zZWxlY3RlZERhdGVzLmxlbmd0aCA9PT0gMSlcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5jbGVhcihmYWxzZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgZnVuY3Rpb24gY2hhbmdlWWVhcihuZXdZZWFyKSB7XG4gICAgICAgIGlmICghbmV3WWVhciB8fFxuICAgICAgICAgICAgKHNlbGYuY29uZmlnLm1pbkRhdGUgJiYgbmV3WWVhciA8IHNlbGYuY29uZmlnLm1pbkRhdGUuZ2V0RnVsbFllYXIoKSkgfHxcbiAgICAgICAgICAgIChzZWxmLmNvbmZpZy5tYXhEYXRlICYmIG5ld1llYXIgPiBzZWxmLmNvbmZpZy5tYXhEYXRlLmdldEZ1bGxZZWFyKCkpKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB2YXIgbmV3WWVhck51bSA9IG5ld1llYXIsIGlzTmV3WWVhciA9IHNlbGYuY3VycmVudFllYXIgIT09IG5ld1llYXJOdW07XG4gICAgICAgIHNlbGYuY3VycmVudFllYXIgPSBuZXdZZWFyTnVtIHx8IHNlbGYuY3VycmVudFllYXI7XG4gICAgICAgIGlmIChzZWxmLmNvbmZpZy5tYXhEYXRlICYmXG4gICAgICAgICAgICBzZWxmLmN1cnJlbnRZZWFyID09PSBzZWxmLmNvbmZpZy5tYXhEYXRlLmdldEZ1bGxZZWFyKCkpIHtcbiAgICAgICAgICAgIHNlbGYuY3VycmVudE1vbnRoID0gTWF0aC5taW4oc2VsZi5jb25maWcubWF4RGF0ZS5nZXRNb250aCgpLCBzZWxmLmN1cnJlbnRNb250aCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoc2VsZi5jb25maWcubWluRGF0ZSAmJlxuICAgICAgICAgICAgc2VsZi5jdXJyZW50WWVhciA9PT0gc2VsZi5jb25maWcubWluRGF0ZS5nZXRGdWxsWWVhcigpKSB7XG4gICAgICAgICAgICBzZWxmLmN1cnJlbnRNb250aCA9IE1hdGgubWF4KHNlbGYuY29uZmlnLm1pbkRhdGUuZ2V0TW9udGgoKSwgc2VsZi5jdXJyZW50TW9udGgpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChpc05ld1llYXIpIHtcbiAgICAgICAgICAgIHNlbGYucmVkcmF3KCk7XG4gICAgICAgICAgICB0cmlnZ2VyRXZlbnQoXCJvblllYXJDaGFuZ2VcIik7XG4gICAgICAgICAgICBidWlsZE1vbnRoU3dpdGNoKCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZnVuY3Rpb24gaXNFbmFibGVkKGRhdGUsIHRpbWVsZXNzKSB7XG4gICAgICAgIHZhciBfYTtcbiAgICAgICAgaWYgKHRpbWVsZXNzID09PSB2b2lkIDApIHsgdGltZWxlc3MgPSB0cnVlOyB9XG4gICAgICAgIHZhciBkYXRlVG9DaGVjayA9IHNlbGYucGFyc2VEYXRlKGRhdGUsIHVuZGVmaW5lZCwgdGltZWxlc3MpO1xuICAgICAgICBpZiAoKHNlbGYuY29uZmlnLm1pbkRhdGUgJiZcbiAgICAgICAgICAgIGRhdGVUb0NoZWNrICYmXG4gICAgICAgICAgICBjb21wYXJlRGF0ZXMoZGF0ZVRvQ2hlY2ssIHNlbGYuY29uZmlnLm1pbkRhdGUsIHRpbWVsZXNzICE9PSB1bmRlZmluZWQgPyB0aW1lbGVzcyA6ICFzZWxmLm1pbkRhdGVIYXNUaW1lKSA8IDApIHx8XG4gICAgICAgICAgICAoc2VsZi5jb25maWcubWF4RGF0ZSAmJlxuICAgICAgICAgICAgICAgIGRhdGVUb0NoZWNrICYmXG4gICAgICAgICAgICAgICAgY29tcGFyZURhdGVzKGRhdGVUb0NoZWNrLCBzZWxmLmNvbmZpZy5tYXhEYXRlLCB0aW1lbGVzcyAhPT0gdW5kZWZpbmVkID8gdGltZWxlc3MgOiAhc2VsZi5tYXhEYXRlSGFzVGltZSkgPiAwKSlcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgaWYgKCFzZWxmLmNvbmZpZy5lbmFibGUgJiYgc2VsZi5jb25maWcuZGlzYWJsZS5sZW5ndGggPT09IDApXG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgaWYgKGRhdGVUb0NoZWNrID09PSB1bmRlZmluZWQpXG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIHZhciBib29sID0gISFzZWxmLmNvbmZpZy5lbmFibGUsIGFycmF5ID0gKF9hID0gc2VsZi5jb25maWcuZW5hYmxlKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBzZWxmLmNvbmZpZy5kaXNhYmxlO1xuICAgICAgICBmb3IgKHZhciBpID0gMCwgZCA9IHZvaWQgMDsgaSA8IGFycmF5Lmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBkID0gYXJyYXlbaV07XG4gICAgICAgICAgICBpZiAodHlwZW9mIGQgPT09IFwiZnVuY3Rpb25cIiAmJlxuICAgICAgICAgICAgICAgIGQoZGF0ZVRvQ2hlY2spKVxuICAgICAgICAgICAgICAgIHJldHVybiBib29sO1xuICAgICAgICAgICAgZWxzZSBpZiAoZCBpbnN0YW5jZW9mIERhdGUgJiZcbiAgICAgICAgICAgICAgICBkYXRlVG9DaGVjayAhPT0gdW5kZWZpbmVkICYmXG4gICAgICAgICAgICAgICAgZC5nZXRUaW1lKCkgPT09IGRhdGVUb0NoZWNrLmdldFRpbWUoKSlcbiAgICAgICAgICAgICAgICByZXR1cm4gYm9vbDtcbiAgICAgICAgICAgIGVsc2UgaWYgKHR5cGVvZiBkID09PSBcInN0cmluZ1wiKSB7XG4gICAgICAgICAgICAgICAgdmFyIHBhcnNlZCA9IHNlbGYucGFyc2VEYXRlKGQsIHVuZGVmaW5lZCwgdHJ1ZSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHBhcnNlZCAmJiBwYXJzZWQuZ2V0VGltZSgpID09PSBkYXRlVG9DaGVjay5nZXRUaW1lKClcbiAgICAgICAgICAgICAgICAgICAgPyBib29sXG4gICAgICAgICAgICAgICAgICAgIDogIWJvb2w7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmICh0eXBlb2YgZCA9PT0gXCJvYmplY3RcIiAmJlxuICAgICAgICAgICAgICAgIGRhdGVUb0NoZWNrICE9PSB1bmRlZmluZWQgJiZcbiAgICAgICAgICAgICAgICBkLmZyb20gJiZcbiAgICAgICAgICAgICAgICBkLnRvICYmXG4gICAgICAgICAgICAgICAgZGF0ZVRvQ2hlY2suZ2V0VGltZSgpID49IGQuZnJvbS5nZXRUaW1lKCkgJiZcbiAgICAgICAgICAgICAgICBkYXRlVG9DaGVjay5nZXRUaW1lKCkgPD0gZC50by5nZXRUaW1lKCkpXG4gICAgICAgICAgICAgICAgcmV0dXJuIGJvb2w7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuICFib29sO1xuICAgIH1cbiAgICBmdW5jdGlvbiBpc0luVmlldyhlbGVtKSB7XG4gICAgICAgIGlmIChzZWxmLmRheXNDb250YWluZXIgIT09IHVuZGVmaW5lZClcbiAgICAgICAgICAgIHJldHVybiAoZWxlbS5jbGFzc05hbWUuaW5kZXhPZihcImhpZGRlblwiKSA9PT0gLTEgJiZcbiAgICAgICAgICAgICAgICBlbGVtLmNsYXNzTmFtZS5pbmRleE9mKFwiZmxhdHBpY2tyLWRpc2FibGVkXCIpID09PSAtMSAmJlxuICAgICAgICAgICAgICAgIHNlbGYuZGF5c0NvbnRhaW5lci5jb250YWlucyhlbGVtKSk7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgZnVuY3Rpb24gb25CbHVyKGUpIHtcbiAgICAgICAgdmFyIGlzSW5wdXQgPSBlLnRhcmdldCA9PT0gc2VsZi5faW5wdXQ7XG4gICAgICAgIHZhciB2YWx1ZUNoYW5nZWQgPSBzZWxmLl9pbnB1dC52YWx1ZS50cmltRW5kKCkgIT09IGdldERhdGVTdHIoKTtcbiAgICAgICAgaWYgKGlzSW5wdXQgJiZcbiAgICAgICAgICAgIHZhbHVlQ2hhbmdlZCAmJlxuICAgICAgICAgICAgIShlLnJlbGF0ZWRUYXJnZXQgJiYgaXNDYWxlbmRhckVsZW0oZS5yZWxhdGVkVGFyZ2V0KSkpIHtcbiAgICAgICAgICAgIHNlbGYuc2V0RGF0ZShzZWxmLl9pbnB1dC52YWx1ZSwgdHJ1ZSwgZS50YXJnZXQgPT09IHNlbGYuYWx0SW5wdXRcbiAgICAgICAgICAgICAgICA/IHNlbGYuY29uZmlnLmFsdEZvcm1hdFxuICAgICAgICAgICAgICAgIDogc2VsZi5jb25maWcuZGF0ZUZvcm1hdCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZnVuY3Rpb24gb25LZXlEb3duKGUpIHtcbiAgICAgICAgdmFyIGV2ZW50VGFyZ2V0ID0gZ2V0RXZlbnRUYXJnZXQoZSk7XG4gICAgICAgIHZhciBpc0lucHV0ID0gc2VsZi5jb25maWcud3JhcFxuICAgICAgICAgICAgPyBlbGVtZW50LmNvbnRhaW5zKGV2ZW50VGFyZ2V0KVxuICAgICAgICAgICAgOiBldmVudFRhcmdldCA9PT0gc2VsZi5faW5wdXQ7XG4gICAgICAgIHZhciBhbGxvd0lucHV0ID0gc2VsZi5jb25maWcuYWxsb3dJbnB1dDtcbiAgICAgICAgdmFyIGFsbG93S2V5ZG93biA9IHNlbGYuaXNPcGVuICYmICghYWxsb3dJbnB1dCB8fCAhaXNJbnB1dCk7XG4gICAgICAgIHZhciBhbGxvd0lubGluZUtleWRvd24gPSBzZWxmLmNvbmZpZy5pbmxpbmUgJiYgaXNJbnB1dCAmJiAhYWxsb3dJbnB1dDtcbiAgICAgICAgaWYgKGUua2V5Q29kZSA9PT0gMTMgJiYgaXNJbnB1dCkge1xuICAgICAgICAgICAgaWYgKGFsbG93SW5wdXQpIHtcbiAgICAgICAgICAgICAgICBzZWxmLnNldERhdGUoc2VsZi5faW5wdXQudmFsdWUsIHRydWUsIGV2ZW50VGFyZ2V0ID09PSBzZWxmLmFsdElucHV0XG4gICAgICAgICAgICAgICAgICAgID8gc2VsZi5jb25maWcuYWx0Rm9ybWF0XG4gICAgICAgICAgICAgICAgICAgIDogc2VsZi5jb25maWcuZGF0ZUZvcm1hdCk7XG4gICAgICAgICAgICAgICAgc2VsZi5jbG9zZSgpO1xuICAgICAgICAgICAgICAgIHJldHVybiBldmVudFRhcmdldC5ibHVyKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBzZWxmLm9wZW4oKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChpc0NhbGVuZGFyRWxlbShldmVudFRhcmdldCkgfHxcbiAgICAgICAgICAgIGFsbG93S2V5ZG93biB8fFxuICAgICAgICAgICAgYWxsb3dJbmxpbmVLZXlkb3duKSB7XG4gICAgICAgICAgICB2YXIgaXNUaW1lT2JqID0gISFzZWxmLnRpbWVDb250YWluZXIgJiZcbiAgICAgICAgICAgICAgICBzZWxmLnRpbWVDb250YWluZXIuY29udGFpbnMoZXZlbnRUYXJnZXQpO1xuICAgICAgICAgICAgc3dpdGNoIChlLmtleUNvZGUpIHtcbiAgICAgICAgICAgICAgICBjYXNlIDEzOlxuICAgICAgICAgICAgICAgICAgICBpZiAoaXNUaW1lT2JqKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB1cGRhdGVUaW1lKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBmb2N1c0FuZENsb3NlKCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZVxuICAgICAgICAgICAgICAgICAgICAgICAgc2VsZWN0RGF0ZShlKTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSAyNzpcbiAgICAgICAgICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgICAgICAgICBmb2N1c0FuZENsb3NlKCk7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgODpcbiAgICAgICAgICAgICAgICBjYXNlIDQ2OlxuICAgICAgICAgICAgICAgICAgICBpZiAoaXNJbnB1dCAmJiAhc2VsZi5jb25maWcuYWxsb3dJbnB1dCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgc2VsZi5jbGVhcigpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgMzc6XG4gICAgICAgICAgICAgICAgY2FzZSAzOTpcbiAgICAgICAgICAgICAgICAgICAgaWYgKCFpc1RpbWVPYmogJiYgIWlzSW5wdXQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBhY3RpdmVFbGVtZW50ID0gZ2V0Q2xvc2VzdEFjdGl2ZUVsZW1lbnQoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzZWxmLmRheXNDb250YWluZXIgIT09IHVuZGVmaW5lZCAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIChhbGxvd0lucHV0ID09PSBmYWxzZSB8fFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoYWN0aXZlRWxlbWVudCAmJiBpc0luVmlldyhhY3RpdmVFbGVtZW50KSkpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGRlbHRhXzEgPSBlLmtleUNvZGUgPT09IDM5ID8gMSA6IC0xO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICghZS5jdHJsS2V5KVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb2N1c09uRGF5KHVuZGVmaW5lZCwgZGVsdGFfMSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoYW5nZU1vbnRoKGRlbHRhXzEpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb2N1c09uRGF5KGdldEZpcnN0QXZhaWxhYmxlRGF5KDEpLCAwKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSBpZiAoc2VsZi5ob3VyRWxlbWVudClcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlbGYuaG91ckVsZW1lbnQuZm9jdXMoKTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSAzODpcbiAgICAgICAgICAgICAgICBjYXNlIDQwOlxuICAgICAgICAgICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICAgICAgICAgIHZhciBkZWx0YSA9IGUua2V5Q29kZSA9PT0gNDAgPyAxIDogLTE7XG4gICAgICAgICAgICAgICAgICAgIGlmICgoc2VsZi5kYXlzQ29udGFpbmVyICYmXG4gICAgICAgICAgICAgICAgICAgICAgICBldmVudFRhcmdldC4kaSAhPT0gdW5kZWZpbmVkKSB8fFxuICAgICAgICAgICAgICAgICAgICAgICAgZXZlbnRUYXJnZXQgPT09IHNlbGYuaW5wdXQgfHxcbiAgICAgICAgICAgICAgICAgICAgICAgIGV2ZW50VGFyZ2V0ID09PSBzZWxmLmFsdElucHV0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoZS5jdHJsS2V5KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGFuZ2VZZWFyKHNlbGYuY3VycmVudFllYXIgLSBkZWx0YSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9jdXNPbkRheShnZXRGaXJzdEF2YWlsYWJsZURheSgxKSwgMCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBlbHNlIGlmICghaXNUaW1lT2JqKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvY3VzT25EYXkodW5kZWZpbmVkLCBkZWx0YSAqIDcpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2UgaWYgKGV2ZW50VGFyZ2V0ID09PSBzZWxmLmN1cnJlbnRZZWFyRWxlbWVudCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgY2hhbmdlWWVhcihzZWxmLmN1cnJlbnRZZWFyIC0gZGVsdGEpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2UgaWYgKHNlbGYuY29uZmlnLmVuYWJsZVRpbWUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICghaXNUaW1lT2JqICYmIHNlbGYuaG91ckVsZW1lbnQpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VsZi5ob3VyRWxlbWVudC5mb2N1cygpO1xuICAgICAgICAgICAgICAgICAgICAgICAgdXBkYXRlVGltZShlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlbGYuX2RlYm91bmNlZENoYW5nZSgpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgOTpcbiAgICAgICAgICAgICAgICAgICAgaWYgKGlzVGltZU9iaikge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGVsZW1zID0gW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlbGYuaG91ckVsZW1lbnQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VsZi5taW51dGVFbGVtZW50LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlbGYuc2Vjb25kRWxlbWVudCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZWxmLmFtUE0sXG4gICAgICAgICAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLmNvbmNhdChzZWxmLnBsdWdpbkVsZW1lbnRzKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5maWx0ZXIoZnVuY3Rpb24gKHgpIHsgcmV0dXJuIHg7IH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGkgPSBlbGVtcy5pbmRleE9mKGV2ZW50VGFyZ2V0KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpICE9PSAtMSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciB0YXJnZXQgPSBlbGVtc1tpICsgKGUuc2hpZnRLZXkgPyAtMSA6IDEpXTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKHRhcmdldCB8fCBzZWxmLl9pbnB1dCkuZm9jdXMoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlIGlmICghc2VsZi5jb25maWcubm9DYWxlbmRhciAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgc2VsZi5kYXlzQ29udGFpbmVyICYmXG4gICAgICAgICAgICAgICAgICAgICAgICBzZWxmLmRheXNDb250YWluZXIuY29udGFpbnMoZXZlbnRUYXJnZXQpICYmXG4gICAgICAgICAgICAgICAgICAgICAgICBlLnNoaWZ0S2V5KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBzZWxmLl9pbnB1dC5mb2N1cygpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmIChzZWxmLmFtUE0gIT09IHVuZGVmaW5lZCAmJiBldmVudFRhcmdldCA9PT0gc2VsZi5hbVBNKSB7XG4gICAgICAgICAgICBzd2l0Y2ggKGUua2V5KSB7XG4gICAgICAgICAgICAgICAgY2FzZSBzZWxmLmwxMG4uYW1QTVswXS5jaGFyQXQoMCk6XG4gICAgICAgICAgICAgICAgY2FzZSBzZWxmLmwxMG4uYW1QTVswXS5jaGFyQXQoMCkudG9Mb3dlckNhc2UoKTpcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5hbVBNLnRleHRDb250ZW50ID0gc2VsZi5sMTBuLmFtUE1bMF07XG4gICAgICAgICAgICAgICAgICAgIHNldEhvdXJzRnJvbUlucHV0cygpO1xuICAgICAgICAgICAgICAgICAgICB1cGRhdGVWYWx1ZSgpO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlIHNlbGYubDEwbi5hbVBNWzFdLmNoYXJBdCgwKTpcbiAgICAgICAgICAgICAgICBjYXNlIHNlbGYubDEwbi5hbVBNWzFdLmNoYXJBdCgwKS50b0xvd2VyQ2FzZSgpOlxuICAgICAgICAgICAgICAgICAgICBzZWxmLmFtUE0udGV4dENvbnRlbnQgPSBzZWxmLmwxMG4uYW1QTVsxXTtcbiAgICAgICAgICAgICAgICAgICAgc2V0SG91cnNGcm9tSW5wdXRzKCk7XG4gICAgICAgICAgICAgICAgICAgIHVwZGF0ZVZhbHVlKCk7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmIChpc0lucHV0IHx8IGlzQ2FsZW5kYXJFbGVtKGV2ZW50VGFyZ2V0KSkge1xuICAgICAgICAgICAgdHJpZ2dlckV2ZW50KFwib25LZXlEb3duXCIsIGUpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGZ1bmN0aW9uIG9uTW91c2VPdmVyKGVsZW0sIGNlbGxDbGFzcykge1xuICAgICAgICBpZiAoY2VsbENsYXNzID09PSB2b2lkIDApIHsgY2VsbENsYXNzID0gXCJmbGF0cGlja3ItZGF5XCI7IH1cbiAgICAgICAgaWYgKHNlbGYuc2VsZWN0ZWREYXRlcy5sZW5ndGggIT09IDEgfHxcbiAgICAgICAgICAgIChlbGVtICYmXG4gICAgICAgICAgICAgICAgKCFlbGVtLmNsYXNzTGlzdC5jb250YWlucyhjZWxsQ2xhc3MpIHx8XG4gICAgICAgICAgICAgICAgICAgIGVsZW0uY2xhc3NMaXN0LmNvbnRhaW5zKFwiZmxhdHBpY2tyLWRpc2FibGVkXCIpKSkpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIHZhciBob3ZlckRhdGUgPSBlbGVtXG4gICAgICAgICAgICA/IGVsZW0uZGF0ZU9iai5nZXRUaW1lKClcbiAgICAgICAgICAgIDogc2VsZi5kYXlzLmZpcnN0RWxlbWVudENoaWxkLmRhdGVPYmouZ2V0VGltZSgpLCBpbml0aWFsRGF0ZSA9IHNlbGYucGFyc2VEYXRlKHNlbGYuc2VsZWN0ZWREYXRlc1swXSwgdW5kZWZpbmVkLCB0cnVlKS5nZXRUaW1lKCksIHJhbmdlU3RhcnREYXRlID0gTWF0aC5taW4oaG92ZXJEYXRlLCBzZWxmLnNlbGVjdGVkRGF0ZXNbMF0uZ2V0VGltZSgpKSwgcmFuZ2VFbmREYXRlID0gTWF0aC5tYXgoaG92ZXJEYXRlLCBzZWxmLnNlbGVjdGVkRGF0ZXNbMF0uZ2V0VGltZSgpKTtcbiAgICAgICAgdmFyIGNvbnRhaW5zRGlzYWJsZWQgPSBmYWxzZTtcbiAgICAgICAgdmFyIG1pblJhbmdlID0gMCwgbWF4UmFuZ2UgPSAwO1xuICAgICAgICBmb3IgKHZhciB0ID0gcmFuZ2VTdGFydERhdGU7IHQgPCByYW5nZUVuZERhdGU7IHQgKz0gZHVyYXRpb24uREFZKSB7XG4gICAgICAgICAgICBpZiAoIWlzRW5hYmxlZChuZXcgRGF0ZSh0KSwgdHJ1ZSkpIHtcbiAgICAgICAgICAgICAgICBjb250YWluc0Rpc2FibGVkID1cbiAgICAgICAgICAgICAgICAgICAgY29udGFpbnNEaXNhYmxlZCB8fCAodCA+IHJhbmdlU3RhcnREYXRlICYmIHQgPCByYW5nZUVuZERhdGUpO1xuICAgICAgICAgICAgICAgIGlmICh0IDwgaW5pdGlhbERhdGUgJiYgKCFtaW5SYW5nZSB8fCB0ID4gbWluUmFuZ2UpKVxuICAgICAgICAgICAgICAgICAgICBtaW5SYW5nZSA9IHQ7XG4gICAgICAgICAgICAgICAgZWxzZSBpZiAodCA+IGluaXRpYWxEYXRlICYmICghbWF4UmFuZ2UgfHwgdCA8IG1heFJhbmdlKSlcbiAgICAgICAgICAgICAgICAgICAgbWF4UmFuZ2UgPSB0O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHZhciBob3ZlcmFibGVDZWxscyA9IEFycmF5LmZyb20oc2VsZi5yQ29udGFpbmVyLnF1ZXJ5U2VsZWN0b3JBbGwoXCIqOm50aC1jaGlsZCgtbitcIiArIHNlbGYuY29uZmlnLnNob3dNb250aHMgKyBcIikgPiAuXCIgKyBjZWxsQ2xhc3MpKTtcbiAgICAgICAgaG92ZXJhYmxlQ2VsbHMuZm9yRWFjaChmdW5jdGlvbiAoZGF5RWxlbSkge1xuICAgICAgICAgICAgdmFyIGRhdGUgPSBkYXlFbGVtLmRhdGVPYmo7XG4gICAgICAgICAgICB2YXIgdGltZXN0YW1wID0gZGF0ZS5nZXRUaW1lKCk7XG4gICAgICAgICAgICB2YXIgb3V0T2ZSYW5nZSA9IChtaW5SYW5nZSA+IDAgJiYgdGltZXN0YW1wIDwgbWluUmFuZ2UpIHx8XG4gICAgICAgICAgICAgICAgKG1heFJhbmdlID4gMCAmJiB0aW1lc3RhbXAgPiBtYXhSYW5nZSk7XG4gICAgICAgICAgICBpZiAob3V0T2ZSYW5nZSkge1xuICAgICAgICAgICAgICAgIGRheUVsZW0uY2xhc3NMaXN0LmFkZChcIm5vdEFsbG93ZWRcIik7XG4gICAgICAgICAgICAgICAgW1wiaW5SYW5nZVwiLCBcInN0YXJ0UmFuZ2VcIiwgXCJlbmRSYW5nZVwiXS5mb3JFYWNoKGZ1bmN0aW9uIChjKSB7XG4gICAgICAgICAgICAgICAgICAgIGRheUVsZW0uY2xhc3NMaXN0LnJlbW92ZShjKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmIChjb250YWluc0Rpc2FibGVkICYmICFvdXRPZlJhbmdlKVxuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIFtcInN0YXJ0UmFuZ2VcIiwgXCJpblJhbmdlXCIsIFwiZW5kUmFuZ2VcIiwgXCJub3RBbGxvd2VkXCJdLmZvckVhY2goZnVuY3Rpb24gKGMpIHtcbiAgICAgICAgICAgICAgICBkYXlFbGVtLmNsYXNzTGlzdC5yZW1vdmUoYyk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIGlmIChlbGVtICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICBlbGVtLmNsYXNzTGlzdC5hZGQoaG92ZXJEYXRlIDw9IHNlbGYuc2VsZWN0ZWREYXRlc1swXS5nZXRUaW1lKClcbiAgICAgICAgICAgICAgICAgICAgPyBcInN0YXJ0UmFuZ2VcIlxuICAgICAgICAgICAgICAgICAgICA6IFwiZW5kUmFuZ2VcIik7XG4gICAgICAgICAgICAgICAgaWYgKGluaXRpYWxEYXRlIDwgaG92ZXJEYXRlICYmIHRpbWVzdGFtcCA9PT0gaW5pdGlhbERhdGUpXG4gICAgICAgICAgICAgICAgICAgIGRheUVsZW0uY2xhc3NMaXN0LmFkZChcInN0YXJ0UmFuZ2VcIik7XG4gICAgICAgICAgICAgICAgZWxzZSBpZiAoaW5pdGlhbERhdGUgPiBob3ZlckRhdGUgJiYgdGltZXN0YW1wID09PSBpbml0aWFsRGF0ZSlcbiAgICAgICAgICAgICAgICAgICAgZGF5RWxlbS5jbGFzc0xpc3QuYWRkKFwiZW5kUmFuZ2VcIik7XG4gICAgICAgICAgICAgICAgaWYgKHRpbWVzdGFtcCA+PSBtaW5SYW5nZSAmJlxuICAgICAgICAgICAgICAgICAgICAobWF4UmFuZ2UgPT09IDAgfHwgdGltZXN0YW1wIDw9IG1heFJhbmdlKSAmJlxuICAgICAgICAgICAgICAgICAgICBpc0JldHdlZW4odGltZXN0YW1wLCBpbml0aWFsRGF0ZSwgaG92ZXJEYXRlKSlcbiAgICAgICAgICAgICAgICAgICAgZGF5RWxlbS5jbGFzc0xpc3QuYWRkKFwiaW5SYW5nZVwiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIG9uUmVzaXplKCkge1xuICAgICAgICBpZiAoc2VsZi5pc09wZW4gJiYgIXNlbGYuY29uZmlnLnN0YXRpYyAmJiAhc2VsZi5jb25maWcuaW5saW5lKVxuICAgICAgICAgICAgcG9zaXRpb25DYWxlbmRhcigpO1xuICAgIH1cbiAgICBmdW5jdGlvbiBvcGVuKGUsIHBvc2l0aW9uRWxlbWVudCkge1xuICAgICAgICBpZiAocG9zaXRpb25FbGVtZW50ID09PSB2b2lkIDApIHsgcG9zaXRpb25FbGVtZW50ID0gc2VsZi5fcG9zaXRpb25FbGVtZW50OyB9XG4gICAgICAgIGlmIChzZWxmLmlzTW9iaWxlID09PSB0cnVlKSB7XG4gICAgICAgICAgICBpZiAoZSkge1xuICAgICAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgICAgICB2YXIgZXZlbnRUYXJnZXQgPSBnZXRFdmVudFRhcmdldChlKTtcbiAgICAgICAgICAgICAgICBpZiAoZXZlbnRUYXJnZXQpIHtcbiAgICAgICAgICAgICAgICAgICAgZXZlbnRUYXJnZXQuYmx1cigpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChzZWxmLm1vYmlsZUlucHV0ICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICBzZWxmLm1vYmlsZUlucHV0LmZvY3VzKCk7XG4gICAgICAgICAgICAgICAgc2VsZi5tb2JpbGVJbnB1dC5jbGljaygpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdHJpZ2dlckV2ZW50KFwib25PcGVuXCIpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHNlbGYuX2lucHV0LmRpc2FibGVkIHx8IHNlbGYuY29uZmlnLmlubGluZSkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHZhciB3YXNPcGVuID0gc2VsZi5pc09wZW47XG4gICAgICAgIHNlbGYuaXNPcGVuID0gdHJ1ZTtcbiAgICAgICAgaWYgKCF3YXNPcGVuKSB7XG4gICAgICAgICAgICBzZWxmLmNhbGVuZGFyQ29udGFpbmVyLmNsYXNzTGlzdC5hZGQoXCJvcGVuXCIpO1xuICAgICAgICAgICAgc2VsZi5faW5wdXQuY2xhc3NMaXN0LmFkZChcImFjdGl2ZVwiKTtcbiAgICAgICAgICAgIHRyaWdnZXJFdmVudChcIm9uT3BlblwiKTtcbiAgICAgICAgICAgIHBvc2l0aW9uQ2FsZW5kYXIocG9zaXRpb25FbGVtZW50KTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoc2VsZi5jb25maWcuZW5hYmxlVGltZSA9PT0gdHJ1ZSAmJiBzZWxmLmNvbmZpZy5ub0NhbGVuZGFyID09PSB0cnVlKSB7XG4gICAgICAgICAgICBpZiAoc2VsZi5jb25maWcuYWxsb3dJbnB1dCA9PT0gZmFsc2UgJiZcbiAgICAgICAgICAgICAgICAoZSA9PT0gdW5kZWZpbmVkIHx8XG4gICAgICAgICAgICAgICAgICAgICFzZWxmLnRpbWVDb250YWluZXIuY29udGFpbnMoZS5yZWxhdGVkVGFyZ2V0KSkpIHtcbiAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsgcmV0dXJuIHNlbGYuaG91ckVsZW1lbnQuc2VsZWN0KCk7IH0sIDUwKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBmdW5jdGlvbiBtaW5NYXhEYXRlU2V0dGVyKHR5cGUpIHtcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uIChkYXRlKSB7XG4gICAgICAgICAgICB2YXIgZGF0ZU9iaiA9IChzZWxmLmNvbmZpZ1tcIl9cIiArIHR5cGUgKyBcIkRhdGVcIl0gPSBzZWxmLnBhcnNlRGF0ZShkYXRlLCBzZWxmLmNvbmZpZy5kYXRlRm9ybWF0KSk7XG4gICAgICAgICAgICB2YXIgaW52ZXJzZURhdGVPYmogPSBzZWxmLmNvbmZpZ1tcIl9cIiArICh0eXBlID09PSBcIm1pblwiID8gXCJtYXhcIiA6IFwibWluXCIpICsgXCJEYXRlXCJdO1xuICAgICAgICAgICAgaWYgKGRhdGVPYmogIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgIHNlbGZbdHlwZSA9PT0gXCJtaW5cIiA/IFwibWluRGF0ZUhhc1RpbWVcIiA6IFwibWF4RGF0ZUhhc1RpbWVcIl0gPVxuICAgICAgICAgICAgICAgICAgICBkYXRlT2JqLmdldEhvdXJzKCkgPiAwIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICBkYXRlT2JqLmdldE1pbnV0ZXMoKSA+IDAgfHxcbiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGVPYmouZ2V0U2Vjb25kcygpID4gMDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChzZWxmLnNlbGVjdGVkRGF0ZXMpIHtcbiAgICAgICAgICAgICAgICBzZWxmLnNlbGVjdGVkRGF0ZXMgPSBzZWxmLnNlbGVjdGVkRGF0ZXMuZmlsdGVyKGZ1bmN0aW9uIChkKSB7IHJldHVybiBpc0VuYWJsZWQoZCk7IH0pO1xuICAgICAgICAgICAgICAgIGlmICghc2VsZi5zZWxlY3RlZERhdGVzLmxlbmd0aCAmJiB0eXBlID09PSBcIm1pblwiKVxuICAgICAgICAgICAgICAgICAgICBzZXRIb3Vyc0Zyb21EYXRlKGRhdGVPYmopO1xuICAgICAgICAgICAgICAgIHVwZGF0ZVZhbHVlKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoc2VsZi5kYXlzQ29udGFpbmVyKSB7XG4gICAgICAgICAgICAgICAgcmVkcmF3KCk7XG4gICAgICAgICAgICAgICAgaWYgKGRhdGVPYmogIT09IHVuZGVmaW5lZClcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5jdXJyZW50WWVhckVsZW1lbnRbdHlwZV0gPSBkYXRlT2JqLmdldEZ1bGxZZWFyKCkudG9TdHJpbmcoKTtcbiAgICAgICAgICAgICAgICBlbHNlXG4gICAgICAgICAgICAgICAgICAgIHNlbGYuY3VycmVudFllYXJFbGVtZW50LnJlbW92ZUF0dHJpYnV0ZSh0eXBlKTtcbiAgICAgICAgICAgICAgICBzZWxmLmN1cnJlbnRZZWFyRWxlbWVudC5kaXNhYmxlZCA9XG4gICAgICAgICAgICAgICAgICAgICEhaW52ZXJzZURhdGVPYmogJiZcbiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGVPYmogIT09IHVuZGVmaW5lZCAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgaW52ZXJzZURhdGVPYmouZ2V0RnVsbFllYXIoKSA9PT0gZGF0ZU9iai5nZXRGdWxsWWVhcigpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgIH1cbiAgICBmdW5jdGlvbiBwYXJzZUNvbmZpZygpIHtcbiAgICAgICAgdmFyIGJvb2xPcHRzID0gW1xuICAgICAgICAgICAgXCJ3cmFwXCIsXG4gICAgICAgICAgICBcIndlZWtOdW1iZXJzXCIsXG4gICAgICAgICAgICBcImFsbG93SW5wdXRcIixcbiAgICAgICAgICAgIFwiYWxsb3dJbnZhbGlkUHJlbG9hZFwiLFxuICAgICAgICAgICAgXCJjbGlja09wZW5zXCIsXG4gICAgICAgICAgICBcInRpbWVfMjRoclwiLFxuICAgICAgICAgICAgXCJlbmFibGVUaW1lXCIsXG4gICAgICAgICAgICBcIm5vQ2FsZW5kYXJcIixcbiAgICAgICAgICAgIFwiYWx0SW5wdXRcIixcbiAgICAgICAgICAgIFwic2hvcnRoYW5kQ3VycmVudE1vbnRoXCIsXG4gICAgICAgICAgICBcImlubGluZVwiLFxuICAgICAgICAgICAgXCJzdGF0aWNcIixcbiAgICAgICAgICAgIFwiZW5hYmxlU2Vjb25kc1wiLFxuICAgICAgICAgICAgXCJkaXNhYmxlTW9iaWxlXCIsXG4gICAgICAgIF07XG4gICAgICAgIHZhciB1c2VyQ29uZmlnID0gX19hc3NpZ24oX19hc3NpZ24oe30sIEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkoZWxlbWVudC5kYXRhc2V0IHx8IHt9KSkpLCBpbnN0YW5jZUNvbmZpZyk7XG4gICAgICAgIHZhciBmb3JtYXRzID0ge307XG4gICAgICAgIHNlbGYuY29uZmlnLnBhcnNlRGF0ZSA9IHVzZXJDb25maWcucGFyc2VEYXRlO1xuICAgICAgICBzZWxmLmNvbmZpZy5mb3JtYXREYXRlID0gdXNlckNvbmZpZy5mb3JtYXREYXRlO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoc2VsZi5jb25maWcsIFwiZW5hYmxlXCIsIHtcbiAgICAgICAgICAgIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gc2VsZi5jb25maWcuX2VuYWJsZTsgfSxcbiAgICAgICAgICAgIHNldDogZnVuY3Rpb24gKGRhdGVzKSB7XG4gICAgICAgICAgICAgICAgc2VsZi5jb25maWcuX2VuYWJsZSA9IHBhcnNlRGF0ZVJ1bGVzKGRhdGVzKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoc2VsZi5jb25maWcsIFwiZGlzYWJsZVwiLCB7XG4gICAgICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHNlbGYuY29uZmlnLl9kaXNhYmxlOyB9LFxuICAgICAgICAgICAgc2V0OiBmdW5jdGlvbiAoZGF0ZXMpIHtcbiAgICAgICAgICAgICAgICBzZWxmLmNvbmZpZy5fZGlzYWJsZSA9IHBhcnNlRGF0ZVJ1bGVzKGRhdGVzKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH0pO1xuICAgICAgICB2YXIgdGltZU1vZGUgPSB1c2VyQ29uZmlnLm1vZGUgPT09IFwidGltZVwiO1xuICAgICAgICBpZiAoIXVzZXJDb25maWcuZGF0ZUZvcm1hdCAmJiAodXNlckNvbmZpZy5lbmFibGVUaW1lIHx8IHRpbWVNb2RlKSkge1xuICAgICAgICAgICAgdmFyIGRlZmF1bHREYXRlRm9ybWF0ID0gZmxhdHBpY2tyLmRlZmF1bHRDb25maWcuZGF0ZUZvcm1hdCB8fCBkZWZhdWx0T3B0aW9ucy5kYXRlRm9ybWF0O1xuICAgICAgICAgICAgZm9ybWF0cy5kYXRlRm9ybWF0ID1cbiAgICAgICAgICAgICAgICB1c2VyQ29uZmlnLm5vQ2FsZW5kYXIgfHwgdGltZU1vZGVcbiAgICAgICAgICAgICAgICAgICAgPyBcIkg6aVwiICsgKHVzZXJDb25maWcuZW5hYmxlU2Vjb25kcyA/IFwiOlNcIiA6IFwiXCIpXG4gICAgICAgICAgICAgICAgICAgIDogZGVmYXVsdERhdGVGb3JtYXQgKyBcIiBIOmlcIiArICh1c2VyQ29uZmlnLmVuYWJsZVNlY29uZHMgPyBcIjpTXCIgOiBcIlwiKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodXNlckNvbmZpZy5hbHRJbnB1dCAmJlxuICAgICAgICAgICAgKHVzZXJDb25maWcuZW5hYmxlVGltZSB8fCB0aW1lTW9kZSkgJiZcbiAgICAgICAgICAgICF1c2VyQ29uZmlnLmFsdEZvcm1hdCkge1xuICAgICAgICAgICAgdmFyIGRlZmF1bHRBbHRGb3JtYXQgPSBmbGF0cGlja3IuZGVmYXVsdENvbmZpZy5hbHRGb3JtYXQgfHwgZGVmYXVsdE9wdGlvbnMuYWx0Rm9ybWF0O1xuICAgICAgICAgICAgZm9ybWF0cy5hbHRGb3JtYXQgPVxuICAgICAgICAgICAgICAgIHVzZXJDb25maWcubm9DYWxlbmRhciB8fCB0aW1lTW9kZVxuICAgICAgICAgICAgICAgICAgICA/IFwiaDppXCIgKyAodXNlckNvbmZpZy5lbmFibGVTZWNvbmRzID8gXCI6UyBLXCIgOiBcIiBLXCIpXG4gICAgICAgICAgICAgICAgICAgIDogZGVmYXVsdEFsdEZvcm1hdCArIChcIiBoOmlcIiArICh1c2VyQ29uZmlnLmVuYWJsZVNlY29uZHMgPyBcIjpTXCIgOiBcIlwiKSArIFwiIEtcIik7XG4gICAgICAgIH1cbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHNlbGYuY29uZmlnLCBcIm1pbkRhdGVcIiwge1xuICAgICAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBzZWxmLmNvbmZpZy5fbWluRGF0ZTsgfSxcbiAgICAgICAgICAgIHNldDogbWluTWF4RGF0ZVNldHRlcihcIm1pblwiKSxcbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShzZWxmLmNvbmZpZywgXCJtYXhEYXRlXCIsIHtcbiAgICAgICAgICAgIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gc2VsZi5jb25maWcuX21heERhdGU7IH0sXG4gICAgICAgICAgICBzZXQ6IG1pbk1heERhdGVTZXR0ZXIoXCJtYXhcIiksXG4gICAgICAgIH0pO1xuICAgICAgICB2YXIgbWluTWF4VGltZVNldHRlciA9IGZ1bmN0aW9uICh0eXBlKSB7IHJldHVybiBmdW5jdGlvbiAodmFsKSB7XG4gICAgICAgICAgICBzZWxmLmNvbmZpZ1t0eXBlID09PSBcIm1pblwiID8gXCJfbWluVGltZVwiIDogXCJfbWF4VGltZVwiXSA9IHNlbGYucGFyc2VEYXRlKHZhbCwgXCJIOmk6U1wiKTtcbiAgICAgICAgfTsgfTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHNlbGYuY29uZmlnLCBcIm1pblRpbWVcIiwge1xuICAgICAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBzZWxmLmNvbmZpZy5fbWluVGltZTsgfSxcbiAgICAgICAgICAgIHNldDogbWluTWF4VGltZVNldHRlcihcIm1pblwiKSxcbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShzZWxmLmNvbmZpZywgXCJtYXhUaW1lXCIsIHtcbiAgICAgICAgICAgIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gc2VsZi5jb25maWcuX21heFRpbWU7IH0sXG4gICAgICAgICAgICBzZXQ6IG1pbk1heFRpbWVTZXR0ZXIoXCJtYXhcIiksXG4gICAgICAgIH0pO1xuICAgICAgICBpZiAodXNlckNvbmZpZy5tb2RlID09PSBcInRpbWVcIikge1xuICAgICAgICAgICAgc2VsZi5jb25maWcubm9DYWxlbmRhciA9IHRydWU7XG4gICAgICAgICAgICBzZWxmLmNvbmZpZy5lbmFibGVUaW1lID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICBPYmplY3QuYXNzaWduKHNlbGYuY29uZmlnLCBmb3JtYXRzLCB1c2VyQ29uZmlnKTtcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBib29sT3B0cy5sZW5ndGg7IGkrKylcbiAgICAgICAgICAgIHNlbGYuY29uZmlnW2Jvb2xPcHRzW2ldXSA9XG4gICAgICAgICAgICAgICAgc2VsZi5jb25maWdbYm9vbE9wdHNbaV1dID09PSB0cnVlIHx8XG4gICAgICAgICAgICAgICAgICAgIHNlbGYuY29uZmlnW2Jvb2xPcHRzW2ldXSA9PT0gXCJ0cnVlXCI7XG4gICAgICAgIEhPT0tTLmZpbHRlcihmdW5jdGlvbiAoaG9vaykgeyByZXR1cm4gc2VsZi5jb25maWdbaG9va10gIT09IHVuZGVmaW5lZDsgfSkuZm9yRWFjaChmdW5jdGlvbiAoaG9vaykge1xuICAgICAgICAgICAgc2VsZi5jb25maWdbaG9va10gPSBhcnJheWlmeShzZWxmLmNvbmZpZ1tob29rXSB8fCBbXSkubWFwKGJpbmRUb0luc3RhbmNlKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHNlbGYuaXNNb2JpbGUgPVxuICAgICAgICAgICAgIXNlbGYuY29uZmlnLmRpc2FibGVNb2JpbGUgJiZcbiAgICAgICAgICAgICAgICAhc2VsZi5jb25maWcuaW5saW5lICYmXG4gICAgICAgICAgICAgICAgc2VsZi5jb25maWcubW9kZSA9PT0gXCJzaW5nbGVcIiAmJlxuICAgICAgICAgICAgICAgICFzZWxmLmNvbmZpZy5kaXNhYmxlLmxlbmd0aCAmJlxuICAgICAgICAgICAgICAgICFzZWxmLmNvbmZpZy5lbmFibGUgJiZcbiAgICAgICAgICAgICAgICAhc2VsZi5jb25maWcud2Vla051bWJlcnMgJiZcbiAgICAgICAgICAgICAgICAvQW5kcm9pZHx3ZWJPU3xpUGhvbmV8aVBhZHxpUG9kfEJsYWNrQmVycnl8SUVNb2JpbGV8T3BlcmEgTWluaS9pLnRlc3QobmF2aWdhdG9yLnVzZXJBZ2VudCk7XG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgc2VsZi5jb25maWcucGx1Z2lucy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgdmFyIHBsdWdpbkNvbmYgPSBzZWxmLmNvbmZpZy5wbHVnaW5zW2ldKHNlbGYpIHx8IHt9O1xuICAgICAgICAgICAgZm9yICh2YXIga2V5IGluIHBsdWdpbkNvbmYpIHtcbiAgICAgICAgICAgICAgICBpZiAoSE9PS1MuaW5kZXhPZihrZXkpID4gLTEpIHtcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5jb25maWdba2V5XSA9IGFycmF5aWZ5KHBsdWdpbkNvbmZba2V5XSlcbiAgICAgICAgICAgICAgICAgICAgICAgIC5tYXAoYmluZFRvSW5zdGFuY2UpXG4gICAgICAgICAgICAgICAgICAgICAgICAuY29uY2F0KHNlbGYuY29uZmlnW2tleV0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIGlmICh0eXBlb2YgdXNlckNvbmZpZ1trZXldID09PSBcInVuZGVmaW5lZFwiKVxuICAgICAgICAgICAgICAgICAgICBzZWxmLmNvbmZpZ1trZXldID0gcGx1Z2luQ29uZltrZXldO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmICghdXNlckNvbmZpZy5hbHRJbnB1dENsYXNzKSB7XG4gICAgICAgICAgICBzZWxmLmNvbmZpZy5hbHRJbnB1dENsYXNzID1cbiAgICAgICAgICAgICAgICBnZXRJbnB1dEVsZW0oKS5jbGFzc05hbWUgKyBcIiBcIiArIHNlbGYuY29uZmlnLmFsdElucHV0Q2xhc3M7XG4gICAgICAgIH1cbiAgICAgICAgdHJpZ2dlckV2ZW50KFwib25QYXJzZUNvbmZpZ1wiKTtcbiAgICB9XG4gICAgZnVuY3Rpb24gZ2V0SW5wdXRFbGVtKCkge1xuICAgICAgICByZXR1cm4gc2VsZi5jb25maWcud3JhcFxuICAgICAgICAgICAgPyBlbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCJbZGF0YS1pbnB1dF1cIilcbiAgICAgICAgICAgIDogZWxlbWVudDtcbiAgICB9XG4gICAgZnVuY3Rpb24gc2V0dXBMb2NhbGUoKSB7XG4gICAgICAgIGlmICh0eXBlb2Ygc2VsZi5jb25maWcubG9jYWxlICE9PSBcIm9iamVjdFwiICYmXG4gICAgICAgICAgICB0eXBlb2YgZmxhdHBpY2tyLmwxMG5zW3NlbGYuY29uZmlnLmxvY2FsZV0gPT09IFwidW5kZWZpbmVkXCIpXG4gICAgICAgICAgICBzZWxmLmNvbmZpZy5lcnJvckhhbmRsZXIobmV3IEVycm9yKFwiZmxhdHBpY2tyOiBpbnZhbGlkIGxvY2FsZSBcIiArIHNlbGYuY29uZmlnLmxvY2FsZSkpO1xuICAgICAgICBzZWxmLmwxMG4gPSBfX2Fzc2lnbihfX2Fzc2lnbih7fSwgZmxhdHBpY2tyLmwxMG5zLmRlZmF1bHQpLCAodHlwZW9mIHNlbGYuY29uZmlnLmxvY2FsZSA9PT0gXCJvYmplY3RcIlxuICAgICAgICAgICAgPyBzZWxmLmNvbmZpZy5sb2NhbGVcbiAgICAgICAgICAgIDogc2VsZi5jb25maWcubG9jYWxlICE9PSBcImRlZmF1bHRcIlxuICAgICAgICAgICAgICAgID8gZmxhdHBpY2tyLmwxMG5zW3NlbGYuY29uZmlnLmxvY2FsZV1cbiAgICAgICAgICAgICAgICA6IHVuZGVmaW5lZCkpO1xuICAgICAgICB0b2tlblJlZ2V4LkQgPSBcIihcIiArIHNlbGYubDEwbi53ZWVrZGF5cy5zaG9ydGhhbmQuam9pbihcInxcIikgKyBcIilcIjtcbiAgICAgICAgdG9rZW5SZWdleC5sID0gXCIoXCIgKyBzZWxmLmwxMG4ud2Vla2RheXMubG9uZ2hhbmQuam9pbihcInxcIikgKyBcIilcIjtcbiAgICAgICAgdG9rZW5SZWdleC5NID0gXCIoXCIgKyBzZWxmLmwxMG4ubW9udGhzLnNob3J0aGFuZC5qb2luKFwifFwiKSArIFwiKVwiO1xuICAgICAgICB0b2tlblJlZ2V4LkYgPSBcIihcIiArIHNlbGYubDEwbi5tb250aHMubG9uZ2hhbmQuam9pbihcInxcIikgKyBcIilcIjtcbiAgICAgICAgdG9rZW5SZWdleC5LID0gXCIoXCIgKyBzZWxmLmwxMG4uYW1QTVswXSArIFwifFwiICsgc2VsZi5sMTBuLmFtUE1bMV0gKyBcInxcIiArIHNlbGYubDEwbi5hbVBNWzBdLnRvTG93ZXJDYXNlKCkgKyBcInxcIiArIHNlbGYubDEwbi5hbVBNWzFdLnRvTG93ZXJDYXNlKCkgKyBcIilcIjtcbiAgICAgICAgdmFyIHVzZXJDb25maWcgPSBfX2Fzc2lnbihfX2Fzc2lnbih7fSwgaW5zdGFuY2VDb25maWcpLCBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KGVsZW1lbnQuZGF0YXNldCB8fCB7fSkpKTtcbiAgICAgICAgaWYgKHVzZXJDb25maWcudGltZV8yNGhyID09PSB1bmRlZmluZWQgJiZcbiAgICAgICAgICAgIGZsYXRwaWNrci5kZWZhdWx0Q29uZmlnLnRpbWVfMjRociA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICBzZWxmLmNvbmZpZy50aW1lXzI0aHIgPSBzZWxmLmwxMG4udGltZV8yNGhyO1xuICAgICAgICB9XG4gICAgICAgIHNlbGYuZm9ybWF0RGF0ZSA9IGNyZWF0ZURhdGVGb3JtYXR0ZXIoc2VsZik7XG4gICAgICAgIHNlbGYucGFyc2VEYXRlID0gY3JlYXRlRGF0ZVBhcnNlcih7IGNvbmZpZzogc2VsZi5jb25maWcsIGwxMG46IHNlbGYubDEwbiB9KTtcbiAgICB9XG4gICAgZnVuY3Rpb24gcG9zaXRpb25DYWxlbmRhcihjdXN0b21Qb3NpdGlvbkVsZW1lbnQpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBzZWxmLmNvbmZpZy5wb3NpdGlvbiA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgICAgICByZXR1cm4gdm9pZCBzZWxmLmNvbmZpZy5wb3NpdGlvbihzZWxmLCBjdXN0b21Qb3NpdGlvbkVsZW1lbnQpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChzZWxmLmNhbGVuZGFyQ29udGFpbmVyID09PSB1bmRlZmluZWQpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIHRyaWdnZXJFdmVudChcIm9uUHJlQ2FsZW5kYXJQb3NpdGlvblwiKTtcbiAgICAgICAgdmFyIHBvc2l0aW9uRWxlbWVudCA9IGN1c3RvbVBvc2l0aW9uRWxlbWVudCB8fCBzZWxmLl9wb3NpdGlvbkVsZW1lbnQ7XG4gICAgICAgIHZhciBjYWxlbmRhckhlaWdodCA9IEFycmF5LnByb3RvdHlwZS5yZWR1Y2UuY2FsbChzZWxmLmNhbGVuZGFyQ29udGFpbmVyLmNoaWxkcmVuLCAoZnVuY3Rpb24gKGFjYywgY2hpbGQpIHsgcmV0dXJuIGFjYyArIGNoaWxkLm9mZnNldEhlaWdodDsgfSksIDApLCBjYWxlbmRhcldpZHRoID0gc2VsZi5jYWxlbmRhckNvbnRhaW5lci5vZmZzZXRXaWR0aCwgY29uZmlnUG9zID0gc2VsZi5jb25maWcucG9zaXRpb24uc3BsaXQoXCIgXCIpLCBjb25maWdQb3NWZXJ0aWNhbCA9IGNvbmZpZ1Bvc1swXSwgY29uZmlnUG9zSG9yaXpvbnRhbCA9IGNvbmZpZ1Bvcy5sZW5ndGggPiAxID8gY29uZmlnUG9zWzFdIDogbnVsbCwgaW5wdXRCb3VuZHMgPSBwb3NpdGlvbkVsZW1lbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCksIGRpc3RhbmNlRnJvbUJvdHRvbSA9IHdpbmRvdy5pbm5lckhlaWdodCAtIGlucHV0Qm91bmRzLmJvdHRvbSwgc2hvd09uVG9wID0gY29uZmlnUG9zVmVydGljYWwgPT09IFwiYWJvdmVcIiB8fFxuICAgICAgICAgICAgKGNvbmZpZ1Bvc1ZlcnRpY2FsICE9PSBcImJlbG93XCIgJiZcbiAgICAgICAgICAgICAgICBkaXN0YW5jZUZyb21Cb3R0b20gPCBjYWxlbmRhckhlaWdodCAmJlxuICAgICAgICAgICAgICAgIGlucHV0Qm91bmRzLnRvcCA+IGNhbGVuZGFySGVpZ2h0KTtcbiAgICAgICAgdmFyIHRvcCA9IHdpbmRvdy5wYWdlWU9mZnNldCArXG4gICAgICAgICAgICBpbnB1dEJvdW5kcy50b3AgK1xuICAgICAgICAgICAgKCFzaG93T25Ub3AgPyBwb3NpdGlvbkVsZW1lbnQub2Zmc2V0SGVpZ2h0ICsgMiA6IC1jYWxlbmRhckhlaWdodCAtIDIpO1xuICAgICAgICB0b2dnbGVDbGFzcyhzZWxmLmNhbGVuZGFyQ29udGFpbmVyLCBcImFycm93VG9wXCIsICFzaG93T25Ub3ApO1xuICAgICAgICB0b2dnbGVDbGFzcyhzZWxmLmNhbGVuZGFyQ29udGFpbmVyLCBcImFycm93Qm90dG9tXCIsIHNob3dPblRvcCk7XG4gICAgICAgIGlmIChzZWxmLmNvbmZpZy5pbmxpbmUpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIHZhciBsZWZ0ID0gd2luZG93LnBhZ2VYT2Zmc2V0ICsgaW5wdXRCb3VuZHMubGVmdDtcbiAgICAgICAgdmFyIGlzQ2VudGVyID0gZmFsc2U7XG4gICAgICAgIHZhciBpc1JpZ2h0ID0gZmFsc2U7XG4gICAgICAgIGlmIChjb25maWdQb3NIb3Jpem9udGFsID09PSBcImNlbnRlclwiKSB7XG4gICAgICAgICAgICBsZWZ0IC09IChjYWxlbmRhcldpZHRoIC0gaW5wdXRCb3VuZHMud2lkdGgpIC8gMjtcbiAgICAgICAgICAgIGlzQ2VudGVyID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChjb25maWdQb3NIb3Jpem9udGFsID09PSBcInJpZ2h0XCIpIHtcbiAgICAgICAgICAgIGxlZnQgLT0gY2FsZW5kYXJXaWR0aCAtIGlucHV0Qm91bmRzLndpZHRoO1xuICAgICAgICAgICAgaXNSaWdodCA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgdG9nZ2xlQ2xhc3Moc2VsZi5jYWxlbmRhckNvbnRhaW5lciwgXCJhcnJvd0xlZnRcIiwgIWlzQ2VudGVyICYmICFpc1JpZ2h0KTtcbiAgICAgICAgdG9nZ2xlQ2xhc3Moc2VsZi5jYWxlbmRhckNvbnRhaW5lciwgXCJhcnJvd0NlbnRlclwiLCBpc0NlbnRlcik7XG4gICAgICAgIHRvZ2dsZUNsYXNzKHNlbGYuY2FsZW5kYXJDb250YWluZXIsIFwiYXJyb3dSaWdodFwiLCBpc1JpZ2h0KTtcbiAgICAgICAgdmFyIHJpZ2h0ID0gd2luZG93LmRvY3VtZW50LmJvZHkub2Zmc2V0V2lkdGggLVxuICAgICAgICAgICAgKHdpbmRvdy5wYWdlWE9mZnNldCArIGlucHV0Qm91bmRzLnJpZ2h0KTtcbiAgICAgICAgdmFyIHJpZ2h0TW9zdCA9IGxlZnQgKyBjYWxlbmRhcldpZHRoID4gd2luZG93LmRvY3VtZW50LmJvZHkub2Zmc2V0V2lkdGg7XG4gICAgICAgIHZhciBjZW50ZXJNb3N0ID0gcmlnaHQgKyBjYWxlbmRhcldpZHRoID4gd2luZG93LmRvY3VtZW50LmJvZHkub2Zmc2V0V2lkdGg7XG4gICAgICAgIHRvZ2dsZUNsYXNzKHNlbGYuY2FsZW5kYXJDb250YWluZXIsIFwicmlnaHRNb3N0XCIsIHJpZ2h0TW9zdCk7XG4gICAgICAgIGlmIChzZWxmLmNvbmZpZy5zdGF0aWMpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIHNlbGYuY2FsZW5kYXJDb250YWluZXIuc3R5bGUudG9wID0gdG9wICsgXCJweFwiO1xuICAgICAgICBpZiAoIXJpZ2h0TW9zdCkge1xuICAgICAgICAgICAgc2VsZi5jYWxlbmRhckNvbnRhaW5lci5zdHlsZS5sZWZ0ID0gbGVmdCArIFwicHhcIjtcbiAgICAgICAgICAgIHNlbGYuY2FsZW5kYXJDb250YWluZXIuc3R5bGUucmlnaHQgPSBcImF1dG9cIjtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICghY2VudGVyTW9zdCkge1xuICAgICAgICAgICAgc2VsZi5jYWxlbmRhckNvbnRhaW5lci5zdHlsZS5sZWZ0ID0gXCJhdXRvXCI7XG4gICAgICAgICAgICBzZWxmLmNhbGVuZGFyQ29udGFpbmVyLnN0eWxlLnJpZ2h0ID0gcmlnaHQgKyBcInB4XCI7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB2YXIgZG9jID0gZ2V0RG9jdW1lbnRTdHlsZVNoZWV0KCk7XG4gICAgICAgICAgICBpZiAoZG9jID09PSB1bmRlZmluZWQpXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgdmFyIGJvZHlXaWR0aCA9IHdpbmRvdy5kb2N1bWVudC5ib2R5Lm9mZnNldFdpZHRoO1xuICAgICAgICAgICAgdmFyIGNlbnRlckxlZnQgPSBNYXRoLm1heCgwLCBib2R5V2lkdGggLyAyIC0gY2FsZW5kYXJXaWR0aCAvIDIpO1xuICAgICAgICAgICAgdmFyIGNlbnRlckJlZm9yZSA9IFwiLmZsYXRwaWNrci1jYWxlbmRhci5jZW50ZXJNb3N0OmJlZm9yZVwiO1xuICAgICAgICAgICAgdmFyIGNlbnRlckFmdGVyID0gXCIuZmxhdHBpY2tyLWNhbGVuZGFyLmNlbnRlck1vc3Q6YWZ0ZXJcIjtcbiAgICAgICAgICAgIHZhciBjZW50ZXJJbmRleCA9IGRvYy5jc3NSdWxlcy5sZW5ndGg7XG4gICAgICAgICAgICB2YXIgY2VudGVyU3R5bGUgPSBcIntsZWZ0OlwiICsgaW5wdXRCb3VuZHMubGVmdCArIFwicHg7cmlnaHQ6YXV0bzt9XCI7XG4gICAgICAgICAgICB0b2dnbGVDbGFzcyhzZWxmLmNhbGVuZGFyQ29udGFpbmVyLCBcInJpZ2h0TW9zdFwiLCBmYWxzZSk7XG4gICAgICAgICAgICB0b2dnbGVDbGFzcyhzZWxmLmNhbGVuZGFyQ29udGFpbmVyLCBcImNlbnRlck1vc3RcIiwgdHJ1ZSk7XG4gICAgICAgICAgICBkb2MuaW5zZXJ0UnVsZShjZW50ZXJCZWZvcmUgKyBcIixcIiArIGNlbnRlckFmdGVyICsgY2VudGVyU3R5bGUsIGNlbnRlckluZGV4KTtcbiAgICAgICAgICAgIHNlbGYuY2FsZW5kYXJDb250YWluZXIuc3R5bGUubGVmdCA9IGNlbnRlckxlZnQgKyBcInB4XCI7XG4gICAgICAgICAgICBzZWxmLmNhbGVuZGFyQ29udGFpbmVyLnN0eWxlLnJpZ2h0ID0gXCJhdXRvXCI7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZnVuY3Rpb24gZ2V0RG9jdW1lbnRTdHlsZVNoZWV0KCkge1xuICAgICAgICB2YXIgZWRpdGFibGVTaGVldCA9IG51bGw7XG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgZG9jdW1lbnQuc3R5bGVTaGVldHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIHZhciBzaGVldCA9IGRvY3VtZW50LnN0eWxlU2hlZXRzW2ldO1xuICAgICAgICAgICAgaWYgKCFzaGVldC5jc3NSdWxlcylcbiAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgc2hlZXQuY3NzUnVsZXM7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlZGl0YWJsZVNoZWV0ID0gc2hlZXQ7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZWRpdGFibGVTaGVldCAhPSBudWxsID8gZWRpdGFibGVTaGVldCA6IGNyZWF0ZVN0eWxlU2hlZXQoKTtcbiAgICB9XG4gICAgZnVuY3Rpb24gY3JlYXRlU3R5bGVTaGVldCgpIHtcbiAgICAgICAgdmFyIHN0eWxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInN0eWxlXCIpO1xuICAgICAgICBkb2N1bWVudC5oZWFkLmFwcGVuZENoaWxkKHN0eWxlKTtcbiAgICAgICAgcmV0dXJuIHN0eWxlLnNoZWV0O1xuICAgIH1cbiAgICBmdW5jdGlvbiByZWRyYXcoKSB7XG4gICAgICAgIGlmIChzZWxmLmNvbmZpZy5ub0NhbGVuZGFyIHx8IHNlbGYuaXNNb2JpbGUpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIGJ1aWxkTW9udGhTd2l0Y2goKTtcbiAgICAgICAgdXBkYXRlTmF2aWdhdGlvbkN1cnJlbnRNb250aCgpO1xuICAgICAgICBidWlsZERheXMoKTtcbiAgICB9XG4gICAgZnVuY3Rpb24gZm9jdXNBbmRDbG9zZSgpIHtcbiAgICAgICAgc2VsZi5faW5wdXQuZm9jdXMoKTtcbiAgICAgICAgaWYgKHdpbmRvdy5uYXZpZ2F0b3IudXNlckFnZW50LmluZGV4T2YoXCJNU0lFXCIpICE9PSAtMSB8fFxuICAgICAgICAgICAgbmF2aWdhdG9yLm1zTWF4VG91Y2hQb2ludHMgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgc2V0VGltZW91dChzZWxmLmNsb3NlLCAwKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHNlbGYuY2xvc2UoKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBmdW5jdGlvbiBzZWxlY3REYXRlKGUpIHtcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgICB2YXIgaXNTZWxlY3RhYmxlID0gZnVuY3Rpb24gKGRheSkge1xuICAgICAgICAgICAgcmV0dXJuIGRheS5jbGFzc0xpc3QgJiZcbiAgICAgICAgICAgICAgICBkYXkuY2xhc3NMaXN0LmNvbnRhaW5zKFwiZmxhdHBpY2tyLWRheVwiKSAmJlxuICAgICAgICAgICAgICAgICFkYXkuY2xhc3NMaXN0LmNvbnRhaW5zKFwiZmxhdHBpY2tyLWRpc2FibGVkXCIpICYmXG4gICAgICAgICAgICAgICAgIWRheS5jbGFzc0xpc3QuY29udGFpbnMoXCJub3RBbGxvd2VkXCIpO1xuICAgICAgICB9O1xuICAgICAgICB2YXIgdCA9IGZpbmRQYXJlbnQoZ2V0RXZlbnRUYXJnZXQoZSksIGlzU2VsZWN0YWJsZSk7XG4gICAgICAgIGlmICh0ID09PSB1bmRlZmluZWQpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIHZhciB0YXJnZXQgPSB0O1xuICAgICAgICB2YXIgc2VsZWN0ZWREYXRlID0gKHNlbGYubGF0ZXN0U2VsZWN0ZWREYXRlT2JqID0gbmV3IERhdGUodGFyZ2V0LmRhdGVPYmouZ2V0VGltZSgpKSk7XG4gICAgICAgIHZhciBzaG91bGRDaGFuZ2VNb250aCA9IChzZWxlY3RlZERhdGUuZ2V0TW9udGgoKSA8IHNlbGYuY3VycmVudE1vbnRoIHx8XG4gICAgICAgICAgICBzZWxlY3RlZERhdGUuZ2V0TW9udGgoKSA+XG4gICAgICAgICAgICAgICAgc2VsZi5jdXJyZW50TW9udGggKyBzZWxmLmNvbmZpZy5zaG93TW9udGhzIC0gMSkgJiZcbiAgICAgICAgICAgIHNlbGYuY29uZmlnLm1vZGUgIT09IFwicmFuZ2VcIjtcbiAgICAgICAgc2VsZi5zZWxlY3RlZERhdGVFbGVtID0gdGFyZ2V0O1xuICAgICAgICBpZiAoc2VsZi5jb25maWcubW9kZSA9PT0gXCJzaW5nbGVcIilcbiAgICAgICAgICAgIHNlbGYuc2VsZWN0ZWREYXRlcyA9IFtzZWxlY3RlZERhdGVdO1xuICAgICAgICBlbHNlIGlmIChzZWxmLmNvbmZpZy5tb2RlID09PSBcIm11bHRpcGxlXCIpIHtcbiAgICAgICAgICAgIHZhciBzZWxlY3RlZEluZGV4ID0gaXNEYXRlU2VsZWN0ZWQoc2VsZWN0ZWREYXRlKTtcbiAgICAgICAgICAgIGlmIChzZWxlY3RlZEluZGV4KVxuICAgICAgICAgICAgICAgIHNlbGYuc2VsZWN0ZWREYXRlcy5zcGxpY2UocGFyc2VJbnQoc2VsZWN0ZWRJbmRleCksIDEpO1xuICAgICAgICAgICAgZWxzZVxuICAgICAgICAgICAgICAgIHNlbGYuc2VsZWN0ZWREYXRlcy5wdXNoKHNlbGVjdGVkRGF0ZSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoc2VsZi5jb25maWcubW9kZSA9PT0gXCJyYW5nZVwiKSB7XG4gICAgICAgICAgICBpZiAoc2VsZi5zZWxlY3RlZERhdGVzLmxlbmd0aCA9PT0gMikge1xuICAgICAgICAgICAgICAgIHNlbGYuY2xlYXIoZmFsc2UsIGZhbHNlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHNlbGYubGF0ZXN0U2VsZWN0ZWREYXRlT2JqID0gc2VsZWN0ZWREYXRlO1xuICAgICAgICAgICAgc2VsZi5zZWxlY3RlZERhdGVzLnB1c2goc2VsZWN0ZWREYXRlKTtcbiAgICAgICAgICAgIGlmIChjb21wYXJlRGF0ZXMoc2VsZWN0ZWREYXRlLCBzZWxmLnNlbGVjdGVkRGF0ZXNbMF0sIHRydWUpICE9PSAwKVxuICAgICAgICAgICAgICAgIHNlbGYuc2VsZWN0ZWREYXRlcy5zb3J0KGZ1bmN0aW9uIChhLCBiKSB7IHJldHVybiBhLmdldFRpbWUoKSAtIGIuZ2V0VGltZSgpOyB9KTtcbiAgICAgICAgfVxuICAgICAgICBzZXRIb3Vyc0Zyb21JbnB1dHMoKTtcbiAgICAgICAgaWYgKHNob3VsZENoYW5nZU1vbnRoKSB7XG4gICAgICAgICAgICB2YXIgaXNOZXdZZWFyID0gc2VsZi5jdXJyZW50WWVhciAhPT0gc2VsZWN0ZWREYXRlLmdldEZ1bGxZZWFyKCk7XG4gICAgICAgICAgICBzZWxmLmN1cnJlbnRZZWFyID0gc2VsZWN0ZWREYXRlLmdldEZ1bGxZZWFyKCk7XG4gICAgICAgICAgICBzZWxmLmN1cnJlbnRNb250aCA9IHNlbGVjdGVkRGF0ZS5nZXRNb250aCgpO1xuICAgICAgICAgICAgaWYgKGlzTmV3WWVhcikge1xuICAgICAgICAgICAgICAgIHRyaWdnZXJFdmVudChcIm9uWWVhckNoYW5nZVwiKTtcbiAgICAgICAgICAgICAgICBidWlsZE1vbnRoU3dpdGNoKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0cmlnZ2VyRXZlbnQoXCJvbk1vbnRoQ2hhbmdlXCIpO1xuICAgICAgICB9XG4gICAgICAgIHVwZGF0ZU5hdmlnYXRpb25DdXJyZW50TW9udGgoKTtcbiAgICAgICAgYnVpbGREYXlzKCk7XG4gICAgICAgIHVwZGF0ZVZhbHVlKCk7XG4gICAgICAgIGlmICghc2hvdWxkQ2hhbmdlTW9udGggJiZcbiAgICAgICAgICAgIHNlbGYuY29uZmlnLm1vZGUgIT09IFwicmFuZ2VcIiAmJlxuICAgICAgICAgICAgc2VsZi5jb25maWcuc2hvd01vbnRocyA9PT0gMSlcbiAgICAgICAgICAgIGZvY3VzT25EYXlFbGVtKHRhcmdldCk7XG4gICAgICAgIGVsc2UgaWYgKHNlbGYuc2VsZWN0ZWREYXRlRWxlbSAhPT0gdW5kZWZpbmVkICYmXG4gICAgICAgICAgICBzZWxmLmhvdXJFbGVtZW50ID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHNlbGYuc2VsZWN0ZWREYXRlRWxlbSAmJiBzZWxmLnNlbGVjdGVkRGF0ZUVsZW0uZm9jdXMoKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoc2VsZi5ob3VyRWxlbWVudCAhPT0gdW5kZWZpbmVkKVxuICAgICAgICAgICAgc2VsZi5ob3VyRWxlbWVudCAhPT0gdW5kZWZpbmVkICYmIHNlbGYuaG91ckVsZW1lbnQuZm9jdXMoKTtcbiAgICAgICAgaWYgKHNlbGYuY29uZmlnLmNsb3NlT25TZWxlY3QpIHtcbiAgICAgICAgICAgIHZhciBzaW5nbGUgPSBzZWxmLmNvbmZpZy5tb2RlID09PSBcInNpbmdsZVwiICYmICFzZWxmLmNvbmZpZy5lbmFibGVUaW1lO1xuICAgICAgICAgICAgdmFyIHJhbmdlID0gc2VsZi5jb25maWcubW9kZSA9PT0gXCJyYW5nZVwiICYmXG4gICAgICAgICAgICAgICAgc2VsZi5zZWxlY3RlZERhdGVzLmxlbmd0aCA9PT0gMiAmJlxuICAgICAgICAgICAgICAgICFzZWxmLmNvbmZpZy5lbmFibGVUaW1lO1xuICAgICAgICAgICAgaWYgKHNpbmdsZSB8fCByYW5nZSkge1xuICAgICAgICAgICAgICAgIGZvY3VzQW5kQ2xvc2UoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICB0cmlnZ2VyQ2hhbmdlKCk7XG4gICAgfVxuICAgIHZhciBDQUxMQkFDS1MgPSB7XG4gICAgICAgIGxvY2FsZTogW3NldHVwTG9jYWxlLCB1cGRhdGVXZWVrZGF5c10sXG4gICAgICAgIHNob3dNb250aHM6IFtidWlsZE1vbnRocywgc2V0Q2FsZW5kYXJXaWR0aCwgYnVpbGRXZWVrZGF5c10sXG4gICAgICAgIG1pbkRhdGU6IFtqdW1wVG9EYXRlXSxcbiAgICAgICAgbWF4RGF0ZTogW2p1bXBUb0RhdGVdLFxuICAgICAgICBwb3NpdGlvbkVsZW1lbnQ6IFt1cGRhdGVQb3NpdGlvbkVsZW1lbnRdLFxuICAgICAgICBjbGlja09wZW5zOiBbXG4gICAgICAgICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgaWYgKHNlbGYuY29uZmlnLmNsaWNrT3BlbnMgPT09IHRydWUpIHtcbiAgICAgICAgICAgICAgICAgICAgYmluZChzZWxmLl9pbnB1dCwgXCJmb2N1c1wiLCBzZWxmLm9wZW4pO1xuICAgICAgICAgICAgICAgICAgICBiaW5kKHNlbGYuX2lucHV0LCBcImNsaWNrXCIsIHNlbGYub3Blbik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBzZWxmLl9pbnB1dC5yZW1vdmVFdmVudExpc3RlbmVyKFwiZm9jdXNcIiwgc2VsZi5vcGVuKTtcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5faW5wdXQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIHNlbGYub3Blbik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgXSxcbiAgICB9O1xuICAgIGZ1bmN0aW9uIHNldChvcHRpb24sIHZhbHVlKSB7XG4gICAgICAgIGlmIChvcHRpb24gIT09IG51bGwgJiYgdHlwZW9mIG9wdGlvbiA9PT0gXCJvYmplY3RcIikge1xuICAgICAgICAgICAgT2JqZWN0LmFzc2lnbihzZWxmLmNvbmZpZywgb3B0aW9uKTtcbiAgICAgICAgICAgIGZvciAodmFyIGtleSBpbiBvcHRpb24pIHtcbiAgICAgICAgICAgICAgICBpZiAoQ0FMTEJBQ0tTW2tleV0gIT09IHVuZGVmaW5lZClcbiAgICAgICAgICAgICAgICAgICAgQ0FMTEJBQ0tTW2tleV0uZm9yRWFjaChmdW5jdGlvbiAoeCkgeyByZXR1cm4geCgpOyB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHNlbGYuY29uZmlnW29wdGlvbl0gPSB2YWx1ZTtcbiAgICAgICAgICAgIGlmIChDQUxMQkFDS1Nbb3B0aW9uXSAhPT0gdW5kZWZpbmVkKVxuICAgICAgICAgICAgICAgIENBTExCQUNLU1tvcHRpb25dLmZvckVhY2goZnVuY3Rpb24gKHgpIHsgcmV0dXJuIHgoKTsgfSk7XG4gICAgICAgICAgICBlbHNlIGlmIChIT09LUy5pbmRleE9mKG9wdGlvbikgPiAtMSlcbiAgICAgICAgICAgICAgICBzZWxmLmNvbmZpZ1tvcHRpb25dID0gYXJyYXlpZnkodmFsdWUpO1xuICAgICAgICB9XG4gICAgICAgIHNlbGYucmVkcmF3KCk7XG4gICAgICAgIHVwZGF0ZVZhbHVlKHRydWUpO1xuICAgIH1cbiAgICBmdW5jdGlvbiBzZXRTZWxlY3RlZERhdGUoaW5wdXREYXRlLCBmb3JtYXQpIHtcbiAgICAgICAgdmFyIGRhdGVzID0gW107XG4gICAgICAgIGlmIChpbnB1dERhdGUgaW5zdGFuY2VvZiBBcnJheSlcbiAgICAgICAgICAgIGRhdGVzID0gaW5wdXREYXRlLm1hcChmdW5jdGlvbiAoZCkgeyByZXR1cm4gc2VsZi5wYXJzZURhdGUoZCwgZm9ybWF0KTsgfSk7XG4gICAgICAgIGVsc2UgaWYgKGlucHV0RGF0ZSBpbnN0YW5jZW9mIERhdGUgfHwgdHlwZW9mIGlucHV0RGF0ZSA9PT0gXCJudW1iZXJcIilcbiAgICAgICAgICAgIGRhdGVzID0gW3NlbGYucGFyc2VEYXRlKGlucHV0RGF0ZSwgZm9ybWF0KV07XG4gICAgICAgIGVsc2UgaWYgKHR5cGVvZiBpbnB1dERhdGUgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgICAgIHN3aXRjaCAoc2VsZi5jb25maWcubW9kZSkge1xuICAgICAgICAgICAgICAgIGNhc2UgXCJzaW5nbGVcIjpcbiAgICAgICAgICAgICAgICBjYXNlIFwidGltZVwiOlxuICAgICAgICAgICAgICAgICAgICBkYXRlcyA9IFtzZWxmLnBhcnNlRGF0ZShpbnB1dERhdGUsIGZvcm1hdCldO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlIFwibXVsdGlwbGVcIjpcbiAgICAgICAgICAgICAgICAgICAgZGF0ZXMgPSBpbnB1dERhdGVcbiAgICAgICAgICAgICAgICAgICAgICAgIC5zcGxpdChzZWxmLmNvbmZpZy5jb25qdW5jdGlvbilcbiAgICAgICAgICAgICAgICAgICAgICAgIC5tYXAoZnVuY3Rpb24gKGRhdGUpIHsgcmV0dXJuIHNlbGYucGFyc2VEYXRlKGRhdGUsIGZvcm1hdCk7IH0pO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlIFwicmFuZ2VcIjpcbiAgICAgICAgICAgICAgICAgICAgZGF0ZXMgPSBpbnB1dERhdGVcbiAgICAgICAgICAgICAgICAgICAgICAgIC5zcGxpdChzZWxmLmwxMG4ucmFuZ2VTZXBhcmF0b3IpXG4gICAgICAgICAgICAgICAgICAgICAgICAubWFwKGZ1bmN0aW9uIChkYXRlKSB7IHJldHVybiBzZWxmLnBhcnNlRGF0ZShkYXRlLCBmb3JtYXQpOyB9KTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZWxzZVxuICAgICAgICAgICAgc2VsZi5jb25maWcuZXJyb3JIYW5kbGVyKG5ldyBFcnJvcihcIkludmFsaWQgZGF0ZSBzdXBwbGllZDogXCIgKyBKU09OLnN0cmluZ2lmeShpbnB1dERhdGUpKSk7XG4gICAgICAgIHNlbGYuc2VsZWN0ZWREYXRlcyA9IChzZWxmLmNvbmZpZy5hbGxvd0ludmFsaWRQcmVsb2FkXG4gICAgICAgICAgICA/IGRhdGVzXG4gICAgICAgICAgICA6IGRhdGVzLmZpbHRlcihmdW5jdGlvbiAoZCkgeyByZXR1cm4gZCBpbnN0YW5jZW9mIERhdGUgJiYgaXNFbmFibGVkKGQsIGZhbHNlKTsgfSkpO1xuICAgICAgICBpZiAoc2VsZi5jb25maWcubW9kZSA9PT0gXCJyYW5nZVwiKVxuICAgICAgICAgICAgc2VsZi5zZWxlY3RlZERhdGVzLnNvcnQoZnVuY3Rpb24gKGEsIGIpIHsgcmV0dXJuIGEuZ2V0VGltZSgpIC0gYi5nZXRUaW1lKCk7IH0pO1xuICAgIH1cbiAgICBmdW5jdGlvbiBzZXREYXRlKGRhdGUsIHRyaWdnZXJDaGFuZ2UsIGZvcm1hdCkge1xuICAgICAgICBpZiAodHJpZ2dlckNoYW5nZSA9PT0gdm9pZCAwKSB7IHRyaWdnZXJDaGFuZ2UgPSBmYWxzZTsgfVxuICAgICAgICBpZiAoZm9ybWF0ID09PSB2b2lkIDApIHsgZm9ybWF0ID0gc2VsZi5jb25maWcuZGF0ZUZvcm1hdDsgfVxuICAgICAgICBpZiAoKGRhdGUgIT09IDAgJiYgIWRhdGUpIHx8IChkYXRlIGluc3RhbmNlb2YgQXJyYXkgJiYgZGF0ZS5sZW5ndGggPT09IDApKVxuICAgICAgICAgICAgcmV0dXJuIHNlbGYuY2xlYXIodHJpZ2dlckNoYW5nZSk7XG4gICAgICAgIHNldFNlbGVjdGVkRGF0ZShkYXRlLCBmb3JtYXQpO1xuICAgICAgICBzZWxmLmxhdGVzdFNlbGVjdGVkRGF0ZU9iaiA9XG4gICAgICAgICAgICBzZWxmLnNlbGVjdGVkRGF0ZXNbc2VsZi5zZWxlY3RlZERhdGVzLmxlbmd0aCAtIDFdO1xuICAgICAgICBzZWxmLnJlZHJhdygpO1xuICAgICAgICBqdW1wVG9EYXRlKHVuZGVmaW5lZCwgdHJpZ2dlckNoYW5nZSk7XG4gICAgICAgIHNldEhvdXJzRnJvbURhdGUoKTtcbiAgICAgICAgaWYgKHNlbGYuc2VsZWN0ZWREYXRlcy5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgIHNlbGYuY2xlYXIoZmFsc2UpO1xuICAgICAgICB9XG4gICAgICAgIHVwZGF0ZVZhbHVlKHRyaWdnZXJDaGFuZ2UpO1xuICAgICAgICBpZiAodHJpZ2dlckNoYW5nZSlcbiAgICAgICAgICAgIHRyaWdnZXJFdmVudChcIm9uQ2hhbmdlXCIpO1xuICAgIH1cbiAgICBmdW5jdGlvbiBwYXJzZURhdGVSdWxlcyhhcnIpIHtcbiAgICAgICAgcmV0dXJuIGFyclxuICAgICAgICAgICAgLnNsaWNlKClcbiAgICAgICAgICAgIC5tYXAoZnVuY3Rpb24gKHJ1bGUpIHtcbiAgICAgICAgICAgIGlmICh0eXBlb2YgcnVsZSA9PT0gXCJzdHJpbmdcIiB8fFxuICAgICAgICAgICAgICAgIHR5cGVvZiBydWxlID09PSBcIm51bWJlclwiIHx8XG4gICAgICAgICAgICAgICAgcnVsZSBpbnN0YW5jZW9mIERhdGUpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gc2VsZi5wYXJzZURhdGUocnVsZSwgdW5kZWZpbmVkLCB0cnVlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKHJ1bGUgJiZcbiAgICAgICAgICAgICAgICB0eXBlb2YgcnVsZSA9PT0gXCJvYmplY3RcIiAmJlxuICAgICAgICAgICAgICAgIHJ1bGUuZnJvbSAmJlxuICAgICAgICAgICAgICAgIHJ1bGUudG8pXG4gICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgZnJvbTogc2VsZi5wYXJzZURhdGUocnVsZS5mcm9tLCB1bmRlZmluZWQpLFxuICAgICAgICAgICAgICAgICAgICB0bzogc2VsZi5wYXJzZURhdGUocnVsZS50bywgdW5kZWZpbmVkKSxcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgcmV0dXJuIHJ1bGU7XG4gICAgICAgIH0pXG4gICAgICAgICAgICAuZmlsdGVyKGZ1bmN0aW9uICh4KSB7IHJldHVybiB4OyB9KTtcbiAgICB9XG4gICAgZnVuY3Rpb24gc2V0dXBEYXRlcygpIHtcbiAgICAgICAgc2VsZi5zZWxlY3RlZERhdGVzID0gW107XG4gICAgICAgIHNlbGYubm93ID0gc2VsZi5wYXJzZURhdGUoc2VsZi5jb25maWcubm93KSB8fCBuZXcgRGF0ZSgpO1xuICAgICAgICB2YXIgcHJlbG9hZGVkRGF0ZSA9IHNlbGYuY29uZmlnLmRlZmF1bHREYXRlIHx8XG4gICAgICAgICAgICAoKHNlbGYuaW5wdXQubm9kZU5hbWUgPT09IFwiSU5QVVRcIiB8fFxuICAgICAgICAgICAgICAgIHNlbGYuaW5wdXQubm9kZU5hbWUgPT09IFwiVEVYVEFSRUFcIikgJiZcbiAgICAgICAgICAgICAgICBzZWxmLmlucHV0LnBsYWNlaG9sZGVyICYmXG4gICAgICAgICAgICAgICAgc2VsZi5pbnB1dC52YWx1ZSA9PT0gc2VsZi5pbnB1dC5wbGFjZWhvbGRlclxuICAgICAgICAgICAgICAgID8gbnVsbFxuICAgICAgICAgICAgICAgIDogc2VsZi5pbnB1dC52YWx1ZSk7XG4gICAgICAgIGlmIChwcmVsb2FkZWREYXRlKVxuICAgICAgICAgICAgc2V0U2VsZWN0ZWREYXRlKHByZWxvYWRlZERhdGUsIHNlbGYuY29uZmlnLmRhdGVGb3JtYXQpO1xuICAgICAgICBzZWxmLl9pbml0aWFsRGF0ZSA9XG4gICAgICAgICAgICBzZWxmLnNlbGVjdGVkRGF0ZXMubGVuZ3RoID4gMFxuICAgICAgICAgICAgICAgID8gc2VsZi5zZWxlY3RlZERhdGVzWzBdXG4gICAgICAgICAgICAgICAgOiBzZWxmLmNvbmZpZy5taW5EYXRlICYmXG4gICAgICAgICAgICAgICAgICAgIHNlbGYuY29uZmlnLm1pbkRhdGUuZ2V0VGltZSgpID4gc2VsZi5ub3cuZ2V0VGltZSgpXG4gICAgICAgICAgICAgICAgICAgID8gc2VsZi5jb25maWcubWluRGF0ZVxuICAgICAgICAgICAgICAgICAgICA6IHNlbGYuY29uZmlnLm1heERhdGUgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlbGYuY29uZmlnLm1heERhdGUuZ2V0VGltZSgpIDwgc2VsZi5ub3cuZ2V0VGltZSgpXG4gICAgICAgICAgICAgICAgICAgICAgICA/IHNlbGYuY29uZmlnLm1heERhdGVcbiAgICAgICAgICAgICAgICAgICAgICAgIDogc2VsZi5ub3c7XG4gICAgICAgIHNlbGYuY3VycmVudFllYXIgPSBzZWxmLl9pbml0aWFsRGF0ZS5nZXRGdWxsWWVhcigpO1xuICAgICAgICBzZWxmLmN1cnJlbnRNb250aCA9IHNlbGYuX2luaXRpYWxEYXRlLmdldE1vbnRoKCk7XG4gICAgICAgIGlmIChzZWxmLnNlbGVjdGVkRGF0ZXMubGVuZ3RoID4gMClcbiAgICAgICAgICAgIHNlbGYubGF0ZXN0U2VsZWN0ZWREYXRlT2JqID0gc2VsZi5zZWxlY3RlZERhdGVzWzBdO1xuICAgICAgICBpZiAoc2VsZi5jb25maWcubWluVGltZSAhPT0gdW5kZWZpbmVkKVxuICAgICAgICAgICAgc2VsZi5jb25maWcubWluVGltZSA9IHNlbGYucGFyc2VEYXRlKHNlbGYuY29uZmlnLm1pblRpbWUsIFwiSDppXCIpO1xuICAgICAgICBpZiAoc2VsZi5jb25maWcubWF4VGltZSAhPT0gdW5kZWZpbmVkKVxuICAgICAgICAgICAgc2VsZi5jb25maWcubWF4VGltZSA9IHNlbGYucGFyc2VEYXRlKHNlbGYuY29uZmlnLm1heFRpbWUsIFwiSDppXCIpO1xuICAgICAgICBzZWxmLm1pbkRhdGVIYXNUaW1lID1cbiAgICAgICAgICAgICEhc2VsZi5jb25maWcubWluRGF0ZSAmJlxuICAgICAgICAgICAgICAgIChzZWxmLmNvbmZpZy5taW5EYXRlLmdldEhvdXJzKCkgPiAwIHx8XG4gICAgICAgICAgICAgICAgICAgIHNlbGYuY29uZmlnLm1pbkRhdGUuZ2V0TWludXRlcygpID4gMCB8fFxuICAgICAgICAgICAgICAgICAgICBzZWxmLmNvbmZpZy5taW5EYXRlLmdldFNlY29uZHMoKSA+IDApO1xuICAgICAgICBzZWxmLm1heERhdGVIYXNUaW1lID1cbiAgICAgICAgICAgICEhc2VsZi5jb25maWcubWF4RGF0ZSAmJlxuICAgICAgICAgICAgICAgIChzZWxmLmNvbmZpZy5tYXhEYXRlLmdldEhvdXJzKCkgPiAwIHx8XG4gICAgICAgICAgICAgICAgICAgIHNlbGYuY29uZmlnLm1heERhdGUuZ2V0TWludXRlcygpID4gMCB8fFxuICAgICAgICAgICAgICAgICAgICBzZWxmLmNvbmZpZy5tYXhEYXRlLmdldFNlY29uZHMoKSA+IDApO1xuICAgIH1cbiAgICBmdW5jdGlvbiBzZXR1cElucHV0cygpIHtcbiAgICAgICAgc2VsZi5pbnB1dCA9IGdldElucHV0RWxlbSgpO1xuICAgICAgICBpZiAoIXNlbGYuaW5wdXQpIHtcbiAgICAgICAgICAgIHNlbGYuY29uZmlnLmVycm9ySGFuZGxlcihuZXcgRXJyb3IoXCJJbnZhbGlkIGlucHV0IGVsZW1lbnQgc3BlY2lmaWVkXCIpKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBzZWxmLmlucHV0Ll90eXBlID0gc2VsZi5pbnB1dC50eXBlO1xuICAgICAgICBzZWxmLmlucHV0LnR5cGUgPSBcInRleHRcIjtcbiAgICAgICAgc2VsZi5pbnB1dC5jbGFzc0xpc3QuYWRkKFwiZmxhdHBpY2tyLWlucHV0XCIpO1xuICAgICAgICBzZWxmLl9pbnB1dCA9IHNlbGYuaW5wdXQ7XG4gICAgICAgIGlmIChzZWxmLmNvbmZpZy5hbHRJbnB1dCkge1xuICAgICAgICAgICAgc2VsZi5hbHRJbnB1dCA9IGNyZWF0ZUVsZW1lbnQoc2VsZi5pbnB1dC5ub2RlTmFtZSwgc2VsZi5jb25maWcuYWx0SW5wdXRDbGFzcyk7XG4gICAgICAgICAgICBzZWxmLl9pbnB1dCA9IHNlbGYuYWx0SW5wdXQ7XG4gICAgICAgICAgICBzZWxmLmFsdElucHV0LnBsYWNlaG9sZGVyID0gc2VsZi5pbnB1dC5wbGFjZWhvbGRlcjtcbiAgICAgICAgICAgIHNlbGYuYWx0SW5wdXQuZGlzYWJsZWQgPSBzZWxmLmlucHV0LmRpc2FibGVkO1xuICAgICAgICAgICAgc2VsZi5hbHRJbnB1dC5yZXF1aXJlZCA9IHNlbGYuaW5wdXQucmVxdWlyZWQ7XG4gICAgICAgICAgICBzZWxmLmFsdElucHV0LnRhYkluZGV4ID0gc2VsZi5pbnB1dC50YWJJbmRleDtcbiAgICAgICAgICAgIHNlbGYuYWx0SW5wdXQudHlwZSA9IFwidGV4dFwiO1xuICAgICAgICAgICAgc2VsZi5pbnB1dC5zZXRBdHRyaWJ1dGUoXCJ0eXBlXCIsIFwiaGlkZGVuXCIpO1xuICAgICAgICAgICAgaWYgKCFzZWxmLmNvbmZpZy5zdGF0aWMgJiYgc2VsZi5pbnB1dC5wYXJlbnROb2RlKVxuICAgICAgICAgICAgICAgIHNlbGYuaW5wdXQucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoc2VsZi5hbHRJbnB1dCwgc2VsZi5pbnB1dC5uZXh0U2libGluZyk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCFzZWxmLmNvbmZpZy5hbGxvd0lucHV0KVxuICAgICAgICAgICAgc2VsZi5faW5wdXQuc2V0QXR0cmlidXRlKFwicmVhZG9ubHlcIiwgXCJyZWFkb25seVwiKTtcbiAgICAgICAgdXBkYXRlUG9zaXRpb25FbGVtZW50KCk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIHVwZGF0ZVBvc2l0aW9uRWxlbWVudCgpIHtcbiAgICAgICAgc2VsZi5fcG9zaXRpb25FbGVtZW50ID0gc2VsZi5jb25maWcucG9zaXRpb25FbGVtZW50IHx8IHNlbGYuX2lucHV0O1xuICAgIH1cbiAgICBmdW5jdGlvbiBzZXR1cE1vYmlsZSgpIHtcbiAgICAgICAgdmFyIGlucHV0VHlwZSA9IHNlbGYuY29uZmlnLmVuYWJsZVRpbWVcbiAgICAgICAgICAgID8gc2VsZi5jb25maWcubm9DYWxlbmRhclxuICAgICAgICAgICAgICAgID8gXCJ0aW1lXCJcbiAgICAgICAgICAgICAgICA6IFwiZGF0ZXRpbWUtbG9jYWxcIlxuICAgICAgICAgICAgOiBcImRhdGVcIjtcbiAgICAgICAgc2VsZi5tb2JpbGVJbnB1dCA9IGNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiLCBzZWxmLmlucHV0LmNsYXNzTmFtZSArIFwiIGZsYXRwaWNrci1tb2JpbGVcIik7XG4gICAgICAgIHNlbGYubW9iaWxlSW5wdXQudGFiSW5kZXggPSAxO1xuICAgICAgICBzZWxmLm1vYmlsZUlucHV0LnR5cGUgPSBpbnB1dFR5cGU7XG4gICAgICAgIHNlbGYubW9iaWxlSW5wdXQuZGlzYWJsZWQgPSBzZWxmLmlucHV0LmRpc2FibGVkO1xuICAgICAgICBzZWxmLm1vYmlsZUlucHV0LnJlcXVpcmVkID0gc2VsZi5pbnB1dC5yZXF1aXJlZDtcbiAgICAgICAgc2VsZi5tb2JpbGVJbnB1dC5wbGFjZWhvbGRlciA9IHNlbGYuaW5wdXQucGxhY2Vob2xkZXI7XG4gICAgICAgIHNlbGYubW9iaWxlRm9ybWF0U3RyID1cbiAgICAgICAgICAgIGlucHV0VHlwZSA9PT0gXCJkYXRldGltZS1sb2NhbFwiXG4gICAgICAgICAgICAgICAgPyBcIlktbS1kXFxcXFRIOmk6U1wiXG4gICAgICAgICAgICAgICAgOiBpbnB1dFR5cGUgPT09IFwiZGF0ZVwiXG4gICAgICAgICAgICAgICAgICAgID8gXCJZLW0tZFwiXG4gICAgICAgICAgICAgICAgICAgIDogXCJIOmk6U1wiO1xuICAgICAgICBpZiAoc2VsZi5zZWxlY3RlZERhdGVzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgIHNlbGYubW9iaWxlSW5wdXQuZGVmYXVsdFZhbHVlID0gc2VsZi5tb2JpbGVJbnB1dC52YWx1ZSA9IHNlbGYuZm9ybWF0RGF0ZShzZWxmLnNlbGVjdGVkRGF0ZXNbMF0sIHNlbGYubW9iaWxlRm9ybWF0U3RyKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoc2VsZi5jb25maWcubWluRGF0ZSlcbiAgICAgICAgICAgIHNlbGYubW9iaWxlSW5wdXQubWluID0gc2VsZi5mb3JtYXREYXRlKHNlbGYuY29uZmlnLm1pbkRhdGUsIFwiWS1tLWRcIik7XG4gICAgICAgIGlmIChzZWxmLmNvbmZpZy5tYXhEYXRlKVxuICAgICAgICAgICAgc2VsZi5tb2JpbGVJbnB1dC5tYXggPSBzZWxmLmZvcm1hdERhdGUoc2VsZi5jb25maWcubWF4RGF0ZSwgXCJZLW0tZFwiKTtcbiAgICAgICAgaWYgKHNlbGYuaW5wdXQuZ2V0QXR0cmlidXRlKFwic3RlcFwiKSlcbiAgICAgICAgICAgIHNlbGYubW9iaWxlSW5wdXQuc3RlcCA9IFN0cmluZyhzZWxmLmlucHV0LmdldEF0dHJpYnV0ZShcInN0ZXBcIikpO1xuICAgICAgICBzZWxmLmlucHV0LnR5cGUgPSBcImhpZGRlblwiO1xuICAgICAgICBpZiAoc2VsZi5hbHRJbnB1dCAhPT0gdW5kZWZpbmVkKVxuICAgICAgICAgICAgc2VsZi5hbHRJbnB1dC50eXBlID0gXCJoaWRkZW5cIjtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGlmIChzZWxmLmlucHV0LnBhcmVudE5vZGUpXG4gICAgICAgICAgICAgICAgc2VsZi5pbnB1dC5wYXJlbnROb2RlLmluc2VydEJlZm9yZShzZWxmLm1vYmlsZUlucHV0LCBzZWxmLmlucHV0Lm5leHRTaWJsaW5nKTtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoX2EpIHsgfVxuICAgICAgICBiaW5kKHNlbGYubW9iaWxlSW5wdXQsIFwiY2hhbmdlXCIsIGZ1bmN0aW9uIChlKSB7XG4gICAgICAgICAgICBzZWxmLnNldERhdGUoZ2V0RXZlbnRUYXJnZXQoZSkudmFsdWUsIGZhbHNlLCBzZWxmLm1vYmlsZUZvcm1hdFN0cik7XG4gICAgICAgICAgICB0cmlnZ2VyRXZlbnQoXCJvbkNoYW5nZVwiKTtcbiAgICAgICAgICAgIHRyaWdnZXJFdmVudChcIm9uQ2xvc2VcIik7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBmdW5jdGlvbiB0b2dnbGUoZSkge1xuICAgICAgICBpZiAoc2VsZi5pc09wZW4gPT09IHRydWUpXG4gICAgICAgICAgICByZXR1cm4gc2VsZi5jbG9zZSgpO1xuICAgICAgICBzZWxmLm9wZW4oZSk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIHRyaWdnZXJFdmVudChldmVudCwgZGF0YSkge1xuICAgICAgICBpZiAoc2VsZi5jb25maWcgPT09IHVuZGVmaW5lZClcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgdmFyIGhvb2tzID0gc2VsZi5jb25maWdbZXZlbnRdO1xuICAgICAgICBpZiAoaG9va3MgIT09IHVuZGVmaW5lZCAmJiBob29rcy5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaG9va3NbaV0gJiYgaSA8IGhvb2tzLmxlbmd0aDsgaSsrKVxuICAgICAgICAgICAgICAgIGhvb2tzW2ldKHNlbGYuc2VsZWN0ZWREYXRlcywgc2VsZi5pbnB1dC52YWx1ZSwgc2VsZiwgZGF0YSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGV2ZW50ID09PSBcIm9uQ2hhbmdlXCIpIHtcbiAgICAgICAgICAgIHNlbGYuaW5wdXQuZGlzcGF0Y2hFdmVudChjcmVhdGVFdmVudChcImNoYW5nZVwiKSk7XG4gICAgICAgICAgICBzZWxmLmlucHV0LmRpc3BhdGNoRXZlbnQoY3JlYXRlRXZlbnQoXCJpbnB1dFwiKSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZnVuY3Rpb24gY3JlYXRlRXZlbnQobmFtZSkge1xuICAgICAgICB2YXIgZSA9IGRvY3VtZW50LmNyZWF0ZUV2ZW50KFwiRXZlbnRcIik7XG4gICAgICAgIGUuaW5pdEV2ZW50KG5hbWUsIHRydWUsIHRydWUpO1xuICAgICAgICByZXR1cm4gZTtcbiAgICB9XG4gICAgZnVuY3Rpb24gaXNEYXRlU2VsZWN0ZWQoZGF0ZSkge1xuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHNlbGYuc2VsZWN0ZWREYXRlcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgdmFyIHNlbGVjdGVkRGF0ZSA9IHNlbGYuc2VsZWN0ZWREYXRlc1tpXTtcbiAgICAgICAgICAgIGlmIChzZWxlY3RlZERhdGUgaW5zdGFuY2VvZiBEYXRlICYmXG4gICAgICAgICAgICAgICAgY29tcGFyZURhdGVzKHNlbGVjdGVkRGF0ZSwgZGF0ZSkgPT09IDApXG4gICAgICAgICAgICAgICAgcmV0dXJuIFwiXCIgKyBpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgZnVuY3Rpb24gaXNEYXRlSW5SYW5nZShkYXRlKSB7XG4gICAgICAgIGlmIChzZWxmLmNvbmZpZy5tb2RlICE9PSBcInJhbmdlXCIgfHwgc2VsZi5zZWxlY3RlZERhdGVzLmxlbmd0aCA8IDIpXG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIHJldHVybiAoY29tcGFyZURhdGVzKGRhdGUsIHNlbGYuc2VsZWN0ZWREYXRlc1swXSkgPj0gMCAmJlxuICAgICAgICAgICAgY29tcGFyZURhdGVzKGRhdGUsIHNlbGYuc2VsZWN0ZWREYXRlc1sxXSkgPD0gMCk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIHVwZGF0ZU5hdmlnYXRpb25DdXJyZW50TW9udGgoKSB7XG4gICAgICAgIGlmIChzZWxmLmNvbmZpZy5ub0NhbGVuZGFyIHx8IHNlbGYuaXNNb2JpbGUgfHwgIXNlbGYubW9udGhOYXYpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIHNlbGYueWVhckVsZW1lbnRzLmZvckVhY2goZnVuY3Rpb24gKHllYXJFbGVtZW50LCBpKSB7XG4gICAgICAgICAgICB2YXIgZCA9IG5ldyBEYXRlKHNlbGYuY3VycmVudFllYXIsIHNlbGYuY3VycmVudE1vbnRoLCAxKTtcbiAgICAgICAgICAgIGQuc2V0TW9udGgoc2VsZi5jdXJyZW50TW9udGggKyBpKTtcbiAgICAgICAgICAgIGlmIChzZWxmLmNvbmZpZy5zaG93TW9udGhzID4gMSB8fFxuICAgICAgICAgICAgICAgIHNlbGYuY29uZmlnLm1vbnRoU2VsZWN0b3JUeXBlID09PSBcInN0YXRpY1wiKSB7XG4gICAgICAgICAgICAgICAgc2VsZi5tb250aEVsZW1lbnRzW2ldLnRleHRDb250ZW50ID1cbiAgICAgICAgICAgICAgICAgICAgbW9udGhUb1N0cihkLmdldE1vbnRoKCksIHNlbGYuY29uZmlnLnNob3J0aGFuZEN1cnJlbnRNb250aCwgc2VsZi5sMTBuKSArIFwiIFwiO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgc2VsZi5tb250aHNEcm9wZG93bkNvbnRhaW5lci52YWx1ZSA9IGQuZ2V0TW9udGgoKS50b1N0cmluZygpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgeWVhckVsZW1lbnQudmFsdWUgPSBkLmdldEZ1bGxZZWFyKCkudG9TdHJpbmcoKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHNlbGYuX2hpZGVQcmV2TW9udGhBcnJvdyA9XG4gICAgICAgICAgICBzZWxmLmNvbmZpZy5taW5EYXRlICE9PSB1bmRlZmluZWQgJiZcbiAgICAgICAgICAgICAgICAoc2VsZi5jdXJyZW50WWVhciA9PT0gc2VsZi5jb25maWcubWluRGF0ZS5nZXRGdWxsWWVhcigpXG4gICAgICAgICAgICAgICAgICAgID8gc2VsZi5jdXJyZW50TW9udGggPD0gc2VsZi5jb25maWcubWluRGF0ZS5nZXRNb250aCgpXG4gICAgICAgICAgICAgICAgICAgIDogc2VsZi5jdXJyZW50WWVhciA8IHNlbGYuY29uZmlnLm1pbkRhdGUuZ2V0RnVsbFllYXIoKSk7XG4gICAgICAgIHNlbGYuX2hpZGVOZXh0TW9udGhBcnJvdyA9XG4gICAgICAgICAgICBzZWxmLmNvbmZpZy5tYXhEYXRlICE9PSB1bmRlZmluZWQgJiZcbiAgICAgICAgICAgICAgICAoc2VsZi5jdXJyZW50WWVhciA9PT0gc2VsZi5jb25maWcubWF4RGF0ZS5nZXRGdWxsWWVhcigpXG4gICAgICAgICAgICAgICAgICAgID8gc2VsZi5jdXJyZW50TW9udGggKyAxID4gc2VsZi5jb25maWcubWF4RGF0ZS5nZXRNb250aCgpXG4gICAgICAgICAgICAgICAgICAgIDogc2VsZi5jdXJyZW50WWVhciA+IHNlbGYuY29uZmlnLm1heERhdGUuZ2V0RnVsbFllYXIoKSk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGdldERhdGVTdHIoc3BlY2lmaWNGb3JtYXQpIHtcbiAgICAgICAgdmFyIGZvcm1hdCA9IHNwZWNpZmljRm9ybWF0IHx8XG4gICAgICAgICAgICAoc2VsZi5jb25maWcuYWx0SW5wdXQgPyBzZWxmLmNvbmZpZy5hbHRGb3JtYXQgOiBzZWxmLmNvbmZpZy5kYXRlRm9ybWF0KTtcbiAgICAgICAgcmV0dXJuIHNlbGYuc2VsZWN0ZWREYXRlc1xuICAgICAgICAgICAgLm1hcChmdW5jdGlvbiAoZE9iaikgeyByZXR1cm4gc2VsZi5mb3JtYXREYXRlKGRPYmosIGZvcm1hdCk7IH0pXG4gICAgICAgICAgICAuZmlsdGVyKGZ1bmN0aW9uIChkLCBpLCBhcnIpIHtcbiAgICAgICAgICAgIHJldHVybiBzZWxmLmNvbmZpZy5tb2RlICE9PSBcInJhbmdlXCIgfHxcbiAgICAgICAgICAgICAgICBzZWxmLmNvbmZpZy5lbmFibGVUaW1lIHx8XG4gICAgICAgICAgICAgICAgYXJyLmluZGV4T2YoZCkgPT09IGk7XG4gICAgICAgIH0pXG4gICAgICAgICAgICAuam9pbihzZWxmLmNvbmZpZy5tb2RlICE9PSBcInJhbmdlXCJcbiAgICAgICAgICAgID8gc2VsZi5jb25maWcuY29uanVuY3Rpb25cbiAgICAgICAgICAgIDogc2VsZi5sMTBuLnJhbmdlU2VwYXJhdG9yKTtcbiAgICB9XG4gICAgZnVuY3Rpb24gdXBkYXRlVmFsdWUodHJpZ2dlckNoYW5nZSkge1xuICAgICAgICBpZiAodHJpZ2dlckNoYW5nZSA9PT0gdm9pZCAwKSB7IHRyaWdnZXJDaGFuZ2UgPSB0cnVlOyB9XG4gICAgICAgIGlmIChzZWxmLm1vYmlsZUlucHV0ICE9PSB1bmRlZmluZWQgJiYgc2VsZi5tb2JpbGVGb3JtYXRTdHIpIHtcbiAgICAgICAgICAgIHNlbGYubW9iaWxlSW5wdXQudmFsdWUgPVxuICAgICAgICAgICAgICAgIHNlbGYubGF0ZXN0U2VsZWN0ZWREYXRlT2JqICE9PSB1bmRlZmluZWRcbiAgICAgICAgICAgICAgICAgICAgPyBzZWxmLmZvcm1hdERhdGUoc2VsZi5sYXRlc3RTZWxlY3RlZERhdGVPYmosIHNlbGYubW9iaWxlRm9ybWF0U3RyKVxuICAgICAgICAgICAgICAgICAgICA6IFwiXCI7XG4gICAgICAgIH1cbiAgICAgICAgc2VsZi5pbnB1dC52YWx1ZSA9IGdldERhdGVTdHIoc2VsZi5jb25maWcuZGF0ZUZvcm1hdCk7XG4gICAgICAgIGlmIChzZWxmLmFsdElucHV0ICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHNlbGYuYWx0SW5wdXQudmFsdWUgPSBnZXREYXRlU3RyKHNlbGYuY29uZmlnLmFsdEZvcm1hdCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRyaWdnZXJDaGFuZ2UgIT09IGZhbHNlKVxuICAgICAgICAgICAgdHJpZ2dlckV2ZW50KFwib25WYWx1ZVVwZGF0ZVwiKTtcbiAgICB9XG4gICAgZnVuY3Rpb24gb25Nb250aE5hdkNsaWNrKGUpIHtcbiAgICAgICAgdmFyIGV2ZW50VGFyZ2V0ID0gZ2V0RXZlbnRUYXJnZXQoZSk7XG4gICAgICAgIHZhciBpc1ByZXZNb250aCA9IHNlbGYucHJldk1vbnRoTmF2LmNvbnRhaW5zKGV2ZW50VGFyZ2V0KTtcbiAgICAgICAgdmFyIGlzTmV4dE1vbnRoID0gc2VsZi5uZXh0TW9udGhOYXYuY29udGFpbnMoZXZlbnRUYXJnZXQpO1xuICAgICAgICBpZiAoaXNQcmV2TW9udGggfHwgaXNOZXh0TW9udGgpIHtcbiAgICAgICAgICAgIGNoYW5nZU1vbnRoKGlzUHJldk1vbnRoID8gLTEgOiAxKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChzZWxmLnllYXJFbGVtZW50cy5pbmRleE9mKGV2ZW50VGFyZ2V0KSA+PSAwKSB7XG4gICAgICAgICAgICBldmVudFRhcmdldC5zZWxlY3QoKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChldmVudFRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoXCJhcnJvd1VwXCIpKSB7XG4gICAgICAgICAgICBzZWxmLmNoYW5nZVllYXIoc2VsZi5jdXJyZW50WWVhciArIDEpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGV2ZW50VGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucyhcImFycm93RG93blwiKSkge1xuICAgICAgICAgICAgc2VsZi5jaGFuZ2VZZWFyKHNlbGYuY3VycmVudFllYXIgLSAxKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBmdW5jdGlvbiB0aW1lV3JhcHBlcihlKSB7XG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgdmFyIGlzS2V5RG93biA9IGUudHlwZSA9PT0gXCJrZXlkb3duXCIsIGV2ZW50VGFyZ2V0ID0gZ2V0RXZlbnRUYXJnZXQoZSksIGlucHV0ID0gZXZlbnRUYXJnZXQ7XG4gICAgICAgIGlmIChzZWxmLmFtUE0gIT09IHVuZGVmaW5lZCAmJiBldmVudFRhcmdldCA9PT0gc2VsZi5hbVBNKSB7XG4gICAgICAgICAgICBzZWxmLmFtUE0udGV4dENvbnRlbnQgPVxuICAgICAgICAgICAgICAgIHNlbGYubDEwbi5hbVBNW2ludChzZWxmLmFtUE0udGV4dENvbnRlbnQgPT09IHNlbGYubDEwbi5hbVBNWzBdKV07XG4gICAgICAgIH1cbiAgICAgICAgdmFyIG1pbiA9IHBhcnNlRmxvYXQoaW5wdXQuZ2V0QXR0cmlidXRlKFwibWluXCIpKSwgbWF4ID0gcGFyc2VGbG9hdChpbnB1dC5nZXRBdHRyaWJ1dGUoXCJtYXhcIikpLCBzdGVwID0gcGFyc2VGbG9hdChpbnB1dC5nZXRBdHRyaWJ1dGUoXCJzdGVwXCIpKSwgY3VyVmFsdWUgPSBwYXJzZUludChpbnB1dC52YWx1ZSwgMTApLCBkZWx0YSA9IGUuZGVsdGEgfHxcbiAgICAgICAgICAgIChpc0tleURvd24gPyAoZS53aGljaCA9PT0gMzggPyAxIDogLTEpIDogMCk7XG4gICAgICAgIHZhciBuZXdWYWx1ZSA9IGN1clZhbHVlICsgc3RlcCAqIGRlbHRhO1xuICAgICAgICBpZiAodHlwZW9mIGlucHV0LnZhbHVlICE9PSBcInVuZGVmaW5lZFwiICYmIGlucHV0LnZhbHVlLmxlbmd0aCA9PT0gMikge1xuICAgICAgICAgICAgdmFyIGlzSG91ckVsZW0gPSBpbnB1dCA9PT0gc2VsZi5ob3VyRWxlbWVudCwgaXNNaW51dGVFbGVtID0gaW5wdXQgPT09IHNlbGYubWludXRlRWxlbWVudDtcbiAgICAgICAgICAgIGlmIChuZXdWYWx1ZSA8IG1pbikge1xuICAgICAgICAgICAgICAgIG5ld1ZhbHVlID1cbiAgICAgICAgICAgICAgICAgICAgbWF4ICtcbiAgICAgICAgICAgICAgICAgICAgICAgIG5ld1ZhbHVlICtcbiAgICAgICAgICAgICAgICAgICAgICAgIGludCghaXNIb3VyRWxlbSkgK1xuICAgICAgICAgICAgICAgICAgICAgICAgKGludChpc0hvdXJFbGVtKSAmJiBpbnQoIXNlbGYuYW1QTSkpO1xuICAgICAgICAgICAgICAgIGlmIChpc01pbnV0ZUVsZW0pXG4gICAgICAgICAgICAgICAgICAgIGluY3JlbWVudE51bUlucHV0KHVuZGVmaW5lZCwgLTEsIHNlbGYuaG91ckVsZW1lbnQpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAobmV3VmFsdWUgPiBtYXgpIHtcbiAgICAgICAgICAgICAgICBuZXdWYWx1ZSA9XG4gICAgICAgICAgICAgICAgICAgIGlucHV0ID09PSBzZWxmLmhvdXJFbGVtZW50ID8gbmV3VmFsdWUgLSBtYXggLSBpbnQoIXNlbGYuYW1QTSkgOiBtaW47XG4gICAgICAgICAgICAgICAgaWYgKGlzTWludXRlRWxlbSlcbiAgICAgICAgICAgICAgICAgICAgaW5jcmVtZW50TnVtSW5wdXQodW5kZWZpbmVkLCAxLCBzZWxmLmhvdXJFbGVtZW50KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChzZWxmLmFtUE0gJiZcbiAgICAgICAgICAgICAgICBpc0hvdXJFbGVtICYmXG4gICAgICAgICAgICAgICAgKHN0ZXAgPT09IDFcbiAgICAgICAgICAgICAgICAgICAgPyBuZXdWYWx1ZSArIGN1clZhbHVlID09PSAyM1xuICAgICAgICAgICAgICAgICAgICA6IE1hdGguYWJzKG5ld1ZhbHVlIC0gY3VyVmFsdWUpID4gc3RlcCkpIHtcbiAgICAgICAgICAgICAgICBzZWxmLmFtUE0udGV4dENvbnRlbnQgPVxuICAgICAgICAgICAgICAgICAgICBzZWxmLmwxMG4uYW1QTVtpbnQoc2VsZi5hbVBNLnRleHRDb250ZW50ID09PSBzZWxmLmwxMG4uYW1QTVswXSldO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaW5wdXQudmFsdWUgPSBwYWQobmV3VmFsdWUpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGluaXQoKTtcbiAgICByZXR1cm4gc2VsZjtcbn1cbmZ1bmN0aW9uIF9mbGF0cGlja3Iobm9kZUxpc3QsIGNvbmZpZykge1xuICAgIHZhciBub2RlcyA9IEFycmF5LnByb3RvdHlwZS5zbGljZVxuICAgICAgICAuY2FsbChub2RlTGlzdClcbiAgICAgICAgLmZpbHRlcihmdW5jdGlvbiAoeCkgeyByZXR1cm4geCBpbnN0YW5jZW9mIEhUTUxFbGVtZW50OyB9KTtcbiAgICB2YXIgaW5zdGFuY2VzID0gW107XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBub2Rlcy5sZW5ndGg7IGkrKykge1xuICAgICAgICB2YXIgbm9kZSA9IG5vZGVzW2ldO1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgaWYgKG5vZGUuZ2V0QXR0cmlidXRlKFwiZGF0YS1mcC1vbWl0XCIpICE9PSBudWxsKVxuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgaWYgKG5vZGUuX2ZsYXRwaWNrciAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgbm9kZS5fZmxhdHBpY2tyLmRlc3Ryb3koKTtcbiAgICAgICAgICAgICAgICBub2RlLl9mbGF0cGlja3IgPSB1bmRlZmluZWQ7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBub2RlLl9mbGF0cGlja3IgPSBGbGF0cGlja3JJbnN0YW5jZShub2RlLCBjb25maWcgfHwge30pO1xuICAgICAgICAgICAgaW5zdGFuY2VzLnB1c2gobm9kZS5fZmxhdHBpY2tyKTtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZSkge1xuICAgICAgICAgICAgY29uc29sZS5lcnJvcihlKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gaW5zdGFuY2VzLmxlbmd0aCA9PT0gMSA/IGluc3RhbmNlc1swXSA6IGluc3RhbmNlcztcbn1cbmlmICh0eXBlb2YgSFRNTEVsZW1lbnQgIT09IFwidW5kZWZpbmVkXCIgJiZcbiAgICB0eXBlb2YgSFRNTENvbGxlY3Rpb24gIT09IFwidW5kZWZpbmVkXCIgJiZcbiAgICB0eXBlb2YgTm9kZUxpc3QgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICBIVE1MQ29sbGVjdGlvbi5wcm90b3R5cGUuZmxhdHBpY2tyID0gTm9kZUxpc3QucHJvdG90eXBlLmZsYXRwaWNrciA9IGZ1bmN0aW9uIChjb25maWcpIHtcbiAgICAgICAgcmV0dXJuIF9mbGF0cGlja3IodGhpcywgY29uZmlnKTtcbiAgICB9O1xuICAgIEhUTUxFbGVtZW50LnByb3RvdHlwZS5mbGF0cGlja3IgPSBmdW5jdGlvbiAoY29uZmlnKSB7XG4gICAgICAgIHJldHVybiBfZmxhdHBpY2tyKFt0aGlzXSwgY29uZmlnKTtcbiAgICB9O1xufVxudmFyIGZsYXRwaWNrciA9IGZ1bmN0aW9uIChzZWxlY3RvciwgY29uZmlnKSB7XG4gICAgaWYgKHR5cGVvZiBzZWxlY3RvciA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICByZXR1cm4gX2ZsYXRwaWNrcih3aW5kb3cuZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChzZWxlY3RvciksIGNvbmZpZyk7XG4gICAgfVxuICAgIGVsc2UgaWYgKHNlbGVjdG9yIGluc3RhbmNlb2YgTm9kZSkge1xuICAgICAgICByZXR1cm4gX2ZsYXRwaWNrcihbc2VsZWN0b3JdLCBjb25maWcpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgcmV0dXJuIF9mbGF0cGlja3Ioc2VsZWN0b3IsIGNvbmZpZyk7XG4gICAgfVxufTtcbmZsYXRwaWNrci5kZWZhdWx0Q29uZmlnID0ge307XG5mbGF0cGlja3IubDEwbnMgPSB7XG4gICAgZW46IF9fYXNzaWduKHt9LCBFbmdsaXNoKSxcbiAgICBkZWZhdWx0OiBfX2Fzc2lnbih7fSwgRW5nbGlzaCksXG59O1xuZmxhdHBpY2tyLmxvY2FsaXplID0gZnVuY3Rpb24gKGwxMG4pIHtcbiAgICBmbGF0cGlja3IubDEwbnMuZGVmYXVsdCA9IF9fYXNzaWduKF9fYXNzaWduKHt9LCBmbGF0cGlja3IubDEwbnMuZGVmYXVsdCksIGwxMG4pO1xufTtcbmZsYXRwaWNrci5zZXREZWZhdWx0cyA9IGZ1bmN0aW9uIChjb25maWcpIHtcbiAgICBmbGF0cGlja3IuZGVmYXVsdENvbmZpZyA9IF9fYXNzaWduKF9fYXNzaWduKHt9LCBmbGF0cGlja3IuZGVmYXVsdENvbmZpZyksIGNvbmZpZyk7XG59O1xuZmxhdHBpY2tyLnBhcnNlRGF0ZSA9IGNyZWF0ZURhdGVQYXJzZXIoe30pO1xuZmxhdHBpY2tyLmZvcm1hdERhdGUgPSBjcmVhdGVEYXRlRm9ybWF0dGVyKHt9KTtcbmZsYXRwaWNrci5jb21wYXJlRGF0ZXMgPSBjb21wYXJlRGF0ZXM7XG5pZiAodHlwZW9mIGpRdWVyeSAhPT0gXCJ1bmRlZmluZWRcIiAmJiB0eXBlb2YgalF1ZXJ5LmZuICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgalF1ZXJ5LmZuLmZsYXRwaWNrciA9IGZ1bmN0aW9uIChjb25maWcpIHtcbiAgICAgICAgcmV0dXJuIF9mbGF0cGlja3IodGhpcywgY29uZmlnKTtcbiAgICB9O1xufVxuRGF0ZS5wcm90b3R5cGUuZnBfaW5jciA9IGZ1bmN0aW9uIChkYXlzKSB7XG4gICAgcmV0dXJuIG5ldyBEYXRlKHRoaXMuZ2V0RnVsbFllYXIoKSwgdGhpcy5nZXRNb250aCgpLCB0aGlzLmdldERhdGUoKSArICh0eXBlb2YgZGF5cyA9PT0gXCJzdHJpbmdcIiA/IHBhcnNlSW50KGRheXMsIDEwKSA6IGRheXMpKTtcbn07XG5pZiAodHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHdpbmRvdy5mbGF0cGlja3IgPSBmbGF0cGlja3I7XG59XG5leHBvcnQgZGVmYXVsdCBmbGF0cGlja3I7XG4iLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi8uLi9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uLy4uL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uLy4uL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi8uLi9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uLy4uL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uLy4uL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uLy4uL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9mbGF0cGlja3IubWluLmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xub3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi8uLi9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vZmxhdHBpY2tyLm1pbi5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCJpbXBvcnQgQWJzdHJhY3RTdGF0ZWZ1bFZpZXcgZnJvbSAnLi4vZnJhbWV3b3JrL3ZpZXcvYWJzdHJhY3Qtc3RhdGVmdWwtdmlldy5qcyc7XG5pbXBvcnQgZmxhdHBpY2tyIGZyb20gJ2ZsYXRwaWNrcic7XG5pbXBvcnQgJ2ZsYXRwaWNrci9kaXN0L2ZsYXRwaWNrci5taW4uY3NzJztcbmltcG9ydCBkYXlqcyBmcm9tICdkYXlqcyc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEZvcm1FZGl0VmlldyBleHRlbmRzIEFic3RyYWN0U3RhdGVmdWxWaWV3IHtcbiAgI2ZsYXRwaWNrclN0YXJ0ID0gbnVsbDtcbiAgI2ZsYXRwaWNrckVuZCA9IG51bGw7XG4gICNkZXN0aW5hdGlvbnMgPSBbXTtcbiAgI29mZmVycyA9IHt9O1xuXG4gIGNvbnN0cnVjdG9yKHsgcG9pbnQgPSB7fSwgZGVzdGluYXRpb25zID0gW10sIG9mZmVycyA9IHt9LCBvbkZvcm1TdWJtaXQsIG9uRm9ybUNsb3NlLCBvbkZvcm1EZWxldGUgfSkge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy4jZGVzdGluYXRpb25zID0gZGVzdGluYXRpb25zO1xuICAgIHRoaXMuI29mZmVycyA9IG9mZmVycztcbiAgICB0aGlzLl9zdGF0ZSA9IEZvcm1FZGl0Vmlldy5wYXJzZVBvaW50VG9TdGF0ZShwb2ludCk7XG4gICAgdGhpcy5fb25Gb3JtU3VibWl0ID0gb25Gb3JtU3VibWl0O1xuICAgIHRoaXMuX29uRm9ybUNsb3NlID0gb25Gb3JtQ2xvc2U7XG4gICAgdGhpcy5fb25Gb3JtRGVsZXRlID0gb25Gb3JtRGVsZXRlO1xuXG4gICAgdGhpcy5fcmVzdG9yZUhhbmRsZXJzKCk7XG4gIH1cblxuICBnZXQgdGVtcGxhdGUoKSB7XG4gICAgY29uc3QgY3VycmVudERlc3RpbmF0aW9uID0gdGhpcy4jZGVzdGluYXRpb25zLmZpbmQoKGQpID0+IGQuaWQgPT09IHRoaXMuX3N0YXRlLmRlc3RpbmF0aW9uKSB8fCB7fTtcbiAgICBjb25zdCBjdXJyZW50T2ZmZXJzID0gdGhpcy4jb2ZmZXJzW3RoaXMuX3N0YXRlLnR5cGVdIHx8IFtdO1xuXG4gICAgcmV0dXJuIGBcbiAgICAgIDxmb3JtIGNsYXNzPVwiZXZlbnQgZXZlbnQtLWVkaXRcIiBhY3Rpb249XCIjXCIgbWV0aG9kPVwicG9zdFwiPlxuICAgICAgICA8aGVhZGVyIGNsYXNzPVwiZXZlbnRfX2hlYWRlclwiPlxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJldmVudF9fdHlwZS13cmFwcGVyXCI+XG4gICAgICAgICAgICA8bGFiZWwgY2xhc3M9XCJldmVudF9fdHlwZSAgZXZlbnRfX3R5cGUtYnRuXCIgZm9yPVwiZXZlbnQtdHlwZS10b2dnbGUtMVwiPlxuICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cInZpc3VhbGx5LWhpZGRlblwiPkNob29zZSBldmVudCB0eXBlPC9zcGFuPlxuICAgICAgICAgICAgICA8aW1nIGNsYXNzPVwiZXZlbnRfX3R5cGUtaWNvblwiIHdpZHRoPVwiMTdcIiBoZWlnaHQ9XCIxN1wiIHNyYz1cImltZy9pY29ucy8ke3RoaXMuX3N0YXRlLnR5cGV9LnBuZ1wiIGFsdD1cIkV2ZW50IHR5cGUgaWNvblwiPlxuICAgICAgICAgICAgPC9sYWJlbD5cbiAgICAgICAgICAgIDxpbnB1dCBjbGFzcz1cImV2ZW50X190eXBlLXRvZ2dsZSAgdmlzdWFsbHktaGlkZGVuXCIgaWQ9XCJldmVudC10eXBlLXRvZ2dsZS0xXCIgdHlwZT1cImNoZWNrYm94XCI+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZXZlbnRfX3R5cGUtbGlzdFwiPlxuICAgICAgICAgICAgICA8ZmllbGRzZXQgY2xhc3M9XCJldmVudF9fdHlwZS1ncm91cFwiPlxuICAgICAgICAgICAgICAgIDxsZWdlbmQgY2xhc3M9XCJ2aXN1YWxseS1oaWRkZW5cIj5FdmVudCB0eXBlPC9sZWdlbmQ+XG4gICAgICAgICAgICAgICAgJHtPYmplY3Qua2V5cyh0aGlzLiNvZmZlcnMpLm1hcCgodHlwZSkgPT4gYFxuICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImV2ZW50X190eXBlLWl0ZW1cIj5cbiAgICAgICAgICAgICAgICAgICAgPGlucHV0IGlkPVwiZXZlbnQtdHlwZS0ke3R5cGV9LTFcIiBjbGFzcz1cImV2ZW50X190eXBlLWlucHV0ICB2aXN1YWxseS1oaWRkZW5cIiB0eXBlPVwicmFkaW9cIiBuYW1lPVwiZXZlbnQtdHlwZVwiIHZhbHVlPVwiJHt0eXBlfVwiICR7dHlwZSA9PT0gdGhpcy5fc3RhdGUudHlwZSA/ICdjaGVja2VkJyA6ICcnfT5cbiAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPVwiZXZlbnRfX3R5cGUtbGFiZWwgIGV2ZW50X190eXBlLWxhYmVsLS0ke3R5cGV9XCIgZm9yPVwiZXZlbnQtdHlwZS0ke3R5cGV9LTFcIj4ke3R5cGV9PC9sYWJlbD5cbiAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIGApLmpvaW4oJycpfVxuICAgICAgICAgICAgICA8L2ZpZWxkc2V0PlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICA8ZGl2IGNsYXNzPVwiZXZlbnRfX2ZpZWxkLWdyb3VwICBldmVudF9fZmllbGQtZ3JvdXAtLWRlc3RpbmF0aW9uXCI+XG4gICAgICAgICAgICA8bGFiZWwgY2xhc3M9XCJldmVudF9fbGFiZWwgIGV2ZW50X190eXBlLW91dHB1dFwiIGZvcj1cImV2ZW50LWRlc3RpbmF0aW9uLTFcIj5cbiAgICAgICAgICAgICAgJHt0aGlzLl9zdGF0ZS50eXBlfVxuICAgICAgICAgICAgPC9sYWJlbD5cbiAgICAgICAgICAgIDxzZWxlY3QgY2xhc3M9XCJldmVudF9faW5wdXQgZXZlbnRfX2lucHV0LS1kZXN0aW5hdGlvblwiIGlkPVwiZXZlbnQtZGVzdGluYXRpb24tMVwiIG5hbWU9XCJldmVudC1kZXN0aW5hdGlvblwiPlxuICAgICAgICAgICAgICAke3RoaXMuI2Rlc3RpbmF0aW9ucy5tYXAoKGRlc3QpID0+IGBcbiAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwiJHtkZXN0Lm5hbWV9XCIgJHtkZXN0LmlkID09PSB0aGlzLl9zdGF0ZS5kZXN0aW5hdGlvbiA/ICdzZWxlY3RlZCcgOiAnJ30+JHtkZXN0Lm5hbWV9PC9vcHRpb24+XG4gICAgICAgICAgICAgIGApLmpvaW4oJycpfVxuICAgICAgICAgICAgPC9zZWxlY3Q+XG4gICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICA8ZGl2IGNsYXNzPVwiZXZlbnRfX2ZpZWxkLWdyb3VwICBldmVudF9fZmllbGQtZ3JvdXAtLXRpbWVcIj5cbiAgICAgICAgICAgIDxsYWJlbCBjbGFzcz1cInZpc3VhbGx5LWhpZGRlblwiIGZvcj1cImV2ZW50LXN0YXJ0LXRpbWUtMVwiPlN0YXJ0IHRpbWU8L2xhYmVsPlxuICAgICAgICAgICAgPGlucHV0IGNsYXNzPVwiZXZlbnRfX2lucHV0ICBldmVudF9faW5wdXQtLXRpbWVcIiBpZD1cImV2ZW50LXN0YXJ0LXRpbWUtMVwiIHR5cGU9XCJ0ZXh0XCIgbmFtZT1cImV2ZW50LXN0YXJ0XCIgdmFsdWU9XCIke2RheWpzKHRoaXMuX3N0YXRlLmRhdGVGcm9tKS5mb3JtYXQoJ0REL01NL1lZWVkgSEg6bW0nKX1cIj5cbiAgICAgICAgICAgICZtZGFzaDtcbiAgICAgICAgICAgIDxsYWJlbCBjbGFzcz1cInZpc3VhbGx5LWhpZGRlblwiIGZvcj1cImV2ZW50LWVuZC10aW1lLTFcIj5FbmQgdGltZTwvbGFiZWw+XG4gICAgICAgICAgICA8aW5wdXQgY2xhc3M9XCJldmVudF9faW5wdXQgIGV2ZW50X19pbnB1dC0tdGltZVwiIGlkPVwiZXZlbnQtZW5kLXRpbWUtMVwiIHR5cGU9XCJ0ZXh0XCIgbmFtZT1cImV2ZW50LWVuZFwiIHZhbHVlPVwiJHtkYXlqcyh0aGlzLl9zdGF0ZS5kYXRlVG8pLmZvcm1hdCgnREQvTU0vWVlZWSBISDptbScpfVwiPlxuICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgPGRpdiBjbGFzcz1cImV2ZW50X19maWVsZC1ncm91cCAgZXZlbnRfX2ZpZWxkLWdyb3VwLS1wcmljZVwiPlxuICAgICAgICAgICAgPGxhYmVsIGNsYXNzPVwiZXZlbnRfX2xhYmVsXCIgZm9yPVwiZXZlbnQtcHJpY2UtMVwiPlxuICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cInZpc3VhbGx5LWhpZGRlblwiPlByaWNlPC9zcGFuPlxuICAgICAgICAgICAgICAmZXVybztcbiAgICAgICAgICAgIDwvbGFiZWw+XG4gICAgICAgICAgICA8aW5wdXQgY2xhc3M9XCJldmVudF9faW5wdXQgIGV2ZW50X19pbnB1dC0tcHJpY2VcIiBpZD1cImV2ZW50LXByaWNlLTFcIiB0eXBlPVwidGV4dFwiIG5hbWU9XCJldmVudC1wcmljZVwiIHZhbHVlPVwiJHt0aGlzLl9zdGF0ZS5iYXNlUHJpY2V9XCI+XG4gICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICA8YnV0dG9uIGNsYXNzPVwiZXZlbnRfX3NhdmUtYnRuICBidG4gIGJ0bi0tYmx1ZVwiIHR5cGU9XCJzdWJtaXRcIj5TYXZlPC9idXR0b24+XG4gICAgICAgICAgPGJ1dHRvbiBjbGFzcz1cImV2ZW50X19yZXNldC1idG5cIiB0eXBlPVwicmVzZXRcIj5EZWxldGU8L2J1dHRvbj5cbiAgICAgICAgICA8YnV0dG9uIGNsYXNzPVwiZXZlbnRfX3JvbGx1cC1idG5cIiB0eXBlPVwiYnV0dG9uXCI+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz1cInZpc3VhbGx5LWhpZGRlblwiPk9wZW4gZXZlbnQ8L3NwYW4+XG4gICAgICAgICAgPC9idXR0b24+XG4gICAgICAgIDwvaGVhZGVyPlxuXG4gICAgICAgIDxzZWN0aW9uIGNsYXNzPVwiZXZlbnRfX2RldGFpbHNcIj5cbiAgICAgICAgICA8c2VjdGlvbiBjbGFzcz1cImV2ZW50X19zZWN0aW9uICBldmVudF9fc2VjdGlvbi0tb2ZmZXJzXCI+XG4gICAgICAgICAgICA8aDMgY2xhc3M9XCJldmVudF9fc2VjdGlvbi10aXRsZSAgZXZlbnRfX3NlY3Rpb24tdGl0bGUtLW9mZmVyc1wiPk9mZmVyczwvaDM+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZXZlbnRfX2F2YWlsYWJsZS1vZmZlcnNcIj5cbiAgICAgICAgICAgICAgJHtjdXJyZW50T2ZmZXJzLm1hcCgob2ZmZXIpID0+IGBcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZXZlbnRfX29mZmVyLXNlbGVjdG9yXCI+XG4gICAgICAgICAgICAgICAgICA8aW5wdXQgY2xhc3M9XCJldmVudF9fb2ZmZXItY2hlY2tib3ggIHZpc3VhbGx5LWhpZGRlblwiIGlkPVwiZXZlbnQtb2ZmZXItJHtvZmZlci5pZH1cIiB0eXBlPVwiY2hlY2tib3hcIiBuYW1lPVwiZXZlbnQtb2ZmZXJcIiB2YWx1ZT1cIiR7b2ZmZXIuaWR9XCIgJHt0aGlzLl9zdGF0ZS5vZmZlcnMuaW5jbHVkZXMob2ZmZXIuaWQpID8gJ2NoZWNrZWQnIDogJyd9PlxuICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPVwiZXZlbnRfX29mZmVyLWxhYmVsXCIgZm9yPVwiZXZlbnQtb2ZmZXItJHtvZmZlci5pZH1cIj5cbiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJldmVudF9fb2ZmZXItdGl0bGVcIj4ke29mZmVyLnRpdGxlfTwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgJnBsdXM7JmV1cm87Jm5ic3A7PHNwYW4gY2xhc3M9XCJldmVudF9fb2ZmZXItcHJpY2VcIj4ke29mZmVyLnByaWNlfTwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgIDwvbGFiZWw+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgIGApLmpvaW4oJycpfVxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPC9zZWN0aW9uPlxuXG4gICAgICAgICAgPHNlY3Rpb24gY2xhc3M9XCJldmVudF9fc2VjdGlvbiAgZXZlbnRfX3NlY3Rpb24tLWRlc3RpbmF0aW9uXCI+XG4gICAgICAgICAgICA8aDMgY2xhc3M9XCJldmVudF9fc2VjdGlvbi10aXRsZSAgZXZlbnRfX3NlY3Rpb24tdGl0bGUtLWRlc3RpbmF0aW9uXCI+RGVzdGluYXRpb248L2gzPlxuICAgICAgICAgICAgPHAgY2xhc3M9XCJldmVudF9fZGVzdGluYXRpb24tZGVzY3JpcHRpb25cIj4ke2N1cnJlbnREZXN0aW5hdGlvbi5kZXNjcmlwdGlvbiB8fCAnJ308L3A+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZXZlbnRfX3Bob3Rvcy1jb250YWluZXJcIj5cbiAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImV2ZW50X19waG90b3MtdGFwZVwiPlxuICAgICAgICAgICAgICAgICR7KGN1cnJlbnREZXN0aW5hdGlvbi5waWN0dXJlcyB8fCBbXSkubWFwKChwaWMpID0+IGBcbiAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9XCJldmVudF9fcGhvdG9cIiBzcmM9XCIke3BpYy5zcmN9XCIgYWx0PVwiJHtwaWMuZGVzY3JpcHRpb259XCI+XG4gICAgICAgICAgICAgICAgYCkuam9pbignJyl9XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPC9zZWN0aW9uPlxuICAgICAgICA8L3NlY3Rpb24+XG4gICAgICA8L2Zvcm0+XG4gICAgYDtcbiAgfVxuXG4gIF9yZXN0b3JlSGFuZGxlcnMoKSB7XG4gICAgdGhpcy5fc2V0SW5uZXJIYW5kbGVycygpO1xuICAgIGNvbnN0IHJvbGx1cEJ0biA9IHRoaXMuZWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuZXZlbnRfX3JvbGx1cC1idG4nKTtcbiAgICBpZiAocm9sbHVwQnRuKSB7XG4gICAgICByb2xsdXBCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCB0aGlzLiNmb3JtQ2xvc2VIYW5kbGVyKTtcbiAgICB9XG4gICAgdGhpcy5lbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ3N1Ym1pdCcsIHRoaXMuI2Zvcm1TdWJtaXRIYW5kbGVyKTtcbiAgICB0aGlzLmVsZW1lbnQucXVlcnlTZWxlY3RvcignLmV2ZW50X19yZXNldC1idG4nKS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMuI2Zvcm1EZWxldGVIYW5kbGVyKTtcbiAgfVxuXG4gIF9zZXRJbm5lckhhbmRsZXJzKCkge1xuICAgIHRoaXMuZWxlbWVudC5xdWVyeVNlbGVjdG9yQWxsKCdpbnB1dFtuYW1lPVwiZXZlbnQtdHlwZVwiXScpLmZvckVhY2goKGlucHV0KSA9PiB7XG4gICAgICBpbnB1dC5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCB0aGlzLiN0eXBlQ2hhbmdlSGFuZGxlcik7XG4gICAgfSk7XG5cbiAgICB0aGlzLmVsZW1lbnQucXVlcnlTZWxlY3RvcignLmV2ZW50X19pbnB1dC0tZGVzdGluYXRpb24nKVxuICAgICAgLmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIHRoaXMuI2Rlc3RpbmF0aW9uQ2hhbmdlSGFuZGxlcik7XG5cbiAgICB0aGlzLmVsZW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmV2ZW50X19vZmZlci1jaGVja2JveCcpXG4gICAgICAuZm9yRWFjaCgoY2hlY2tib3gpID0+IGNoZWNrYm94LmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIHRoaXMuI29mZmVyc0NoYW5nZUhhbmRsZXIpKTtcblxuICAgIHRoaXMuI2luaXREYXRlcGlja2VycygpO1xuICB9XG5cbiAgI2luaXREYXRlcGlja2VycygpIHtcbiAgICBpZiAodGhpcy4jZmxhdHBpY2tyU3RhcnQpIHtcbiAgICAgIHRoaXMuI2ZsYXRwaWNrclN0YXJ0LmRlc3Ryb3koKTtcbiAgICB9XG4gICAgaWYgKHRoaXMuI2ZsYXRwaWNrckVuZCkge1xuICAgICAgdGhpcy4jZmxhdHBpY2tyRW5kLmRlc3Ryb3koKTtcbiAgICB9XG5cbiAgICB0aGlzLiNmbGF0cGlja3JTdGFydCA9IGZsYXRwaWNrcihcbiAgICAgIHRoaXMuZWxlbWVudC5xdWVyeVNlbGVjdG9yKCdpbnB1dFtuYW1lPVwiZXZlbnQtc3RhcnRcIl0nKSxcbiAgICAgIHtcbiAgICAgICAgZW5hYmxlVGltZTogdHJ1ZSxcbiAgICAgICAgZGF0ZUZvcm1hdDogJ2QvbS9ZIEg6aScsXG4gICAgICAgIGRlZmF1bHREYXRlOiB0aGlzLl9zdGF0ZS5kYXRlRnJvbSxcbiAgICAgICAgb25DaGFuZ2U6IHRoaXMuI2RhdGVGcm9tQ2hhbmdlSGFuZGxlcixcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGNhbWVsY2FzZVxuICAgICAgICB0aW1lXzI0aHI6IHRydWUsXG4gICAgICB9XG4gICAgKTtcblxuICAgIHRoaXMuI2ZsYXRwaWNrckVuZCA9IGZsYXRwaWNrcihcbiAgICAgIHRoaXMuZWxlbWVudC5xdWVyeVNlbGVjdG9yKCdpbnB1dFtuYW1lPVwiZXZlbnQtZW5kXCJdJyksXG4gICAgICB7XG4gICAgICAgIGVuYWJsZVRpbWU6IHRydWUsXG4gICAgICAgIGRhdGVGb3JtYXQ6ICdkL20vWSBIOmknLFxuICAgICAgICBkZWZhdWx0RGF0ZTogdGhpcy5fc3RhdGUuZGF0ZVRvLFxuICAgICAgICBvbkNoYW5nZTogdGhpcy4jZGF0ZVRvQ2hhbmdlSGFuZGxlcixcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGNhbWVsY2FzZVxuICAgICAgICB0aW1lXzI0aHI6IHRydWUsXG4gICAgICB9XG4gICAgKTtcbiAgfVxuXG4gICN0eXBlQ2hhbmdlSGFuZGxlciA9IChldnQpID0+IHtcbiAgICB0aGlzLnVwZGF0ZUVsZW1lbnQoe1xuICAgICAgdHlwZTogZXZ0LnRhcmdldC52YWx1ZSxcbiAgICAgIG9mZmVyczogW11cbiAgICB9KTtcbiAgfTtcblxuICAjZGVzdGluYXRpb25DaGFuZ2VIYW5kbGVyID0gKGV2dCkgPT4ge1xuICAgIGNvbnN0IGRlc3RpbmF0aW9uID0gdGhpcy4jZGVzdGluYXRpb25zLmZpbmQoKGRlc3QpID0+IGRlc3QubmFtZSA9PT0gZXZ0LnRhcmdldC52YWx1ZSk7XG4gICAgaWYgKGRlc3RpbmF0aW9uKSB7XG4gICAgICB0aGlzLnVwZGF0ZUVsZW1lbnQoe1xuICAgICAgICBkZXN0aW5hdGlvbjogZGVzdGluYXRpb24uaWRcbiAgICAgIH0pO1xuICAgIH1cbiAgfTtcblxuICAjb2ZmZXJzQ2hhbmdlSGFuZGxlciA9ICgpID0+IHtcbiAgICBjb25zdCBzZWxlY3RlZE9mZmVycyA9IEFycmF5LmZyb20odGhpcy5lbGVtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5ldmVudF9fb2ZmZXItY2hlY2tib3g6Y2hlY2tlZCcpKVxuICAgICAgLm1hcCgoaW5wdXQpID0+IGlucHV0LnZhbHVlKTtcblxuICAgIHRoaXMuX3NldFN0YXRlKHtcbiAgICAgIG9mZmVyczogc2VsZWN0ZWRPZmZlcnNcbiAgICB9KTtcbiAgfTtcblxuICAjZGF0ZUZyb21DaGFuZ2VIYW5kbGVyID0gKFtkYXRlXSkgPT4ge1xuICAgIHRoaXMuX3NldFN0YXRlKHtcbiAgICAgIGRhdGVGcm9tOiBkYXRlXG4gICAgfSk7XG4gIH07XG5cbiAgI2RhdGVUb0NoYW5nZUhhbmRsZXIgPSAoW2RhdGVdKSA9PiB7XG4gICAgdGhpcy5fc2V0U3RhdGUoe1xuICAgICAgZGF0ZVRvOiBkYXRlXG4gICAgfSk7XG4gIH07XG5cbiAgI2Zvcm1TdWJtaXRIYW5kbGVyID0gKGV2dCkgPT4ge1xuICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIHRoaXMuX29uRm9ybVN1Ym1pdChGb3JtRWRpdFZpZXcucGFyc2VTdGF0ZVRvUG9pbnQodGhpcy5fc3RhdGUpKTtcbiAgfTtcblxuICAjZm9ybUNsb3NlSGFuZGxlciA9IChldnQpID0+IHtcbiAgICBldnQucHJldmVudERlZmF1bHQoKTtcbiAgICB0aGlzLl9vbkZvcm1DbG9zZSgpO1xuICB9O1xuXG4gICNmb3JtRGVsZXRlSGFuZGxlciA9IChldnQpID0+IHtcbiAgICBldnQucHJldmVudERlZmF1bHQoKTtcbiAgICB0aGlzLl9vbkZvcm1EZWxldGUoRm9ybUVkaXRWaWV3LnBhcnNlU3RhdGVUb1BvaW50KHRoaXMuX3N0YXRlKSk7XG4gIH07XG5cbiAgc3RhdGljIHBhcnNlUG9pbnRUb1N0YXRlKHBvaW50KSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIC4uLnBvaW50LFxuICAgICAgZGF0ZUZyb206IHBvaW50LmRhdGVGcm9tID8gbmV3IERhdGUocG9pbnQuZGF0ZUZyb20pIDogbmV3IERhdGUoKSxcbiAgICAgIGRhdGVUbzogcG9pbnQuZGF0ZVRvID8gbmV3IERhdGUocG9pbnQuZGF0ZVRvKSA6IG5ldyBEYXRlKCksXG4gICAgICBvZmZlcnM6IHBvaW50Lm9mZmVycyB8fCBbXSxcbiAgICAgIGRlc3RpbmF0aW9uOiBwb2ludC5kZXN0aW5hdGlvbiB8fCAnJ1xuICAgIH07XG4gIH1cblxuICBzdGF0aWMgcGFyc2VTdGF0ZVRvUG9pbnQoc3RhdGUpIHtcbiAgICByZXR1cm4ge1xuICAgICAgLi4uc3RhdGUsXG4gICAgICBkYXRlRnJvbTogc3RhdGUuZGF0ZUZyb20udG9JU09TdHJpbmcoKSxcbiAgICAgIGRhdGVUbzogc3RhdGUuZGF0ZVRvLnRvSVNPU3RyaW5nKClcbiAgICB9O1xuICB9XG5cbiAgcmVtb3ZlRWxlbWVudCgpIHtcbiAgICBzdXBlci5yZW1vdmVFbGVtZW50KCk7XG5cbiAgICBpZiAodGhpcy4jZmxhdHBpY2tyU3RhcnQpIHtcbiAgICAgIHRoaXMuI2ZsYXRwaWNrclN0YXJ0LmRlc3Ryb3koKTtcbiAgICAgIHRoaXMuI2ZsYXRwaWNrclN0YXJ0ID0gbnVsbDtcbiAgICB9XG5cbiAgICBpZiAodGhpcy4jZmxhdHBpY2tyRW5kKSB7XG4gICAgICB0aGlzLiNmbGF0cGlja3JFbmQuZGVzdHJveSgpO1xuICAgICAgdGhpcy4jZmxhdHBpY2tyRW5kID0gbnVsbDtcbiAgICB9XG4gIH1cbn1cbiIsImltcG9ydCBBYnN0cmFjdFN0YXRlZnVsVmlldyBmcm9tICcuLi9mcmFtZXdvcmsvdmlldy9hYnN0cmFjdC1zdGF0ZWZ1bC12aWV3LmpzJztcbmltcG9ydCBmbGF0cGlja3IgZnJvbSAnZmxhdHBpY2tyJztcbmltcG9ydCAnZmxhdHBpY2tyL2Rpc3QvZmxhdHBpY2tyLm1pbi5jc3MnO1xuaW1wb3J0IGRheWpzIGZyb20gJ2RheWpzJztcbmltcG9ydCB7IFBPSU5UX1RZUEVTIH0gZnJvbSAnLi4vY29uc3QuanMnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBGb3JtQ3JlYXRlVmlldyBleHRlbmRzIEFic3RyYWN0U3RhdGVmdWxWaWV3IHtcbiAgI2ZsYXRwaWNrclN0YXJ0ID0gbnVsbDtcbiAgI2ZsYXRwaWNrckVuZCA9IG51bGw7XG4gICNkZXN0aW5hdGlvbnMgPSBbXTtcbiAgI29mZmVycyA9IHt9O1xuICAjaGFuZGxlRm9ybVN1Ym1pdCA9IG51bGw7XG4gICNoYW5kbGVGb3JtQ2xvc2UgPSBudWxsO1xuXG4gIGNvbnN0cnVjdG9yKHsgZGVzdGluYXRpb25zID0gW10sIG9mZmVycyA9IHt9LCBvbkZvcm1TdWJtaXQsIG9uRm9ybUNsb3NlIH0pIHtcbiAgICBzdXBlcigpO1xuICAgIHRoaXMuI2Rlc3RpbmF0aW9ucyA9IGRlc3RpbmF0aW9ucztcbiAgICB0aGlzLiNvZmZlcnMgPSBvZmZlcnM7XG4gICAgdGhpcy5fc3RhdGUgPSB0aGlzLiNnZXREZWZhdWx0U3RhdGUoKTtcbiAgICB0aGlzLiNoYW5kbGVGb3JtU3VibWl0ID0gb25Gb3JtU3VibWl0O1xuICAgIHRoaXMuI2hhbmRsZUZvcm1DbG9zZSA9IG9uRm9ybUNsb3NlO1xuXG4gICAgdGhpcy5fcmVzdG9yZUhhbmRsZXJzKCk7XG4gIH1cblxuICAjZ2V0RGVmYXVsdFN0YXRlKCkge1xuICAgIHJldHVybiB7XG4gICAgICB0eXBlOiAnZmxpZ2h0JyxcbiAgICAgIGRlc3RpbmF0aW9uOiAnJyxcbiAgICAgIGRhdGVGcm9tOiBuZXcgRGF0ZSgpLFxuICAgICAgZGF0ZVRvOiBuZXcgRGF0ZSgpLFxuICAgICAgYmFzZVByaWNlOiAwLFxuICAgICAgb2ZmZXJzOiBbXSxcbiAgICAgIGlzRmF2b3JpdGU6IGZhbHNlXG4gICAgfTtcbiAgfVxuXG4gIGdldCB0ZW1wbGF0ZSgpIHtcbiAgICBjb25zdCBjdXJyZW50RGVzdGluYXRpb24gPSB0aGlzLiNkZXN0aW5hdGlvbnMuZmluZCgoZCkgPT4gZC5pZCA9PT0gdGhpcy5fc3RhdGUuZGVzdGluYXRpb24pIHx8IHt9O1xuICAgIGNvbnN0IGN1cnJlbnRPZmZlcnMgPSB0aGlzLiNvZmZlcnNbdGhpcy5fc3RhdGUudHlwZV0gfHwgW107XG5cbiAgICByZXR1cm4gYFxuICAgICAgPGZvcm0gY2xhc3M9XCJldmVudCBldmVudC0tZWRpdFwiIGFjdGlvbj1cIiNcIiBtZXRob2Q9XCJwb3N0XCI+XG4gICAgICAgIDxoZWFkZXIgY2xhc3M9XCJldmVudF9faGVhZGVyXCI+XG4gICAgICAgICAgPGRpdiBjbGFzcz1cImV2ZW50X190eXBlLXdyYXBwZXJcIj5cbiAgICAgICAgICAgIDxsYWJlbCBjbGFzcz1cImV2ZW50X190eXBlICBldmVudF9fdHlwZS1idG5cIiBmb3I9XCJldmVudC10eXBlLXRvZ2dsZS0xXCI+XG4gICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwidmlzdWFsbHktaGlkZGVuXCI+Q2hvb3NlIGV2ZW50IHR5cGU8L3NwYW4+XG4gICAgICAgICAgICAgIDxpbWcgY2xhc3M9XCJldmVudF9fdHlwZS1pY29uXCIgd2lkdGg9XCIxN1wiIGhlaWdodD1cIjE3XCIgc3JjPVwiaW1nL2ljb25zLyR7dGhpcy5fc3RhdGUudHlwZX0ucG5nXCIgYWx0PVwiRXZlbnQgdHlwZSBpY29uXCI+XG4gICAgICAgICAgICA8L2xhYmVsPlxuICAgICAgICAgICAgPGlucHV0IGNsYXNzPVwiZXZlbnRfX3R5cGUtdG9nZ2xlICB2aXN1YWxseS1oaWRkZW5cIiBpZD1cImV2ZW50LXR5cGUtdG9nZ2xlLTFcIiB0eXBlPVwiY2hlY2tib3hcIj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJldmVudF9fdHlwZS1saXN0XCI+XG4gICAgICAgICAgICAgIDxmaWVsZHNldCBjbGFzcz1cImV2ZW50X190eXBlLWdyb3VwXCI+XG4gICAgICAgICAgICAgICAgPGxlZ2VuZCBjbGFzcz1cInZpc3VhbGx5LWhpZGRlblwiPkV2ZW50IHR5cGU8L2xlZ2VuZD5cbiAgICAgICAgICAgICAgICAke1BPSU5UX1RZUEVTLm1hcCgodHlwZSkgPT4gYFxuICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImV2ZW50X190eXBlLWl0ZW1cIj5cbiAgICAgICAgICAgICAgICAgICAgPGlucHV0IGlkPVwiZXZlbnQtdHlwZS0ke3R5cGV9LTFcIiBjbGFzcz1cImV2ZW50X190eXBlLWlucHV0ICB2aXN1YWxseS1oaWRkZW5cIiB0eXBlPVwicmFkaW9cIiBuYW1lPVwiZXZlbnQtdHlwZVwiIHZhbHVlPVwiJHt0eXBlfVwiICR7dHlwZSA9PT0gdGhpcy5fc3RhdGUudHlwZSA/ICdjaGVja2VkJyA6ICcnfT5cbiAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPVwiZXZlbnRfX3R5cGUtbGFiZWwgIGV2ZW50X190eXBlLWxhYmVsLS0ke3R5cGV9XCIgZm9yPVwiZXZlbnQtdHlwZS0ke3R5cGV9LTFcIj4ke3R5cGV9PC9sYWJlbD5cbiAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIGApLmpvaW4oJycpfVxuICAgICAgICAgICAgICA8L2ZpZWxkc2V0PlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICA8ZGl2IGNsYXNzPVwiZXZlbnRfX2ZpZWxkLWdyb3VwICBldmVudF9fZmllbGQtZ3JvdXAtLWRlc3RpbmF0aW9uXCI+XG4gICAgICAgICAgICA8bGFiZWwgY2xhc3M9XCJldmVudF9fbGFiZWwgIGV2ZW50X190eXBlLW91dHB1dFwiIGZvcj1cImV2ZW50LWRlc3RpbmF0aW9uLTFcIj5cbiAgICAgICAgICAgICAgJHt0aGlzLl9zdGF0ZS50eXBlfVxuICAgICAgICAgICAgPC9sYWJlbD5cbiAgICAgICAgICAgIDxzZWxlY3QgY2xhc3M9XCJldmVudF9faW5wdXQgZXZlbnRfX2lucHV0LS1kZXN0aW5hdGlvblwiIGlkPVwiZXZlbnQtZGVzdGluYXRpb24tMVwiIG5hbWU9XCJldmVudC1kZXN0aW5hdGlvblwiIHJlcXVpcmVkPlxuICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwiXCIgZGlzYWJsZWQgJHt0aGlzLl9zdGF0ZS5kZXN0aW5hdGlvbiA9PT0gJycgPyAnc2VsZWN0ZWQnIDogJyd9PlNlbGVjdCBkZXN0aW5hdGlvbjwvb3B0aW9uPlxuICAgICAgICAgICAgICAke3RoaXMuI2Rlc3RpbmF0aW9ucy5tYXAoKGRlc3QpID0+IGBcbiAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwiJHtkZXN0LmlkfVwiICR7dGhpcy5fc3RhdGUuZGVzdGluYXRpb24gPT09IGRlc3QuaWQgPyAnc2VsZWN0ZWQnIDogJyd9PiR7ZGVzdC5uYW1lfTwvb3B0aW9uPlxuICAgICAgICAgICAgICBgKS5qb2luKCcnKX1cbiAgICAgICAgICAgIDwvc2VsZWN0PlxuICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgPGRpdiBjbGFzcz1cImV2ZW50X19maWVsZC1ncm91cCAgZXZlbnRfX2ZpZWxkLWdyb3VwLS10aW1lXCI+XG4gICAgICAgICAgICA8bGFiZWwgY2xhc3M9XCJ2aXN1YWxseS1oaWRkZW5cIiBmb3I9XCJldmVudC1zdGFydC10aW1lLTFcIj5Gcm9tPC9sYWJlbD5cbiAgICAgICAgICAgIDxpbnB1dCBjbGFzcz1cImV2ZW50X19pbnB1dCAgZXZlbnRfX2lucHV0LS10aW1lXCIgaWQ9XCJldmVudC1zdGFydC10aW1lLTFcIiB0eXBlPVwidGV4dFwiIG5hbWU9XCJldmVudC1zdGFydFwiIHZhbHVlPVwiJHtkYXlqcyh0aGlzLl9zdGF0ZS5kYXRlRnJvbSkuZm9ybWF0KCdERC9NTS9ZWVlZIEhIOm1tJyl9XCIgcmVxdWlyZWQ+XG4gICAgICAgICAgICAmbWRhc2g7XG4gICAgICAgICAgICA8bGFiZWwgY2xhc3M9XCJ2aXN1YWxseS1oaWRkZW5cIiBmb3I9XCJldmVudC1lbmQtdGltZS0xXCI+VG88L2xhYmVsPlxuICAgICAgICAgICAgPGlucHV0IGNsYXNzPVwiZXZlbnRfX2lucHV0ICBldmVudF9faW5wdXQtLXRpbWVcIiBpZD1cImV2ZW50LWVuZC10aW1lLTFcIiB0eXBlPVwidGV4dFwiIG5hbWU9XCJldmVudC1lbmRcIiB2YWx1ZT1cIiR7ZGF5anModGhpcy5fc3RhdGUuZGF0ZVRvKS5mb3JtYXQoJ0REL01NL1lZWVkgSEg6bW0nKX1cIiByZXF1aXJlZD5cbiAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJldmVudF9fZmllbGQtZ3JvdXAgIGV2ZW50X19maWVsZC1ncm91cC0tcHJpY2VcIj5cbiAgICAgICAgICAgIDxsYWJlbCBjbGFzcz1cImV2ZW50X19sYWJlbFwiIGZvcj1cImV2ZW50LXByaWNlLTFcIj5cbiAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJ2aXN1YWxseS1oaWRkZW5cIj5QcmljZTwvc3Bhbj5cbiAgICAgICAgICAgICAgJmV1cm87XG4gICAgICAgICAgICA8L2xhYmVsPlxuICAgICAgICAgICAgPGlucHV0IGNsYXNzPVwiZXZlbnRfX2lucHV0ICBldmVudF9faW5wdXQtLXByaWNlXCIgaWQ9XCJldmVudC1wcmljZS0xXCIgdHlwZT1cIm51bWJlclwiIG5hbWU9XCJldmVudC1wcmljZVwiIG1pbj1cIjBcIiB2YWx1ZT1cIiR7dGhpcy5fc3RhdGUuYmFzZVByaWNlfVwiIHJlcXVpcmVkPlxuICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgPGJ1dHRvbiBjbGFzcz1cImV2ZW50X19zYXZlLWJ0biAgYnRuICBidG4tLWJsdWVcIiB0eXBlPVwic3VibWl0XCI+U2F2ZTwvYnV0dG9uPlxuICAgICAgICAgIDxidXR0b24gY2xhc3M9XCJldmVudF9fcmVzZXQtYnRuXCIgdHlwZT1cInJlc2V0XCI+Q2FuY2VsPC9idXR0b24+XG4gICAgICAgIDwvaGVhZGVyPlxuXG4gICAgICAgIDxzZWN0aW9uIGNsYXNzPVwiZXZlbnRfX2RldGFpbHNcIj5cbiAgICAgICAgICAke2N1cnJlbnRPZmZlcnMubGVuZ3RoID4gMCA/IGBcbiAgICAgICAgICAgIDxzZWN0aW9uIGNsYXNzPVwiZXZlbnRfX3NlY3Rpb24gIGV2ZW50X19zZWN0aW9uLS1vZmZlcnNcIj5cbiAgICAgICAgICAgICAgPGgzIGNsYXNzPVwiZXZlbnRfX3NlY3Rpb24tdGl0bGUgIGV2ZW50X19zZWN0aW9uLXRpdGxlLS1vZmZlcnNcIj5PZmZlcnM8L2gzPlxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZXZlbnRfX2F2YWlsYWJsZS1vZmZlcnNcIj5cbiAgICAgICAgICAgICAgICAke2N1cnJlbnRPZmZlcnMubWFwKChvZmZlcikgPT4gYFxuICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImV2ZW50X19vZmZlci1zZWxlY3RvclwiPlxuICAgICAgICAgICAgICAgICAgICA8aW5wdXQgY2xhc3M9XCJldmVudF9fb2ZmZXItY2hlY2tib3ggIHZpc3VhbGx5LWhpZGRlblwiIGlkPVwiZXZlbnQtb2ZmZXItJHtvZmZlci5pZH1cIiB0eXBlPVwiY2hlY2tib3hcIiBuYW1lPVwiZXZlbnQtb2ZmZXJcIiB2YWx1ZT1cIiR7b2ZmZXIuaWR9XCIgJHt0aGlzLl9zdGF0ZS5vZmZlcnMuaW5jbHVkZXMob2ZmZXIuaWQpID8gJ2NoZWNrZWQnIDogJyd9PlxuICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3M9XCJldmVudF9fb2ZmZXItbGFiZWxcIiBmb3I9XCJldmVudC1vZmZlci0ke29mZmVyLmlkfVwiPlxuICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwiZXZlbnRfX29mZmVyLXRpdGxlXCI+JHtvZmZlci50aXRsZX08L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgICAgJnBsdXM7JmV1cm87Jm5ic3A7PHNwYW4gY2xhc3M9XCJldmVudF9fb2ZmZXItcHJpY2VcIj4ke29mZmVyLnByaWNlfTwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD5cbiAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIGApLmpvaW4oJycpfVxuICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvc2VjdGlvbj5cbiAgICAgICAgICBgIDogJyd9XG5cbiAgICAgICAgICAke2N1cnJlbnREZXN0aW5hdGlvbi5kZXNjcmlwdGlvbiA/IGBcbiAgICAgICAgICAgIDxzZWN0aW9uIGNsYXNzPVwiZXZlbnRfX3NlY3Rpb24gIGV2ZW50X19zZWN0aW9uLS1kZXN0aW5hdGlvblwiPlxuICAgICAgICAgICAgICA8aDMgY2xhc3M9XCJldmVudF9fc2VjdGlvbi10aXRsZSAgZXZlbnRfX3NlY3Rpb24tdGl0bGUtLWRlc3RpbmF0aW9uXCI+RGVzdGluYXRpb248L2gzPlxuICAgICAgICAgICAgICA8cCBjbGFzcz1cImV2ZW50X19kZXN0aW5hdGlvbi1kZXNjcmlwdGlvblwiPiR7Y3VycmVudERlc3RpbmF0aW9uLmRlc2NyaXB0aW9ufTwvcD5cbiAgICAgICAgICAgICAgJHtjdXJyZW50RGVzdGluYXRpb24ucGljdHVyZXM/Lmxlbmd0aCA/IGBcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZXZlbnRfX3Bob3Rvcy1jb250YWluZXJcIj5cbiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJldmVudF9fcGhvdG9zLXRhcGVcIj5cbiAgICAgICAgICAgICAgICAgICAgJHtjdXJyZW50RGVzdGluYXRpb24ucGljdHVyZXMubWFwKChwaWMpID0+IGBcbiAgICAgICAgICAgICAgICAgICAgICA8aW1nIGNsYXNzPVwiZXZlbnRfX3Bob3RvXCIgc3JjPVwiJHtwaWMuc3JjfVwiIGFsdD1cIiR7cGljLmRlc2NyaXB0aW9ufVwiPlxuICAgICAgICAgICAgICAgICAgICBgKS5qb2luKCcnKX1cbiAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICBgIDogJyd9XG4gICAgICAgICAgICA8L3NlY3Rpb24+XG4gICAgICAgICAgYCA6ICcnfVxuICAgICAgICA8L3NlY3Rpb24+XG4gICAgICA8L2Zvcm0+XG4gICAgYDtcbiAgfVxuXG4gIF9yZXN0b3JlSGFuZGxlcnMoKSB7XG4gICAgdGhpcy5lbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ3N1Ym1pdCcsIHRoaXMuI2Zvcm1TdWJtaXRIYW5kbGVyKTtcbiAgICBjb25zdCByZXNldEJ0biA9IHRoaXMuZWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuZXZlbnRfX3Jlc2V0LWJ0bicpO1xuICAgIGlmIChyZXNldEJ0bikge1xuICAgICAgcmVzZXRCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCB0aGlzLiNmb3JtQ2xvc2VIYW5kbGVyKTtcbiAgICB9XG4gICAgdGhpcy5fc2V0SW5uZXJIYW5kbGVycygpO1xuICB9XG5cbiAgX3NldElubmVySGFuZGxlcnMoKSB7XG4gICAgdGhpcy5lbGVtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ2lucHV0W25hbWU9XCJldmVudC10eXBlXCJdJykuZm9yRWFjaCgoaW5wdXQpID0+IHtcbiAgICAgIGlucHV0LmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIHRoaXMuI3R5cGVDaGFuZ2VIYW5kbGVyKTtcbiAgICB9KTtcblxuICAgIHRoaXMuZWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuZXZlbnRfX2lucHV0LS1kZXN0aW5hdGlvbicpXG4gICAgICAuYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgdGhpcy4jZGVzdGluYXRpb25DaGFuZ2VIYW5kbGVyKTtcblxuICAgIHRoaXMuZWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuZXZlbnRfX2lucHV0LS1wcmljZScpXG4gICAgICAuYWRkRXZlbnRMaXN0ZW5lcignaW5wdXQnLCB0aGlzLiNwcmljZUlucHV0SGFuZGxlcik7XG5cbiAgICB0aGlzLmVsZW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmV2ZW50X19vZmZlci1jaGVja2JveCcpXG4gICAgICAuZm9yRWFjaCgoY2hlY2tib3gpID0+IGNoZWNrYm94LmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIHRoaXMuI29mZmVyc0NoYW5nZUhhbmRsZXIpKTtcblxuICAgIHRoaXMuI2luaXREYXRlcGlja2VycygpO1xuICB9XG5cbiAgI2luaXREYXRlcGlja2VycygpIHtcbiAgICB0aGlzLiNmbGF0cGlja3JTdGFydCA9IGZsYXRwaWNrcihcbiAgICAgIHRoaXMuZWxlbWVudC5xdWVyeVNlbGVjdG9yKCdpbnB1dFtuYW1lPVwiZXZlbnQtc3RhcnRcIl0nKSxcbiAgICAgIHtcbiAgICAgICAgZW5hYmxlVGltZTogdHJ1ZSxcbiAgICAgICAgZGF0ZUZvcm1hdDogJ2QvbS9ZIEg6aScsXG4gICAgICAgIGRlZmF1bHREYXRlOiB0aGlzLl9zdGF0ZS5kYXRlRnJvbSxcbiAgICAgICAgb25DaGFuZ2U6IHRoaXMuI2RhdGVGcm9tQ2hhbmdlSGFuZGxlcixcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGNhbWVsY2FzZVxuICAgICAgICB0aW1lXzI0aHI6IHRydWUsXG4gICAgICB9XG4gICAgKTtcblxuICAgIHRoaXMuI2ZsYXRwaWNrckVuZCA9IGZsYXRwaWNrcihcbiAgICAgIHRoaXMuZWxlbWVudC5xdWVyeVNlbGVjdG9yKCdpbnB1dFtuYW1lPVwiZXZlbnQtZW5kXCJdJyksXG4gICAgICB7XG4gICAgICAgIGVuYWJsZVRpbWU6IHRydWUsXG4gICAgICAgIGRhdGVGb3JtYXQ6ICdkL20vWSBIOmknLFxuICAgICAgICBkZWZhdWx0RGF0ZTogdGhpcy5fc3RhdGUuZGF0ZVRvLFxuICAgICAgICBvbkNoYW5nZTogdGhpcy4jZGF0ZVRvQ2hhbmdlSGFuZGxlcixcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGNhbWVsY2FzZVxuICAgICAgICB0aW1lXzI0aHI6IHRydWUsXG4gICAgICB9XG4gICAgKTtcbiAgfVxuXG4gICN0eXBlQ2hhbmdlSGFuZGxlciA9IChldnQpID0+IHtcbiAgICB0aGlzLnVwZGF0ZUVsZW1lbnQoe1xuICAgICAgdHlwZTogZXZ0LnRhcmdldC52YWx1ZSxcbiAgICAgIG9mZmVyczogW11cbiAgICB9KTtcbiAgfTtcblxuICAjZGVzdGluYXRpb25DaGFuZ2VIYW5kbGVyID0gKGV2dCkgPT4ge1xuICAgIGNvbnN0IHNlbGVjdGVkSWQgPSBldnQudGFyZ2V0LnZhbHVlO1xuICAgIHRoaXMudXBkYXRlRWxlbWVudCh7XG4gICAgICBkZXN0aW5hdGlvbjogc2VsZWN0ZWRJZFxuICAgIH0pO1xuICB9O1xuXG4gICNwcmljZUlucHV0SGFuZGxlciA9IChldnQpID0+IHtcbiAgICBldnQudGFyZ2V0LnZhbHVlID0gZXZ0LnRhcmdldC52YWx1ZS5yZXBsYWNlKC9bXjAtOV0vZywgJycpO1xuICAgIHRoaXMuX3N0YXRlLmJhc2VQcmljZSA9IHBhcnNlSW50KGV2dC50YXJnZXQudmFsdWUsIDEwKSB8fCAwO1xuICB9O1xuXG4gICNvZmZlcnNDaGFuZ2VIYW5kbGVyID0gKCkgPT4ge1xuICAgIGNvbnN0IHNlbGVjdGVkT2ZmZXJzID0gQXJyYXkuZnJvbSh0aGlzLmVsZW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmV2ZW50X19vZmZlci1jaGVja2JveDpjaGVja2VkJykpXG4gICAgICAubWFwKChpbnB1dCkgPT4gaW5wdXQudmFsdWUpO1xuXG4gICAgdGhpcy5fc2V0U3RhdGUoe1xuICAgICAgb2ZmZXJzOiBzZWxlY3RlZE9mZmVyc1xuICAgIH0pO1xuICB9O1xuXG4gICNkYXRlRnJvbUNoYW5nZUhhbmRsZXIgPSAoW2RhdGVdKSA9PiB7XG4gICAgdGhpcy5fc2V0U3RhdGUoe1xuICAgICAgZGF0ZUZyb206IGRhdGVcbiAgICB9KTtcbiAgfTtcblxuICAjZGF0ZVRvQ2hhbmdlSGFuZGxlciA9IChbZGF0ZV0pID0+IHtcbiAgICB0aGlzLl9zZXRTdGF0ZSh7XG4gICAgICBkYXRlVG86IGRhdGVcbiAgICB9KTtcbiAgfTtcblxuICAjZm9ybVN1Ym1pdEhhbmRsZXIgPSAoZXZ0KSA9PiB7XG4gICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XG5cbiAgICBjb25zdCBkZXN0aW5hdGlvblNlbGVjdCA9IHRoaXMuZWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuZXZlbnRfX2lucHV0LS1kZXN0aW5hdGlvbicpO1xuICAgIGNvbnN0IHNlbGVjdGVkRGVzdGluYXRpb24gPSB0aGlzLiNkZXN0aW5hdGlvbnMuZmluZCgoZCkgPT4gZC5pZCA9PT0gZGVzdGluYXRpb25TZWxlY3QudmFsdWUpO1xuXG4gICAgaWYgKCFzZWxlY3RlZERlc3RpbmF0aW9uKSB7XG4gICAgICBkZXN0aW5hdGlvblNlbGVjdC5zZXRDdXN0b21WYWxpZGl0eSgnUGxlYXNlIHNlbGVjdCBhIGRlc3RpbmF0aW9uIGZyb20gdGhlIGxpc3QnKTtcbiAgICAgIGRlc3RpbmF0aW9uU2VsZWN0LnJlcG9ydFZhbGlkaXR5KCk7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgdGhpcy4jaGFuZGxlRm9ybVN1Ym1pdCh7XG4gICAgICAuLi50aGlzLl9zdGF0ZSxcbiAgICAgIGRlc3RpbmF0aW9uOiBzZWxlY3RlZERlc3RpbmF0aW9uLmlkXG4gICAgfSk7XG4gIH07XG5cbiAgI2Zvcm1DbG9zZUhhbmRsZXIgPSAoZXZ0KSA9PiB7XG4gICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XG4gICAgdGhpcy4jaGFuZGxlRm9ybUNsb3NlKCk7XG4gIH07XG5cbiAgcmVtb3ZlRWxlbWVudCgpIHtcbiAgICBzdXBlci5yZW1vdmVFbGVtZW50KCk7XG5cbiAgICBpZiAodGhpcy4jZmxhdHBpY2tyU3RhcnQpIHtcbiAgICAgIHRoaXMuI2ZsYXRwaWNrclN0YXJ0LmRlc3Ryb3koKTtcbiAgICAgIHRoaXMuI2ZsYXRwaWNrclN0YXJ0ID0gbnVsbDtcbiAgICB9XG5cbiAgICBpZiAodGhpcy4jZmxhdHBpY2tyRW5kKSB7XG4gICAgICB0aGlzLiNmbGF0cGlja3JFbmQuZGVzdHJveSgpO1xuICAgICAgdGhpcy4jZmxhdHBpY2tyRW5kID0gbnVsbDtcbiAgICB9XG4gIH1cbn1cbiIsImltcG9ydCBBYnN0cmFjdFZpZXcgZnJvbSAnLi4vZnJhbWV3b3JrL3ZpZXcvYWJzdHJhY3Qtdmlldy5qcyc7XG5pbXBvcnQgZGF5anMgZnJvbSAnZGF5anMnO1xuXG5mdW5jdGlvbiBmb3JtYXREYXRlKGRhdGUpIHtcbiAgcmV0dXJuIGRheWpzKGRhdGUpLmZvcm1hdCgnSEg6bW0nKTtcbn1cblxuZnVuY3Rpb24gZ2V0RHVyYXRpb24oZGF0ZUZyb20sIGRhdGVUbykge1xuICBjb25zdCBkaWZmTXMgPSBkYXlqcyhkYXRlVG8pLmRpZmYoZGF5anMoZGF0ZUZyb20pKTtcbiAgY29uc3QgZGlmZk1pbnV0ZXMgPSBNYXRoLmZsb29yKGRpZmZNcyAvICgxMDAwICogNjApKTtcbiAgY29uc3QgZGlmZkhvdXJzID0gTWF0aC5mbG9vcihkaWZmTWludXRlcyAvIDYwKTtcbiAgY29uc3QgZGlmZkRheXMgPSBNYXRoLmZsb29yKGRpZmZIb3VycyAvIDI0KTtcblxuICBjb25zdCBtaW51dGVzID0gZGlmZk1pbnV0ZXMgJSA2MDtcbiAgY29uc3QgaG91cnMgPSBkaWZmSG91cnMgJSAyNDtcbiAgY29uc3QgZGF5cyA9IGRpZmZEYXlzO1xuXG4gIGlmIChkaWZmTWludXRlcyA8IDYwKSB7XG4gICAgcmV0dXJuIGAke2RpZmZNaW51dGVzfU1gO1xuICB9IGVsc2UgaWYgKGRpZmZIb3VycyA8IDI0KSB7XG4gICAgcmV0dXJuIGAke2hvdXJzLnRvU3RyaW5nKCkucGFkU3RhcnQoMiwgJzAnKX1IICR7bWludXRlcy50b1N0cmluZygpLnBhZFN0YXJ0KDIsICcwJyl9TWA7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIGAke2RheXMudG9TdHJpbmcoKS5wYWRTdGFydCgyLCAnMCcpfUQgJHtob3Vycy50b1N0cmluZygpLnBhZFN0YXJ0KDIsICcwJyl9SCAke21pbnV0ZXMudG9TdHJpbmcoKS5wYWRTdGFydCgyLCAnMCcpfU1gO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvaW50VmlldyBleHRlbmRzIEFic3RyYWN0VmlldyB7XG4gICNwb2ludCA9IG51bGw7XG4gICNkZXN0aW5hdGlvbiA9IG51bGw7XG4gICNvZmZlcnMgPSBbXTtcbiAgI2hhbmRsZUVkaXRDbGljayA9IG51bGw7XG4gICNoYW5kbGVGYXZvcml0ZUNsaWNrID0gbnVsbDtcblxuICBjb25zdHJ1Y3Rvcih7IHBvaW50LCBkZXN0aW5hdGlvbnMgPSBbXSwgb2ZmZXJzID0ge30sIG9uRWRpdENsaWNrLCBvbkZhdm9yaXRlQ2xpY2sgfSkge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy4jcG9pbnQgPSBwb2ludDtcbiAgICB0aGlzLiNkZXN0aW5hdGlvbiA9IGRlc3RpbmF0aW9ucy5maW5kKChkKSA9PiBkLmlkID09PSBwb2ludC5kZXN0aW5hdGlvbikgfHwgbnVsbDtcbiAgICB0aGlzLiNvZmZlcnMgPSBvZmZlcnNbcG9pbnQudHlwZV0/LmZpbHRlcigobykgPT4gcG9pbnQub2ZmZXJzPy5pbmNsdWRlcyhvLmlkKSkgfHwgW107XG4gICAgdGhpcy4jaGFuZGxlRWRpdENsaWNrID0gb25FZGl0Q2xpY2s7XG4gICAgdGhpcy4jaGFuZGxlRmF2b3JpdGVDbGljayA9IG9uRmF2b3JpdGVDbGljaztcblxuICAgIHRoaXMuZWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuZXZlbnRfX3JvbGx1cC1idG4nKT8uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCB0aGlzLiNlZGl0Q2xpY2tIYW5kbGVyKTtcbiAgICB0aGlzLmVsZW1lbnQucXVlcnlTZWxlY3RvcignLmV2ZW50X19mYXZvcml0ZS1idG4nKT8uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCB0aGlzLiNmYXZvcml0ZUNsaWNrSGFuZGxlcik7XG4gIH1cblxuICBnZXQgdGVtcGxhdGUoKSB7XG4gICAgY29uc3QgeyBiYXNlUHJpY2UsIGRhdGVGcm9tLCBkYXRlVG8sIHR5cGUsIGlzRmF2b3JpdGUgfSA9IHRoaXMuI3BvaW50O1xuICAgIGNvbnN0IGRlc3RpbmF0aW9uTmFtZSA9IHRoaXMuI2Rlc3RpbmF0aW9uPy5uYW1lIHx8ICcnO1xuICAgIGNvbnN0IG9mZmVyc01hcmt1cCA9IHRoaXMuI29mZmVycy5sZW5ndGggPiAwID8gdGhpcy4jb2ZmZXJzLm1hcCgob2ZmZXIpID0+IGBcbiAgICAgIDxsaSBjbGFzcz1cImV2ZW50X19vZmZlclwiPlxuICAgICAgICA8c3BhbiBjbGFzcz1cImV2ZW50X19vZmZlci10aXRsZVwiPiR7b2ZmZXIudGl0bGV9PC9zcGFuPlxuICAgICAgICAmcGx1czsmZXVybzsmbmJzcDs8c3BhbiBjbGFzcz1cImV2ZW50X19vZmZlci1wcmljZVwiPiR7b2ZmZXIucHJpY2V9PC9zcGFuPlxuICAgICAgPC9saT5cbiAgICBgKS5qb2luKCcnKSA6ICcnO1xuXG4gICAgcmV0dXJuIGBcbiAgICAgIDxsaSBjbGFzcz1cInRyaXAtZXZlbnRzX19pdGVtXCI+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJldmVudFwiPlxuICAgICAgICAgIDx0aW1lIGNsYXNzPVwiZXZlbnRfX2RhdGVcIiBkYXRldGltZT1cIiR7ZGF5anMoZGF0ZUZyb20pLmZvcm1hdCgnWVlZWS1NTS1ERCcpfVwiPiR7ZGF5anMoZGF0ZUZyb20pLmZvcm1hdCgnTU1NIEQnKX08L3RpbWU+XG4gICAgICAgICAgPGRpdiBjbGFzcz1cImV2ZW50X190eXBlXCI+XG4gICAgICAgICAgICA8aW1nIGNsYXNzPVwiZXZlbnRfX3R5cGUtaWNvblwiIHdpZHRoPVwiNDJcIiBoZWlnaHQ9XCI0MlwiIHNyYz1cImltZy9pY29ucy8ke3R5cGV9LnBuZ1wiIGFsdD1cIkV2ZW50IHR5cGUgaWNvblwiPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDxoMyBjbGFzcz1cImV2ZW50X190aXRsZVwiPiR7dHlwZX0gJHtkZXN0aW5hdGlvbk5hbWV9PC9oMz5cbiAgICAgICAgICA8ZGl2IGNsYXNzPVwiZXZlbnRfX3NjaGVkdWxlXCI+XG4gICAgICAgICAgICA8cCBjbGFzcz1cImV2ZW50X190aW1lXCI+XG4gICAgICAgICAgICAgIDx0aW1lIGNsYXNzPVwiZXZlbnRfX3N0YXJ0LXRpbWVcIiBkYXRldGltZT1cIiR7ZGF5anMoZGF0ZUZyb20pLnRvSVNPU3RyaW5nKCl9XCI+JHtmb3JtYXREYXRlKGRhdGVGcm9tKX08L3RpbWU+XG4gICAgICAgICAgICAgICZtZGFzaDtcbiAgICAgICAgICAgICAgPHRpbWUgY2xhc3M9XCJldmVudF9fZW5kLXRpbWVcIiBkYXRldGltZT1cIiR7ZGF5anMoZGF0ZVRvKS50b0lTT1N0cmluZygpfVwiPiR7Zm9ybWF0RGF0ZShkYXRlVG8pfTwvdGltZT5cbiAgICAgICAgICAgIDwvcD5cbiAgICAgICAgICAgIDxwIGNsYXNzPVwiZXZlbnRfX2R1cmF0aW9uXCI+JHtnZXREdXJhdGlvbihkYXRlRnJvbSwgZGF0ZVRvKX08L3A+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPHAgY2xhc3M9XCJldmVudF9fcHJpY2VcIj5cbiAgICAgICAgICAgICZldXJvOyZuYnNwOzxzcGFuIGNsYXNzPVwiZXZlbnRfX3ByaWNlLXZhbHVlXCI+JHtiYXNlUHJpY2V9PC9zcGFuPlxuICAgICAgICAgIDwvcD5cbiAgICAgICAgICA8aDQgY2xhc3M9XCJ2aXN1YWxseS1oaWRkZW5cIj5PZmZlcnM6PC9oND5cbiAgICAgICAgICA8dWwgY2xhc3M9XCJldmVudF9fc2VsZWN0ZWQtb2ZmZXJzXCI+XG4gICAgICAgICAgICAke29mZmVyc01hcmt1cH1cbiAgICAgICAgICA8L3VsPlxuICAgICAgICAgIDxidXR0b24gY2xhc3M9XCJldmVudF9fZmF2b3JpdGUtYnRuICR7aXNGYXZvcml0ZSA/ICdldmVudF9fZmF2b3JpdGUtYnRuLS1hY3RpdmUnIDogJyd9XCIgdHlwZT1cImJ1dHRvblwiPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJ2aXN1YWxseS1oaWRkZW5cIj5BZGQgdG8gZmF2b3JpdGU8L3NwYW4+XG4gICAgICAgICAgICA8c3ZnIGNsYXNzPVwiZXZlbnRfX2Zhdm9yaXRlLWljb25cIiB3aWR0aD1cIjI4XCIgaGVpZ2h0PVwiMjhcIiB2aWV3Qm94PVwiMCAwIDI4IDI4XCI+XG4gICAgICAgICAgICAgIDxwYXRoIGQ9XCJNMTQgMjFsLTYuMTYgMy4yNCAxLjE4LTYuODhMMyAxMi43NGw2LjktMUwxNCA1bDIuMSA2Ljc0IDYuOSAxLTUgNC42MiAxLjE4IDYuODh6XCIvPlxuICAgICAgICAgICAgPC9zdmc+XG4gICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgPGJ1dHRvbiBjbGFzcz1cImV2ZW50X19yb2xsdXAtYnRuXCIgdHlwZT1cImJ1dHRvblwiPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJ2aXN1YWxseS1oaWRkZW5cIj5PcGVuIGV2ZW50PC9zcGFuPlxuICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvbGk+XG4gICAgYDtcbiAgfVxuXG4gICNlZGl0Q2xpY2tIYW5kbGVyID0gKGV2dCkgPT4ge1xuICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIHRoaXMuI2hhbmRsZUVkaXRDbGljaygpO1xuICB9O1xuXG4gICNmYXZvcml0ZUNsaWNrSGFuZGxlciA9IChldnQpID0+IHtcbiAgICBldnQucHJldmVudERlZmF1bHQoKTtcbiAgICB0aGlzLiNoYW5kbGVGYXZvcml0ZUNsaWNrKCk7XG4gIH07XG59XG4iLCJpbXBvcnQgeyByZW5kZXIsIHJlbW92ZSwgcmVwbGFjZSB9IGZyb20gJy4uL2ZyYW1ld29yay9yZW5kZXIuanMnO1xuaW1wb3J0IEZvcm1FZGl0VmlldyBmcm9tICcuLi92aWV3L2Zvcm0tZWRpdC12aWV3LmpzJztcbmltcG9ydCBGb3JtQ3JlYXRlVmlldyBmcm9tICcuLi92aWV3L2Zvcm0tY3JlYXRlLXZpZXcuanMnO1xuaW1wb3J0IFBvaW50VmlldyBmcm9tICcuLi92aWV3L3BvaW50LXZpZXcuanMnO1xuaW1wb3J0IHsgVXNlckFjdGlvbiwgVXBkYXRlVHlwZSB9IGZyb20gJy4uL2NvbnN0LmpzJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9pbnRQcmVzZW50ZXIge1xuICAjY29udGFpbmVyID0gbnVsbDtcbiAgI3BvaW50Q29tcG9uZW50ID0gbnVsbDtcbiAgI2Zvcm1FZGl0Q29tcG9uZW50ID0gbnVsbDtcbiAgI2Zvcm1DcmVhdGVDb21wb25lbnQgPSBudWxsO1xuICAjb25EYXRhQ2hhbmdlID0gbnVsbDtcbiAgI29uTW9kZUNoYW5nZSA9IG51bGw7XG4gICNkZXN0aW5hdGlvbnMgPSBbXTtcbiAgI29mZmVycyA9IHt9O1xuICAjaXNDcmVhdGluZyA9IGZhbHNlO1xuICAjcG9pbnQgPSBudWxsO1xuICAjaGFuZGxlRGVzdHJveSA9IG51bGw7XG4gICNpc0Zvcm1PcGVuID0gZmFsc2U7XG5cbiAgY29uc3RydWN0b3IoeyBjb250YWluZXIsIG9uRGF0YUNoYW5nZSwgb25Nb2RlQ2hhbmdlLCBkZXN0aW5hdGlvbnMsIG9mZmVycywgaXNDcmVhdGluZyA9IGZhbHNlLCBoYW5kbGVEZXN0cm95IH0pIHtcbiAgICB0aGlzLiNjb250YWluZXIgPSBjb250YWluZXI7XG4gICAgdGhpcy4jb25EYXRhQ2hhbmdlID0gb25EYXRhQ2hhbmdlO1xuICAgIHRoaXMuI29uTW9kZUNoYW5nZSA9IG9uTW9kZUNoYW5nZTtcbiAgICB0aGlzLiNkZXN0aW5hdGlvbnMgPSBkZXN0aW5hdGlvbnM7XG4gICAgdGhpcy4jb2ZmZXJzID0gb2ZmZXJzO1xuICAgIHRoaXMuI2lzQ3JlYXRpbmcgPSBpc0NyZWF0aW5nO1xuICAgIHRoaXMuI2hhbmRsZURlc3Ryb3kgPSBoYW5kbGVEZXN0cm95O1xuICB9XG5cbiAgaW5pdChwb2ludCkge1xuICAgIHRoaXMuI3BvaW50ID0gcG9pbnQ7XG5cbiAgICBpZiAodGhpcy4jaXNDcmVhdGluZykge1xuICAgICAgdGhpcy4jcmVuZGVyRm9ybUNyZWF0ZSgpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHRoaXMuI3JlbmRlclBvaW50KCk7XG4gIH1cblxuICAjcmVuZGVyUG9pbnQoKSB7XG4gICAgY29uc3QgcHJldlBvaW50Q29tcG9uZW50ID0gdGhpcy4jcG9pbnRDb21wb25lbnQ7XG5cbiAgICB0aGlzLiNwb2ludENvbXBvbmVudCA9IG5ldyBQb2ludFZpZXcoe1xuICAgICAgcG9pbnQ6IHRoaXMuI3BvaW50LFxuICAgICAgZGVzdGluYXRpb25zOiB0aGlzLiNkZXN0aW5hdGlvbnMsXG4gICAgICBvZmZlcnM6IHRoaXMuI29mZmVycyxcbiAgICAgIG9uRWRpdENsaWNrOiB0aGlzLiNoYW5kbGVFZGl0Q2xpY2ssXG4gICAgICBvbkZhdm9yaXRlQ2xpY2s6IHRoaXMuI2hhbmRsZUZhdm9yaXRlQ2xpY2tcbiAgICB9KTtcblxuICAgIGlmIChwcmV2UG9pbnRDb21wb25lbnQpIHtcbiAgICAgIHJlcGxhY2UodGhpcy4jcG9pbnRDb21wb25lbnQsIHByZXZQb2ludENvbXBvbmVudCk7XG4gICAgICByZW1vdmUocHJldlBvaW50Q29tcG9uZW50KTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmVuZGVyKHRoaXMuI3BvaW50Q29tcG9uZW50LCB0aGlzLiNjb250YWluZXIpO1xuICAgIH1cbiAgfVxuXG4gICNyZW5kZXJGb3JtRWRpdCgpIHtcbiAgICBpZiAodGhpcy4jaXNGb3JtT3Blbikge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB0aGlzLiNpc0Zvcm1PcGVuID0gdHJ1ZTtcblxuICAgIGNvbnN0IHByZXZGb3JtRWRpdENvbXBvbmVudCA9IHRoaXMuI2Zvcm1FZGl0Q29tcG9uZW50O1xuXG4gICAgdGhpcy4jZm9ybUVkaXRDb21wb25lbnQgPSBuZXcgRm9ybUVkaXRWaWV3KHtcbiAgICAgIHBvaW50OiB0aGlzLiNwb2ludCxcbiAgICAgIGRlc3RpbmF0aW9uczogdGhpcy4jZGVzdGluYXRpb25zLFxuICAgICAgb2ZmZXJzOiB0aGlzLiNvZmZlcnMsXG4gICAgICBvbkZvcm1TdWJtaXQ6IHRoaXMuI2hhbmRsZUZvcm1TdWJtaXQsXG4gICAgICBvbkZvcm1DbG9zZTogdGhpcy4jaGFuZGxlRm9ybUNsb3NlLFxuICAgICAgb25Gb3JtRGVsZXRlOiB0aGlzLiNoYW5kbGVGb3JtRGVsZXRlXG4gICAgfSk7XG5cbiAgICBpZiAocHJldkZvcm1FZGl0Q29tcG9uZW50KSB7XG4gICAgICByZXBsYWNlKHRoaXMuI2Zvcm1FZGl0Q29tcG9uZW50LCBwcmV2Rm9ybUVkaXRDb21wb25lbnQpO1xuICAgICAgcmVtb3ZlKHByZXZGb3JtRWRpdENvbXBvbmVudCk7XG4gICAgfSBlbHNlIGlmICh0aGlzLiNwb2ludENvbXBvbmVudD8uZWxlbWVudD8ucGFyZW50RWxlbWVudCkge1xuICAgICAgcmVwbGFjZSh0aGlzLiNmb3JtRWRpdENvbXBvbmVudCwgdGhpcy4jcG9pbnRDb21wb25lbnQpO1xuICAgIH0gZWxzZSB7XG4gICAgICByZW5kZXIodGhpcy4jZm9ybUVkaXRDb21wb25lbnQsIHRoaXMuI2NvbnRhaW5lcik7XG4gICAgfVxuXG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIHRoaXMuI2VzY0tleURvd25IYW5kbGVyKTtcbiAgfVxuXG4gICNyZW5kZXJGb3JtQ3JlYXRlKCkge1xuICAgIGlmICh0aGlzLiNpc0Zvcm1PcGVuKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHRoaXMuI2lzRm9ybU9wZW4gPSB0cnVlO1xuXG4gICAgdGhpcy4jZm9ybUNyZWF0ZUNvbXBvbmVudCA9IG5ldyBGb3JtQ3JlYXRlVmlldyh7XG4gICAgICBkZXN0aW5hdGlvbnM6IHRoaXMuI2Rlc3RpbmF0aW9ucyxcbiAgICAgIG9mZmVyczogdGhpcy4jb2ZmZXJzLFxuICAgICAgb25Gb3JtU3VibWl0OiB0aGlzLiNoYW5kbGVGb3JtU3VibWl0LFxuICAgICAgb25Gb3JtQ2xvc2U6IHRoaXMuI2hhbmRsZUZvcm1DbG9zZVxuICAgIH0pO1xuXG4gICAgcmVuZGVyKHRoaXMuI2Zvcm1DcmVhdGVDb21wb25lbnQsIHRoaXMuI2NvbnRhaW5lciwgJ2FmdGVyYmVnaW4nKTtcbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdrZXlkb3duJywgdGhpcy4jZXNjS2V5RG93bkhhbmRsZXIpO1xuICB9XG5cbiAgZGVzdHJveSgpIHtcbiAgICBpZiAodGhpcy4jcG9pbnRDb21wb25lbnQpIHtcbiAgICAgIHJlbW92ZSh0aGlzLiNwb2ludENvbXBvbmVudCk7XG4gICAgICB0aGlzLiNwb2ludENvbXBvbmVudCA9IG51bGw7XG4gICAgfVxuICAgIGlmICh0aGlzLiNmb3JtRWRpdENvbXBvbmVudCkge1xuICAgICAgcmVtb3ZlKHRoaXMuI2Zvcm1FZGl0Q29tcG9uZW50KTtcbiAgICAgIHRoaXMuI2Zvcm1FZGl0Q29tcG9uZW50ID0gbnVsbDtcbiAgICB9XG4gICAgaWYgKHRoaXMuI2Zvcm1DcmVhdGVDb21wb25lbnQpIHtcbiAgICAgIHJlbW92ZSh0aGlzLiNmb3JtQ3JlYXRlQ29tcG9uZW50KTtcbiAgICAgIHRoaXMuI2Zvcm1DcmVhdGVDb21wb25lbnQgPSBudWxsO1xuICAgIH1cbiAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdrZXlkb3duJywgdGhpcy4jZXNjS2V5RG93bkhhbmRsZXIpO1xuICAgIHRoaXMuI2lzRm9ybU9wZW4gPSBmYWxzZTtcbiAgICBpZiAodGhpcy4jaGFuZGxlRGVzdHJveSkge1xuICAgICAgdGhpcy4jaGFuZGxlRGVzdHJveSgpO1xuICAgIH1cbiAgfVxuXG4gIHJlc2V0VmlldygpIHtcbiAgICBpZiAodGhpcy4jaXNDcmVhdGluZykge1xuICAgICAgdGhpcy5kZXN0cm95KCk7XG4gICAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdrZXlkb3duJywgdGhpcy4jZXNjS2V5RG93bkhhbmRsZXIpO1xuICAgICAgdGhpcy4jaXNGb3JtT3BlbiA9IGZhbHNlO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGlmICghdGhpcy4jZm9ybUVkaXRDb21wb25lbnQpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBpZiAodGhpcy4jcG9pbnRDb21wb25lbnQpIHtcbiAgICAgIHJlcGxhY2UodGhpcy4jcG9pbnRDb21wb25lbnQsIHRoaXMuI2Zvcm1FZGl0Q29tcG9uZW50KTtcbiAgICAgIHJlbW92ZSh0aGlzLiNmb3JtRWRpdENvbXBvbmVudCk7XG4gICAgICB0aGlzLiNmb3JtRWRpdENvbXBvbmVudCA9IG51bGw7XG4gICAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdrZXlkb3duJywgdGhpcy4jZXNjS2V5RG93bkhhbmRsZXIpO1xuICAgICAgdGhpcy4jaXNGb3JtT3BlbiA9IGZhbHNlO1xuICAgIH1cbiAgfVxuXG4gICNlc2NLZXlEb3duSGFuZGxlciA9IChldnQpID0+IHtcbiAgICBpZiAoZXZ0LmtleSA9PT0gJ0VzY2FwZScpIHtcbiAgICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgdGhpcy5yZXNldFZpZXcoKTtcbiAgICB9XG4gIH07XG5cbiAgI2hhbmRsZUVkaXRDbGljayA9ICgpID0+IHtcbiAgICB0aGlzLiNvbk1vZGVDaGFuZ2UodGhpcyk7XG4gICAgdGhpcy4jcmVuZGVyRm9ybUVkaXQoKTtcbiAgfTtcblxuICAjaGFuZGxlRmF2b3JpdGVDbGljayA9ICgpID0+IHtcbiAgICB0aGlzLiNvbkRhdGFDaGFuZ2UoXG4gICAgICBVc2VyQWN0aW9uLlVQREFURV9QT0lOVCxcbiAgICAgIFVwZGF0ZVR5cGUuUEFUQ0gsXG4gICAgICB7IC4uLnRoaXMuI3BvaW50LCBpc0Zhdm9yaXRlOiAhdGhpcy4jcG9pbnQuaXNGYXZvcml0ZSB9XG4gICAgKTtcbiAgfTtcblxuICAjaGFuZGxlRm9ybVN1Ym1pdCA9ICh1cGRhdGUpID0+IHtcbiAgICBjb25zdCBpc01pbm9yVXBkYXRlID0gIXRoaXMuI2lzQ3JlYXRpbmc7XG5cbiAgICB0aGlzLiNvbkRhdGFDaGFuZ2UoXG4gICAgICB0aGlzLiNpc0NyZWF0aW5nID8gVXNlckFjdGlvbi5BRERfUE9JTlQgOiBVc2VyQWN0aW9uLlVQREFURV9QT0lOVCxcbiAgICAgIGlzTWlub3JVcGRhdGUgPyBVcGRhdGVUeXBlLk1JTk9SIDogVXBkYXRlVHlwZS5QQVRDSCxcbiAgICAgIHVwZGF0ZVxuICAgICk7XG5cbiAgICB0aGlzLmRlc3Ryb3koKTtcbiAgICBpZiAodGhpcy4jaXNDcmVhdGluZykge1xuICAgICAgdGhpcy4jb25Nb2RlQ2hhbmdlKCk7XG4gICAgfVxuICB9O1xuXG4gICNoYW5kbGVGb3JtQ2xvc2UgPSAoKSA9PiB7XG4gICAgdGhpcy5yZXNldFZpZXcoKTtcbiAgfTtcblxuICAjaGFuZGxlRm9ybURlbGV0ZSA9IChwb2ludCkgPT4ge1xuICAgIHRoaXMuI29uRGF0YUNoYW5nZShcbiAgICAgIFVzZXJBY3Rpb24uREVMRVRFX1BPSU5ULFxuICAgICAgVXBkYXRlVHlwZS5NSU5PUixcbiAgICAgIHBvaW50XG4gICAgKTtcbiAgfTtcbn1cbiIsImltcG9ydCBQb2ludHNNb2RlbCBmcm9tICcuL21vZGVsL21vZGVsLmpzJztcbmltcG9ydCBGaWx0ZXJNb2RlbCBmcm9tICcuL21vZGVsL2ZpbHRlci1tb2RlbC5qcyc7XG5pbXBvcnQgVHJpcFByZXNlbnRlciBmcm9tICcuL3ByZXNlbnRlci90cmlwLXByZXNlbnRlci5qcyc7XG5cbmNvbnN0IHBvaW50c01vZGVsID0gbmV3IFBvaW50c01vZGVsKCk7XG5jb25zdCBmaWx0ZXJNb2RlbCA9IG5ldyBGaWx0ZXJNb2RlbCgpO1xuY29uc3QgbmV3UG9pbnRCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcudHJpcC1tYWluX19ldmVudC1hZGQtYnRuJyk7XG5cbmNvbnN0IHRyaXBQcmVzZW50ZXIgPSBuZXcgVHJpcFByZXNlbnRlcih7XG4gIG1vZGVsOiBwb2ludHNNb2RlbCxcbiAgZmlsdGVyTW9kZWwsXG4gIG5ld1BvaW50QnV0dG9uXG59KTtcblxuZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignRE9NQ29udGVudExvYWRlZCcsICgpID0+IHtcbiAgdHJpcFByZXNlbnRlci5pbml0KCk7XG59KTtcbiIsImltcG9ydCB7IGdlbmVyYXRlRGVzdGluYXRpb25zLCBnZW5lcmF0ZU9mZmVycywgZ2VuZXJhdGVQb2ludHMgfSBmcm9tICcuLi9tb2NrL21vY2suanMnO1xuaW1wb3J0IE9ic2VydmFibGUgZnJvbSAnLi4vZnJhbWV3b3JrL29ic2VydmFibGUuanMnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb2ludHNNb2RlbCBleHRlbmRzIE9ic2VydmFibGUge1xuICAjZGVzdGluYXRpb25zID0gW107XG4gICNvZmZlcnMgPSBbXTtcbiAgI3BvaW50cyA9IFtdO1xuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy4jZGVzdGluYXRpb25zID0gZ2VuZXJhdGVEZXN0aW5hdGlvbnMoKTtcbiAgICB0aGlzLiNvZmZlcnMgPSBnZW5lcmF0ZU9mZmVycygpO1xuICAgIHRoaXMuI3BvaW50cyA9IGdlbmVyYXRlUG9pbnRzKHRoaXMuI2Rlc3RpbmF0aW9ucyk7XG4gIH1cblxuICBnZXQgZGVzdGluYXRpb25zKCkge1xuICAgIHJldHVybiB0aGlzLiNkZXN0aW5hdGlvbnM7XG4gIH1cblxuICBnZXQgb2ZmZXJzKCkge1xuICAgIHJldHVybiB0aGlzLiNvZmZlcnM7XG4gIH1cblxuICBnZXQgcG9pbnRzKCkge1xuICAgIHJldHVybiB0aGlzLiNwb2ludHM7XG4gIH1cblxuICBnZXRQb2ludEJ5SWQoaWQpIHtcbiAgICByZXR1cm4gdGhpcy4jcG9pbnRzLmZpbmQoKHBvaW50KSA9PiBwb2ludC5pZCA9PT0gaWQpIHx8IG51bGw7XG4gIH1cblxuICB1cGRhdGVQb2ludCh1cGRhdGVUeXBlLCB1cGRhdGUpIHtcbiAgICBjb25zdCBpbmRleCA9IHRoaXMuI3BvaW50cy5maW5kSW5kZXgoKHBvaW50KSA9PiBwb2ludC5pZCA9PT0gdXBkYXRlLmlkKTtcblxuICAgIGlmIChpbmRleCA9PT0gLTEpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignUG9pbnQgbm90IGZvdW5kJyk7XG4gICAgfVxuXG4gICAgdGhpcy4jcG9pbnRzID0gW1xuICAgICAgLi4udGhpcy4jcG9pbnRzLnNsaWNlKDAsIGluZGV4KSxcbiAgICAgIHVwZGF0ZSxcbiAgICAgIC4uLnRoaXMuI3BvaW50cy5zbGljZShpbmRleCArIDEpLFxuICAgIF07XG5cbiAgICB0aGlzLl9ub3RpZnkodXBkYXRlVHlwZSwgdXBkYXRlKTtcbiAgfVxuXG4gIGFkZFBvaW50KHVwZGF0ZVR5cGUsIHVwZGF0ZSkge1xuICAgIHRoaXMuI3BvaW50cyA9IFt1cGRhdGUsIC4uLnRoaXMuI3BvaW50c107XG4gICAgdGhpcy5fbm90aWZ5KHVwZGF0ZVR5cGUsIHVwZGF0ZSk7XG4gIH1cblxuICBkZWxldGVQb2ludCh1cGRhdGVUeXBlLCB1cGRhdGUpIHtcbiAgICB0aGlzLiNwb2ludHMgPSB0aGlzLiNwb2ludHMuZmlsdGVyKChwb2ludCkgPT4gcG9pbnQuaWQgIT09IHVwZGF0ZS5pZCk7XG4gICAgdGhpcy5fbm90aWZ5KHVwZGF0ZVR5cGUpO1xuICB9XG59XG4iLCJpbXBvcnQgT2JzZXJ2YWJsZSBmcm9tICcuLi9mcmFtZXdvcmsvb2JzZXJ2YWJsZS5qcyc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEZpbHRlck1vZGVsIGV4dGVuZHMgT2JzZXJ2YWJsZSB7XG4gICNmaWx0ZXIgPSAnZXZlcnl0aGluZyc7XG5cbiAgZ2V0IGZpbHRlcigpIHtcbiAgICByZXR1cm4gdGhpcy4jZmlsdGVyO1xuICB9XG5cbiAgc2V0RmlsdGVyKHVwZGF0ZVR5cGUsIGZpbHRlcikge1xuICAgIHRoaXMuI2ZpbHRlciA9IGZpbHRlcjtcbiAgICB0aGlzLl9ub3RpZnkodXBkYXRlVHlwZSwgZmlsdGVyKTtcbiAgfVxufVxuIiwiaW1wb3J0IHsgcmVuZGVyLCByZW1vdmUsIHJlcGxhY2UgfSBmcm9tICcuLi9mcmFtZXdvcmsvcmVuZGVyLmpzJztcbmltcG9ydCB7IGZpbHRlciB9IGZyb20gJy4uL3V0aWxzL2ZpbHRlci5qcyc7XG5pbXBvcnQgeyBGaWx0ZXJUeXBlLCBTb3J0VHlwZSwgVXBkYXRlVHlwZSwgVXNlckFjdGlvbiB9IGZyb20gJy4uL2NvbnN0LmpzJztcbmltcG9ydCBkYXlqcyBmcm9tICdkYXlqcyc7XG5pbXBvcnQgRmlsdGVyc1ZpZXcgZnJvbSAnLi4vdmlldy9maWx0ZXJzLXZpZXcuanMnO1xuaW1wb3J0IFNvcnRWaWV3IGZyb20gJy4uL3ZpZXcvc29ydC12aWV3LmpzJztcbmltcG9ydCBFbXB0eUxpc3RWaWV3IGZyb20gJy4uL3ZpZXcvZW1wdHktbGlzdC12aWV3LmpzJztcbmltcG9ydCBQb2ludFByZXNlbnRlciBmcm9tICcuL3BvaW50LXByZXNlbnRlci5qcyc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFRyaXBQcmVzZW50ZXIge1xuICAjbW9kZWwgPSBudWxsO1xuICAjZmlsdGVyTW9kZWwgPSBudWxsO1xuICAjbGlzdENvbnRhaW5lciA9IG51bGw7XG4gICNmaWx0ZXJzQ29tcG9uZW50ID0gbnVsbDtcbiAgI3NvcnRDb21wb25lbnQgPSBudWxsO1xuICAjZW1wdHlMaXN0Q29tcG9uZW50ID0gbnVsbDtcbiAgI25ld1BvaW50QnV0dG9uID0gbnVsbDtcblxuICAjcG9pbnRQcmVzZW50ZXJzID0gbmV3IE1hcCgpO1xuICAjY3VycmVudFNvcnRUeXBlID0gU29ydFR5cGUuREFZO1xuICAjaXNDcmVhdGluZyA9IGZhbHNlO1xuICAjZWRpdGluZ1ByZXNlbnRlciA9IG51bGw7XG5cbiAgY29uc3RydWN0b3IoeyBtb2RlbCwgZmlsdGVyTW9kZWwsIG5ld1BvaW50QnV0dG9uIH0pIHtcbiAgICB0aGlzLiNtb2RlbCA9IG1vZGVsO1xuICAgIHRoaXMuI2ZpbHRlck1vZGVsID0gZmlsdGVyTW9kZWw7XG4gICAgdGhpcy4jbmV3UG9pbnRCdXR0b24gPSBuZXdQb2ludEJ1dHRvbjtcblxuICAgIHRoaXMuI21vZGVsLmFkZE9ic2VydmVyKHRoaXMuI2hhbmRsZU1vZGVsRXZlbnQpO1xuICAgIHRoaXMuI2ZpbHRlck1vZGVsLmFkZE9ic2VydmVyKHRoaXMuI2hhbmRsZU1vZGVsRXZlbnQpO1xuXG4gICAgaWYgKHRoaXMuI25ld1BvaW50QnV0dG9uKSB7XG4gICAgICB0aGlzLiNuZXdQb2ludEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMuI25ld1BvaW50QnV0dG9uQ2xpY2tIYW5kbGVyKTtcbiAgICB9XG4gIH1cblxuICBpbml0KCkge1xuICAgIHRoaXMuI3JlbmRlckZpbHRlcnMoKTtcbiAgICB0aGlzLiNyZW5kZXJTb3J0KCk7XG4gICAgdGhpcy4jcmVuZGVyTGlzdCgpO1xuICAgIHRoaXMuI3JlbmRlclBvaW50cygpO1xuICB9XG5cbiAgI3JlbmRlckZpbHRlcnMoKSB7XG4gICAgY29uc3QgZmlsdGVycyA9IHRoaXMuI2dldEZpbHRlcnMoKTtcbiAgICBjb25zdCBwcmV2RmlsdGVyc0NvbXBvbmVudCA9IHRoaXMuI2ZpbHRlcnNDb21wb25lbnQ7XG5cbiAgICB0aGlzLiNmaWx0ZXJzQ29tcG9uZW50ID0gbmV3IEZpbHRlcnNWaWV3KHtcbiAgICAgIGZpbHRlcnMsXG4gICAgICBjdXJyZW50RmlsdGVyVHlwZTogdGhpcy4jZmlsdGVyTW9kZWwuZmlsdGVyLFxuICAgICAgb25GaWx0ZXJUeXBlQ2hhbmdlOiB0aGlzLiNoYW5kbGVGaWx0ZXJUeXBlQ2hhbmdlXG4gICAgfSk7XG5cbiAgICBpZiAocHJldkZpbHRlcnNDb21wb25lbnQgPT09IG51bGwpIHtcbiAgICAgIHJlbmRlcih0aGlzLiNmaWx0ZXJzQ29tcG9uZW50LCBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcudHJpcC1jb250cm9sc19fZmlsdGVycycpKTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmVwbGFjZSh0aGlzLiNmaWx0ZXJzQ29tcG9uZW50LCBwcmV2RmlsdGVyc0NvbXBvbmVudCk7XG4gICAgICByZW1vdmUocHJldkZpbHRlcnNDb21wb25lbnQpO1xuICAgIH1cbiAgfVxuXG4gICNnZXRGaWx0ZXJzKCkge1xuICAgIGNvbnN0IHBvaW50cyA9IHRoaXMuI21vZGVsLnBvaW50cztcblxuICAgIHJldHVybiBbXG4gICAgICB7XG4gICAgICAgIHR5cGU6IEZpbHRlclR5cGUuRVZFUllUSElORyxcbiAgICAgICAgbmFtZTogJ0V2ZXJ5dGhpbmcnLFxuICAgICAgICBpc0Rpc2FibGVkOiBwb2ludHMubGVuZ3RoID09PSAwXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICB0eXBlOiBGaWx0ZXJUeXBlLkZVVFVSRSxcbiAgICAgICAgbmFtZTogJ0Z1dHVyZScsXG4gICAgICAgIGlzRGlzYWJsZWQ6IGZpbHRlcltGaWx0ZXJUeXBlLkZVVFVSRV0ocG9pbnRzKS5sZW5ndGggPT09IDBcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIHR5cGU6IEZpbHRlclR5cGUuUFJFU0VOVCxcbiAgICAgICAgbmFtZTogJ1ByZXNlbnQnLFxuICAgICAgICBpc0Rpc2FibGVkOiBmaWx0ZXJbRmlsdGVyVHlwZS5QUkVTRU5UXShwb2ludHMpLmxlbmd0aCA9PT0gMFxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgdHlwZTogRmlsdGVyVHlwZS5QQVNULFxuICAgICAgICBuYW1lOiAnUGFzdCcsXG4gICAgICAgIGlzRGlzYWJsZWQ6IGZpbHRlcltGaWx0ZXJUeXBlLlBBU1RdKHBvaW50cykubGVuZ3RoID09PSAwXG4gICAgICB9XG4gICAgXTtcbiAgfVxuXG4gICNyZW5kZXJTb3J0KCkge1xuICAgIGNvbnN0IHByZXZTb3J0Q29tcG9uZW50ID0gdGhpcy4jc29ydENvbXBvbmVudDtcblxuICAgIHRoaXMuI3NvcnRDb21wb25lbnQgPSBuZXcgU29ydFZpZXcoe1xuICAgICAgY3VycmVudFNvcnRUeXBlOiB0aGlzLiNjdXJyZW50U29ydFR5cGUsXG4gICAgICBvblNvcnRUeXBlQ2hhbmdlOiB0aGlzLiNoYW5kbGVTb3J0VHlwZUNoYW5nZVxuICAgIH0pO1xuXG4gICAgaWYgKHByZXZTb3J0Q29tcG9uZW50ID09PSBudWxsKSB7XG4gICAgICByZW5kZXIodGhpcy4jc29ydENvbXBvbmVudCwgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnRyaXAtZXZlbnRzJykpO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXBsYWNlKHRoaXMuI3NvcnRDb21wb25lbnQsIHByZXZTb3J0Q29tcG9uZW50KTtcbiAgICAgIHJlbW92ZShwcmV2U29ydENvbXBvbmVudCk7XG4gICAgfVxuICB9XG5cbiAgI3JlbmRlckxpc3QoKSB7XG4gICAgY29uc3QgY29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnRyaXAtZXZlbnRzJyk7XG4gICAgY29uc3QgbGlzdEVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCd1bCcpO1xuICAgIGxpc3RFbGVtZW50LmNsYXNzTGlzdC5hZGQoJ3RyaXAtZXZlbnRzX19saXN0Jyk7XG4gICAgY29udGFpbmVyLmFwcGVuZENoaWxkKGxpc3RFbGVtZW50KTtcbiAgICB0aGlzLiNsaXN0Q29udGFpbmVyID0gbGlzdEVsZW1lbnQ7XG4gIH1cblxuICAjcmVuZGVyUG9pbnRzKCkge1xuICAgIGNvbnN0IHBvaW50cyA9IHRoaXMuI2dldFNvcnRlZEZpbHRlcmVkUG9pbnRzKCk7XG4gICAgY29uc3QgZGVzdGluYXRpb25zID0gdGhpcy4jbW9kZWwuZGVzdGluYXRpb25zO1xuICAgIGNvbnN0IG9mZmVycyA9IHRoaXMuI21vZGVsLm9mZmVycztcblxuICAgIGlmIChwb2ludHMubGVuZ3RoID09PSAwKSB7XG4gICAgICB0aGlzLiNyZW5kZXJFbXB0eUxpc3QoKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBwb2ludHMuZm9yRWFjaCgocG9pbnQpID0+IHtcbiAgICAgIGNvbnN0IHBvaW50UHJlc2VudGVyID0gbmV3IFBvaW50UHJlc2VudGVyKHtcbiAgICAgICAgY29udGFpbmVyOiB0aGlzLiNsaXN0Q29udGFpbmVyLFxuICAgICAgICBvbkRhdGFDaGFuZ2U6IHRoaXMuI2hhbmRsZVZpZXdBY3Rpb24sXG4gICAgICAgIG9uTW9kZUNoYW5nZTogdGhpcy4jaGFuZGxlTW9kZUNoYW5nZSxcbiAgICAgICAgZGVzdGluYXRpb25zLFxuICAgICAgICBvZmZlcnNcbiAgICAgIH0pO1xuICAgICAgcG9pbnRQcmVzZW50ZXIuaW5pdChwb2ludCk7XG4gICAgICB0aGlzLiNwb2ludFByZXNlbnRlcnMuc2V0KHBvaW50LmlkLCBwb2ludFByZXNlbnRlcik7XG4gICAgfSk7XG4gIH1cblxuICAjcmVuZGVyRW1wdHlMaXN0KCkge1xuICAgIHRoaXMuI2VtcHR5TGlzdENvbXBvbmVudCA9IG5ldyBFbXB0eUxpc3RWaWV3KHRoaXMuI2ZpbHRlck1vZGVsLmZpbHRlcik7XG4gICAgcmVuZGVyKHRoaXMuI2VtcHR5TGlzdENvbXBvbmVudCwgdGhpcy4jbGlzdENvbnRhaW5lcik7XG4gIH1cblxuICAjY2xlYXJQb2ludHMoKSB7XG4gICAgdGhpcy4jcG9pbnRQcmVzZW50ZXJzLmZvckVhY2goKHByZXNlbnRlcikgPT4gcHJlc2VudGVyLmRlc3Ryb3koKSk7XG4gICAgdGhpcy4jcG9pbnRQcmVzZW50ZXJzLmNsZWFyKCk7XG4gICAgcmVtb3ZlKHRoaXMuI2VtcHR5TGlzdENvbXBvbmVudCk7XG4gIH1cblxuICAjZ2V0U29ydGVkRmlsdGVyZWRQb2ludHMoKSB7XG4gICAgY29uc3QgZmlsdGVyZWRQb2ludHMgPSBmaWx0ZXJbdGhpcy4jZmlsdGVyTW9kZWwuZmlsdGVyXSh0aGlzLiNtb2RlbC5wb2ludHMpO1xuICAgIGNvbnN0IHNvcnRlZFBvaW50cyA9IFsuLi5maWx0ZXJlZFBvaW50c107XG5cbiAgICBzd2l0Y2ggKHRoaXMuI2N1cnJlbnRTb3J0VHlwZSkge1xuICAgICAgY2FzZSBTb3J0VHlwZS5QUklDRTpcbiAgICAgICAgc29ydGVkUG9pbnRzLnNvcnQoKGEsIGIpID0+IGIuYmFzZVByaWNlIC0gYS5iYXNlUHJpY2UpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgU29ydFR5cGUuVElNRTpcbiAgICAgICAgc29ydGVkUG9pbnRzLnNvcnQoKGEsIGIpID0+IHtcbiAgICAgICAgICBjb25zdCBkdXJhdGlvbkEgPSBkYXlqcyhhLmRhdGVUbykuZGlmZihkYXlqcyhhLmRhdGVGcm9tKSk7XG4gICAgICAgICAgY29uc3QgZHVyYXRpb25CID0gZGF5anMoYi5kYXRlVG8pLmRpZmYoZGF5anMoYi5kYXRlRnJvbSkpO1xuICAgICAgICAgIHJldHVybiBkdXJhdGlvbkIgLSBkdXJhdGlvbkE7XG4gICAgICAgIH0pO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgU29ydFR5cGUuREFZOlxuICAgICAgZGVmYXVsdDpcbiAgICAgICAgc29ydGVkUG9pbnRzLnNvcnQoKGEsIGIpID0+IGRheWpzKGEuZGF0ZUZyb20pLmRpZmYoZGF5anMoYi5kYXRlRnJvbSkpKTtcbiAgICB9XG5cbiAgICByZXR1cm4gc29ydGVkUG9pbnRzO1xuICB9XG5cbiAgI2hhbmRsZUZpbHRlclR5cGVDaGFuZ2UgPSAoZmlsdGVyVHlwZSkgPT4ge1xuICAgIGlmICh0aGlzLiNmaWx0ZXJNb2RlbC5maWx0ZXIgPT09IGZpbHRlclR5cGUpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgdGhpcy4jZmlsdGVyTW9kZWwuc2V0RmlsdGVyKFVwZGF0ZVR5cGUuTUFKT1IsIGZpbHRlclR5cGUpO1xuICAgIHRoaXMuI2N1cnJlbnRTb3J0VHlwZSA9IFNvcnRUeXBlLkRBWTtcbiAgICB0aGlzLiNjbGVhclBvaW50cygpO1xuICAgIHRoaXMuI3JlbmRlclBvaW50cygpO1xuICB9O1xuXG4gICNoYW5kbGVTb3J0VHlwZUNoYW5nZSA9IChzb3J0VHlwZSkgPT4ge1xuICAgIGlmICh0aGlzLiNjdXJyZW50U29ydFR5cGUgPT09IHNvcnRUeXBlKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHRoaXMuI2N1cnJlbnRTb3J0VHlwZSA9IHNvcnRUeXBlO1xuICAgIHRoaXMuI2NsZWFyUG9pbnRzKCk7XG4gICAgdGhpcy4jcmVuZGVyUG9pbnRzKCk7XG4gIH07XG5cbiAgI2hhbmRsZVZpZXdBY3Rpb24gPSAoYWN0aW9uVHlwZSwgdXBkYXRlVHlwZSwgdXBkYXRlKSA9PiB7XG4gICAgc3dpdGNoIChhY3Rpb25UeXBlKSB7XG4gICAgICBjYXNlIFVzZXJBY3Rpb24uQUREX1BPSU5UOlxuICAgICAgICB0aGlzLiNtb2RlbC5hZGRQb2ludCh1cGRhdGVUeXBlLCB1cGRhdGUpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgVXNlckFjdGlvbi5ERUxFVEVfUE9JTlQ6XG4gICAgICAgIHRoaXMuI21vZGVsLmRlbGV0ZVBvaW50KHVwZGF0ZVR5cGUsIHVwZGF0ZSk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSBVc2VyQWN0aW9uLlVQREFURV9QT0lOVDpcbiAgICAgICAgdGhpcy4jbW9kZWwudXBkYXRlUG9pbnQodXBkYXRlVHlwZSwgdXBkYXRlKTtcbiAgICAgICAgYnJlYWs7XG4gICAgfVxuXG4gICAgdGhpcy4jY2xlYXJQb2ludHMoKTtcbiAgICB0aGlzLiNyZW5kZXJQb2ludHMoKTtcbiAgfTtcblxuICAjaGFuZGxlTW9kZUNoYW5nZSA9IChhY3RpdmVQcmVzZW50ZXIgPSBudWxsKSA9PiB7XG4gICAgdGhpcy4jZWRpdGluZ1ByZXNlbnRlciA9IGFjdGl2ZVByZXNlbnRlcjtcblxuICAgIGlmICh0aGlzLiNpc0NyZWF0aW5nKSB7XG4gICAgICB0aGlzLiNpc0NyZWF0aW5nID0gZmFsc2U7XG4gICAgICB0aGlzLiNuZXdQb2ludEJ1dHRvbi5kaXNhYmxlZCA9IGZhbHNlO1xuICAgIH1cblxuICAgIGZvciAoY29uc3QgcHJlc2VudGVyIG9mIHRoaXMuI3BvaW50UHJlc2VudGVycy52YWx1ZXMoKSkge1xuICAgICAgaWYgKHByZXNlbnRlciAhPT0gdGhpcy4jZWRpdGluZ1ByZXNlbnRlcikge1xuICAgICAgICBwcmVzZW50ZXIucmVzZXRWaWV3KCk7XG4gICAgICB9XG4gICAgfVxuICB9O1xuXG4gICNoYW5kbGVNb2RlbEV2ZW50ID0gKHVwZGF0ZVR5cGUsIGRhdGEpID0+IHtcbiAgICBzd2l0Y2ggKHVwZGF0ZVR5cGUpIHtcbiAgICAgIGNhc2UgVXBkYXRlVHlwZS5QQVRDSDpcbiAgICAgICAgdGhpcy4jcG9pbnRQcmVzZW50ZXJzLmdldChkYXRhLmlkKT8uaW5pdChkYXRhKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlIFVwZGF0ZVR5cGUuTUlOT1I6XG4gICAgICBjYXNlIFVwZGF0ZVR5cGUuTUFKT1I6XG4gICAgICAgIHRoaXMuI2NsZWFyUG9pbnRzKCk7XG4gICAgICAgIHRoaXMuI3JlbmRlclBvaW50cygpO1xuICAgICAgICBicmVhaztcbiAgICB9XG4gIH07XG5cbiAgI25ld1BvaW50QnV0dG9uQ2xpY2tIYW5kbGVyID0gKCkgPT4ge1xuICAgIGlmICh0aGlzLiNpc0NyZWF0aW5nKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgdGhpcy4jaXNDcmVhdGluZyA9IHRydWU7XG4gICAgdGhpcy4jbmV3UG9pbnRCdXR0b24uZGlzYWJsZWQgPSB0cnVlO1xuICAgIHRoaXMuI2ZpbHRlck1vZGVsLnNldEZpbHRlcihVcGRhdGVUeXBlLk1BSk9SLCBGaWx0ZXJUeXBlLkVWRVJZVEhJTkcpO1xuICAgIHRoaXMuI2N1cnJlbnRTb3J0VHlwZSA9IFNvcnRUeXBlLkRBWTtcblxuICAgIGNvbnN0IGhhbmRsZURlc3Ryb3kgPSAoKSA9PiB7XG4gICAgICB0aGlzLiNpc0NyZWF0aW5nID0gZmFsc2U7XG4gICAgICB0aGlzLiNuZXdQb2ludEJ1dHRvbi5kaXNhYmxlZCA9IGZhbHNlO1xuICAgIH07XG5cbiAgICBjb25zdCBwb2ludFByZXNlbnRlciA9IG5ldyBQb2ludFByZXNlbnRlcih7XG4gICAgICBjb250YWluZXI6IHRoaXMuI2xpc3RDb250YWluZXIsXG4gICAgICBvbkRhdGFDaGFuZ2U6IHRoaXMuI2hhbmRsZVZpZXdBY3Rpb24sXG4gICAgICBvbk1vZGVDaGFuZ2U6IHRoaXMuI2hhbmRsZU1vZGVDaGFuZ2UsXG4gICAgICBkZXN0aW5hdGlvbnM6IHRoaXMuI21vZGVsLmRlc3RpbmF0aW9ucyxcbiAgICAgIG9mZmVyczogdGhpcy4jbW9kZWwub2ZmZXJzLFxuICAgICAgaXNDcmVhdGluZzogdHJ1ZSxcbiAgICAgIGhhbmRsZURlc3Ryb3lcbiAgICB9KTtcblxuICAgIHBvaW50UHJlc2VudGVyLmluaXQoKTtcbiAgfTtcbn1cbiJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwic3R5bGVFbGVtZW50Iiwibm9uY2UiLCJzZXRBdHRyaWJ1dGUiLCJzdHlsZXNJbkRPTSIsImdldEluZGV4QnlJZGVudGlmaWVyIiwiaWRlbnRpZmllciIsInJlc3VsdCIsImkiLCJsZW5ndGgiLCJtb2R1bGVzVG9Eb20iLCJsaXN0Iiwib3B0aW9ucyIsImlkQ291bnRNYXAiLCJpZGVudGlmaWVycyIsIml0ZW0iLCJpZCIsImJhc2UiLCJjb3VudCIsImNvbmNhdCIsImluZGV4QnlJZGVudGlmaWVyIiwib2JqIiwiY3NzIiwibWVkaWEiLCJzb3VyY2VNYXAiLCJzdXBwb3J0cyIsImxheWVyIiwicmVmZXJlbmNlcyIsInVwZGF0ZXIiLCJhZGRFbGVtZW50U3R5bGUiLCJieUluZGV4Iiwic3BsaWNlIiwicHVzaCIsImFwaSIsImRvbUFQSSIsInVwZGF0ZSIsIm5ld09iaiIsInJlbW92ZSIsImxhc3RJZGVudGlmaWVycyIsIm5ld0xpc3QiLCJpbmRleCIsIm5ld0xhc3RJZGVudGlmaWVycyIsIl9pIiwiX2luZGV4Iiwic3R5bGVTaGVldCIsImNzc1RleHQiLCJmaXJzdENoaWxkIiwicmVtb3ZlQ2hpbGQiLCJhcHBlbmRDaGlsZCIsImRvY3VtZW50IiwiY3JlYXRlVGV4dE5vZGUiLCJjc3NXaXRoTWFwcGluZ1RvU3RyaW5nIiwidG9TdHJpbmciLCJ0aGlzIiwibWFwIiwiY29udGVudCIsIm5lZWRMYXllciIsImpvaW4iLCJtb2R1bGVzIiwiZGVkdXBlIiwidW5kZWZpbmVkIiwiYWxyZWFkeUltcG9ydGVkTW9kdWxlcyIsImsiLCJfayIsImUiLCJuIiwiciIsInMiLCJ1IiwiYSIsIm8iLCJjIiwiZiIsImgiLCJkIiwibCIsIiQiLCJ5IiwiTSIsIm5hbWUiLCJ3ZWVrZGF5cyIsInNwbGl0IiwibW9udGhzIiwib3JkaW5hbCIsInQiLCJtIiwiU3RyaW5nIiwiQXJyYXkiLCJ2IiwieiIsInV0Y09mZnNldCIsIk1hdGgiLCJhYnMiLCJmbG9vciIsImRhdGUiLCJ5ZWFyIiwibW9udGgiLCJjbG9uZSIsImFkZCIsImNlaWwiLCJwIiwidyIsIkQiLCJtcyIsIlEiLCJ0b0xvd2VyQ2FzZSIsInJlcGxhY2UiLCJnIiwiUyIsIl8iLCJPIiwiYXJncyIsImFyZ3VtZW50cyIsImIiLCJsb2NhbGUiLCIkTCIsInV0YyIsIiR1IiwieCIsIiR4IiwiJG9mZnNldCIsInBhcnNlIiwicHJvdG90eXBlIiwiJGQiLCJEYXRlIiwiTmFOIiwidGVzdCIsIm1hdGNoIiwic3Vic3RyaW5nIiwiVVRDIiwiaW5pdCIsIiR5IiwiZ2V0RnVsbFllYXIiLCIkTSIsImdldE1vbnRoIiwiJEQiLCJnZXREYXRlIiwiJFciLCJnZXREYXkiLCIkSCIsImdldEhvdXJzIiwiJG0iLCJnZXRNaW51dGVzIiwiJHMiLCJnZXRTZWNvbmRzIiwiJG1zIiwiZ2V0TWlsbGlzZWNvbmRzIiwiJHV0aWxzIiwiaXNWYWxpZCIsImlzU2FtZSIsInN0YXJ0T2YiLCJlbmRPZiIsImlzQWZ0ZXIiLCJpc0JlZm9yZSIsIiRnIiwic2V0IiwidW5peCIsInZhbHVlT2YiLCJnZXRUaW1lIiwidG9EYXRlIiwiYXBwbHkiLCJzbGljZSIsIiRsb2NhbGUiLCJ3ZWVrU3RhcnQiLCIkc2V0IiwibWluIiwiZGF5c0luTW9udGgiLCJnZXQiLCJOdW1iZXIiLCJyb3VuZCIsInN1YnRyYWN0IiwiZm9ybWF0IiwiaW52YWxpZERhdGUiLCJtZXJpZGllbSIsIm1vbnRoc1Nob3J0Iiwid2Vla2RheXNNaW4iLCJ3ZWVrZGF5c1Nob3J0IiwiZ2V0VGltZXpvbmVPZmZzZXQiLCJkaWZmIiwidG9KU09OIiwidG9JU09TdHJpbmciLCJ0b1VUQ1N0cmluZyIsImZvckVhY2giLCJleHRlbmQiLCIkaSIsImlzRGF5anMiLCJlbiIsIkxzIiwiY3NzTWFwcGluZyIsImJ0b2EiLCJiYXNlNjQiLCJ1bmVzY2FwZSIsImVuY29kZVVSSUNvbXBvbmVudCIsIkpTT04iLCJzdHJpbmdpZnkiLCJkYXRhIiwic291cmNlTWFwcGluZyIsIl9fX0NTU19MT0FERVJfRVhQT1JUX19fIiwiZWxlbWVudCIsImNyZWF0ZUVsZW1lbnQiLCJzZXRBdHRyaWJ1dGVzIiwiYXR0cmlidXRlcyIsImluc2VydCIsIm1lbW8iLCJzdHlsZSIsInRhcmdldCIsInN0eWxlVGFyZ2V0IiwicXVlcnlTZWxlY3RvciIsIndpbmRvdyIsIkhUTUxJRnJhbWVFbGVtZW50IiwiY29udGVudERvY3VtZW50IiwiaGVhZCIsImdldFRhcmdldCIsIkVycm9yIiwiaW5zZXJ0U3R5bGVFbGVtZW50Iiwic3R5bGVUYWdUcmFuc2Zvcm0iLCJwYXJlbnROb2RlIiwicmVtb3ZlU3R5bGVFbGVtZW50IiwiT2JqZWN0IiwiYXNzaWduIiwiVHlwZUVycm9yIiwiX2xvb3BfMSIsInNvdXJjZSIsImtleXMiLCJrZXkiLCJfYSIsImFyZ3NfMSIsIl9fd2VicGFja19tb2R1bGVfY2FjaGVfXyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImNhY2hlZE1vZHVsZSIsIl9fd2VicGFja19tb2R1bGVzX18iLCJjYWxsIiwiZ2V0dGVyIiwiX19lc01vZHVsZSIsImRlZmluaXRpb24iLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJwcm9wIiwiaGFzT3duUHJvcGVydHkiLCJuYyIsIlBvaW50IiwiY29uc3RydWN0b3IiLCJ0eXBlIiwiZGVzdGluYXRpb24iLCJkYXRlRnJvbSIsImRhdGVUbyIsImJhc2VQcmljZSIsIm9mZmVycyIsImlzRmF2b3JpdGUiLCJERVNUSU5BVElPTlMiLCJkZXNjcmlwdGlvbiIsInBpY3R1cmVzIiwiT2JzZXJ2YWJsZSIsIlNldCIsImFkZE9ic2VydmVyIiwib2JzZXJ2ZXIiLCJyZW1vdmVPYnNlcnZlciIsImRlbGV0ZSIsIl9ub3RpZnkiLCJldmVudCIsInBheWxvYWQiLCJsb2NhbHMiLCJTSEFLRV9DTEFTU19OQU1FIiwiQWJzdHJhY3RWaWV3IiwidGVtcGxhdGUiLCJuZXdFbGVtZW50IiwiaW5uZXJIVE1MIiwiZmlyc3RFbGVtZW50Q2hpbGQiLCJyZW1vdmVFbGVtZW50Iiwic2hha2UiLCJjYWxsYmFjayIsImNsYXNzTGlzdCIsInNldFRpbWVvdXQiLCJyZW5kZXIiLCJjb21wb25lbnQiLCJjb250YWluZXIiLCJwbGFjZSIsImluc2VydEFkamFjZW50RWxlbWVudCIsIm5ld0NvbXBvbmVudCIsIm9sZENvbXBvbmVudCIsIm9sZEVsZW1lbnQiLCJwYXJlbnQiLCJwYXJlbnRFbGVtZW50IiwicmVwbGFjZUNoaWxkIiwiUE9JTlRfVFlQRVMiLCJGaWx0ZXJUeXBlIiwiVXBkYXRlVHlwZSIsIlVzZXJBY3Rpb24iLCJTb3J0VHlwZSIsImZpbHRlciIsInBvaW50cyIsInBvaW50IiwiZGF5anMiLCJGaWx0ZXJzVmlldyIsIl9yZWYiLCJmaWx0ZXJzIiwiY3VycmVudEZpbHRlclR5cGUiLCJvbkZpbHRlclR5cGVDaGFuZ2UiLCJzdXBlciIsImFkZEV2ZW50TGlzdGVuZXIiLCJpc0Rpc2FibGVkIiwiZXZ0IiwidGFnTmFtZSIsInZhbHVlIiwiU29ydFZpZXciLCJjdXJyZW50U29ydFR5cGUiLCJvblNvcnRUeXBlQ2hhbmdlIiwiRW1wdHlMaXN0VGV4dFR5cGUiLCJFbXB0eUxpc3RWaWV3IiwiZmlsdGVyVHlwZSIsIkFic3RyYWN0U3RhdGVmdWxWaWV3IiwiX3N0YXRlIiwidXBkYXRlRWxlbWVudCIsIl9zZXRTdGF0ZSIsIl9yZXN0b3JlSGFuZGxlcnMiLCJzdHJ1Y3R1cmVkQ2xvbmUiLCJwcmV2RWxlbWVudCIsIkhPT0tTIiwiZGVmYXVsdHMiLCJfZGlzYWJsZSIsImFsbG93SW5wdXQiLCJhbGxvd0ludmFsaWRQcmVsb2FkIiwiYWx0Rm9ybWF0IiwiYWx0SW5wdXQiLCJhbHRJbnB1dENsYXNzIiwiYW5pbWF0ZSIsIm5hdmlnYXRvciIsInVzZXJBZ2VudCIsImluZGV4T2YiLCJhcmlhRGF0ZUZvcm1hdCIsImF1dG9GaWxsRGVmYXVsdFRpbWUiLCJjbGlja09wZW5zIiwiY2xvc2VPblNlbGVjdCIsImNvbmp1bmN0aW9uIiwiZGF0ZUZvcm1hdCIsImRlZmF1bHRIb3VyIiwiZGVmYXVsdE1pbnV0ZSIsImRlZmF1bHRTZWNvbmRzIiwiZGlzYWJsZSIsImRpc2FibGVNb2JpbGUiLCJlbmFibGVTZWNvbmRzIiwiZW5hYmxlVGltZSIsImVycm9ySGFuZGxlciIsImVyciIsImNvbnNvbGUiLCJ3YXJuIiwiZ2V0V2VlayIsImdpdmVuRGF0ZSIsInNldEhvdXJzIiwic2V0RGF0ZSIsIndlZWsxIiwiaG91ckluY3JlbWVudCIsImlnbm9yZWRGb2N1c0VsZW1lbnRzIiwiaW5saW5lIiwibWludXRlSW5jcmVtZW50IiwibW9kZSIsIm1vbnRoU2VsZWN0b3JUeXBlIiwibmV4dEFycm93Iiwibm9DYWxlbmRhciIsIm5vdyIsIm9uQ2hhbmdlIiwib25DbG9zZSIsIm9uRGF5Q3JlYXRlIiwib25EZXN0cm95Iiwib25LZXlEb3duIiwib25Nb250aENoYW5nZSIsIm9uT3BlbiIsIm9uUGFyc2VDb25maWciLCJvblJlYWR5Iiwib25WYWx1ZVVwZGF0ZSIsIm9uWWVhckNoYW5nZSIsIm9uUHJlQ2FsZW5kYXJQb3NpdGlvbiIsInBsdWdpbnMiLCJwb3NpdGlvbiIsInBvc2l0aW9uRWxlbWVudCIsInByZXZBcnJvdyIsInNob3J0aGFuZEN1cnJlbnRNb250aCIsInNob3dNb250aHMiLCJzdGF0aWMiLCJ0aW1lXzI0aHIiLCJ3ZWVrTnVtYmVycyIsIndyYXAiLCJlbmdsaXNoIiwic2hvcnRoYW5kIiwibG9uZ2hhbmQiLCJmaXJzdERheU9mV2VlayIsIm50aCIsInJhbmdlU2VwYXJhdG9yIiwid2Vla0FiYnJldmlhdGlvbiIsInNjcm9sbFRpdGxlIiwidG9nZ2xlVGl0bGUiLCJhbVBNIiwieWVhckFyaWFMYWJlbCIsIm1vbnRoQXJpYUxhYmVsIiwiaG91ckFyaWFMYWJlbCIsIm1pbnV0ZUFyaWFMYWJlbCIsInBhZCIsIm51bWJlciIsImJvb2wiLCJkZWJvdW5jZSIsImZuIiwid2FpdCIsIl90aGlzIiwiY2xlYXJUaW1lb3V0IiwiYXJyYXlpZnkiLCJ0b2dnbGVDbGFzcyIsImVsZW0iLCJjbGFzc05hbWUiLCJ0YWciLCJ0ZXh0Q29udGVudCIsImNsZWFyTm9kZSIsIm5vZGUiLCJmaW5kUGFyZW50IiwiY29uZGl0aW9uIiwiY3JlYXRlTnVtYmVySW5wdXQiLCJpbnB1dENsYXNzTmFtZSIsIm9wdHMiLCJ3cmFwcGVyIiwibnVtSW5wdXQiLCJhcnJvd1VwIiwiYXJyb3dEb3duIiwicGF0dGVybiIsImdldEV2ZW50VGFyZ2V0IiwiY29tcG9zZWRQYXRoIiwiZXJyb3IiLCJkb05vdGhpbmciLCJtb250aFRvU3RyIiwibW9udGhOdW1iZXIiLCJyZXZGb3JtYXQiLCJGIiwiZGF0ZU9iaiIsIm1vbnRoTmFtZSIsInNldE1vbnRoIiwiRyIsImhvdXIiLCJwYXJzZUZsb2F0IiwiSCIsIkoiLCJkYXkiLCJLIiwiUmVnRXhwIiwic2hvcnRNb250aCIsInNlY29uZHMiLCJzZXRTZWNvbmRzIiwiVSIsInVuaXhTZWNvbmRzIiwiVyIsIndlZWtOdW0iLCJ3ZWVrTnVtYmVyIiwicGFyc2VJbnQiLCJZIiwic2V0RnVsbFllYXIiLCJaIiwiSVNPRGF0ZSIsIm1pbnV0ZXMiLCJzZXRNaW51dGVzIiwiaiIsInVuaXhNaWxsU2Vjb25kcyIsInRva2VuUmVnZXgiLCJmb3JtYXRzIiwiY3JlYXRlRGF0ZUZvcm1hdHRlciIsIl9iIiwiY29uZmlnIiwiX2MiLCJsMTBuIiwiX2QiLCJpc01vYmlsZSIsImZybXQiLCJvdmVycmlkZUxvY2FsZSIsImZvcm1hdERhdGUiLCJhcnIiLCJjcmVhdGVEYXRlUGFyc2VyIiwiZ2l2ZW5Gb3JtYXQiLCJ0aW1lbGVzcyIsImN1c3RvbUxvY2FsZSIsInBhcnNlZERhdGUiLCJkYXRlT3JpZyIsInRvRml4ZWQiLCJkYXRlc3RyIiwidHJpbSIsInBhcnNlRGF0ZSIsIm1hdGNoZWQiLCJvcHMiLCJtYXRjaEluZGV4IiwicmVnZXhTdHIiLCJ0b2tlbiIsImlzQmFja1NsYXNoIiwiZXNjYXBlZCIsImV4ZWMiLCJ2YWwiLCJpc05hTiIsImNvbXBhcmVEYXRlcyIsImRhdGUxIiwiZGF0ZTIiLCJjYWxjdWxhdGVTZWNvbmRzU2luY2VNaWRuaWdodCIsImhvdXJzIiwiZ2V0RGVmYXVsdEhvdXJzIiwibWluRGF0ZSIsIm1pbkhvdXIiLCJtaW5NaW51dGVzIiwibWluU2Vjb25kcyIsIm1heERhdGUiLCJtYXhIciIsIm1heE1pbnV0ZXMiLCJfX2Fzc2lnbiIsIl9fc3ByZWFkQXJyYXlzIiwiaWwiLCJqbCIsIkZsYXRwaWNrckluc3RhbmNlIiwiaW5zdGFuY2VDb25maWciLCJzZWxmIiwiZmxhdHBpY2tyIiwiZGVmYXVsdENvbmZpZyIsImdldENsb3Nlc3RBY3RpdmVFbGVtZW50IiwiY2FsZW5kYXJDb250YWluZXIiLCJnZXRSb290Tm9kZSIsImFjdGl2ZUVsZW1lbnQiLCJiaW5kVG9JbnN0YW5jZSIsImJpbmQiLCJzZXRDYWxlbmRhcldpZHRoIiwicmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwidmlzaWJpbGl0eSIsImRpc3BsYXkiLCJkYXlzQ29udGFpbmVyIiwiZGF5c1dpZHRoIiwiZGF5cyIsIm9mZnNldFdpZHRoIiwid2lkdGgiLCJ3ZWVrV3JhcHBlciIsInJlbW92ZVByb3BlcnR5IiwidXBkYXRlVGltZSIsInNlbGVjdGVkRGF0ZXMiLCJkZWZhdWx0RGF0ZSIsImxhdGVzdFNlbGVjdGVkRGF0ZU9iaiIsInByZXZlbnREZWZhdWx0IiwiaXNLZXlEb3duIiwiZXZlbnRUYXJnZXQiLCJpbnB1dCIsImdldEF0dHJpYnV0ZSIsIm1heCIsInN0ZXAiLCJjdXJWYWx1ZSIsIm5ld1ZhbHVlIiwiZGVsdGEiLCJ3aGljaCIsImlzSG91ckVsZW0iLCJob3VyRWxlbWVudCIsImlzTWludXRlRWxlbSIsIm1pbnV0ZUVsZW1lbnQiLCJpbmNyZW1lbnROdW1JbnB1dCIsInRpbWVXcmFwcGVyIiwicHJldlZhbHVlIiwiX2lucHV0Iiwic2V0SG91cnNGcm9tSW5wdXRzIiwidXBkYXRlVmFsdWUiLCJfZGVib3VuY2VkQ2hhbmdlIiwic2Vjb25kRWxlbWVudCIsImxpbWl0TWluSG91cnMiLCJtaW5UaW1lIiwibWluRGF0ZUhhc1RpbWUiLCJsaW1pdE1heEhvdXJzIiwibWF4VGltZSIsIm1heERhdGVIYXNUaW1lIiwibWluQm91bmQiLCJtYXhCb3VuZCIsImN1cnJlbnRUaW1lIiwic2Vjb25kc1NpbmNlTWlkbmlnaHQiLCJwYXJzZVNlY29uZHMiLCJzZXRIb3Vyc0Zyb21EYXRlIiwib25ZZWFySW5wdXQiLCJjaGFuZ2VZZWFyIiwiaGFuZGxlciIsImV2IiwiZWwiLCJfaGFuZGxlcnMiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwidHJpZ2dlckNoYW5nZSIsInRyaWdnZXJFdmVudCIsImp1bXBUb0RhdGUiLCJqdW1wRGF0ZSIsImp1bXBUbyIsIm9sZFllYXIiLCJjdXJyZW50WWVhciIsIm9sZE1vbnRoIiwiY3VycmVudE1vbnRoIiwibWVzc2FnZSIsImJ1aWxkTW9udGhTd2l0Y2giLCJyZWRyYXciLCJ0aW1lSW5jcmVtZW50IiwiY29udGFpbnMiLCJpbnB1dEVsZW0iLCJjcmVhdGVFdmVudCIsImRpc3BhdGNoRXZlbnQiLCJjcmVhdGVEYXkiLCJfZGF5TnVtYmVyIiwiZGF0ZUlzRW5hYmxlZCIsImlzRW5hYmxlZCIsImRheUVsZW1lbnQiLCJ0b2RheURhdGVFbGVtIiwidGFiSW5kZXgiLCJpc0RhdGVTZWxlY3RlZCIsInNlbGVjdGVkRGF0ZUVsZW0iLCJpc0RhdGVJblJhbmdlIiwiaW5zZXJ0QWRqYWNlbnRIVE1MIiwiZm9jdXNPbkRheUVsZW0iLCJ0YXJnZXROb2RlIiwiZm9jdXMiLCJvbk1vdXNlT3ZlciIsImdldEZpcnN0QXZhaWxhYmxlRGF5Iiwic3RhcnRNb250aCIsImVuZE1vbnRoIiwiY2hpbGRyZW4iLCJzdGFydEluZGV4IiwiZW5kSW5kZXgiLCJmb2N1c09uRGF5IiwiY3VycmVudCIsIm9mZnNldCIsImRheUZvY3VzZWQiLCJpc0luVmlldyIsImJvZHkiLCJzdGFydEVsZW0iLCJnaXZlbk1vbnRoIiwibG9vcERlbHRhIiwibnVtTW9udGhEYXlzIiwiY2hhbmdlTW9udGgiLCJnZXROZXh0QXZhaWxhYmxlRGF5IiwiYnVpbGRNb250aERheXMiLCJmaXJzdE9mTW9udGgiLCJwcmV2TW9udGhEYXlzIiwidXRpbHMiLCJnZXREYXlzSW5Nb250aCIsImNyZWF0ZURvY3VtZW50RnJhZ21lbnQiLCJpc011bHRpTW9udGgiLCJwcmV2TW9udGhEYXlDbGFzcyIsIm5leHRNb250aERheUNsYXNzIiwiZGF5TnVtYmVyIiwiZGF5SW5kZXgiLCJkYXlOdW0iLCJkYXlDb250YWluZXIiLCJidWlsZERheXMiLCJmcmFnIiwic2hvdWxkQnVpbGRNb250aCIsIm1vbnRoc0Ryb3Bkb3duQ29udGFpbmVyIiwic2VsZWN0ZWQiLCJidWlsZE1vbnRoIiwibW9udGhFbGVtZW50IiwibW9udGhOYXZGcmFnbWVudCIsInNlbGVjdGVkTW9udGgiLCJ5ZWFySW5wdXQiLCJ0YWJpbmRleCIsInllYXJFbGVtZW50IiwiZ2V0RWxlbWVudHNCeVRhZ05hbWUiLCJkaXNhYmxlZCIsImJ1aWxkTW9udGhzIiwibW9udGhOYXYiLCJwcmV2TW9udGhOYXYiLCJ5ZWFyRWxlbWVudHMiLCJtb250aEVsZW1lbnRzIiwibmV4dE1vbnRoTmF2IiwiYnVpbGRXZWVrZGF5cyIsIndlZWtkYXlDb250YWluZXIiLCJ1cGRhdGVXZWVrZGF5cyIsImlzT2Zmc2V0IiwiX2hpZGVQcmV2TW9udGhBcnJvdyIsIl9oaWRlTmV4dE1vbnRoQXJyb3ciLCJ1cGRhdGVOYXZpZ2F0aW9uQ3VycmVudE1vbnRoIiwiaXNDYWxlbmRhckVsZW0iLCJkb2N1bWVudENsaWNrIiwiaXNPcGVuIiwiZXZlbnRUYXJnZXRfMSIsImlzQ2FsZW5kYXJFbGVtZW50IiwibG9zdEZvY3VzIiwicGF0aCIsInJlbGF0ZWRUYXJnZXQiLCJpc0lnbm9yZWQiLCJzb21lIiwidGltZUNvbnRhaW5lciIsImNsb3NlIiwiY2xlYXIiLCJuZXdZZWFyIiwibmV3WWVhck51bSIsImlzTmV3WWVhciIsImRhdGVUb0NoZWNrIiwiZW5hYmxlIiwiYXJyYXkiLCJwYXJzZWQiLCJmcm9tIiwidG8iLCJvbkJsdXIiLCJpc0lucHV0IiwidmFsdWVDaGFuZ2VkIiwidHJpbUVuZCIsImdldERhdGVTdHIiLCJhbGxvd0tleWRvd24iLCJhbGxvd0lubGluZUtleWRvd24iLCJrZXlDb2RlIiwiYmx1ciIsIm9wZW4iLCJpc1RpbWVPYmoiLCJmb2N1c0FuZENsb3NlIiwic2VsZWN0RGF0ZSIsImRlbHRhXzEiLCJjdHJsS2V5Iiwic3RvcFByb3BhZ2F0aW9uIiwiY3VycmVudFllYXJFbGVtZW50IiwiZWxlbXMiLCJwbHVnaW5FbGVtZW50cyIsInNoaWZ0S2V5IiwiY2hhckF0IiwiY2VsbENsYXNzIiwiaG92ZXJEYXRlIiwiaW5pdGlhbERhdGUiLCJyYW5nZVN0YXJ0RGF0ZSIsInJhbmdlRW5kRGF0ZSIsImNvbnRhaW5zRGlzYWJsZWQiLCJtaW5SYW5nZSIsIm1heFJhbmdlIiwickNvbnRhaW5lciIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJkYXlFbGVtIiwidHMiLCJ0czEiLCJ0czIiLCJ0aW1lc3RhbXAiLCJvdXRPZlJhbmdlIiwib25SZXNpemUiLCJwb3NpdGlvbkNhbGVuZGFyIiwibWluTWF4RGF0ZVNldHRlciIsImludmVyc2VEYXRlT2JqIiwicmVtb3ZlQXR0cmlidXRlIiwiZ2V0SW5wdXRFbGVtIiwic2V0dXBMb2NhbGUiLCJsMTBucyIsImRlZmF1bHQiLCJkYXRhc2V0IiwiY3VzdG9tUG9zaXRpb25FbGVtZW50IiwiX3Bvc2l0aW9uRWxlbWVudCIsImNhbGVuZGFySGVpZ2h0IiwicmVkdWNlIiwiYWNjIiwiY2hpbGQiLCJvZmZzZXRIZWlnaHQiLCJjYWxlbmRhcldpZHRoIiwiY29uZmlnUG9zIiwiY29uZmlnUG9zVmVydGljYWwiLCJjb25maWdQb3NIb3Jpem9udGFsIiwiaW5wdXRCb3VuZHMiLCJnZXRCb3VuZGluZ0NsaWVudFJlY3QiLCJkaXN0YW5jZUZyb21Cb3R0b20iLCJpbm5lckhlaWdodCIsImJvdHRvbSIsInNob3dPblRvcCIsInRvcCIsInBhZ2VZT2Zmc2V0IiwibGVmdCIsInBhZ2VYT2Zmc2V0IiwiaXNDZW50ZXIiLCJpc1JpZ2h0IiwicmlnaHQiLCJyaWdodE1vc3QiLCJjZW50ZXJNb3N0IiwiZG9jIiwiZWRpdGFibGVTaGVldCIsInN0eWxlU2hlZXRzIiwic2hlZXQiLCJjc3NSdWxlcyIsImdldERvY3VtZW50U3R5bGVTaGVldCIsImJvZHlXaWR0aCIsImNlbnRlckxlZnQiLCJjZW50ZXJJbmRleCIsImNlbnRlclN0eWxlIiwiaW5zZXJ0UnVsZSIsImNlbnRlckJlZm9yZSIsIm1zTWF4VG91Y2hQb2ludHMiLCJzZWxlY3RlZERhdGUiLCJzaG91bGRDaGFuZ2VNb250aCIsInNlbGVjdGVkSW5kZXgiLCJzb3J0Iiwic2luZ2xlIiwicmFuZ2UiLCJsb2FkZWRQbHVnaW5zIiwiX2JpbmQiLCJfc2V0SG91cnNGcm9tRGF0ZSIsIl9wb3NpdGlvbkNhbGVuZGFyIiwidHJpZ2dlckNoYW5nZUV2ZW50IiwidG9Jbml0aWFsIiwibW9iaWxlSW5wdXQiLCJfaW5pdGlhbERhdGUiLCJfY3JlYXRlRWxlbWVudCIsImRlc3Ryb3kiLCJsYXN0Q2hpbGQiLCJpbnNlcnRCZWZvcmUiLCJfdHlwZSIsImNsaWNrIiwid2FzT3BlbiIsInNlbGVjdCIsIm9wdGlvbiIsIkNBTExCQUNLUyIsInNldFNlbGVjdGVkRGF0ZSIsInRvZ2dsZSIsInVwZGF0ZVBvc2l0aW9uRWxlbWVudCIsImlucHV0RGF0ZSIsImRhdGVzIiwicGFyc2VEYXRlUnVsZXMiLCJydWxlIiwiaG9va3MiLCJpbml0RXZlbnQiLCJzcGVjaWZpY0Zvcm1hdCIsImRPYmoiLCJtb2JpbGVGb3JtYXRTdHIiLCJvbk1vbnRoTmF2Q2xpY2siLCJpc1ByZXZNb250aCIsImlzTmV4dE1vbnRoIiwiYm9vbE9wdHMiLCJ1c2VyQ29uZmlnIiwiX2VuYWJsZSIsInRpbWVNb2RlIiwiZGVmYXVsdERhdGVGb3JtYXQiLCJkZWZhdWx0QWx0Rm9ybWF0IiwiX21pbkRhdGUiLCJfbWF4RGF0ZSIsIm1pbk1heFRpbWVTZXR0ZXIiLCJfbWluVGltZSIsIl9tYXhUaW1lIiwiaG9vayIsInBsdWdpbkNvbmYiLCJwYXJzZUNvbmZpZyIsIm5vZGVOYW1lIiwicGxhY2Vob2xkZXIiLCJyZXF1aXJlZCIsIm5leHRTaWJsaW5nIiwicHJlbG9hZGVkRGF0ZSIsInNldHVwRGF0ZXMiLCJ5ciIsImZyYWdtZW50IiwiX19oaWRlUHJldk1vbnRoQXJyb3ciLCJfX2hpZGVOZXh0TW9udGhBcnJvdyIsImlubmVyQ29udGFpbmVyIiwiYnVpbGRXZWVrcyIsInNlcGFyYXRvciIsImhvdXJJbnB1dCIsIm1pbnV0ZUlucHV0IiwibWlsaXRhcnkyYW1wbSIsInNlY29uZElucHV0IiwidGl0bGUiLCJidWlsZFRpbWUiLCJjdXN0b21BcHBlbmQiLCJhcHBlbmRUbyIsIm5vZGVUeXBlIiwiYnVpbGQiLCJpbnB1dFR5cGUiLCJkZWZhdWx0VmFsdWUiLCJzZXR1cE1vYmlsZSIsImRlYm91bmNlZFJlc2l6ZSIsIm9udG91Y2hzdGFydCIsImNhcHR1cmUiLCJiaW5kRXZlbnRzIiwiaXNTYWZhcmkiLCJfZmxhdHBpY2tyIiwibm9kZUxpc3QiLCJub2RlcyIsIkhUTUxFbGVtZW50IiwiaW5zdGFuY2VzIiwiSFRNTENvbGxlY3Rpb24iLCJOb2RlTGlzdCIsInNlbGVjdG9yIiwiTm9kZSIsImxvY2FsaXplIiwic2V0RGVmYXVsdHMiLCJqUXVlcnkiLCJmcF9pbmNyIiwiRm9ybUVkaXRWaWV3IiwiZGVzdGluYXRpb25zIiwib25Gb3JtU3VibWl0Iiwib25Gb3JtQ2xvc2UiLCJvbkZvcm1EZWxldGUiLCJwYXJzZVBvaW50VG9TdGF0ZSIsIl9vbkZvcm1TdWJtaXQiLCJfb25Gb3JtQ2xvc2UiLCJfb25Gb3JtRGVsZXRlIiwiY3VycmVudERlc3RpbmF0aW9uIiwiZmluZCIsImN1cnJlbnRPZmZlcnMiLCJkZXN0Iiwib2ZmZXIiLCJpbmNsdWRlcyIsInByaWNlIiwicGljIiwic3JjIiwiX3NldElubmVySGFuZGxlcnMiLCJyb2xsdXBCdG4iLCJjaGVja2JveCIsIiNvZmZlcnNDaGFuZ2VIYW5kbGVyIiwic2VsZWN0ZWRPZmZlcnMiLCJfcmVmMiIsIl9yZWYzIiwicGFyc2VTdGF0ZVRvUG9pbnQiLCJzdGF0ZSIsIkZvcm1DcmVhdGVWaWV3IiwicmVzZXRCdG4iLCJzZWxlY3RlZElkIiwiZGVzdGluYXRpb25TZWxlY3QiLCJzZWxlY3RlZERlc3RpbmF0aW9uIiwic2V0Q3VzdG9tVmFsaWRpdHkiLCJyZXBvcnRWYWxpZGl0eSIsIlBvaW50VmlldyIsIm9uRWRpdENsaWNrIiwib25GYXZvcml0ZUNsaWNrIiwiZGVzdGluYXRpb25OYW1lIiwib2ZmZXJzTWFya3VwIiwiZGlmZk1zIiwiZGlmZk1pbnV0ZXMiLCJkaWZmSG91cnMiLCJwYWRTdGFydCIsImdldER1cmF0aW9uIiwiUG9pbnRQcmVzZW50ZXIiLCJvbkRhdGFDaGFuZ2UiLCJvbk1vZGVDaGFuZ2UiLCJpc0NyZWF0aW5nIiwiaGFuZGxlRGVzdHJveSIsInByZXZQb2ludENvbXBvbmVudCIsInByZXZGb3JtRWRpdENvbXBvbmVudCIsInJlc2V0VmlldyIsIiNoYW5kbGVFZGl0Q2xpY2siLCIjaGFuZGxlRmF2b3JpdGVDbGljayIsImlzTWlub3JVcGRhdGUiLCIjaGFuZGxlRm9ybUNsb3NlIiwicG9pbnRzTW9kZWwiLCJ0YXhpIiwiZmxpZ2h0IiwiZHJpdmUiLCJnZXRQb2ludEJ5SWQiLCJ1cGRhdGVQb2ludCIsInVwZGF0ZVR5cGUiLCJmaW5kSW5kZXgiLCJhZGRQb2ludCIsImRlbGV0ZVBvaW50IiwiZmlsdGVyTW9kZWwiLCJzZXRGaWx0ZXIiLCJuZXdQb2ludEJ1dHRvbiIsInRyaXBQcmVzZW50ZXIiLCJNYXAiLCJtb2RlbCIsInByZXZGaWx0ZXJzQ29tcG9uZW50IiwicHJldlNvcnRDb21wb25lbnQiLCJsaXN0RWxlbWVudCIsInBvaW50UHJlc2VudGVyIiwicHJlc2VudGVyIiwic29ydGVkUG9pbnRzIiwiZHVyYXRpb25BIiwic29ydFR5cGUiLCIjaGFuZGxlVmlld0FjdGlvbiIsImFjdGlvblR5cGUiLCJhY3RpdmVQcmVzZW50ZXIiLCJ2YWx1ZXMiLCIjaGFuZGxlTW9kZWxFdmVudCIsIiNuZXdQb2ludEJ1dHRvbkNsaWNrSGFuZGxlciJdLCJzb3VyY2VSb290IjoiIn0=