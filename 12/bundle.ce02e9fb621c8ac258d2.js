(()=>{var e={56:(e,t,n)=>{"use strict";e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},72:e=>{"use strict";var t=[];function n(e){for(var n=-1,a=0;a<t.length;a++)if(t[a].identifier===e){n=a;break}return n}function a(e,a){for(var r={},o=[],l=0;l<e.length;l++){var s=e[l],c=a.base?s[0]+a.base:s[0],d=r[c]||0,p="".concat(c," ").concat(d);r[c]=d+1;var A=n(p),f={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==A)t[A].references++,t[A].updater(f);else{var u=i(f,a);a.byIndex=l,t.splice(l,0,{identifier:p,updater:u,references:1})}o.push(p)}return o}function i(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,i){var r=a(e=e||[],i=i||{});return function(e){e=e||[];for(var o=0;o<r.length;o++){var l=n(r[o]);t[l].references--}for(var s=a(e,i),c=0;c<r.length;c++){var d=n(r[c]);0===t[d].references&&(t[d].updater(),t.splice(d,1))}r=s}}},113:e=>{"use strict";e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}},314:e=>{"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",a=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),a&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),a&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,a,i,r){"string"==typeof e&&(e=[[null,e,void 0]]);var o={};if(a)for(var l=0;l<this.length;l++){var s=this[l][0];null!=s&&(o[s]=!0)}for(var c=0;c<e.length;c++){var d=[].concat(e[c]);a&&o[d[0]]||(void 0!==r&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=r),n&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=n):d[2]=n),i&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=i):d[4]="".concat(i)),t.push(d))}},t}},353:function(e){e.exports=function(){"use strict";var e=6e4,t=36e5,n="millisecond",a="second",i="minute",r="hour",o="day",l="week",s="month",c="quarter",d="year",p="date",A="Invalid Date",f=/^(\d{4})[-/]?(\d{1,2})?[-/]?(\d{0,2})[Tt\s]*(\d{1,2})?:?(\d{1,2})?:?(\d{1,2})?[.:]?(\d+)?$/,u=/\[([^\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,h={name:"en",weekdays:"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),months:"January_February_March_April_May_June_July_August_September_October_November_December".split("_"),ordinal:function(e){var t=["th","st","nd","rd"],n=e%100;return"["+e+(t[(n-20)%10]||t[n]||t[0])+"]"}},m=function(e,t,n){var a=String(e);return!a||a.length>=t?e:""+Array(t+1-a.length).join(n)+e},C={s:m,z:function(e){var t=-e.utcOffset(),n=Math.abs(t),a=Math.floor(n/60),i=n%60;return(t<=0?"+":"-")+m(a,2,"0")+":"+m(i,2,"0")},m:function e(t,n){if(t.date()<n.date())return-e(n,t);var a=12*(n.year()-t.year())+(n.month()-t.month()),i=t.clone().add(a,s),r=n-i<0,o=t.clone().add(a+(r?-1:1),s);return+(-(a+(n-i)/(r?i-o:o-i))||0)},a:function(e){return e<0?Math.ceil(e)||0:Math.floor(e)},p:function(e){return{M:s,y:d,w:l,d:o,D:p,h:r,m:i,s:a,ms:n,Q:c}[e]||String(e||"").toLowerCase().replace(/s$/,"")},u:function(e){return void 0===e}},g="en",b={};b[g]=h;var k="$isDayjsObject",v=function(e){return e instanceof B||!(!e||!e[k])},y=function e(t,n,a){var i;if(!t)return g;if("string"==typeof t){var r=t.toLowerCase();b[r]&&(i=r),n&&(b[r]=n,i=r);var o=t.split("-");if(!i&&o.length>1)return e(o[0])}else{var l=t.name;b[l]=t,i=l}return!a&&i&&(g=i),i||!a&&g},w=function(e,t){if(v(e))return e.clone();var n="object"==typeof t?t:{};return n.date=e,n.args=arguments,new B(n)},x=C;x.l=y,x.i=v,x.w=function(e,t){return w(e,{locale:t.$L,utc:t.$u,x:t.$x,$offset:t.$offset})};var B=function(){function h(e){this.$L=y(e.locale,null,!0),this.parse(e),this.$x=this.$x||e.x||{},this[k]=!0}var m=h.prototype;return m.parse=function(e){this.$d=function(e){var t=e.date,n=e.utc;if(null===t)return new Date(NaN);if(x.u(t))return new Date;if(t instanceof Date)return new Date(t);if("string"==typeof t&&!/Z$/i.test(t)){var a=t.match(f);if(a){var i=a[2]-1||0,r=(a[7]||"0").substring(0,3);return n?new Date(Date.UTC(a[1],i,a[3]||1,a[4]||0,a[5]||0,a[6]||0,r)):new Date(a[1],i,a[3]||1,a[4]||0,a[5]||0,a[6]||0,r)}}return new Date(t)}(e),this.init()},m.init=function(){var e=this.$d;this.$y=e.getFullYear(),this.$M=e.getMonth(),this.$D=e.getDate(),this.$W=e.getDay(),this.$H=e.getHours(),this.$m=e.getMinutes(),this.$s=e.getSeconds(),this.$ms=e.getMilliseconds()},m.$utils=function(){return x},m.isValid=function(){return!(this.$d.toString()===A)},m.isSame=function(e,t){var n=w(e);return this.startOf(t)<=n&&n<=this.endOf(t)},m.isAfter=function(e,t){return w(e)<this.startOf(t)},m.isBefore=function(e,t){return this.endOf(t)<w(e)},m.$g=function(e,t,n){return x.u(e)?this[t]:this.set(n,e)},m.unix=function(){return Math.floor(this.valueOf()/1e3)},m.valueOf=function(){return this.$d.getTime()},m.startOf=function(e,t){var n=this,c=!!x.u(t)||t,A=x.p(e),f=function(e,t){var a=x.w(n.$u?Date.UTC(n.$y,t,e):new Date(n.$y,t,e),n);return c?a:a.endOf(o)},u=function(e,t){return x.w(n.toDate()[e].apply(n.toDate("s"),(c?[0,0,0,0]:[23,59,59,999]).slice(t)),n)},h=this.$W,m=this.$M,C=this.$D,g="set"+(this.$u?"UTC":"");switch(A){case d:return c?f(1,0):f(31,11);case s:return c?f(1,m):f(0,m+1);case l:var b=this.$locale().weekStart||0,k=(h<b?h+7:h)-b;return f(c?C-k:C+(6-k),m);case o:case p:return u(g+"Hours",0);case r:return u(g+"Minutes",1);case i:return u(g+"Seconds",2);case a:return u(g+"Milliseconds",3);default:return this.clone()}},m.endOf=function(e){return this.startOf(e,!1)},m.$set=function(e,t){var l,c=x.p(e),A="set"+(this.$u?"UTC":""),f=(l={},l[o]=A+"Date",l[p]=A+"Date",l[s]=A+"Month",l[d]=A+"FullYear",l[r]=A+"Hours",l[i]=A+"Minutes",l[a]=A+"Seconds",l[n]=A+"Milliseconds",l)[c],u=c===o?this.$D+(t-this.$W):t;if(c===s||c===d){var h=this.clone().set(p,1);h.$d[f](u),h.init(),this.$d=h.set(p,Math.min(this.$D,h.daysInMonth())).$d}else f&&this.$d[f](u);return this.init(),this},m.set=function(e,t){return this.clone().$set(e,t)},m.get=function(e){return this[x.p(e)]()},m.add=function(n,c){var p,A=this;n=Number(n);var f=x.p(c),u=function(e){var t=w(A);return x.w(t.date(t.date()+Math.round(e*n)),A)};if(f===s)return this.set(s,this.$M+n);if(f===d)return this.set(d,this.$y+n);if(f===o)return u(1);if(f===l)return u(7);var h=(p={},p[i]=e,p[r]=t,p[a]=1e3,p)[f]||1,m=this.$d.getTime()+n*h;return x.w(m,this)},m.subtract=function(e,t){return this.add(-1*e,t)},m.format=function(e){var t=this,n=this.$locale();if(!this.isValid())return n.invalidDate||A;var a=e||"YYYY-MM-DDTHH:mm:ssZ",i=x.z(this),r=this.$H,o=this.$m,l=this.$M,s=n.weekdays,c=n.months,d=n.meridiem,p=function(e,n,i,r){return e&&(e[n]||e(t,a))||i[n].slice(0,r)},f=function(e){return x.s(r%12||12,e,"0")},h=d||function(e,t,n){var a=e<12?"AM":"PM";return n?a.toLowerCase():a};return a.replace(u,(function(e,a){return a||function(e){switch(e){case"YY":return String(t.$y).slice(-2);case"YYYY":return x.s(t.$y,4,"0");case"M":return l+1;case"MM":return x.s(l+1,2,"0");case"MMM":return p(n.monthsShort,l,c,3);case"MMMM":return p(c,l);case"D":return t.$D;case"DD":return x.s(t.$D,2,"0");case"d":return String(t.$W);case"dd":return p(n.weekdaysMin,t.$W,s,2);case"ddd":return p(n.weekdaysShort,t.$W,s,3);case"dddd":return s[t.$W];case"H":return String(r);case"HH":return x.s(r,2,"0");case"h":return f(1);case"hh":return f(2);case"a":return h(r,o,!0);case"A":return h(r,o,!1);case"m":return String(o);case"mm":return x.s(o,2,"0");case"s":return String(t.$s);case"ss":return x.s(t.$s,2,"0");case"SSS":return x.s(t.$ms,3,"0");case"Z":return i}return null}(e)||i.replace(":","")}))},m.utcOffset=function(){return 15*-Math.round(this.$d.getTimezoneOffset()/15)},m.diff=function(n,p,A){var f,u=this,h=x.p(p),m=w(n),C=(m.utcOffset()-this.utcOffset())*e,g=this-m,b=function(){return x.m(u,m)};switch(h){case d:f=b()/12;break;case s:f=b();break;case c:f=b()/3;break;case l:f=(g-C)/6048e5;break;case o:f=(g-C)/864e5;break;case r:f=g/t;break;case i:f=g/e;break;case a:f=g/1e3;break;default:f=g}return A?f:x.a(f)},m.daysInMonth=function(){return this.endOf(s).$D},m.$locale=function(){return b[this.$L]},m.locale=function(e,t){if(!e)return this.$L;var n=this.clone(),a=y(e,t,!0);return a&&(n.$L=a),n},m.clone=function(){return x.w(this.$d,this)},m.toDate=function(){return new Date(this.valueOf())},m.toJSON=function(){return this.isValid()?this.toISOString():null},m.toISOString=function(){return this.$d.toISOString()},m.toString=function(){return this.$d.toUTCString()},h}(),D=B.prototype;return w.prototype=D,[["$ms",n],["$s",a],["$m",i],["$H",r],["$W",o],["$M",s],["$y",d],["$D",p]].forEach((function(e){D[e[1]]=function(t){return this.$g(t,e[0],e[1])}})),w.extend=function(e,t){return e.$i||(e(t,B,w),e.$i=!0),w},w.locale=y,w.isDayjs=v,w.unix=function(e){return w(1e3*e)},w.en=b[g],w.Ls=b,w.p={},w}()},354:e=>{"use strict";e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var a=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),i="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(a),r="/*# ".concat(i," */");return[t].concat([r]).join("\n")}return[t].join("\n")}},362:(e,t,n)=>{"use strict";n.d(t,{A:()=>l});var a=n(354),i=n.n(a),r=n(314),o=n.n(r)()(i());o.push([e.id,".shake {\n  animation: shake 0.6s;\n  position: relative;\n  z-index: 10;\n}\n\n@keyframes shake {\n  0%,\n  100% {\n    transform: translateX(0);\n  }\n\n  10%,\n  30%,\n  50%,\n  70%,\n  90% {\n    transform: translateX(-5px);\n  }\n\n  20%,\n  40%,\n  60%,\n  80% {\n    transform: translateX(5px);\n  }\n}\n","",{version:3,sources:["webpack://./src/framework/view/abstract-view.css"],names:[],mappings:"AAAA;EACE,qBAAqB;EACrB,kBAAkB;EAClB,WAAW;AACb;;AAEA;EACE;;IAEE,wBAAwB;EAC1B;;EAEA;;;;;IAKE,2BAA2B;EAC7B;;EAEA;;;;IAIE,0BAA0B;EAC5B;AACF",sourcesContent:[".shake {\n  animation: shake 0.6s;\n  position: relative;\n  z-index: 10;\n}\n\n@keyframes shake {\n  0%,\n  100% {\n    transform: translateX(0);\n  }\n\n  10%,\n  30%,\n  50%,\n  70%,\n  90% {\n    transform: translateX(-5px);\n  }\n\n  20%,\n  40%,\n  60%,\n  80% {\n    transform: translateX(5px);\n  }\n}\n"],sourceRoot:""}]);const l=o},540:e=>{"use strict";e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},659:e=>{"use strict";var t={};e.exports=function(e,n){var a=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(n)}},825:e=>{"use strict";e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var a="";n.supports&&(a+="@supports (".concat(n.supports,") {")),n.media&&(a+="@media ".concat(n.media," {"));var i=void 0!==n.layer;i&&(a+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),a+=n.css,i&&(a+="}"),n.media&&(a+="}"),n.supports&&(a+="}");var r=n.sourceMap;r&&"undefined"!=typeof btoa&&(a+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),t.styleTagTransform(a,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},921:(e,t,n)=>{"use strict";n.d(t,{A:()=>l});var a=n(354),i=n.n(a),r=n(314),o=n.n(r)()(i());o.push([e.id,'.flatpickr-calendar{background:transparent;opacity:0;display:none;text-align:center;visibility:hidden;padding:0;-webkit-animation:none;animation:none;direction:ltr;border:0;font-size:14px;line-height:24px;border-radius:5px;position:absolute;width:307.875px;-webkit-box-sizing:border-box;box-sizing:border-box;-ms-touch-action:manipulation;touch-action:manipulation;background:#fff;-webkit-box-shadow:1px 0 0 #e6e6e6,-1px 0 0 #e6e6e6,0 1px 0 #e6e6e6,0 -1px 0 #e6e6e6,0 3px 13px rgba(0,0,0,0.08);box-shadow:1px 0 0 #e6e6e6,-1px 0 0 #e6e6e6,0 1px 0 #e6e6e6,0 -1px 0 #e6e6e6,0 3px 13px rgba(0,0,0,0.08)}.flatpickr-calendar.open,.flatpickr-calendar.inline{opacity:1;max-height:640px;visibility:visible}.flatpickr-calendar.open{display:inline-block;z-index:99999}.flatpickr-calendar.animate.open{-webkit-animation:fpFadeInDown 300ms cubic-bezier(.23,1,.32,1);animation:fpFadeInDown 300ms cubic-bezier(.23,1,.32,1)}.flatpickr-calendar.inline{display:block;position:relative;top:2px}.flatpickr-calendar.static{position:absolute;top:calc(100% + 2px)}.flatpickr-calendar.static.open{z-index:999;display:block}.flatpickr-calendar.multiMonth .flatpickr-days .dayContainer:nth-child(n+1) .flatpickr-day.inRange:nth-child(7n+7){-webkit-box-shadow:none !important;box-shadow:none !important}.flatpickr-calendar.multiMonth .flatpickr-days .dayContainer:nth-child(n+2) .flatpickr-day.inRange:nth-child(7n+1){-webkit-box-shadow:-2px 0 0 #e6e6e6,5px 0 0 #e6e6e6;box-shadow:-2px 0 0 #e6e6e6,5px 0 0 #e6e6e6}.flatpickr-calendar .hasWeeks .dayContainer,.flatpickr-calendar .hasTime .dayContainer{border-bottom:0;border-bottom-right-radius:0;border-bottom-left-radius:0}.flatpickr-calendar .hasWeeks .dayContainer{border-left:0}.flatpickr-calendar.hasTime .flatpickr-time{height:40px;border-top:1px solid #e6e6e6}.flatpickr-calendar.noCalendar.hasTime .flatpickr-time{height:auto}.flatpickr-calendar:before,.flatpickr-calendar:after{position:absolute;display:block;pointer-events:none;border:solid transparent;content:\'\';height:0;width:0;left:22px}.flatpickr-calendar.rightMost:before,.flatpickr-calendar.arrowRight:before,.flatpickr-calendar.rightMost:after,.flatpickr-calendar.arrowRight:after{left:auto;right:22px}.flatpickr-calendar.arrowCenter:before,.flatpickr-calendar.arrowCenter:after{left:50%;right:50%}.flatpickr-calendar:before{border-width:5px;margin:0 -5px}.flatpickr-calendar:after{border-width:4px;margin:0 -4px}.flatpickr-calendar.arrowTop:before,.flatpickr-calendar.arrowTop:after{bottom:100%}.flatpickr-calendar.arrowTop:before{border-bottom-color:#e6e6e6}.flatpickr-calendar.arrowTop:after{border-bottom-color:#fff}.flatpickr-calendar.arrowBottom:before,.flatpickr-calendar.arrowBottom:after{top:100%}.flatpickr-calendar.arrowBottom:before{border-top-color:#e6e6e6}.flatpickr-calendar.arrowBottom:after{border-top-color:#fff}.flatpickr-calendar:focus{outline:0}.flatpickr-wrapper{position:relative;display:inline-block}.flatpickr-months{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex}.flatpickr-months .flatpickr-month{background:transparent;color:rgba(0,0,0,0.9);fill:rgba(0,0,0,0.9);height:34px;line-height:1;text-align:center;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;overflow:hidden;-webkit-box-flex:1;-webkit-flex:1;-ms-flex:1;flex:1}.flatpickr-months .flatpickr-prev-month,.flatpickr-months .flatpickr-next-month{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;text-decoration:none;cursor:pointer;position:absolute;top:0;height:34px;padding:10px;z-index:3;color:rgba(0,0,0,0.9);fill:rgba(0,0,0,0.9)}.flatpickr-months .flatpickr-prev-month.flatpickr-disabled,.flatpickr-months .flatpickr-next-month.flatpickr-disabled{display:none}.flatpickr-months .flatpickr-prev-month i,.flatpickr-months .flatpickr-next-month i{position:relative}.flatpickr-months .flatpickr-prev-month.flatpickr-prev-month,.flatpickr-months .flatpickr-next-month.flatpickr-prev-month{/*\n      /*rtl:begin:ignore*/left:0/*\n      /*rtl:end:ignore*/}/*\n      /*rtl:begin:ignore*/\n/*\n      /*rtl:end:ignore*/\n.flatpickr-months .flatpickr-prev-month.flatpickr-next-month,.flatpickr-months .flatpickr-next-month.flatpickr-next-month{/*\n      /*rtl:begin:ignore*/right:0/*\n      /*rtl:end:ignore*/}/*\n      /*rtl:begin:ignore*/\n/*\n      /*rtl:end:ignore*/\n.flatpickr-months .flatpickr-prev-month:hover,.flatpickr-months .flatpickr-next-month:hover{color:#959ea9}.flatpickr-months .flatpickr-prev-month:hover svg,.flatpickr-months .flatpickr-next-month:hover svg{fill:#f64747}.flatpickr-months .flatpickr-prev-month svg,.flatpickr-months .flatpickr-next-month svg{width:14px;height:14px}.flatpickr-months .flatpickr-prev-month svg path,.flatpickr-months .flatpickr-next-month svg path{-webkit-transition:fill .1s;transition:fill .1s;fill:inherit}.numInputWrapper{position:relative;height:auto}.numInputWrapper input,.numInputWrapper span{display:inline-block}.numInputWrapper input{width:100%}.numInputWrapper input::-ms-clear{display:none}.numInputWrapper input::-webkit-outer-spin-button,.numInputWrapper input::-webkit-inner-spin-button{margin:0;-webkit-appearance:none}.numInputWrapper span{position:absolute;right:0;width:14px;padding:0 4px 0 2px;height:50%;line-height:50%;opacity:0;cursor:pointer;border:1px solid rgba(57,57,57,0.15);-webkit-box-sizing:border-box;box-sizing:border-box}.numInputWrapper span:hover{background:rgba(0,0,0,0.1)}.numInputWrapper span:active{background:rgba(0,0,0,0.2)}.numInputWrapper span:after{display:block;content:"";position:absolute}.numInputWrapper span.arrowUp{top:0;border-bottom:0}.numInputWrapper span.arrowUp:after{border-left:4px solid transparent;border-right:4px solid transparent;border-bottom:4px solid rgba(57,57,57,0.6);top:26%}.numInputWrapper span.arrowDown{top:50%}.numInputWrapper span.arrowDown:after{border-left:4px solid transparent;border-right:4px solid transparent;border-top:4px solid rgba(57,57,57,0.6);top:40%}.numInputWrapper span svg{width:inherit;height:auto}.numInputWrapper span svg path{fill:rgba(0,0,0,0.5)}.numInputWrapper:hover{background:rgba(0,0,0,0.05)}.numInputWrapper:hover span{opacity:1}.flatpickr-current-month{font-size:135%;line-height:inherit;font-weight:300;color:inherit;position:absolute;width:75%;left:12.5%;padding:7.48px 0 0 0;line-height:1;height:34px;display:inline-block;text-align:center;-webkit-transform:translate3d(0,0,0);transform:translate3d(0,0,0)}.flatpickr-current-month span.cur-month{font-family:inherit;font-weight:700;color:inherit;display:inline-block;margin-left:.5ch;padding:0}.flatpickr-current-month span.cur-month:hover{background:rgba(0,0,0,0.05)}.flatpickr-current-month .numInputWrapper{width:6ch;width:7ch\\0;display:inline-block}.flatpickr-current-month .numInputWrapper span.arrowUp:after{border-bottom-color:rgba(0,0,0,0.9)}.flatpickr-current-month .numInputWrapper span.arrowDown:after{border-top-color:rgba(0,0,0,0.9)}.flatpickr-current-month input.cur-year{background:transparent;-webkit-box-sizing:border-box;box-sizing:border-box;color:inherit;cursor:text;padding:0 0 0 .5ch;margin:0;display:inline-block;font-size:inherit;font-family:inherit;font-weight:300;line-height:inherit;height:auto;border:0;border-radius:0;vertical-align:initial;-webkit-appearance:textfield;-moz-appearance:textfield;appearance:textfield}.flatpickr-current-month input.cur-year:focus{outline:0}.flatpickr-current-month input.cur-year[disabled],.flatpickr-current-month input.cur-year[disabled]:hover{font-size:100%;color:rgba(0,0,0,0.5);background:transparent;pointer-events:none}.flatpickr-current-month .flatpickr-monthDropdown-months{appearance:menulist;background:transparent;border:none;border-radius:0;box-sizing:border-box;color:inherit;cursor:pointer;font-size:inherit;font-family:inherit;font-weight:300;height:auto;line-height:inherit;margin:-1px 0 0 0;outline:none;padding:0 0 0 .5ch;position:relative;vertical-align:initial;-webkit-box-sizing:border-box;-webkit-appearance:menulist;-moz-appearance:menulist;width:auto}.flatpickr-current-month .flatpickr-monthDropdown-months:focus,.flatpickr-current-month .flatpickr-monthDropdown-months:active{outline:none}.flatpickr-current-month .flatpickr-monthDropdown-months:hover{background:rgba(0,0,0,0.05)}.flatpickr-current-month .flatpickr-monthDropdown-months .flatpickr-monthDropdown-month{background-color:transparent;outline:none;padding:0}.flatpickr-weekdays{background:transparent;text-align:center;overflow:hidden;width:100%;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;height:28px}.flatpickr-weekdays .flatpickr-weekdaycontainer{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-flex:1;-webkit-flex:1;-ms-flex:1;flex:1}span.flatpickr-weekday{cursor:default;font-size:90%;background:transparent;color:rgba(0,0,0,0.54);line-height:1;margin:0;text-align:center;display:block;-webkit-box-flex:1;-webkit-flex:1;-ms-flex:1;flex:1;font-weight:bolder}.dayContainer,.flatpickr-weeks{padding:1px 0 0 0}.flatpickr-days{position:relative;overflow:hidden;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-align:start;-webkit-align-items:flex-start;-ms-flex-align:start;align-items:flex-start;width:307.875px}.flatpickr-days:focus{outline:0}.dayContainer{padding:0;outline:0;text-align:left;width:307.875px;min-width:307.875px;max-width:307.875px;-webkit-box-sizing:border-box;box-sizing:border-box;display:inline-block;display:-ms-flexbox;display:-webkit-box;display:-webkit-flex;display:flex;-webkit-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-wrap:wrap;-ms-flex-pack:justify;-webkit-justify-content:space-around;justify-content:space-around;-webkit-transform:translate3d(0,0,0);transform:translate3d(0,0,0);opacity:1}.dayContainer + .dayContainer{-webkit-box-shadow:-1px 0 0 #e6e6e6;box-shadow:-1px 0 0 #e6e6e6}.flatpickr-day{background:none;border:1px solid transparent;border-radius:150px;-webkit-box-sizing:border-box;box-sizing:border-box;color:#393939;cursor:pointer;font-weight:400;width:14.2857143%;-webkit-flex-basis:14.2857143%;-ms-flex-preferred-size:14.2857143%;flex-basis:14.2857143%;max-width:39px;height:39px;line-height:39px;margin:0;display:inline-block;position:relative;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;text-align:center}.flatpickr-day.inRange,.flatpickr-day.prevMonthDay.inRange,.flatpickr-day.nextMonthDay.inRange,.flatpickr-day.today.inRange,.flatpickr-day.prevMonthDay.today.inRange,.flatpickr-day.nextMonthDay.today.inRange,.flatpickr-day:hover,.flatpickr-day.prevMonthDay:hover,.flatpickr-day.nextMonthDay:hover,.flatpickr-day:focus,.flatpickr-day.prevMonthDay:focus,.flatpickr-day.nextMonthDay:focus{cursor:pointer;outline:0;background:#e6e6e6;border-color:#e6e6e6}.flatpickr-day.today{border-color:#959ea9}.flatpickr-day.today:hover,.flatpickr-day.today:focus{border-color:#959ea9;background:#959ea9;color:#fff}.flatpickr-day.selected,.flatpickr-day.startRange,.flatpickr-day.endRange,.flatpickr-day.selected.inRange,.flatpickr-day.startRange.inRange,.flatpickr-day.endRange.inRange,.flatpickr-day.selected:focus,.flatpickr-day.startRange:focus,.flatpickr-day.endRange:focus,.flatpickr-day.selected:hover,.flatpickr-day.startRange:hover,.flatpickr-day.endRange:hover,.flatpickr-day.selected.prevMonthDay,.flatpickr-day.startRange.prevMonthDay,.flatpickr-day.endRange.prevMonthDay,.flatpickr-day.selected.nextMonthDay,.flatpickr-day.startRange.nextMonthDay,.flatpickr-day.endRange.nextMonthDay{background:#569ff7;-webkit-box-shadow:none;box-shadow:none;color:#fff;border-color:#569ff7}.flatpickr-day.selected.startRange,.flatpickr-day.startRange.startRange,.flatpickr-day.endRange.startRange{border-radius:50px 0 0 50px}.flatpickr-day.selected.endRange,.flatpickr-day.startRange.endRange,.flatpickr-day.endRange.endRange{border-radius:0 50px 50px 0}.flatpickr-day.selected.startRange + .endRange:not(:nth-child(7n+1)),.flatpickr-day.startRange.startRange + .endRange:not(:nth-child(7n+1)),.flatpickr-day.endRange.startRange + .endRange:not(:nth-child(7n+1)){-webkit-box-shadow:-10px 0 0 #569ff7;box-shadow:-10px 0 0 #569ff7}.flatpickr-day.selected.startRange.endRange,.flatpickr-day.startRange.startRange.endRange,.flatpickr-day.endRange.startRange.endRange{border-radius:50px}.flatpickr-day.inRange{border-radius:0;-webkit-box-shadow:-5px 0 0 #e6e6e6,5px 0 0 #e6e6e6;box-shadow:-5px 0 0 #e6e6e6,5px 0 0 #e6e6e6}.flatpickr-day.flatpickr-disabled,.flatpickr-day.flatpickr-disabled:hover,.flatpickr-day.prevMonthDay,.flatpickr-day.nextMonthDay,.flatpickr-day.notAllowed,.flatpickr-day.notAllowed.prevMonthDay,.flatpickr-day.notAllowed.nextMonthDay{color:rgba(57,57,57,0.3);background:transparent;border-color:transparent;cursor:default}.flatpickr-day.flatpickr-disabled,.flatpickr-day.flatpickr-disabled:hover{cursor:not-allowed;color:rgba(57,57,57,0.1)}.flatpickr-day.week.selected{border-radius:0;-webkit-box-shadow:-5px 0 0 #569ff7,5px 0 0 #569ff7;box-shadow:-5px 0 0 #569ff7,5px 0 0 #569ff7}.flatpickr-day.hidden{visibility:hidden}.rangeMode .flatpickr-day{margin-top:1px}.flatpickr-weekwrapper{float:left}.flatpickr-weekwrapper .flatpickr-weeks{padding:0 12px;-webkit-box-shadow:1px 0 0 #e6e6e6;box-shadow:1px 0 0 #e6e6e6}.flatpickr-weekwrapper .flatpickr-weekday{float:none;width:100%;line-height:28px}.flatpickr-weekwrapper span.flatpickr-day,.flatpickr-weekwrapper span.flatpickr-day:hover{display:block;width:100%;max-width:none;color:rgba(57,57,57,0.3);background:transparent;cursor:default;border:none}.flatpickr-innerContainer{display:block;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-sizing:border-box;box-sizing:border-box;overflow:hidden}.flatpickr-rContainer{display:inline-block;padding:0;-webkit-box-sizing:border-box;box-sizing:border-box}.flatpickr-time{text-align:center;outline:0;display:block;height:0;line-height:40px;max-height:40px;-webkit-box-sizing:border-box;box-sizing:border-box;overflow:hidden;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex}.flatpickr-time:after{content:"";display:table;clear:both}.flatpickr-time .numInputWrapper{-webkit-box-flex:1;-webkit-flex:1;-ms-flex:1;flex:1;width:40%;height:40px;float:left}.flatpickr-time .numInputWrapper span.arrowUp:after{border-bottom-color:#393939}.flatpickr-time .numInputWrapper span.arrowDown:after{border-top-color:#393939}.flatpickr-time.hasSeconds .numInputWrapper{width:26%}.flatpickr-time.time24hr .numInputWrapper{width:49%}.flatpickr-time input{background:transparent;-webkit-box-shadow:none;box-shadow:none;border:0;border-radius:0;text-align:center;margin:0;padding:0;height:inherit;line-height:inherit;color:#393939;font-size:14px;position:relative;-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-appearance:textfield;-moz-appearance:textfield;appearance:textfield}.flatpickr-time input.flatpickr-hour{font-weight:bold}.flatpickr-time input.flatpickr-minute,.flatpickr-time input.flatpickr-second{font-weight:400}.flatpickr-time input:focus{outline:0;border:0}.flatpickr-time .flatpickr-time-separator,.flatpickr-time .flatpickr-am-pm{height:inherit;float:left;line-height:inherit;color:#393939;font-weight:bold;width:2%;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-align-self:center;-ms-flex-item-align:center;align-self:center}.flatpickr-time .flatpickr-am-pm{outline:0;width:18%;cursor:pointer;text-align:center;font-weight:400}.flatpickr-time input:hover,.flatpickr-time .flatpickr-am-pm:hover,.flatpickr-time input:focus,.flatpickr-time .flatpickr-am-pm:focus{background:#eee}.flatpickr-input[readonly]{cursor:pointer}@-webkit-keyframes fpFadeInDown{from{opacity:0;-webkit-transform:translate3d(0,-20px,0);transform:translate3d(0,-20px,0)}to{opacity:1;-webkit-transform:translate3d(0,0,0);transform:translate3d(0,0,0)}}@keyframes fpFadeInDown{from{opacity:0;-webkit-transform:translate3d(0,-20px,0);transform:translate3d(0,-20px,0)}to{opacity:1;-webkit-transform:translate3d(0,0,0);transform:translate3d(0,0,0)}}',"",{version:3,sources:["webpack://./node_modules/flatpickr/dist/flatpickr.min.css"],names:[],mappings:"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",sourcesContent:['.flatpickr-calendar{background:transparent;opacity:0;display:none;text-align:center;visibility:hidden;padding:0;-webkit-animation:none;animation:none;direction:ltr;border:0;font-size:14px;line-height:24px;border-radius:5px;position:absolute;width:307.875px;-webkit-box-sizing:border-box;box-sizing:border-box;-ms-touch-action:manipulation;touch-action:manipulation;background:#fff;-webkit-box-shadow:1px 0 0 #e6e6e6,-1px 0 0 #e6e6e6,0 1px 0 #e6e6e6,0 -1px 0 #e6e6e6,0 3px 13px rgba(0,0,0,0.08);box-shadow:1px 0 0 #e6e6e6,-1px 0 0 #e6e6e6,0 1px 0 #e6e6e6,0 -1px 0 #e6e6e6,0 3px 13px rgba(0,0,0,0.08)}.flatpickr-calendar.open,.flatpickr-calendar.inline{opacity:1;max-height:640px;visibility:visible}.flatpickr-calendar.open{display:inline-block;z-index:99999}.flatpickr-calendar.animate.open{-webkit-animation:fpFadeInDown 300ms cubic-bezier(.23,1,.32,1);animation:fpFadeInDown 300ms cubic-bezier(.23,1,.32,1)}.flatpickr-calendar.inline{display:block;position:relative;top:2px}.flatpickr-calendar.static{position:absolute;top:calc(100% + 2px)}.flatpickr-calendar.static.open{z-index:999;display:block}.flatpickr-calendar.multiMonth .flatpickr-days .dayContainer:nth-child(n+1) .flatpickr-day.inRange:nth-child(7n+7){-webkit-box-shadow:none !important;box-shadow:none !important}.flatpickr-calendar.multiMonth .flatpickr-days .dayContainer:nth-child(n+2) .flatpickr-day.inRange:nth-child(7n+1){-webkit-box-shadow:-2px 0 0 #e6e6e6,5px 0 0 #e6e6e6;box-shadow:-2px 0 0 #e6e6e6,5px 0 0 #e6e6e6}.flatpickr-calendar .hasWeeks .dayContainer,.flatpickr-calendar .hasTime .dayContainer{border-bottom:0;border-bottom-right-radius:0;border-bottom-left-radius:0}.flatpickr-calendar .hasWeeks .dayContainer{border-left:0}.flatpickr-calendar.hasTime .flatpickr-time{height:40px;border-top:1px solid #e6e6e6}.flatpickr-calendar.noCalendar.hasTime .flatpickr-time{height:auto}.flatpickr-calendar:before,.flatpickr-calendar:after{position:absolute;display:block;pointer-events:none;border:solid transparent;content:\'\';height:0;width:0;left:22px}.flatpickr-calendar.rightMost:before,.flatpickr-calendar.arrowRight:before,.flatpickr-calendar.rightMost:after,.flatpickr-calendar.arrowRight:after{left:auto;right:22px}.flatpickr-calendar.arrowCenter:before,.flatpickr-calendar.arrowCenter:after{left:50%;right:50%}.flatpickr-calendar:before{border-width:5px;margin:0 -5px}.flatpickr-calendar:after{border-width:4px;margin:0 -4px}.flatpickr-calendar.arrowTop:before,.flatpickr-calendar.arrowTop:after{bottom:100%}.flatpickr-calendar.arrowTop:before{border-bottom-color:#e6e6e6}.flatpickr-calendar.arrowTop:after{border-bottom-color:#fff}.flatpickr-calendar.arrowBottom:before,.flatpickr-calendar.arrowBottom:after{top:100%}.flatpickr-calendar.arrowBottom:before{border-top-color:#e6e6e6}.flatpickr-calendar.arrowBottom:after{border-top-color:#fff}.flatpickr-calendar:focus{outline:0}.flatpickr-wrapper{position:relative;display:inline-block}.flatpickr-months{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex}.flatpickr-months .flatpickr-month{background:transparent;color:rgba(0,0,0,0.9);fill:rgba(0,0,0,0.9);height:34px;line-height:1;text-align:center;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;overflow:hidden;-webkit-box-flex:1;-webkit-flex:1;-ms-flex:1;flex:1}.flatpickr-months .flatpickr-prev-month,.flatpickr-months .flatpickr-next-month{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;text-decoration:none;cursor:pointer;position:absolute;top:0;height:34px;padding:10px;z-index:3;color:rgba(0,0,0,0.9);fill:rgba(0,0,0,0.9)}.flatpickr-months .flatpickr-prev-month.flatpickr-disabled,.flatpickr-months .flatpickr-next-month.flatpickr-disabled{display:none}.flatpickr-months .flatpickr-prev-month i,.flatpickr-months .flatpickr-next-month i{position:relative}.flatpickr-months .flatpickr-prev-month.flatpickr-prev-month,.flatpickr-months .flatpickr-next-month.flatpickr-prev-month{/*\n      /*rtl:begin:ignore*/left:0/*\n      /*rtl:end:ignore*/}/*\n      /*rtl:begin:ignore*/\n/*\n      /*rtl:end:ignore*/\n.flatpickr-months .flatpickr-prev-month.flatpickr-next-month,.flatpickr-months .flatpickr-next-month.flatpickr-next-month{/*\n      /*rtl:begin:ignore*/right:0/*\n      /*rtl:end:ignore*/}/*\n      /*rtl:begin:ignore*/\n/*\n      /*rtl:end:ignore*/\n.flatpickr-months .flatpickr-prev-month:hover,.flatpickr-months .flatpickr-next-month:hover{color:#959ea9}.flatpickr-months .flatpickr-prev-month:hover svg,.flatpickr-months .flatpickr-next-month:hover svg{fill:#f64747}.flatpickr-months .flatpickr-prev-month svg,.flatpickr-months .flatpickr-next-month svg{width:14px;height:14px}.flatpickr-months .flatpickr-prev-month svg path,.flatpickr-months .flatpickr-next-month svg path{-webkit-transition:fill .1s;transition:fill .1s;fill:inherit}.numInputWrapper{position:relative;height:auto}.numInputWrapper input,.numInputWrapper span{display:inline-block}.numInputWrapper input{width:100%}.numInputWrapper input::-ms-clear{display:none}.numInputWrapper input::-webkit-outer-spin-button,.numInputWrapper input::-webkit-inner-spin-button{margin:0;-webkit-appearance:none}.numInputWrapper span{position:absolute;right:0;width:14px;padding:0 4px 0 2px;height:50%;line-height:50%;opacity:0;cursor:pointer;border:1px solid rgba(57,57,57,0.15);-webkit-box-sizing:border-box;box-sizing:border-box}.numInputWrapper span:hover{background:rgba(0,0,0,0.1)}.numInputWrapper span:active{background:rgba(0,0,0,0.2)}.numInputWrapper span:after{display:block;content:"";position:absolute}.numInputWrapper span.arrowUp{top:0;border-bottom:0}.numInputWrapper span.arrowUp:after{border-left:4px solid transparent;border-right:4px solid transparent;border-bottom:4px solid rgba(57,57,57,0.6);top:26%}.numInputWrapper span.arrowDown{top:50%}.numInputWrapper span.arrowDown:after{border-left:4px solid transparent;border-right:4px solid transparent;border-top:4px solid rgba(57,57,57,0.6);top:40%}.numInputWrapper span svg{width:inherit;height:auto}.numInputWrapper span svg path{fill:rgba(0,0,0,0.5)}.numInputWrapper:hover{background:rgba(0,0,0,0.05)}.numInputWrapper:hover span{opacity:1}.flatpickr-current-month{font-size:135%;line-height:inherit;font-weight:300;color:inherit;position:absolute;width:75%;left:12.5%;padding:7.48px 0 0 0;line-height:1;height:34px;display:inline-block;text-align:center;-webkit-transform:translate3d(0,0,0);transform:translate3d(0,0,0)}.flatpickr-current-month span.cur-month{font-family:inherit;font-weight:700;color:inherit;display:inline-block;margin-left:.5ch;padding:0}.flatpickr-current-month span.cur-month:hover{background:rgba(0,0,0,0.05)}.flatpickr-current-month .numInputWrapper{width:6ch;width:7ch\\0;display:inline-block}.flatpickr-current-month .numInputWrapper span.arrowUp:after{border-bottom-color:rgba(0,0,0,0.9)}.flatpickr-current-month .numInputWrapper span.arrowDown:after{border-top-color:rgba(0,0,0,0.9)}.flatpickr-current-month input.cur-year{background:transparent;-webkit-box-sizing:border-box;box-sizing:border-box;color:inherit;cursor:text;padding:0 0 0 .5ch;margin:0;display:inline-block;font-size:inherit;font-family:inherit;font-weight:300;line-height:inherit;height:auto;border:0;border-radius:0;vertical-align:initial;-webkit-appearance:textfield;-moz-appearance:textfield;appearance:textfield}.flatpickr-current-month input.cur-year:focus{outline:0}.flatpickr-current-month input.cur-year[disabled],.flatpickr-current-month input.cur-year[disabled]:hover{font-size:100%;color:rgba(0,0,0,0.5);background:transparent;pointer-events:none}.flatpickr-current-month .flatpickr-monthDropdown-months{appearance:menulist;background:transparent;border:none;border-radius:0;box-sizing:border-box;color:inherit;cursor:pointer;font-size:inherit;font-family:inherit;font-weight:300;height:auto;line-height:inherit;margin:-1px 0 0 0;outline:none;padding:0 0 0 .5ch;position:relative;vertical-align:initial;-webkit-box-sizing:border-box;-webkit-appearance:menulist;-moz-appearance:menulist;width:auto}.flatpickr-current-month .flatpickr-monthDropdown-months:focus,.flatpickr-current-month .flatpickr-monthDropdown-months:active{outline:none}.flatpickr-current-month .flatpickr-monthDropdown-months:hover{background:rgba(0,0,0,0.05)}.flatpickr-current-month .flatpickr-monthDropdown-months .flatpickr-monthDropdown-month{background-color:transparent;outline:none;padding:0}.flatpickr-weekdays{background:transparent;text-align:center;overflow:hidden;width:100%;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;height:28px}.flatpickr-weekdays .flatpickr-weekdaycontainer{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-flex:1;-webkit-flex:1;-ms-flex:1;flex:1}span.flatpickr-weekday{cursor:default;font-size:90%;background:transparent;color:rgba(0,0,0,0.54);line-height:1;margin:0;text-align:center;display:block;-webkit-box-flex:1;-webkit-flex:1;-ms-flex:1;flex:1;font-weight:bolder}.dayContainer,.flatpickr-weeks{padding:1px 0 0 0}.flatpickr-days{position:relative;overflow:hidden;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-align:start;-webkit-align-items:flex-start;-ms-flex-align:start;align-items:flex-start;width:307.875px}.flatpickr-days:focus{outline:0}.dayContainer{padding:0;outline:0;text-align:left;width:307.875px;min-width:307.875px;max-width:307.875px;-webkit-box-sizing:border-box;box-sizing:border-box;display:inline-block;display:-ms-flexbox;display:-webkit-box;display:-webkit-flex;display:flex;-webkit-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-wrap:wrap;-ms-flex-pack:justify;-webkit-justify-content:space-around;justify-content:space-around;-webkit-transform:translate3d(0,0,0);transform:translate3d(0,0,0);opacity:1}.dayContainer + .dayContainer{-webkit-box-shadow:-1px 0 0 #e6e6e6;box-shadow:-1px 0 0 #e6e6e6}.flatpickr-day{background:none;border:1px solid transparent;border-radius:150px;-webkit-box-sizing:border-box;box-sizing:border-box;color:#393939;cursor:pointer;font-weight:400;width:14.2857143%;-webkit-flex-basis:14.2857143%;-ms-flex-preferred-size:14.2857143%;flex-basis:14.2857143%;max-width:39px;height:39px;line-height:39px;margin:0;display:inline-block;position:relative;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;text-align:center}.flatpickr-day.inRange,.flatpickr-day.prevMonthDay.inRange,.flatpickr-day.nextMonthDay.inRange,.flatpickr-day.today.inRange,.flatpickr-day.prevMonthDay.today.inRange,.flatpickr-day.nextMonthDay.today.inRange,.flatpickr-day:hover,.flatpickr-day.prevMonthDay:hover,.flatpickr-day.nextMonthDay:hover,.flatpickr-day:focus,.flatpickr-day.prevMonthDay:focus,.flatpickr-day.nextMonthDay:focus{cursor:pointer;outline:0;background:#e6e6e6;border-color:#e6e6e6}.flatpickr-day.today{border-color:#959ea9}.flatpickr-day.today:hover,.flatpickr-day.today:focus{border-color:#959ea9;background:#959ea9;color:#fff}.flatpickr-day.selected,.flatpickr-day.startRange,.flatpickr-day.endRange,.flatpickr-day.selected.inRange,.flatpickr-day.startRange.inRange,.flatpickr-day.endRange.inRange,.flatpickr-day.selected:focus,.flatpickr-day.startRange:focus,.flatpickr-day.endRange:focus,.flatpickr-day.selected:hover,.flatpickr-day.startRange:hover,.flatpickr-day.endRange:hover,.flatpickr-day.selected.prevMonthDay,.flatpickr-day.startRange.prevMonthDay,.flatpickr-day.endRange.prevMonthDay,.flatpickr-day.selected.nextMonthDay,.flatpickr-day.startRange.nextMonthDay,.flatpickr-day.endRange.nextMonthDay{background:#569ff7;-webkit-box-shadow:none;box-shadow:none;color:#fff;border-color:#569ff7}.flatpickr-day.selected.startRange,.flatpickr-day.startRange.startRange,.flatpickr-day.endRange.startRange{border-radius:50px 0 0 50px}.flatpickr-day.selected.endRange,.flatpickr-day.startRange.endRange,.flatpickr-day.endRange.endRange{border-radius:0 50px 50px 0}.flatpickr-day.selected.startRange + .endRange:not(:nth-child(7n+1)),.flatpickr-day.startRange.startRange + .endRange:not(:nth-child(7n+1)),.flatpickr-day.endRange.startRange + .endRange:not(:nth-child(7n+1)){-webkit-box-shadow:-10px 0 0 #569ff7;box-shadow:-10px 0 0 #569ff7}.flatpickr-day.selected.startRange.endRange,.flatpickr-day.startRange.startRange.endRange,.flatpickr-day.endRange.startRange.endRange{border-radius:50px}.flatpickr-day.inRange{border-radius:0;-webkit-box-shadow:-5px 0 0 #e6e6e6,5px 0 0 #e6e6e6;box-shadow:-5px 0 0 #e6e6e6,5px 0 0 #e6e6e6}.flatpickr-day.flatpickr-disabled,.flatpickr-day.flatpickr-disabled:hover,.flatpickr-day.prevMonthDay,.flatpickr-day.nextMonthDay,.flatpickr-day.notAllowed,.flatpickr-day.notAllowed.prevMonthDay,.flatpickr-day.notAllowed.nextMonthDay{color:rgba(57,57,57,0.3);background:transparent;border-color:transparent;cursor:default}.flatpickr-day.flatpickr-disabled,.flatpickr-day.flatpickr-disabled:hover{cursor:not-allowed;color:rgba(57,57,57,0.1)}.flatpickr-day.week.selected{border-radius:0;-webkit-box-shadow:-5px 0 0 #569ff7,5px 0 0 #569ff7;box-shadow:-5px 0 0 #569ff7,5px 0 0 #569ff7}.flatpickr-day.hidden{visibility:hidden}.rangeMode .flatpickr-day{margin-top:1px}.flatpickr-weekwrapper{float:left}.flatpickr-weekwrapper .flatpickr-weeks{padding:0 12px;-webkit-box-shadow:1px 0 0 #e6e6e6;box-shadow:1px 0 0 #e6e6e6}.flatpickr-weekwrapper .flatpickr-weekday{float:none;width:100%;line-height:28px}.flatpickr-weekwrapper span.flatpickr-day,.flatpickr-weekwrapper span.flatpickr-day:hover{display:block;width:100%;max-width:none;color:rgba(57,57,57,0.3);background:transparent;cursor:default;border:none}.flatpickr-innerContainer{display:block;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-sizing:border-box;box-sizing:border-box;overflow:hidden}.flatpickr-rContainer{display:inline-block;padding:0;-webkit-box-sizing:border-box;box-sizing:border-box}.flatpickr-time{text-align:center;outline:0;display:block;height:0;line-height:40px;max-height:40px;-webkit-box-sizing:border-box;box-sizing:border-box;overflow:hidden;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex}.flatpickr-time:after{content:"";display:table;clear:both}.flatpickr-time .numInputWrapper{-webkit-box-flex:1;-webkit-flex:1;-ms-flex:1;flex:1;width:40%;height:40px;float:left}.flatpickr-time .numInputWrapper span.arrowUp:after{border-bottom-color:#393939}.flatpickr-time .numInputWrapper span.arrowDown:after{border-top-color:#393939}.flatpickr-time.hasSeconds .numInputWrapper{width:26%}.flatpickr-time.time24hr .numInputWrapper{width:49%}.flatpickr-time input{background:transparent;-webkit-box-shadow:none;box-shadow:none;border:0;border-radius:0;text-align:center;margin:0;padding:0;height:inherit;line-height:inherit;color:#393939;font-size:14px;position:relative;-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-appearance:textfield;-moz-appearance:textfield;appearance:textfield}.flatpickr-time input.flatpickr-hour{font-weight:bold}.flatpickr-time input.flatpickr-minute,.flatpickr-time input.flatpickr-second{font-weight:400}.flatpickr-time input:focus{outline:0;border:0}.flatpickr-time .flatpickr-time-separator,.flatpickr-time .flatpickr-am-pm{height:inherit;float:left;line-height:inherit;color:#393939;font-weight:bold;width:2%;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-align-self:center;-ms-flex-item-align:center;align-self:center}.flatpickr-time .flatpickr-am-pm{outline:0;width:18%;cursor:pointer;text-align:center;font-weight:400}.flatpickr-time input:hover,.flatpickr-time .flatpickr-am-pm:hover,.flatpickr-time input:focus,.flatpickr-time .flatpickr-am-pm:focus{background:#eee}.flatpickr-input[readonly]{cursor:pointer}@-webkit-keyframes fpFadeInDown{from{opacity:0;-webkit-transform:translate3d(0,-20px,0);transform:translate3d(0,-20px,0)}to{opacity:1;-webkit-transform:translate3d(0,0,0);transform:translate3d(0,0,0)}}@keyframes fpFadeInDown{from{opacity:0;-webkit-transform:translate3d(0,-20px,0);transform:translate3d(0,-20px,0)}to{opacity:1;-webkit-transform:translate3d(0,0,0);transform:translate3d(0,0,0)}}'],sourceRoot:""}]);const l=o},990:()=>{"use strict";"function"!=typeof Object.assign&&(Object.assign=function(e){for(var t=[],n=1;n<arguments.length;n++)t[n-1]=arguments[n];if(!e)throw TypeError("Cannot convert undefined or null to object");for(var a=function(t){t&&Object.keys(t).forEach((function(n){return e[n]=t[n]}))},i=0,r=t;i<r.length;i++)a(r[i]);return e})}},t={};function n(a){var i=t[a];if(void 0!==i)return i.exports;var r=t[a]={id:a,exports:{}};return e[a].call(r.exports,r,r.exports,n),r.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var a in t)n.o(t,a)&&!n.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.nc=void 0,(()=>{"use strict";var e=n(72),t=n.n(e),a=n(825),i=n.n(a),r=n(659),o=n.n(r),l=n(56),s=n.n(l),c=n(540),d=n.n(c),p=n(113),A=n.n(p),f=n(362),u={};u.styleTagTransform=A(),u.setAttributes=s(),u.insert=o().bind(null,"head"),u.domAPI=i(),u.insertStyleElement=d(),t()(f.A,u),f.A&&f.A.locals&&f.A.locals;const h="shake";class m{#e=null;constructor(){if(new.target===m)throw new Error("Can't instantiate AbstractView, only concrete one.")}get element(){return this.#e||(this.#e=function(e){const t=document.createElement("div");return t.innerHTML=e,t.firstElementChild}(this.template)),this.#e}get template(){throw new Error("Abstract method not implemented: get template")}removeElement(){this.#e=null}shake(e){this.element.classList.add(h),setTimeout((()=>{this.element.classList.remove(h),e?.()}),600)}}function C(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"beforeend";if(!(e instanceof m))throw new Error("Can render only components");if(null===t)throw new Error("Container element doesn't exist");t.insertAdjacentElement(n,e.element)}function g(e,t){if(!(e instanceof m&&t instanceof m))throw new Error("Can replace only components");const n=e.element,a=t.element,i=a.parentElement;if(null===i)throw new Error("Parent element doesn't exist");i.replaceChild(n,a)}function b(e){if(null!==e){if(!(e instanceof m))throw new Error("Can remove only components");e.element.remove(),e.removeElement()}}class k{constructor(e,t,n,a,i,r,o,l){this.id=e,this.type=t,this.destination=n,this.dateFrom=a,this.dateTo=i,this.basePrice=r,this.offers=o,this.isFavorite=l}}const v=[{id:"d1",name:"Amsterdam",description:"Amsterdam, capital of the Netherlands",pictures:[]},{id:"d2",name:"Chamonix",description:"Chamonix, a resort area near Mont Blanc",pictures:[]},{id:"d3",name:"Geneva",description:"Geneva, Swiss city on Lake Geneva",pictures:[]}];class y{constructor(){this.destinations=v,this.offers={taxi:[{id:"taxi1",title:"Order Uber",price:20}],flight:[{id:"flight1",title:"Add luggage",price:50},{id:"flight2",title:"Switch to comfort",price:80}],drive:[{id:"drive1",title:"Rent a car",price:200}],"check-in":[{id:"checkin1",title:"Add breakfast",price:50}]},this.points=(this.destinations,[new k("p1","taxi","d1",new Date("2024-03-18T10:30:00"),new Date("2024-03-18T11:00:00"),20,["taxi1"],!1),new k("p2","flight","d2",new Date("2024-03-18T12:25:00"),new Date("2024-03-18T13:35:00"),160,["flight1","flight2"],!1),new k("p3","drive","d2",new Date("2024-03-18T14:30:00"),new Date("2024-03-18T16:05:00"),160,["drive1"],!1),new k("p4","check-in","d2",new Date("2024-03-18T16:20:00"),new Date("2024-03-18T17:00:00"),600,["checkin1"],!1)])}getDestinations(){return this.destinations}getOffers(){return this.offers}getPoints(){return this.points}getPointById(e){return this.points.find((t=>t.id===e))}updatePoint(e){const t=this.points.findIndex((t=>t.id===e.id));if(-1===t)throw new Error(`Can't update unexisting point with id: ${e.id}`);this.points[t]=e}}class w extends m{#t=[];constructor(e){super(),this.#t=e}get template(){return`\n      <form class="trip-filters">\n        ${this.#t.map((e=>{let{type:t,name:n,isDisabled:a,isChecked:i}=e;return`\n          <div class="trip-filters__filter">\n            <input\n              id="filter-${t}"\n              class="trip-filters__filter-input visually-hidden"\n              type="radio"\n              name="trip-filter"\n              value="${t}"\n              ${i?"checked":""}\n              ${a?"disabled":""}\n            >\n            <label class="trip-filters__filter-label" for="filter-${t}">${n}</label>\n          </div>\n        `})).join("")}\n        <button class="visually-hidden" type="submit">Accept filter</button>\n      </form>\n    `}}class x extends m{#n=[];#a=null;constructor(e,t){super(),this.#n=e,this.#a=t,this.element.addEventListener("change",this.#i)}get template(){return`\n      <div class="trip-sort">\n        ${this.#n.map((e=>{let{type:t,name:n,isChecked:a}=e;return`\n          <div class="trip-sort__item">\n            <input id="sort-${t}" type="radio" name="trip-sort" value="${t}" ${a?"checked":""}>\n            <label for="sort-${t}">${n}</label>\n          </div>\n        `})).join("")}\n      </div>\n    `}#i=e=>{"trip-sort"===e.target.name&&this.#a(e.target.value)}}class B extends m{get template(){return'\n      <p class="trip-events__msg">\n        Click New Event to create your first point\n      </p>\n    '}}var D=n(353),M=n.n(D);function _(e){return M()(e).format("HH:mm")}class S extends m{#r=null;#o=null;#l=null;#s=null;#c=null;constructor(e,t,n,a,i){super(),this.#r=e,this.#o=t.find((t=>t.id===e.destination)),this.#l=n[e.type]?.filter((t=>e.offers.includes(t.id)))||[],this.#s=a,this.#c=i,this.element.querySelector(".event__rollup-btn")?.addEventListener("click",this.#d),this.element.querySelector(".event__favorite-btn")?.addEventListener("click",this.#p)}get template(){const{basePrice:e,dateFrom:t,dateTo:n,type:a,isFavorite:i}=this.#r,r=this.#o?this.#o.name:"",o=this.#l.length>0?this.#l.map((e=>`\n      <li class="event__offer">\n        <span class="event__offer-title">${e.title}</span>\n        &plus;&euro;&nbsp;<span class="event__offer-price">${e.price}</span>\n      </li>\n    `)).join(""):"";return`\n      <li class="trip-events__item">\n        <div class="event">\n          <time class="event__date" datetime="${M()(t).format("YYYY-MM-DD")}">${M()(t).format("MMM D")}</time>\n          <div class="event__type">\n            <img class="event__type-icon" width="42" height="42" src="img/icons/${a}.png" alt="Event type icon">\n          </div>\n          <h3 class="event__title">${a} ${r}</h3>\n          <div class="event__schedule">\n            <p class="event__time">\n              <time class="event__start-time" datetime="${M()(t).toISOString()}">${_(t)}</time>\n              &mdash;\n              <time class="event__end-time" datetime="${M()(n).toISOString()}">${_(n)}</time>\n            </p>\n            <p class="event__duration">${function(e,t){const n=M()(t).diff(M()(e)),a=Math.floor(n/6e4),i=Math.floor(a/60),r=a%60,o=i%24,l=Math.floor(i/24);return a<60?`${a}M`:i<24?`${o.toString().padStart(2,"0")}H ${r.toString().padStart(2,"0")}M`:`${l.toString().padStart(2,"0")}D ${o.toString().padStart(2,"0")}H ${r.toString().padStart(2,"0")}M`}(t,n)}</p>\n          </div>\n          <p class="event__price">\n            &euro;&nbsp;<span class="event__price-value">${e}</span>\n          </p>\n          <h4 class="visually-hidden">Offers:</h4>\n          <ul class="event__selected-offers">\n            ${o}\n          </ul>\n          <button class="event__favorite-btn ${i?"event__favorite-btn--active":""}" type="button">\n            <span class="visually-hidden">Add to favorite</span>\n            <svg class="event__favorite-icon" width="28" height="28" viewBox="0 0 28 28">\n              <path d="M14 21l-6.16 3.24 1.18-6.88L3 12.74l6.9-1L14 5l2.1 6.74 6.9 1-5 4.62 1.18 6.88z"/>\n            </svg>\n          </button>\n          <button class="event__rollup-btn" type="button">\n            <span class="visually-hidden">Open event</span>\n          </button>\n        </div>\n      </li>\n    `}#d=e=>{e.preventDefault(),this.#s()};#p=e=>{e.preventDefault();const t={...this.#r,isFavorite:!this.#r.isFavorite};this.#c(t)}}class E extends m{_state={};updateElement(e){e&&(this._setState(e),this.#A())}_restoreHandlers(){throw new Error("Abstract method not implemented: restoreHandlers")}_setState(e){this._state=structuredClone({...this._state,...e})}#A(){const e=this.element,t=e.parentElement;this.removeElement();const n=this.element;t.replaceChild(n,e),this._restoreHandlers()}}var T=["onChange","onClose","onDayCreate","onDestroy","onKeyDown","onMonthChange","onOpen","onParseConfig","onReady","onValueUpdate","onYearChange","onPreCalendarPosition"],I={_disable:[],allowInput:!1,allowInvalidPreload:!1,altFormat:"F j, Y",altInput:!1,altInputClass:"form-control input",animate:"object"==typeof window&&-1===window.navigator.userAgent.indexOf("MSIE"),ariaDateFormat:"F j, Y",autoFillDefaultTime:!0,clickOpens:!0,closeOnSelect:!0,conjunction:", ",dateFormat:"Y-m-d",defaultHour:12,defaultMinute:0,defaultSeconds:0,disable:[],disableMobile:!1,enableSeconds:!1,enableTime:!1,errorHandler:function(e){return"undefined"!=typeof console&&console.warn(e)},getWeek:function(e){var t=new Date(e.getTime());t.setHours(0,0,0,0),t.setDate(t.getDate()+3-(t.getDay()+6)%7);var n=new Date(t.getFullYear(),0,4);return 1+Math.round(((t.getTime()-n.getTime())/864e5-3+(n.getDay()+6)%7)/7)},hourIncrement:1,ignoredFocusElements:[],inline:!1,locale:"default",minuteIncrement:5,mode:"single",monthSelectorType:"dropdown",nextArrow:"<svg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' viewBox='0 0 17 17'><g></g><path d='M13.207 8.472l-7.854 7.854-0.707-0.707 7.146-7.146-7.146-7.148 0.707-0.707 7.854 7.854z' /></svg>",noCalendar:!1,now:new Date,onChange:[],onClose:[],onDayCreate:[],onDestroy:[],onKeyDown:[],onMonthChange:[],onOpen:[],onParseConfig:[],onReady:[],onValueUpdate:[],onYearChange:[],onPreCalendarPosition:[],plugins:[],position:"auto",positionElement:void 0,prevArrow:"<svg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' viewBox='0 0 17 17'><g></g><path d='M5.207 8.471l7.146 7.147-0.707 0.707-7.853-7.854 7.854-7.853 0.707 0.707-7.147 7.146z' /></svg>",shorthandCurrentMonth:!1,showMonths:1,static:!1,time_24hr:!1,weekNumbers:!1,wrap:!1},F={weekdays:{shorthand:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],longhand:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"]},months:{shorthand:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],longhand:["January","February","March","April","May","June","July","August","September","October","November","December"]},daysInMonth:[31,28,31,30,31,30,31,31,30,31,30,31],firstDayOfWeek:0,ordinal:function(e){var t=e%100;if(t>3&&t<21)return"th";switch(t%10){case 1:return"st";case 2:return"nd";case 3:return"rd";default:return"th"}},rangeSeparator:" to ",weekAbbreviation:"Wk",scrollTitle:"Scroll to increment",toggleTitle:"Click to toggle",amPM:["AM","PM"],yearAriaLabel:"Year",monthAriaLabel:"Month",hourAriaLabel:"Hour",minuteAriaLabel:"Minute",time_24hr:!1};const O=F;var H=function(e,t){return void 0===t&&(t=2),("000"+e).slice(-1*t)},Y=function(e){return!0===e?1:0};function $(e,t){var n;return function(){var a=this,i=arguments;clearTimeout(n),n=setTimeout((function(){return e.apply(a,i)}),t)}}var R=function(e){return e instanceof Array?e:[e]};function P(e,t,n){if(!0===n)return e.classList.add(t);e.classList.remove(t)}function W(e,t,n){var a=window.document.createElement(e);return t=t||"",n=n||"",a.className=t,void 0!==n&&(a.textContent=n),a}function N(e){for(;e.firstChild;)e.removeChild(e.firstChild)}function L(e,t){return t(e)?e:e.parentNode?L(e.parentNode,t):void 0}function j(e,t){var n=W("div","numInputWrapper"),a=W("input","numInput "+e),i=W("span","arrowUp"),r=W("span","arrowDown");if(-1===navigator.userAgent.indexOf("MSIE 9.0")?a.type="number":(a.type="text",a.pattern="\\d*"),void 0!==t)for(var o in t)a.setAttribute(o,t[o]);return n.appendChild(a),n.appendChild(i),n.appendChild(r),n}function z(e){try{return"function"==typeof e.composedPath?e.composedPath()[0]:e.target}catch(t){return e.target}}var U=function(){},q=function(e,t,n){return n.months[t?"shorthand":"longhand"][e]},Q={D:U,F:function(e,t,n){e.setMonth(n.months.longhand.indexOf(t))},G:function(e,t){e.setHours((e.getHours()>=12?12:0)+parseFloat(t))},H:function(e,t){e.setHours(parseFloat(t))},J:function(e,t){e.setDate(parseFloat(t))},K:function(e,t,n){e.setHours(e.getHours()%12+12*Y(new RegExp(n.amPM[1],"i").test(t)))},M:function(e,t,n){e.setMonth(n.months.shorthand.indexOf(t))},S:function(e,t){e.setSeconds(parseFloat(t))},U:function(e,t){return new Date(1e3*parseFloat(t))},W:function(e,t,n){var a=parseInt(t),i=new Date(e.getFullYear(),0,2+7*(a-1),0,0,0,0);return i.setDate(i.getDate()-i.getDay()+n.firstDayOfWeek),i},Y:function(e,t){e.setFullYear(parseFloat(t))},Z:function(e,t){return new Date(t)},d:function(e,t){e.setDate(parseFloat(t))},h:function(e,t){e.setHours((e.getHours()>=12?12:0)+parseFloat(t))},i:function(e,t){e.setMinutes(parseFloat(t))},j:function(e,t){e.setDate(parseFloat(t))},l:U,m:function(e,t){e.setMonth(parseFloat(t)-1)},n:function(e,t){e.setMonth(parseFloat(t)-1)},s:function(e,t){e.setSeconds(parseFloat(t))},u:function(e,t){return new Date(parseFloat(t))},w:U,y:function(e,t){e.setFullYear(2e3+parseFloat(t))}},G={D:"",F:"",G:"(\\d\\d|\\d)",H:"(\\d\\d|\\d)",J:"(\\d\\d|\\d)\\w+",K:"",M:"",S:"(\\d\\d|\\d)",U:"(.+)",W:"(\\d\\d|\\d)",Y:"(\\d{4})",Z:"(.+)",d:"(\\d\\d|\\d)",h:"(\\d\\d|\\d)",i:"(\\d\\d|\\d)",j:"(\\d\\d|\\d)",l:"",m:"(\\d\\d|\\d)",n:"(\\d\\d|\\d)",s:"(\\d\\d|\\d)",u:"(.+)",w:"(\\d\\d|\\d)",y:"(\\d{2})"},K={Z:function(e){return e.toISOString()},D:function(e,t,n){return t.weekdays.shorthand[K.w(e,t,n)]},F:function(e,t,n){return q(K.n(e,t,n)-1,!1,t)},G:function(e,t,n){return H(K.h(e,t,n))},H:function(e){return H(e.getHours())},J:function(e,t){return void 0!==t.ordinal?e.getDate()+t.ordinal(e.getDate()):e.getDate()},K:function(e,t){return t.amPM[Y(e.getHours()>11)]},M:function(e,t){return q(e.getMonth(),!0,t)},S:function(e){return H(e.getSeconds())},U:function(e){return e.getTime()/1e3},W:function(e,t,n){return n.getWeek(e)},Y:function(e){return H(e.getFullYear(),4)},d:function(e){return H(e.getDate())},h:function(e){return e.getHours()%12?e.getHours()%12:12},i:function(e){return H(e.getMinutes())},j:function(e){return e.getDate()},l:function(e,t){return t.weekdays.longhand[e.getDay()]},m:function(e){return H(e.getMonth()+1)},n:function(e){return e.getMonth()+1},s:function(e){return e.getSeconds()},u:function(e){return e.getTime()},w:function(e){return e.getDay()},y:function(e){return String(e.getFullYear()).substring(2)}},J=function(e){var t=e.config,n=void 0===t?I:t,a=e.l10n,i=void 0===a?F:a,r=e.isMobile,o=void 0!==r&&r;return function(e,t,a){var r=a||i;return void 0===n.formatDate||o?t.split("").map((function(t,a,i){return K[t]&&"\\"!==i[a-1]?K[t](e,r,n):"\\"!==t?t:""})).join(""):n.formatDate(e,t,r)}},V=function(e){var t=e.config,n=void 0===t?I:t,a=e.l10n,i=void 0===a?F:a;return function(e,t,a,r){if(0===e||e){var o,l=r||i,s=e;if(e instanceof Date)o=new Date(e.getTime());else if("string"!=typeof e&&void 0!==e.toFixed)o=new Date(e);else if("string"==typeof e){var c=t||(n||I).dateFormat,d=String(e).trim();if("today"===d)o=new Date,a=!0;else if(n&&n.parseDate)o=n.parseDate(e,c);else if(/Z$/.test(d)||/GMT$/.test(d))o=new Date(e);else{for(var p=void 0,A=[],f=0,u=0,h="";f<c.length;f++){var m=c[f],C="\\"===m,g="\\"===c[f-1]||C;if(G[m]&&!g){h+=G[m];var b=new RegExp(h).exec(e);b&&(p=!0)&&A["Y"!==m?"push":"unshift"]({fn:Q[m],val:b[++u]})}else C||(h+=".")}o=n&&n.noCalendar?new Date((new Date).setHours(0,0,0,0)):new Date((new Date).getFullYear(),0,1,0,0,0,0),A.forEach((function(e){var t=e.fn,n=e.val;return o=t(o,n,l)||o})),o=p?o:void 0}}if(o instanceof Date&&!isNaN(o.getTime()))return!0===a&&o.setHours(0,0,0,0),o;n.errorHandler(new Error("Invalid date provided: "+s))}}};function X(e,t,n){return void 0===n&&(n=!0),!1!==n?new Date(e.getTime()).setHours(0,0,0,0)-new Date(t.getTime()).setHours(0,0,0,0):e.getTime()-t.getTime()}var Z=function(e,t,n){return 3600*e+60*t+n};function ee(e){var t=e.defaultHour,n=e.defaultMinute,a=e.defaultSeconds;if(void 0!==e.minDate){var i=e.minDate.getHours(),r=e.minDate.getMinutes(),o=e.minDate.getSeconds();t<i&&(t=i),t===i&&n<r&&(n=r),t===i&&n===r&&a<o&&(a=e.minDate.getSeconds())}if(void 0!==e.maxDate){var l=e.maxDate.getHours(),s=e.maxDate.getMinutes();(t=Math.min(t,l))===l&&(n=Math.min(s,n)),t===l&&n===s&&(a=e.maxDate.getSeconds())}return{hours:t,minutes:n,seconds:a}}n(990);var te=function(){return te=Object.assign||function(e){for(var t,n=1,a=arguments.length;n<a;n++)for(var i in t=arguments[n])Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i]);return e},te.apply(this,arguments)},ne=function(){for(var e=0,t=0,n=arguments.length;t<n;t++)e+=arguments[t].length;var a=Array(e),i=0;for(t=0;t<n;t++)for(var r=arguments[t],o=0,l=r.length;o<l;o++,i++)a[i]=r[o];return a};function ae(e,t){var n={config:te(te({},I),re.defaultConfig),l10n:O};function a(){var e;return(null===(e=n.calendarContainer)||void 0===e?void 0:e.getRootNode()).activeElement||document.activeElement}function i(e){return e.bind(n)}function r(){var e=n.config;!1===e.weekNumbers&&1===e.showMonths||!0!==e.noCalendar&&window.requestAnimationFrame((function(){if(void 0!==n.calendarContainer&&(n.calendarContainer.style.visibility="hidden",n.calendarContainer.style.display="block"),void 0!==n.daysContainer){var t=(n.days.offsetWidth+1)*e.showMonths;n.daysContainer.style.width=t+"px",n.calendarContainer.style.width=t+(void 0!==n.weekWrapper?n.weekWrapper.offsetWidth:0)+"px",n.calendarContainer.style.removeProperty("visibility"),n.calendarContainer.style.removeProperty("display")}}))}function o(e){if(0===n.selectedDates.length){var t=void 0===n.config.minDate||X(new Date,n.config.minDate)>=0?new Date:new Date(n.config.minDate.getTime()),a=ee(n.config);t.setHours(a.hours,a.minutes,a.seconds,t.getMilliseconds()),n.selectedDates=[t],n.latestSelectedDateObj=t}void 0!==e&&"blur"!==e.type&&function(e){e.preventDefault();var t="keydown"===e.type,a=z(e),i=a;void 0!==n.amPM&&a===n.amPM&&(n.amPM.textContent=n.l10n.amPM[Y(n.amPM.textContent===n.l10n.amPM[0])]);var r=parseFloat(i.getAttribute("min")),o=parseFloat(i.getAttribute("max")),l=parseFloat(i.getAttribute("step")),s=parseInt(i.value,10),c=s+l*(e.delta||(t?38===e.which?1:-1:0));if(void 0!==i.value&&2===i.value.length){var d=i===n.hourElement,p=i===n.minuteElement;c<r?(c=o+c+Y(!d)+(Y(d)&&Y(!n.amPM)),p&&h(void 0,-1,n.hourElement)):c>o&&(c=i===n.hourElement?c-o-Y(!n.amPM):r,p&&h(void 0,1,n.hourElement)),n.amPM&&d&&(1===l?c+s===23:Math.abs(c-s)>l)&&(n.amPM.textContent=n.l10n.amPM[Y(n.amPM.textContent===n.l10n.amPM[0])]),i.value=H(c)}}(e);var i=n._input.value;l(),ye(),n._input.value!==i&&n._debouncedChange()}function l(){if(void 0!==n.hourElement&&void 0!==n.minuteElement){var e,t,a=(parseInt(n.hourElement.value.slice(-2),10)||0)%24,i=(parseInt(n.minuteElement.value,10)||0)%60,r=void 0!==n.secondElement?(parseInt(n.secondElement.value,10)||0)%60:0;void 0!==n.amPM&&(e=a,t=n.amPM.textContent,a=e%12+12*Y(t===n.l10n.amPM[1]));var o=void 0!==n.config.minTime||n.config.minDate&&n.minDateHasTime&&n.latestSelectedDateObj&&0===X(n.latestSelectedDateObj,n.config.minDate,!0),l=void 0!==n.config.maxTime||n.config.maxDate&&n.maxDateHasTime&&n.latestSelectedDateObj&&0===X(n.latestSelectedDateObj,n.config.maxDate,!0);if(void 0!==n.config.maxTime&&void 0!==n.config.minTime&&n.config.minTime>n.config.maxTime){var s=Z(n.config.minTime.getHours(),n.config.minTime.getMinutes(),n.config.minTime.getSeconds()),d=Z(n.config.maxTime.getHours(),n.config.maxTime.getMinutes(),n.config.maxTime.getSeconds()),p=Z(a,i,r);if(p>d&&p<s){var A=function(e){var t=Math.floor(e/3600),n=(e-3600*t)/60;return[t,n,e-3600*t-60*n]}(s);a=A[0],i=A[1],r=A[2]}}else{if(l){var f=void 0!==n.config.maxTime?n.config.maxTime:n.config.maxDate;(a=Math.min(a,f.getHours()))===f.getHours()&&(i=Math.min(i,f.getMinutes())),i===f.getMinutes()&&(r=Math.min(r,f.getSeconds()))}if(o){var u=void 0!==n.config.minTime?n.config.minTime:n.config.minDate;(a=Math.max(a,u.getHours()))===u.getHours()&&i<u.getMinutes()&&(i=u.getMinutes()),i===u.getMinutes()&&(r=Math.max(r,u.getSeconds()))}}c(a,i,r)}}function s(e){var t=e||n.latestSelectedDateObj;t&&t instanceof Date&&c(t.getHours(),t.getMinutes(),t.getSeconds())}function c(e,t,a){void 0!==n.latestSelectedDateObj&&n.latestSelectedDateObj.setHours(e%24,t,a||0,0),n.hourElement&&n.minuteElement&&!n.isMobile&&(n.hourElement.value=H(n.config.time_24hr?e:(12+e)%12+12*Y(e%12==0)),n.minuteElement.value=H(t),void 0!==n.amPM&&(n.amPM.textContent=n.l10n.amPM[Y(e>=12)]),void 0!==n.secondElement&&(n.secondElement.value=H(a)))}function d(e){var t=z(e),n=parseInt(t.value)+(e.delta||0);(n/1e3>1||"Enter"===e.key&&!/[^\d]/.test(n.toString()))&&E(n)}function p(e,t,a,i){return t instanceof Array?t.forEach((function(t){return p(e,t,a,i)})):e instanceof Array?e.forEach((function(e){return p(e,t,a,i)})):(e.addEventListener(t,a,i),void n._handlers.push({remove:function(){return e.removeEventListener(t,a,i)}}))}function A(){Ce("onChange")}function f(e,t){var a=void 0!==e?n.parseDate(e):n.latestSelectedDateObj||(n.config.minDate&&n.config.minDate>n.now?n.config.minDate:n.config.maxDate&&n.config.maxDate<n.now?n.config.maxDate:n.now),i=n.currentYear,r=n.currentMonth;try{void 0!==a&&(n.currentYear=a.getFullYear(),n.currentMonth=a.getMonth())}catch(e){e.message="Invalid date supplied: "+a,n.config.errorHandler(e)}t&&n.currentYear!==i&&(Ce("onYearChange"),y()),!t||n.currentYear===i&&n.currentMonth===r||Ce("onMonthChange"),n.redraw()}function u(e){var t=z(e);~t.className.indexOf("arrow")&&h(e,t.classList.contains("arrowUp")?1:-1)}function h(e,t,n){var a=e&&z(e),i=n||a&&a.parentNode&&a.parentNode.firstChild,r=ge("increment");r.delta=t,i&&i.dispatchEvent(r)}function m(e,t,a,i){var r=F(t,!0),o=W("span",e,t.getDate().toString());return o.dateObj=t,o.$i=i,o.setAttribute("aria-label",n.formatDate(t,n.config.ariaDateFormat)),-1===e.indexOf("hidden")&&0===X(t,n.now)&&(n.todayDateElem=o,o.classList.add("today"),o.setAttribute("aria-current","date")),r?(o.tabIndex=-1,be(t)&&(o.classList.add("selected"),n.selectedDateElem=o,"range"===n.config.mode&&(P(o,"startRange",n.selectedDates[0]&&0===X(t,n.selectedDates[0],!0)),P(o,"endRange",n.selectedDates[1]&&0===X(t,n.selectedDates[1],!0)),"nextMonthDay"===e&&o.classList.add("inRange")))):o.classList.add("flatpickr-disabled"),"range"===n.config.mode&&function(e){return!("range"!==n.config.mode||n.selectedDates.length<2)&&X(e,n.selectedDates[0])>=0&&X(e,n.selectedDates[1])<=0}(t)&&!be(t)&&o.classList.add("inRange"),n.weekNumbers&&1===n.config.showMonths&&"prevMonthDay"!==e&&i%7==6&&n.weekNumbers.insertAdjacentHTML("beforeend","<span class='flatpickr-day'>"+n.config.getWeek(t)+"</span>"),Ce("onDayCreate",o),o}function C(e){e.focus(),"range"===n.config.mode&&ae(e)}function g(e){for(var t=e>0?0:n.config.showMonths-1,a=e>0?n.config.showMonths:-1,i=t;i!=a;i+=e)for(var r=n.daysContainer.children[i],o=e>0?0:r.children.length-1,l=e>0?r.children.length:-1,s=o;s!=l;s+=e){var c=r.children[s];if(-1===c.className.indexOf("hidden")&&F(c.dateObj))return c}}function b(e,t){var i=a(),r=U(i||document.body),o=void 0!==e?e:r?i:void 0!==n.selectedDateElem&&U(n.selectedDateElem)?n.selectedDateElem:void 0!==n.todayDateElem&&U(n.todayDateElem)?n.todayDateElem:g(t>0?1:-1);void 0===o?n._input.focus():r?function(e,t){for(var a=-1===e.className.indexOf("Month")?e.dateObj.getMonth():n.currentMonth,i=t>0?n.config.showMonths:-1,r=t>0?1:-1,o=a-n.currentMonth;o!=i;o+=r)for(var l=n.daysContainer.children[o],s=a-n.currentMonth===o?e.$i+t:t<0?l.children.length-1:0,c=l.children.length,d=s;d>=0&&d<c&&d!=(t>0?c:-1);d+=r){var p=l.children[d];if(-1===p.className.indexOf("hidden")&&F(p.dateObj)&&Math.abs(e.$i-d)>=Math.abs(t))return C(p)}n.changeMonth(r),b(g(r),0)}(o,t):C(o)}function k(e,t){for(var a=(new Date(e,t,1).getDay()-n.l10n.firstDayOfWeek+7)%7,i=n.utils.getDaysInMonth((t-1+12)%12,e),r=n.utils.getDaysInMonth(t,e),o=window.document.createDocumentFragment(),l=n.config.showMonths>1,s=l?"prevMonthDay hidden":"prevMonthDay",c=l?"nextMonthDay hidden":"nextMonthDay",d=i+1-a,p=0;d<=i;d++,p++)o.appendChild(m("flatpickr-day "+s,new Date(e,t-1,d),0,p));for(d=1;d<=r;d++,p++)o.appendChild(m("flatpickr-day",new Date(e,t,d),0,p));for(var A=r+1;A<=42-a&&(1===n.config.showMonths||p%7!=0);A++,p++)o.appendChild(m("flatpickr-day "+c,new Date(e,t+1,A%r),0,p));var f=W("div","dayContainer");return f.appendChild(o),f}function v(){if(void 0!==n.daysContainer){N(n.daysContainer),n.weekNumbers&&N(n.weekNumbers);for(var e=document.createDocumentFragment(),t=0;t<n.config.showMonths;t++){var a=new Date(n.currentYear,n.currentMonth,1);a.setMonth(n.currentMonth+t),e.appendChild(k(a.getFullYear(),a.getMonth()))}n.daysContainer.appendChild(e),n.days=n.daysContainer.firstChild,"range"===n.config.mode&&1===n.selectedDates.length&&ae()}}function y(){if(!(n.config.showMonths>1||"dropdown"!==n.config.monthSelectorType)){var e=function(e){return!(void 0!==n.config.minDate&&n.currentYear===n.config.minDate.getFullYear()&&e<n.config.minDate.getMonth()||void 0!==n.config.maxDate&&n.currentYear===n.config.maxDate.getFullYear()&&e>n.config.maxDate.getMonth())};n.monthsDropdownContainer.tabIndex=-1,n.monthsDropdownContainer.innerHTML="";for(var t=0;t<12;t++)if(e(t)){var a=W("option","flatpickr-monthDropdown-month");a.value=new Date(n.currentYear,t).getMonth().toString(),a.textContent=q(t,n.config.shorthandCurrentMonth,n.l10n),a.tabIndex=-1,n.currentMonth===t&&(a.selected=!0),n.monthsDropdownContainer.appendChild(a)}}}function w(){var e,t=W("div","flatpickr-month"),a=window.document.createDocumentFragment();n.config.showMonths>1||"static"===n.config.monthSelectorType?e=W("span","cur-month"):(n.monthsDropdownContainer=W("select","flatpickr-monthDropdown-months"),n.monthsDropdownContainer.setAttribute("aria-label",n.l10n.monthAriaLabel),p(n.monthsDropdownContainer,"change",(function(e){var t=z(e),a=parseInt(t.value,10);n.changeMonth(a-n.currentMonth),Ce("onMonthChange")})),y(),e=n.monthsDropdownContainer);var i=j("cur-year",{tabindex:"-1"}),r=i.getElementsByTagName("input")[0];r.setAttribute("aria-label",n.l10n.yearAriaLabel),n.config.minDate&&r.setAttribute("min",n.config.minDate.getFullYear().toString()),n.config.maxDate&&(r.setAttribute("max",n.config.maxDate.getFullYear().toString()),r.disabled=!!n.config.minDate&&n.config.minDate.getFullYear()===n.config.maxDate.getFullYear());var o=W("div","flatpickr-current-month");return o.appendChild(e),o.appendChild(i),a.appendChild(o),t.appendChild(a),{container:t,yearElement:r,monthElement:e}}function x(){N(n.monthNav),n.monthNav.appendChild(n.prevMonthNav),n.config.showMonths&&(n.yearElements=[],n.monthElements=[]);for(var e=n.config.showMonths;e--;){var t=w();n.yearElements.push(t.yearElement),n.monthElements.push(t.monthElement),n.monthNav.appendChild(t.container)}n.monthNav.appendChild(n.nextMonthNav)}function B(){n.weekdayContainer?N(n.weekdayContainer):n.weekdayContainer=W("div","flatpickr-weekdays");for(var e=n.config.showMonths;e--;){var t=W("div","flatpickr-weekdaycontainer");n.weekdayContainer.appendChild(t)}return D(),n.weekdayContainer}function D(){if(n.weekdayContainer){var e=n.l10n.firstDayOfWeek,t=ne(n.l10n.weekdays.shorthand);e>0&&e<t.length&&(t=ne(t.splice(e,t.length),t.splice(0,e)));for(var a=n.config.showMonths;a--;)n.weekdayContainer.children[a].innerHTML="\n      <span class='flatpickr-weekday'>\n        "+t.join("</span><span class='flatpickr-weekday'>")+"\n      </span>\n      "}}function M(e,t){void 0===t&&(t=!0);var a=t?e:e-n.currentMonth;a<0&&!0===n._hidePrevMonthArrow||a>0&&!0===n._hideNextMonthArrow||(n.currentMonth+=a,(n.currentMonth<0||n.currentMonth>11)&&(n.currentYear+=n.currentMonth>11?1:-1,n.currentMonth=(n.currentMonth+12)%12,Ce("onYearChange"),y()),v(),Ce("onMonthChange"),ke())}function _(e){return n.calendarContainer.contains(e)}function S(e){if(n.isOpen&&!n.config.inline){var t=z(e),a=_(t),i=!(t===n.input||t===n.altInput||n.element.contains(t)||e.path&&e.path.indexOf&&(~e.path.indexOf(n.input)||~e.path.indexOf(n.altInput))||a||_(e.relatedTarget)),r=!n.config.ignoredFocusElements.some((function(e){return e.contains(t)}));i&&r&&(n.config.allowInput&&n.setDate(n._input.value,!1,n.config.altInput?n.config.altFormat:n.config.dateFormat),void 0!==n.timeContainer&&void 0!==n.minuteElement&&void 0!==n.hourElement&&""!==n.input.value&&void 0!==n.input.value&&o(),n.close(),n.config&&"range"===n.config.mode&&1===n.selectedDates.length&&n.clear(!1))}}function E(e){if(!(!e||n.config.minDate&&e<n.config.minDate.getFullYear()||n.config.maxDate&&e>n.config.maxDate.getFullYear())){var t=e,a=n.currentYear!==t;n.currentYear=t||n.currentYear,n.config.maxDate&&n.currentYear===n.config.maxDate.getFullYear()?n.currentMonth=Math.min(n.config.maxDate.getMonth(),n.currentMonth):n.config.minDate&&n.currentYear===n.config.minDate.getFullYear()&&(n.currentMonth=Math.max(n.config.minDate.getMonth(),n.currentMonth)),a&&(n.redraw(),Ce("onYearChange"),y())}}function F(e,t){var a;void 0===t&&(t=!0);var i=n.parseDate(e,void 0,t);if(n.config.minDate&&i&&X(i,n.config.minDate,void 0!==t?t:!n.minDateHasTime)<0||n.config.maxDate&&i&&X(i,n.config.maxDate,void 0!==t?t:!n.maxDateHasTime)>0)return!1;if(!n.config.enable&&0===n.config.disable.length)return!0;if(void 0===i)return!1;for(var r=!!n.config.enable,o=null!==(a=n.config.enable)&&void 0!==a?a:n.config.disable,l=0,s=void 0;l<o.length;l++){if("function"==typeof(s=o[l])&&s(i))return r;if(s instanceof Date&&void 0!==i&&s.getTime()===i.getTime())return r;if("string"==typeof s){var c=n.parseDate(s,void 0,!0);return c&&c.getTime()===i.getTime()?r:!r}if("object"==typeof s&&void 0!==i&&s.from&&s.to&&i.getTime()>=s.from.getTime()&&i.getTime()<=s.to.getTime())return r}return!r}function U(e){return void 0!==n.daysContainer&&-1===e.className.indexOf("hidden")&&-1===e.className.indexOf("flatpickr-disabled")&&n.daysContainer.contains(e)}function Q(e){var t=e.target===n._input,a=n._input.value.trimEnd()!==ve();!t||!a||e.relatedTarget&&_(e.relatedTarget)||n.setDate(n._input.value,!0,e.target===n.altInput?n.config.altFormat:n.config.dateFormat)}function K(t){var i=z(t),r=n.config.wrap?e.contains(i):i===n._input,s=n.config.allowInput,c=n.isOpen&&(!s||!r),d=n.config.inline&&r&&!s;if(13===t.keyCode&&r){if(s)return n.setDate(n._input.value,!0,i===n.altInput?n.config.altFormat:n.config.dateFormat),n.close(),i.blur();n.open()}else if(_(i)||c||d){var p=!!n.timeContainer&&n.timeContainer.contains(i);switch(t.keyCode){case 13:p?(t.preventDefault(),o(),pe()):Ae(t);break;case 27:t.preventDefault(),pe();break;case 8:case 46:r&&!n.config.allowInput&&(t.preventDefault(),n.clear());break;case 37:case 39:if(p||r)n.hourElement&&n.hourElement.focus();else{t.preventDefault();var A=a();if(void 0!==n.daysContainer&&(!1===s||A&&U(A))){var f=39===t.keyCode?1:-1;t.ctrlKey?(t.stopPropagation(),M(f),b(g(1),0)):b(void 0,f)}}break;case 38:case 40:t.preventDefault();var u=40===t.keyCode?1:-1;n.daysContainer&&void 0!==i.$i||i===n.input||i===n.altInput?t.ctrlKey?(t.stopPropagation(),E(n.currentYear-u),b(g(1),0)):p||b(void 0,7*u):i===n.currentYearElement?E(n.currentYear-u):n.config.enableTime&&(!p&&n.hourElement&&n.hourElement.focus(),o(t),n._debouncedChange());break;case 9:if(p){var h=[n.hourElement,n.minuteElement,n.secondElement,n.amPM].concat(n.pluginElements).filter((function(e){return e})),m=h.indexOf(i);if(-1!==m){var C=h[m+(t.shiftKey?-1:1)];t.preventDefault(),(C||n._input).focus()}}else!n.config.noCalendar&&n.daysContainer&&n.daysContainer.contains(i)&&t.shiftKey&&(t.preventDefault(),n._input.focus())}}if(void 0!==n.amPM&&i===n.amPM)switch(t.key){case n.l10n.amPM[0].charAt(0):case n.l10n.amPM[0].charAt(0).toLowerCase():n.amPM.textContent=n.l10n.amPM[0],l(),ye();break;case n.l10n.amPM[1].charAt(0):case n.l10n.amPM[1].charAt(0).toLowerCase():n.amPM.textContent=n.l10n.amPM[1],l(),ye()}(r||_(i))&&Ce("onKeyDown",t)}function ae(e,t){if(void 0===t&&(t="flatpickr-day"),1===n.selectedDates.length&&(!e||e.classList.contains(t)&&!e.classList.contains("flatpickr-disabled"))){for(var a=e?e.dateObj.getTime():n.days.firstElementChild.dateObj.getTime(),i=n.parseDate(n.selectedDates[0],void 0,!0).getTime(),r=Math.min(a,n.selectedDates[0].getTime()),o=Math.max(a,n.selectedDates[0].getTime()),l=!1,s=0,c=0,d=r;d<o;d+=864e5)F(new Date(d),!0)||(l=l||d>r&&d<o,d<i&&(!s||d>s)?s=d:d>i&&(!c||d<c)&&(c=d));Array.from(n.rContainer.querySelectorAll("*:nth-child(-n+"+n.config.showMonths+") > ."+t)).forEach((function(t){var r,o,d,p=t.dateObj.getTime(),A=s>0&&p<s||c>0&&p>c;if(A)return t.classList.add("notAllowed"),void["inRange","startRange","endRange"].forEach((function(e){t.classList.remove(e)}));l&&!A||(["startRange","inRange","endRange","notAllowed"].forEach((function(e){t.classList.remove(e)})),void 0!==e&&(e.classList.add(a<=n.selectedDates[0].getTime()?"startRange":"endRange"),i<a&&p===i?t.classList.add("startRange"):i>a&&p===i&&t.classList.add("endRange"),p>=s&&(0===c||p<=c)&&(o=i,d=a,(r=p)>Math.min(o,d)&&r<Math.max(o,d))&&t.classList.add("inRange")))}))}}function ie(){!n.isOpen||n.config.static||n.config.inline||ce()}function oe(e){return function(t){var a=n.config["_"+e+"Date"]=n.parseDate(t,n.config.dateFormat),i=n.config["_"+("min"===e?"max":"min")+"Date"];void 0!==a&&(n["min"===e?"minDateHasTime":"maxDateHasTime"]=a.getHours()>0||a.getMinutes()>0||a.getSeconds()>0),n.selectedDates&&(n.selectedDates=n.selectedDates.filter((function(e){return F(e)})),n.selectedDates.length||"min"!==e||s(a),ye()),n.daysContainer&&(de(),void 0!==a?n.currentYearElement[e]=a.getFullYear().toString():n.currentYearElement.removeAttribute(e),n.currentYearElement.disabled=!!i&&void 0!==a&&i.getFullYear()===a.getFullYear())}}function le(){return n.config.wrap?e.querySelector("[data-input]"):e}function se(){"object"!=typeof n.config.locale&&void 0===re.l10ns[n.config.locale]&&n.config.errorHandler(new Error("flatpickr: invalid locale "+n.config.locale)),n.l10n=te(te({},re.l10ns.default),"object"==typeof n.config.locale?n.config.locale:"default"!==n.config.locale?re.l10ns[n.config.locale]:void 0),G.D="("+n.l10n.weekdays.shorthand.join("|")+")",G.l="("+n.l10n.weekdays.longhand.join("|")+")",G.M="("+n.l10n.months.shorthand.join("|")+")",G.F="("+n.l10n.months.longhand.join("|")+")",G.K="("+n.l10n.amPM[0]+"|"+n.l10n.amPM[1]+"|"+n.l10n.amPM[0].toLowerCase()+"|"+n.l10n.amPM[1].toLowerCase()+")",void 0===te(te({},t),JSON.parse(JSON.stringify(e.dataset||{}))).time_24hr&&void 0===re.defaultConfig.time_24hr&&(n.config.time_24hr=n.l10n.time_24hr),n.formatDate=J(n),n.parseDate=V({config:n.config,l10n:n.l10n})}function ce(e){if("function"!=typeof n.config.position){if(void 0!==n.calendarContainer){Ce("onPreCalendarPosition");var t=e||n._positionElement,a=Array.prototype.reduce.call(n.calendarContainer.children,(function(e,t){return e+t.offsetHeight}),0),i=n.calendarContainer.offsetWidth,r=n.config.position.split(" "),o=r[0],l=r.length>1?r[1]:null,s=t.getBoundingClientRect(),c=window.innerHeight-s.bottom,d="above"===o||"below"!==o&&c<a&&s.top>a,p=window.pageYOffset+s.top+(d?-a-2:t.offsetHeight+2);if(P(n.calendarContainer,"arrowTop",!d),P(n.calendarContainer,"arrowBottom",d),!n.config.inline){var A=window.pageXOffset+s.left,f=!1,u=!1;"center"===l?(A-=(i-s.width)/2,f=!0):"right"===l&&(A-=i-s.width,u=!0),P(n.calendarContainer,"arrowLeft",!f&&!u),P(n.calendarContainer,"arrowCenter",f),P(n.calendarContainer,"arrowRight",u);var h=window.document.body.offsetWidth-(window.pageXOffset+s.right),m=A+i>window.document.body.offsetWidth,C=h+i>window.document.body.offsetWidth;if(P(n.calendarContainer,"rightMost",m),!n.config.static)if(n.calendarContainer.style.top=p+"px",m)if(C){var g=function(){for(var e=null,t=0;t<document.styleSheets.length;t++){var n=document.styleSheets[t];if(n.cssRules){try{n.cssRules}catch(e){continue}e=n;break}}return null!=e?e:(a=document.createElement("style"),document.head.appendChild(a),a.sheet);var a}();if(void 0===g)return;var b=window.document.body.offsetWidth,k=Math.max(0,b/2-i/2),v=g.cssRules.length,y="{left:"+s.left+"px;right:auto;}";P(n.calendarContainer,"rightMost",!1),P(n.calendarContainer,"centerMost",!0),g.insertRule(".flatpickr-calendar.centerMost:before,.flatpickr-calendar.centerMost:after"+y,v),n.calendarContainer.style.left=k+"px",n.calendarContainer.style.right="auto"}else n.calendarContainer.style.left="auto",n.calendarContainer.style.right=h+"px";else n.calendarContainer.style.left=A+"px",n.calendarContainer.style.right="auto"}}}else n.config.position(n,e)}function de(){n.config.noCalendar||n.isMobile||(y(),ke(),v())}function pe(){n._input.focus(),-1!==window.navigator.userAgent.indexOf("MSIE")||void 0!==navigator.msMaxTouchPoints?setTimeout(n.close,0):n.close()}function Ae(e){e.preventDefault(),e.stopPropagation();var t=L(z(e),(function(e){return e.classList&&e.classList.contains("flatpickr-day")&&!e.classList.contains("flatpickr-disabled")&&!e.classList.contains("notAllowed")}));if(void 0!==t){var a=t,i=n.latestSelectedDateObj=new Date(a.dateObj.getTime()),r=(i.getMonth()<n.currentMonth||i.getMonth()>n.currentMonth+n.config.showMonths-1)&&"range"!==n.config.mode;if(n.selectedDateElem=a,"single"===n.config.mode)n.selectedDates=[i];else if("multiple"===n.config.mode){var o=be(i);o?n.selectedDates.splice(parseInt(o),1):n.selectedDates.push(i)}else"range"===n.config.mode&&(2===n.selectedDates.length&&n.clear(!1,!1),n.latestSelectedDateObj=i,n.selectedDates.push(i),0!==X(i,n.selectedDates[0],!0)&&n.selectedDates.sort((function(e,t){return e.getTime()-t.getTime()})));if(l(),r){var s=n.currentYear!==i.getFullYear();n.currentYear=i.getFullYear(),n.currentMonth=i.getMonth(),s&&(Ce("onYearChange"),y()),Ce("onMonthChange")}if(ke(),v(),ye(),r||"range"===n.config.mode||1!==n.config.showMonths?void 0!==n.selectedDateElem&&void 0===n.hourElement&&n.selectedDateElem&&n.selectedDateElem.focus():C(a),void 0!==n.hourElement&&void 0!==n.hourElement&&n.hourElement.focus(),n.config.closeOnSelect){var c="single"===n.config.mode&&!n.config.enableTime,d="range"===n.config.mode&&2===n.selectedDates.length&&!n.config.enableTime;(c||d)&&pe()}A()}}n.parseDate=V({config:n.config,l10n:n.l10n}),n._handlers=[],n.pluginElements=[],n.loadedPlugins=[],n._bind=p,n._setHoursFromDate=s,n._positionCalendar=ce,n.changeMonth=M,n.changeYear=E,n.clear=function(e,t){if(void 0===e&&(e=!0),void 0===t&&(t=!0),n.input.value="",void 0!==n.altInput&&(n.altInput.value=""),void 0!==n.mobileInput&&(n.mobileInput.value=""),n.selectedDates=[],n.latestSelectedDateObj=void 0,!0===t&&(n.currentYear=n._initialDate.getFullYear(),n.currentMonth=n._initialDate.getMonth()),!0===n.config.enableTime){var a=ee(n.config);c(a.hours,a.minutes,a.seconds)}n.redraw(),e&&Ce("onChange")},n.close=function(){n.isOpen=!1,n.isMobile||(void 0!==n.calendarContainer&&n.calendarContainer.classList.remove("open"),void 0!==n._input&&n._input.classList.remove("active")),Ce("onClose")},n.onMouseOver=ae,n._createElement=W,n.createDay=m,n.destroy=function(){void 0!==n.config&&Ce("onDestroy");for(var e=n._handlers.length;e--;)n._handlers[e].remove();if(n._handlers=[],n.mobileInput)n.mobileInput.parentNode&&n.mobileInput.parentNode.removeChild(n.mobileInput),n.mobileInput=void 0;else if(n.calendarContainer&&n.calendarContainer.parentNode)if(n.config.static&&n.calendarContainer.parentNode){var t=n.calendarContainer.parentNode;if(t.lastChild&&t.removeChild(t.lastChild),t.parentNode){for(;t.firstChild;)t.parentNode.insertBefore(t.firstChild,t);t.parentNode.removeChild(t)}}else n.calendarContainer.parentNode.removeChild(n.calendarContainer);n.altInput&&(n.input.type="text",n.altInput.parentNode&&n.altInput.parentNode.removeChild(n.altInput),delete n.altInput),n.input&&(n.input.type=n.input._type,n.input.classList.remove("flatpickr-input"),n.input.removeAttribute("readonly")),["_showTimeInput","latestSelectedDateObj","_hideNextMonthArrow","_hidePrevMonthArrow","__hideNextMonthArrow","__hidePrevMonthArrow","isMobile","isOpen","selectedDateElem","minDateHasTime","maxDateHasTime","days","daysContainer","_input","_positionElement","innerContainer","rContainer","monthNav","todayDateElem","calendarContainer","weekdayContainer","prevMonthNav","nextMonthNav","monthsDropdownContainer","currentMonthElement","currentYearElement","navigationCurrentMonth","selectedDateElem","config"].forEach((function(e){try{delete n[e]}catch(e){}}))},n.isEnabled=F,n.jumpToDate=f,n.updateValue=ye,n.open=function(e,t){if(void 0===t&&(t=n._positionElement),!0===n.isMobile){if(e){e.preventDefault();var a=z(e);a&&a.blur()}return void 0!==n.mobileInput&&(n.mobileInput.focus(),n.mobileInput.click()),void Ce("onOpen")}if(!n._input.disabled&&!n.config.inline){var i=n.isOpen;n.isOpen=!0,i||(n.calendarContainer.classList.add("open"),n._input.classList.add("active"),Ce("onOpen"),ce(t)),!0===n.config.enableTime&&!0===n.config.noCalendar&&(!1!==n.config.allowInput||void 0!==e&&n.timeContainer.contains(e.relatedTarget)||setTimeout((function(){return n.hourElement.select()}),50))}},n.redraw=de,n.set=function(e,t){if(null!==e&&"object"==typeof e)for(var a in Object.assign(n.config,e),e)void 0!==fe[a]&&fe[a].forEach((function(e){return e()}));else n.config[e]=t,void 0!==fe[e]?fe[e].forEach((function(e){return e()})):T.indexOf(e)>-1&&(n.config[e]=R(t));n.redraw(),ye(!0)},n.setDate=function(e,t,a){if(void 0===t&&(t=!1),void 0===a&&(a=n.config.dateFormat),0!==e&&!e||e instanceof Array&&0===e.length)return n.clear(t);ue(e,a),n.latestSelectedDateObj=n.selectedDates[n.selectedDates.length-1],n.redraw(),f(void 0,t),s(),0===n.selectedDates.length&&n.clear(!1),ye(t),t&&Ce("onChange")},n.toggle=function(e){if(!0===n.isOpen)return n.close();n.open(e)};var fe={locale:[se,D],showMonths:[x,r,B],minDate:[f],maxDate:[f],positionElement:[me],clickOpens:[function(){!0===n.config.clickOpens?(p(n._input,"focus",n.open),p(n._input,"click",n.open)):(n._input.removeEventListener("focus",n.open),n._input.removeEventListener("click",n.open))}]};function ue(e,t){var a=[];if(e instanceof Array)a=e.map((function(e){return n.parseDate(e,t)}));else if(e instanceof Date||"number"==typeof e)a=[n.parseDate(e,t)];else if("string"==typeof e)switch(n.config.mode){case"single":case"time":a=[n.parseDate(e,t)];break;case"multiple":a=e.split(n.config.conjunction).map((function(e){return n.parseDate(e,t)}));break;case"range":a=e.split(n.l10n.rangeSeparator).map((function(e){return n.parseDate(e,t)}))}else n.config.errorHandler(new Error("Invalid date supplied: "+JSON.stringify(e)));n.selectedDates=n.config.allowInvalidPreload?a:a.filter((function(e){return e instanceof Date&&F(e,!1)})),"range"===n.config.mode&&n.selectedDates.sort((function(e,t){return e.getTime()-t.getTime()}))}function he(e){return e.slice().map((function(e){return"string"==typeof e||"number"==typeof e||e instanceof Date?n.parseDate(e,void 0,!0):e&&"object"==typeof e&&e.from&&e.to?{from:n.parseDate(e.from,void 0),to:n.parseDate(e.to,void 0)}:e})).filter((function(e){return e}))}function me(){n._positionElement=n.config.positionElement||n._input}function Ce(e,t){if(void 0!==n.config){var a=n.config[e];if(void 0!==a&&a.length>0)for(var i=0;a[i]&&i<a.length;i++)a[i](n.selectedDates,n.input.value,n,t);"onChange"===e&&(n.input.dispatchEvent(ge("change")),n.input.dispatchEvent(ge("input")))}}function ge(e){var t=document.createEvent("Event");return t.initEvent(e,!0,!0),t}function be(e){for(var t=0;t<n.selectedDates.length;t++){var a=n.selectedDates[t];if(a instanceof Date&&0===X(a,e))return""+t}return!1}function ke(){n.config.noCalendar||n.isMobile||!n.monthNav||(n.yearElements.forEach((function(e,t){var a=new Date(n.currentYear,n.currentMonth,1);a.setMonth(n.currentMonth+t),n.config.showMonths>1||"static"===n.config.monthSelectorType?n.monthElements[t].textContent=q(a.getMonth(),n.config.shorthandCurrentMonth,n.l10n)+" ":n.monthsDropdownContainer.value=a.getMonth().toString(),e.value=a.getFullYear().toString()})),n._hidePrevMonthArrow=void 0!==n.config.minDate&&(n.currentYear===n.config.minDate.getFullYear()?n.currentMonth<=n.config.minDate.getMonth():n.currentYear<n.config.minDate.getFullYear()),n._hideNextMonthArrow=void 0!==n.config.maxDate&&(n.currentYear===n.config.maxDate.getFullYear()?n.currentMonth+1>n.config.maxDate.getMonth():n.currentYear>n.config.maxDate.getFullYear()))}function ve(e){var t=e||(n.config.altInput?n.config.altFormat:n.config.dateFormat);return n.selectedDates.map((function(e){return n.formatDate(e,t)})).filter((function(e,t,a){return"range"!==n.config.mode||n.config.enableTime||a.indexOf(e)===t})).join("range"!==n.config.mode?n.config.conjunction:n.l10n.rangeSeparator)}function ye(e){void 0===e&&(e=!0),void 0!==n.mobileInput&&n.mobileFormatStr&&(n.mobileInput.value=void 0!==n.latestSelectedDateObj?n.formatDate(n.latestSelectedDateObj,n.mobileFormatStr):""),n.input.value=ve(n.config.dateFormat),void 0!==n.altInput&&(n.altInput.value=ve(n.config.altFormat)),!1!==e&&Ce("onValueUpdate")}function we(e){var t=z(e),a=n.prevMonthNav.contains(t),i=n.nextMonthNav.contains(t);a||i?M(a?-1:1):n.yearElements.indexOf(t)>=0?t.select():t.classList.contains("arrowUp")?n.changeYear(n.currentYear+1):t.classList.contains("arrowDown")&&n.changeYear(n.currentYear-1)}return function(){n.element=n.input=e,n.isOpen=!1,function(){var a=["wrap","weekNumbers","allowInput","allowInvalidPreload","clickOpens","time_24hr","enableTime","noCalendar","altInput","shorthandCurrentMonth","inline","static","enableSeconds","disableMobile"],r=te(te({},JSON.parse(JSON.stringify(e.dataset||{}))),t),o={};n.config.parseDate=r.parseDate,n.config.formatDate=r.formatDate,Object.defineProperty(n.config,"enable",{get:function(){return n.config._enable},set:function(e){n.config._enable=he(e)}}),Object.defineProperty(n.config,"disable",{get:function(){return n.config._disable},set:function(e){n.config._disable=he(e)}});var l="time"===r.mode;if(!r.dateFormat&&(r.enableTime||l)){var s=re.defaultConfig.dateFormat||I.dateFormat;o.dateFormat=r.noCalendar||l?"H:i"+(r.enableSeconds?":S":""):s+" H:i"+(r.enableSeconds?":S":"")}if(r.altInput&&(r.enableTime||l)&&!r.altFormat){var c=re.defaultConfig.altFormat||I.altFormat;o.altFormat=r.noCalendar||l?"h:i"+(r.enableSeconds?":S K":" K"):c+" h:i"+(r.enableSeconds?":S":"")+" K"}Object.defineProperty(n.config,"minDate",{get:function(){return n.config._minDate},set:oe("min")}),Object.defineProperty(n.config,"maxDate",{get:function(){return n.config._maxDate},set:oe("max")});var d=function(e){return function(t){n.config["min"===e?"_minTime":"_maxTime"]=n.parseDate(t,"H:i:S")}};Object.defineProperty(n.config,"minTime",{get:function(){return n.config._minTime},set:d("min")}),Object.defineProperty(n.config,"maxTime",{get:function(){return n.config._maxTime},set:d("max")}),"time"===r.mode&&(n.config.noCalendar=!0,n.config.enableTime=!0),Object.assign(n.config,o,r);for(var p=0;p<a.length;p++)n.config[a[p]]=!0===n.config[a[p]]||"true"===n.config[a[p]];for(T.filter((function(e){return void 0!==n.config[e]})).forEach((function(e){n.config[e]=R(n.config[e]||[]).map(i)})),n.isMobile=!n.config.disableMobile&&!n.config.inline&&"single"===n.config.mode&&!n.config.disable.length&&!n.config.enable&&!n.config.weekNumbers&&/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent),p=0;p<n.config.plugins.length;p++){var A=n.config.plugins[p](n)||{};for(var f in A)T.indexOf(f)>-1?n.config[f]=R(A[f]).map(i).concat(n.config[f]):void 0===r[f]&&(n.config[f]=A[f])}r.altInputClass||(n.config.altInputClass=le().className+" "+n.config.altInputClass),Ce("onParseConfig")}(),se(),n.input=le(),n.input?(n.input._type=n.input.type,n.input.type="text",n.input.classList.add("flatpickr-input"),n._input=n.input,n.config.altInput&&(n.altInput=W(n.input.nodeName,n.config.altInputClass),n._input=n.altInput,n.altInput.placeholder=n.input.placeholder,n.altInput.disabled=n.input.disabled,n.altInput.required=n.input.required,n.altInput.tabIndex=n.input.tabIndex,n.altInput.type="text",n.input.setAttribute("type","hidden"),!n.config.static&&n.input.parentNode&&n.input.parentNode.insertBefore(n.altInput,n.input.nextSibling)),n.config.allowInput||n._input.setAttribute("readonly","readonly"),me()):n.config.errorHandler(new Error("Invalid input element specified")),function(){n.selectedDates=[],n.now=n.parseDate(n.config.now)||new Date;var e=n.config.defaultDate||("INPUT"!==n.input.nodeName&&"TEXTAREA"!==n.input.nodeName||!n.input.placeholder||n.input.value!==n.input.placeholder?n.input.value:null);e&&ue(e,n.config.dateFormat),n._initialDate=n.selectedDates.length>0?n.selectedDates[0]:n.config.minDate&&n.config.minDate.getTime()>n.now.getTime()?n.config.minDate:n.config.maxDate&&n.config.maxDate.getTime()<n.now.getTime()?n.config.maxDate:n.now,n.currentYear=n._initialDate.getFullYear(),n.currentMonth=n._initialDate.getMonth(),n.selectedDates.length>0&&(n.latestSelectedDateObj=n.selectedDates[0]),void 0!==n.config.minTime&&(n.config.minTime=n.parseDate(n.config.minTime,"H:i")),void 0!==n.config.maxTime&&(n.config.maxTime=n.parseDate(n.config.maxTime,"H:i")),n.minDateHasTime=!!n.config.minDate&&(n.config.minDate.getHours()>0||n.config.minDate.getMinutes()>0||n.config.minDate.getSeconds()>0),n.maxDateHasTime=!!n.config.maxDate&&(n.config.maxDate.getHours()>0||n.config.maxDate.getMinutes()>0||n.config.maxDate.getSeconds()>0)}(),n.utils={getDaysInMonth:function(e,t){return void 0===e&&(e=n.currentMonth),void 0===t&&(t=n.currentYear),1===e&&(t%4==0&&t%100!=0||t%400==0)?29:n.l10n.daysInMonth[e]}},n.isMobile||function(){var e=window.document.createDocumentFragment();if(n.calendarContainer=W("div","flatpickr-calendar"),n.calendarContainer.tabIndex=-1,!n.config.noCalendar){if(e.appendChild((n.monthNav=W("div","flatpickr-months"),n.yearElements=[],n.monthElements=[],n.prevMonthNav=W("span","flatpickr-prev-month"),n.prevMonthNav.innerHTML=n.config.prevArrow,n.nextMonthNav=W("span","flatpickr-next-month"),n.nextMonthNav.innerHTML=n.config.nextArrow,x(),Object.defineProperty(n,"_hidePrevMonthArrow",{get:function(){return n.__hidePrevMonthArrow},set:function(e){n.__hidePrevMonthArrow!==e&&(P(n.prevMonthNav,"flatpickr-disabled",e),n.__hidePrevMonthArrow=e)}}),Object.defineProperty(n,"_hideNextMonthArrow",{get:function(){return n.__hideNextMonthArrow},set:function(e){n.__hideNextMonthArrow!==e&&(P(n.nextMonthNav,"flatpickr-disabled",e),n.__hideNextMonthArrow=e)}}),n.currentYearElement=n.yearElements[0],ke(),n.monthNav)),n.innerContainer=W("div","flatpickr-innerContainer"),n.config.weekNumbers){var t=function(){n.calendarContainer.classList.add("hasWeeks");var e=W("div","flatpickr-weekwrapper");e.appendChild(W("span","flatpickr-weekday",n.l10n.weekAbbreviation));var t=W("div","flatpickr-weeks");return e.appendChild(t),{weekWrapper:e,weekNumbers:t}}(),a=t.weekWrapper,i=t.weekNumbers;n.innerContainer.appendChild(a),n.weekNumbers=i,n.weekWrapper=a}n.rContainer=W("div","flatpickr-rContainer"),n.rContainer.appendChild(B()),n.daysContainer||(n.daysContainer=W("div","flatpickr-days"),n.daysContainer.tabIndex=-1),v(),n.rContainer.appendChild(n.daysContainer),n.innerContainer.appendChild(n.rContainer),e.appendChild(n.innerContainer)}n.config.enableTime&&e.appendChild(function(){n.calendarContainer.classList.add("hasTime"),n.config.noCalendar&&n.calendarContainer.classList.add("noCalendar");var e=ee(n.config);n.timeContainer=W("div","flatpickr-time"),n.timeContainer.tabIndex=-1;var t=W("span","flatpickr-time-separator",":"),a=j("flatpickr-hour",{"aria-label":n.l10n.hourAriaLabel});n.hourElement=a.getElementsByTagName("input")[0];var i=j("flatpickr-minute",{"aria-label":n.l10n.minuteAriaLabel});if(n.minuteElement=i.getElementsByTagName("input")[0],n.hourElement.tabIndex=n.minuteElement.tabIndex=-1,n.hourElement.value=H(n.latestSelectedDateObj?n.latestSelectedDateObj.getHours():n.config.time_24hr?e.hours:function(e){switch(e%24){case 0:case 12:return 12;default:return e%12}}(e.hours)),n.minuteElement.value=H(n.latestSelectedDateObj?n.latestSelectedDateObj.getMinutes():e.minutes),n.hourElement.setAttribute("step",n.config.hourIncrement.toString()),n.minuteElement.setAttribute("step",n.config.minuteIncrement.toString()),n.hourElement.setAttribute("min",n.config.time_24hr?"0":"1"),n.hourElement.setAttribute("max",n.config.time_24hr?"23":"12"),n.hourElement.setAttribute("maxlength","2"),n.minuteElement.setAttribute("min","0"),n.minuteElement.setAttribute("max","59"),n.minuteElement.setAttribute("maxlength","2"),n.timeContainer.appendChild(a),n.timeContainer.appendChild(t),n.timeContainer.appendChild(i),n.config.time_24hr&&n.timeContainer.classList.add("time24hr"),n.config.enableSeconds){n.timeContainer.classList.add("hasSeconds");var r=j("flatpickr-second");n.secondElement=r.getElementsByTagName("input")[0],n.secondElement.value=H(n.latestSelectedDateObj?n.latestSelectedDateObj.getSeconds():e.seconds),n.secondElement.setAttribute("step",n.minuteElement.getAttribute("step")),n.secondElement.setAttribute("min","0"),n.secondElement.setAttribute("max","59"),n.secondElement.setAttribute("maxlength","2"),n.timeContainer.appendChild(W("span","flatpickr-time-separator",":")),n.timeContainer.appendChild(r)}return n.config.time_24hr||(n.amPM=W("span","flatpickr-am-pm",n.l10n.amPM[Y((n.latestSelectedDateObj?n.hourElement.value:n.config.defaultHour)>11)]),n.amPM.title=n.l10n.toggleTitle,n.amPM.tabIndex=-1,n.timeContainer.appendChild(n.amPM)),n.timeContainer}()),P(n.calendarContainer,"rangeMode","range"===n.config.mode),P(n.calendarContainer,"animate",!0===n.config.animate),P(n.calendarContainer,"multiMonth",n.config.showMonths>1),n.calendarContainer.appendChild(e);var r=void 0!==n.config.appendTo&&void 0!==n.config.appendTo.nodeType;if((n.config.inline||n.config.static)&&(n.calendarContainer.classList.add(n.config.inline?"inline":"static"),n.config.inline&&(!r&&n.element.parentNode?n.element.parentNode.insertBefore(n.calendarContainer,n._input.nextSibling):void 0!==n.config.appendTo&&n.config.appendTo.appendChild(n.calendarContainer)),n.config.static)){var o=W("div","flatpickr-wrapper");n.element.parentNode&&n.element.parentNode.insertBefore(o,n.element),o.appendChild(n.element),n.altInput&&o.appendChild(n.altInput),o.appendChild(n.calendarContainer)}n.config.static||n.config.inline||(void 0!==n.config.appendTo?n.config.appendTo:window.document.body).appendChild(n.calendarContainer)}(),function(){if(n.config.wrap&&["open","close","toggle","clear"].forEach((function(e){Array.prototype.forEach.call(n.element.querySelectorAll("[data-"+e+"]"),(function(t){return p(t,"click",n[e])}))})),n.isMobile)!function(){var e=n.config.enableTime?n.config.noCalendar?"time":"datetime-local":"date";n.mobileInput=W("input",n.input.className+" flatpickr-mobile"),n.mobileInput.tabIndex=1,n.mobileInput.type=e,n.mobileInput.disabled=n.input.disabled,n.mobileInput.required=n.input.required,n.mobileInput.placeholder=n.input.placeholder,n.mobileFormatStr="datetime-local"===e?"Y-m-d\\TH:i:S":"date"===e?"Y-m-d":"H:i:S",n.selectedDates.length>0&&(n.mobileInput.defaultValue=n.mobileInput.value=n.formatDate(n.selectedDates[0],n.mobileFormatStr)),n.config.minDate&&(n.mobileInput.min=n.formatDate(n.config.minDate,"Y-m-d")),n.config.maxDate&&(n.mobileInput.max=n.formatDate(n.config.maxDate,"Y-m-d")),n.input.getAttribute("step")&&(n.mobileInput.step=String(n.input.getAttribute("step"))),n.input.type="hidden",void 0!==n.altInput&&(n.altInput.type="hidden");try{n.input.parentNode&&n.input.parentNode.insertBefore(n.mobileInput,n.input.nextSibling)}catch(e){}p(n.mobileInput,"change",(function(e){n.setDate(z(e).value,!1,n.mobileFormatStr),Ce("onChange"),Ce("onClose")}))}();else{var e=$(ie,50);if(n._debouncedChange=$(A,300),n.daysContainer&&!/iPhone|iPad|iPod/i.test(navigator.userAgent)&&p(n.daysContainer,"mouseover",(function(e){"range"===n.config.mode&&ae(z(e))})),p(n._input,"keydown",K),void 0!==n.calendarContainer&&p(n.calendarContainer,"keydown",K),n.config.inline||n.config.static||p(window,"resize",e),void 0!==window.ontouchstart?p(window.document,"touchstart",S):p(window.document,"mousedown",S),p(window.document,"focus",S,{capture:!0}),!0===n.config.clickOpens&&(p(n._input,"focus",n.open),p(n._input,"click",n.open)),void 0!==n.daysContainer&&(p(n.monthNav,"click",we),p(n.monthNav,["keyup","increment"],d),p(n.daysContainer,"click",Ae)),void 0!==n.timeContainer&&void 0!==n.minuteElement&&void 0!==n.hourElement){p(n.timeContainer,["increment"],o),p(n.timeContainer,"blur",o,{capture:!0}),p(n.timeContainer,"click",u),p([n.hourElement,n.minuteElement],["focus","click"],(function(e){return z(e).select()})),void 0!==n.secondElement&&p(n.secondElement,"focus",(function(){return n.secondElement&&n.secondElement.select()})),void 0!==n.amPM&&p(n.amPM,"click",(function(e){o(e)}))}n.config.allowInput&&p(n._input,"blur",Q)}}(),(n.selectedDates.length||n.config.noCalendar)&&(n.config.enableTime&&s(n.config.noCalendar?n.latestSelectedDateObj:void 0),ye(!1)),r();var a=/^((?!chrome|android).)*safari/i.test(navigator.userAgent);!n.isMobile&&a&&ce(),Ce("onReady")}(),n}function ie(e,t){for(var n=Array.prototype.slice.call(e).filter((function(e){return e instanceof HTMLElement})),a=[],i=0;i<n.length;i++){var r=n[i];try{if(null!==r.getAttribute("data-fp-omit"))continue;void 0!==r._flatpickr&&(r._flatpickr.destroy(),r._flatpickr=void 0),r._flatpickr=ae(r,t||{}),a.push(r._flatpickr)}catch(e){console.error(e)}}return 1===a.length?a[0]:a}"undefined"!=typeof HTMLElement&&"undefined"!=typeof HTMLCollection&&"undefined"!=typeof NodeList&&(HTMLCollection.prototype.flatpickr=NodeList.prototype.flatpickr=function(e){return ie(this,e)},HTMLElement.prototype.flatpickr=function(e){return ie([this],e)});var re=function(e,t){return"string"==typeof e?ie(window.document.querySelectorAll(e),t):e instanceof Node?ie([e],t):ie(e,t)};re.defaultConfig={},re.l10ns={en:te({},O),default:te({},O)},re.localize=function(e){re.l10ns.default=te(te({},re.l10ns.default),e)},re.setDefaults=function(e){re.defaultConfig=te(te({},re.defaultConfig),e)},re.parseDate=V({}),re.formatDate=J({}),re.compareDates=X,"undefined"!=typeof jQuery&&void 0!==jQuery.fn&&(jQuery.fn.flatpickr=function(e){return ie(this,e)}),Date.prototype.fp_incr=function(e){return new Date(this.getFullYear(),this.getMonth(),this.getDate()+("string"==typeof e?parseInt(e,10):e))},"undefined"!=typeof window&&(window.flatpickr=re);const oe=re;var le=n(921),se={};se.styleTagTransform=A(),se.setAttributes=s(),se.insert=o().bind(null,"head"),se.domAPI=i(),se.insertStyleElement=d(),t()(le.A,se),le.A&&le.A.locals&&le.A.locals;class ce extends E{#f=null;#u=null;constructor(e,t,n,a,i,r){super(),this._state=ce.parsePointToState(e),this._destinations=t,this._offers=n,this._onFormSubmit=a,this._onFormClose=i,this._onFormDelete=r,this._restoreHandlers()}get template(){const e=this._destinations.find((e=>e.id===this._state.destination)),t=this._offers[this._state.type]||[];return`\n      <form class="event event--edit" action="#" method="post">\n        <header class="event__header">\n          <div class="event__type-wrapper">\n            <label class="event__type  event__type-btn" for="event-type-toggle-1">\n              <span class="visually-hidden">Choose event type</span>\n              <img class="event__type-icon" width="17" height="17" src="img/icons/${this._state.type}.png" alt="Event type icon">\n            </label>\n            <div class="event__type-list">\n              <fieldset class="event__type-group">\n                <legend class="visually-hidden">Event type</legend>\n                ${Object.keys(this._offers).map((e=>`\n                  <div class="event__type-item">\n                    <input id="event-type-${e}-1" class="event__type-input  visually-hidden" type="radio" name="event-type" value="${e}" ${e===this._state.type?"checked":""}>\n                    <label class="event__type-label  event__type-label--${e}" for="event-type-${e}-1">${e}</label>\n                  </div>\n                `)).join("")}\n              </fieldset>\n            </div>\n          </div>\n\n          <div class="event__field-group  event__field-group--destination">\n            <label class="event__label  event__type-output" for="event-destination-1">\n              ${this._state.type}\n            </label>\n            <input class="event__input  event__input--destination" id="event-destination-1" type="text" name="event-destination" value="${e?e.name:""}" list="destination-list-1">\n            <datalist id="destination-list-1">\n              ${this._destinations.map((e=>`<option value="${e.name}"></option>`)).join("")}\n            </datalist>\n          </div>\n\n          <div class="event__field-group  event__field-group--time">\n            <label class="visually-hidden" for="event-start-time-1">Start time</label>\n            <input class="event__input  event__input--time" id="event-start-time-1" type="text" name="event-start" value="${M()(this._state.dateFrom).format("DD/MM/YYYY HH:mm")}">\n            &mdash;\n            <label class="visually-hidden" for="event-end-time-1">End time</label>\n            <input class="event__input  event__input--time" id="event-end-time-1" type="text" name="event-end" value="${M()(this._state.dateTo).format("DD/MM/YYYY HH:mm")}">\n          </div>\n\n          <div class="event__field-group  event__field-group--price">\n            <label class="event__label" for="event-price-1">\n              <span class="visually-hidden">Price</span>\n              &euro;\n            </label>\n            <input class="event__input  event__input--price" id="event-price-1" type="text" name="event-price" value="${this._state.basePrice}">\n          </div>\n\n          <button class="event__save-btn  btn  btn--blue" type="submit">Save</button>\n          <button class="event__reset-btn" type="reset">Delete</button>\n          <button class="event__rollup-btn" type="button">\n            <span class="visually-hidden">Open event</span>\n          </button>\n        </header>\n\n        <section class="event__details">\n          <section class="event__section  event__section--offers">\n            <h3 class="event__section-title  event__section-title--offers">Offers</h3>\n            <div class="event__available-offers">\n              ${t.map((e=>`\n                <div class="event__offer-selector">\n                  <input class="event__offer-checkbox  visually-hidden" id="${e.id}" type="checkbox" name="event-offer" value="${e.id}" ${this._state.offers.includes(e.id)?"checked":""}>\n                  <label class="event__offer-label" for="${e.id}">\n                    <span class="event__offer-title">${e.title}</span>\n                    &plus;&euro;&nbsp;<span class="event__offer-price">${e.price}</span>\n                  </label>\n                </div>\n              `)).join("")}\n            </div>\n          </section>\n\n          <section class="event__section  event__section--destination">\n            <h3 class="event__section-title  event__section-title--destination">Destination</h3>\n            <p class="event__destination-description">${e?.description||""}</p>\n            <div class="event__photos-container">\n              <div class="event__photos-tape">\n                ${(e?.pictures||[]).map((e=>`<img class="event__photo" src="${e.src}" alt="${e.description}">`)).join("")}\n              </div>\n            </div>\n          </section>\n        </section>\n      </form>\n    `}_restoreHandlers(){this._setInnerHandlers(),this.element.querySelector(".event__rollup-btn").addEventListener("click",this.#h),this.element.addEventListener("submit",this.#m),this.element.querySelector(".event__reset-btn").addEventListener("click",this.#C)}_setInnerHandlers(){this.element.querySelectorAll('input[name="event-type"]').forEach((e=>{e.addEventListener("change",this.#g)})),this.element.querySelector(".event__input--destination").addEventListener("change",this.#b),this.element.querySelectorAll(".event__offer-checkbox").forEach((e=>{e.addEventListener("change",this.#k)})),this.#f&&(this.#f.destroy(),this.#f=null),this.#u&&(this.#u.destroy(),this.#u=null),this.#f=oe(this.element.querySelector('input[name="event-start"]'),{enableTime:!0,dateFormat:"d/m/Y H:i",defaultDate:this._state.dateFrom,onChange:this.#v,time_24hr:!0}),this.#u=oe(this.element.querySelector('input[name="event-end"]'),{enableTime:!0,dateFormat:"d/m/Y H:i",defaultDate:this._state.dateTo,onChange:this.#y,time_24hr:!0})}#g=e=>{e.preventDefault(),this.updateElement({...this._state,type:e.target.value,offers:[]})};#b=e=>{const t=this._destinations.find((t=>t.name===e.target.value));t&&this.updateElement({...this._state,destination:t.id})};#k=()=>{const e=Array.from(this.element.querySelectorAll(".event__offer-checkbox:checked")).map((e=>e.value));this._setState({...this._state,offers:e})};#v=e=>{let[t]=e;this._setState({...this._state,dateFrom:t})};#y=e=>{let[t]=e;this._setState({...this._state,dateTo:t})};#m=e=>{e.preventDefault(),this._onFormSubmit(ce.parseStateToPoint(this._state))};#h=e=>{e.preventDefault(),this._onFormClose()};#C=e=>{e.preventDefault(),this._onFormDelete(ce.parseStateToPoint(this._state))};static parsePointToState(e){return{...e,dateFrom:new Date(e.dateFrom),dateTo:new Date(e.dateTo)}}static parseStateToPoint(e){return{...e,dateFrom:e.dateFrom instanceof Date?e.dateFrom.toISOString():e.dateFrom,dateTo:e.dateTo instanceof Date?e.dateTo.toISOString():e.dateTo}}}class de{#r=null;#w=null;#l=null;#x=null;#B=null;#D=null;#M=null;#_=null;#S="DEFAULT";constructor(e,t,n,a,i){this.#D=e,this.#M=t,this.#_=n,this.#w=a,this.#l=i}init(e){this.#r=e;const t=this.#x,n=this.#B;this.#x=new S(this.#r,this.#w,this.#l,this.#s,this.#c),this.#B=new ce(this.#r,this.#w,this.#l,this.#E,this.#T),null!==t&&null!==n?("DEFAULT"===this.#S&&g(this.#x,t),"EDITING"===this.#S&&g(this.#B,n),b(t),b(n)):C(this.#x,this.#D)}destroy(){b(this.#x),b(this.#B)}resetView(){"DEFAULT"!==this.#S&&this.#I()}#F(){this.#_(),g(this.#B,this.#x),this.#S="EDITING",document.addEventListener("keydown",this.#O)}#I(){g(this.#x,this.#B),this.#S="DEFAULT",document.removeEventListener("keydown",this.#O)}#s=()=>{this.#F()};#c=e=>{this.#M(e)};#E=e=>{this.#M(e),this.#I()};#T=()=>{this.#I()};#O=e=>{"Escape"!==e.key&&"Esc"!==e.key||(e.preventDefault(),this.#I())}}class pe{#H=(()=>new y)();#D=null;#Y=null;#$=null;#R=null;#P=(()=>new Map)();#W="everything";#N="day";init(){this.#L(),this.#j(),this.#z(),this.#U()}#L(){const e=[{type:"everything",name:"Everything",isDisabled:!1,isChecked:"everything"===this.#W},{type:"future",name:"Future",isDisabled:!1,isChecked:"future"===this.#W},{type:"present",name:"Present",isDisabled:!0,isChecked:"present"===this.#W},{type:"past",name:"Past",isDisabled:!1,isChecked:"past"===this.#W}],t=document.querySelector(".trip-controls__filters");this.#Y=new w(e),C(this.#Y,t),this.#Y.element.addEventListener("change",(e=>{"trip-filter"===e.target.name&&this.#q(e.target.id.replace("filter-",""))}))}#q=e=>{this.#W=e,this.#Q(),this.#U()};#j(){const e=[{type:"day",name:"Day",isChecked:"day"===this.#N},{type:"price",name:"Price",isChecked:"price"===this.#N}],t=document.querySelector(".trip-events");this.#$=new x(e,this.#i),C(this.#$,t)}#i=e=>{e!==this.#N&&(this.#N=e,this.#Q(),this.#U())};#z(){const e=document.querySelector(".trip-events"),t=document.createElement("ul");t.classList.add("trip-events__list"),e.appendChild(t),this.#D=t}#Q(){this.#P.forEach((e=>e.destroy())),this.#P.clear()}#G(){let e=this.#H.getPoints();switch(this.#W){case"future":e=e.filter((e=>new Date(e.dateFrom)>new Date));break;case"past":e=e.filter((e=>new Date(e.dateFrom)<new Date));break;case"present":e=[]}switch(this.#N){case"day":e.sort(((e,t)=>new Date(e.dateFrom)-new Date(t.dateFrom)));break;case"price":e.sort(((e,t)=>t.basePrice-e.basePrice))}return e}#U(){this.#D.innerHTML="";const e=this.#G(),t=this.#H.getDestinations(),n=this.#H.getOffers();0!==e.length?e.forEach((e=>{const a=new de(this.#D,this.#M,this.#_,t,n);a.init(e),this.#P.set(e.id,a)})):this.#K()}#K(){this.#R=new B,C(this.#R,this.#D)}#M=e=>{this.#H.updatePoint(e),this.#P.get(e.id).init(e)};#_=()=>{this.#P.forEach((e=>e.resetView()))}}document.addEventListener("DOMContentLoaded",(()=>{(new pe).init()}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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L25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qcyIsIndlYnBhY2s6Ly9iaWctdHJpcC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qcyIsIndlYnBhY2s6Ly9iaWctdHJpcC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzIiwid2VicGFjazovL2JpZy10cmlwLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qcyIsIndlYnBhY2s6Ly9iaWctdHJpcC8uL25vZGVfbW9kdWxlcy9kYXlqcy9kYXlqcy5taW4uanMiLCJ3ZWJwYWNrOi8vYmlnLXRyaXAvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qcyIsIndlYnBhY2s6Ly9iaWctdHJpcC8uL3NyYy9mcmFtZXdvcmsvdmlldy9hYnN0cmFjdC12aWV3LmNzcyIsIndlYnBhY2s6Ly9iaWctdHJpcC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qcyIsIndlYnBhY2s6Ly9iaWctdHJpcC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanMiLCJ3ZWJwYWNrOi8vYmlnLXRyaXAvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qcyIsIndlYnBhY2s6Ly9iaWctdHJpcC8uL25vZGVfbW9kdWxlcy9mbGF0cGlja3IvZGlzdC9mbGF0cGlja3IubWluLmNzcyIsIndlYnBhY2s6Ly9iaWctdHJpcC8uL25vZGVfbW9kdWxlcy9mbGF0cGlja3IvZGlzdC9lc20vdXRpbHMvcG9seWZpbGxzLmpzIiwid2VicGFjazovL2JpZy10cmlwL3dlYnBhY2svYm9vdHN0cmFwIiwid2VicGFjazovL2JpZy10cmlwL3dlYnBhY2svcnVudGltZS9jb21wYXQgZ2V0IGRlZmF1bHQgZXhwb3J0Iiwid2VicGFjazovL2JpZy10cmlwL3dlYnBhY2svcnVudGltZS9kZWZpbmUgcHJvcGVydHkgZ2V0dGVycyIsIndlYnBhY2s6Ly9iaWctdHJpcC93ZWJwYWNrL3J1bnRpbWUvaGFzT3duUHJvcGVydHkgc2hvcnRoYW5kIiwid2VicGFjazovL2JpZy10cmlwL3dlYnBhY2svcnVudGltZS9ub25jZSIsIndlYnBhY2s6Ly9iaWctdHJpcC8uL3NyYy9mcmFtZXdvcmsvdmlldy9hYnN0cmFjdC12aWV3LmNzcz9kZmE2Iiwid2VicGFjazovL2JpZy10cmlwLy4vc3JjL2ZyYW1ld29yay92aWV3L2Fic3RyYWN0LXZpZXcuanMiLCJ3ZWJwYWNrOi8vYmlnLXRyaXAvLi9zcmMvZnJhbWV3b3JrL3JlbmRlci5qcyIsIndlYnBhY2s6Ly9iaWctdHJpcC8uL3NyYy9tb2RlbC9wb2ludC5qcyIsIndlYnBhY2s6Ly9iaWctdHJpcC8uL3NyYy9tb2NrL21vY2suanMiLCJ3ZWJwYWNrOi8vYmlnLXRyaXAvLi9zcmMvbW9kZWwvbW9kZWwuanMiLCJ3ZWJwYWNrOi8vYmlnLXRyaXAvLi9zcmMvdmlldy9maWx0ZXJzLXZpZXcuanMiLCJ3ZWJwYWNrOi8vYmlnLXRyaXAvLi9zcmMvdmlldy9zb3J0LXZpZXcuanMiLCJ3ZWJwYWNrOi8vYmlnLXRyaXAvLi9zcmMvdmlldy9lbXB0eS1saXN0LXZpZXcuanMiLCJ3ZWJwYWNrOi8vYmlnLXRyaXAvLi9zcmMvdmlldy9wb2ludC12aWV3LmpzIiwid2VicGFjazovL2JpZy10cmlwLy4vc3JjL2ZyYW1ld29yay92aWV3L2Fic3RyYWN0LXN0YXRlZnVsLXZpZXcuanMiLCJ3ZWJwYWNrOi8vYmlnLXRyaXAvLi9ub2RlX21vZHVsZXMvZmxhdHBpY2tyL2Rpc3QvZXNtL3R5cGVzL29wdGlvbnMuanMiLCJ3ZWJwYWNrOi8vYmlnLXRyaXAvLi9ub2RlX21vZHVsZXMvZmxhdHBpY2tyL2Rpc3QvZXNtL2wxMG4vZGVmYXVsdC5qcyIsIndlYnBhY2s6Ly9iaWctdHJpcC8uL25vZGVfbW9kdWxlcy9mbGF0cGlja3IvZGlzdC9lc20vdXRpbHMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vYmlnLXRyaXAvLi9ub2RlX21vZHVsZXMvZmxhdHBpY2tyL2Rpc3QvZXNtL3V0aWxzL2RvbS5qcyIsIndlYnBhY2s6Ly9iaWctdHJpcC8uL25vZGVfbW9kdWxlcy9mbGF0cGlja3IvZGlzdC9lc20vdXRpbHMvZm9ybWF0dGluZy5qcyIsIndlYnBhY2s6Ly9iaWctdHJpcC8uL25vZGVfbW9kdWxlcy9mbGF0cGlja3IvZGlzdC9lc20vdXRpbHMvZGF0ZXMuanMiLCJ3ZWJwYWNrOi8vYmlnLXRyaXAvLi9ub2RlX21vZHVsZXMvZmxhdHBpY2tyL2Rpc3QvZXNtL2luZGV4LmpzIiwid2VicGFjazovL2JpZy10cmlwLy4vbm9kZV9tb2R1bGVzL2ZsYXRwaWNrci9kaXN0L2ZsYXRwaWNrci5taW4uY3NzP2UwM2IiLCJ3ZWJwYWNrOi8vYmlnLXRyaXAvLi9zcmMvdmlldy9mb3JtLWVkaXQtdmlldy5qcyIsIndlYnBhY2s6Ly9iaWctdHJpcC8uL3NyYy9wcmVzZW50ZXIvcG9pbnQtcHJlc2VudGVyLmpzIiwid2VicGFjazovL2JpZy10cmlwLy4vc3JjL3ByZXNlbnRlci90cmlwLXByZXNlbnRlci5qcyIsIndlYnBhY2s6Ly9iaWctdHJpcC8uL3NyYy9tYWluLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcyhzdHlsZUVsZW1lbnQpIHtcbiAgdmFyIG5vbmNlID0gdHlwZW9mIF9fd2VicGFja19ub25jZV9fICE9PSBcInVuZGVmaW5lZFwiID8gX193ZWJwYWNrX25vbmNlX18gOiBudWxsO1xuICBpZiAobm9uY2UpIHtcbiAgICBzdHlsZUVsZW1lbnQuc2V0QXR0cmlidXRlKFwibm9uY2VcIiwgbm9uY2UpO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlczsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIHN0eWxlc0luRE9NID0gW107XG5mdW5jdGlvbiBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKSB7XG4gIHZhciByZXN1bHQgPSAtMTtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZXNJbkRPTS5sZW5ndGg7IGkrKykge1xuICAgIGlmIChzdHlsZXNJbkRPTVtpXS5pZGVudGlmaWVyID09PSBpZGVudGlmaWVyKSB7XG4gICAgICByZXN1bHQgPSBpO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG4gIHJldHVybiByZXN1bHQ7XG59XG5mdW5jdGlvbiBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucykge1xuICB2YXIgaWRDb3VudE1hcCA9IHt9O1xuICB2YXIgaWRlbnRpZmllcnMgPSBbXTtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsaXN0Lmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGl0ZW0gPSBsaXN0W2ldO1xuICAgIHZhciBpZCA9IG9wdGlvbnMuYmFzZSA/IGl0ZW1bMF0gKyBvcHRpb25zLmJhc2UgOiBpdGVtWzBdO1xuICAgIHZhciBjb3VudCA9IGlkQ291bnRNYXBbaWRdIHx8IDA7XG4gICAgdmFyIGlkZW50aWZpZXIgPSBcIlwiLmNvbmNhdChpZCwgXCIgXCIpLmNvbmNhdChjb3VudCk7XG4gICAgaWRDb3VudE1hcFtpZF0gPSBjb3VudCArIDE7XG4gICAgdmFyIGluZGV4QnlJZGVudGlmaWVyID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgdmFyIG9iaiA9IHtcbiAgICAgIGNzczogaXRlbVsxXSxcbiAgICAgIG1lZGlhOiBpdGVtWzJdLFxuICAgICAgc291cmNlTWFwOiBpdGVtWzNdLFxuICAgICAgc3VwcG9ydHM6IGl0ZW1bNF0sXG4gICAgICBsYXllcjogaXRlbVs1XVxuICAgIH07XG4gICAgaWYgKGluZGV4QnlJZGVudGlmaWVyICE9PSAtMSkge1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnJlZmVyZW5jZXMrKztcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4QnlJZGVudGlmaWVyXS51cGRhdGVyKG9iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciB1cGRhdGVyID0gYWRkRWxlbWVudFN0eWxlKG9iaiwgb3B0aW9ucyk7XG4gICAgICBvcHRpb25zLmJ5SW5kZXggPSBpO1xuICAgICAgc3R5bGVzSW5ET00uc3BsaWNlKGksIDAsIHtcbiAgICAgICAgaWRlbnRpZmllcjogaWRlbnRpZmllcixcbiAgICAgICAgdXBkYXRlcjogdXBkYXRlcixcbiAgICAgICAgcmVmZXJlbmNlczogMVxuICAgICAgfSk7XG4gICAgfVxuICAgIGlkZW50aWZpZXJzLnB1c2goaWRlbnRpZmllcik7XG4gIH1cbiAgcmV0dXJuIGlkZW50aWZpZXJzO1xufVxuZnVuY3Rpb24gYWRkRWxlbWVudFN0eWxlKG9iaiwgb3B0aW9ucykge1xuICB2YXIgYXBpID0gb3B0aW9ucy5kb21BUEkob3B0aW9ucyk7XG4gIGFwaS51cGRhdGUob2JqKTtcbiAgdmFyIHVwZGF0ZXIgPSBmdW5jdGlvbiB1cGRhdGVyKG5ld09iaikge1xuICAgIGlmIChuZXdPYmopIHtcbiAgICAgIGlmIChuZXdPYmouY3NzID09PSBvYmouY3NzICYmIG5ld09iai5tZWRpYSA9PT0gb2JqLm1lZGlhICYmIG5ld09iai5zb3VyY2VNYXAgPT09IG9iai5zb3VyY2VNYXAgJiYgbmV3T2JqLnN1cHBvcnRzID09PSBvYmouc3VwcG9ydHMgJiYgbmV3T2JqLmxheWVyID09PSBvYmoubGF5ZXIpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgYXBpLnVwZGF0ZShvYmogPSBuZXdPYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICBhcGkucmVtb3ZlKCk7XG4gICAgfVxuICB9O1xuICByZXR1cm4gdXBkYXRlcjtcbn1cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGxpc3QsIG9wdGlvbnMpIHtcbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gIGxpc3QgPSBsaXN0IHx8IFtdO1xuICB2YXIgbGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpO1xuICByZXR1cm4gZnVuY3Rpb24gdXBkYXRlKG5ld0xpc3QpIHtcbiAgICBuZXdMaXN0ID0gbmV3TGlzdCB8fCBbXTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGlkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbaV07XG4gICAgICB2YXIgaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4XS5yZWZlcmVuY2VzLS07XG4gICAgfVxuICAgIHZhciBuZXdMYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obmV3TGlzdCwgb3B0aW9ucyk7XG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IF9pKyspIHtcbiAgICAgIHZhciBfaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tfaV07XG4gICAgICB2YXIgX2luZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoX2lkZW50aWZpZXIpO1xuICAgICAgaWYgKHN0eWxlc0luRE9NW19pbmRleF0ucmVmZXJlbmNlcyA9PT0gMCkge1xuICAgICAgICBzdHlsZXNJbkRPTVtfaW5kZXhdLnVwZGF0ZXIoKTtcbiAgICAgICAgc3R5bGVzSW5ET00uc3BsaWNlKF9pbmRleCwgMSk7XG4gICAgICB9XG4gICAgfVxuICAgIGxhc3RJZGVudGlmaWVycyA9IG5ld0xhc3RJZGVudGlmaWVycztcbiAgfTtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQpIHtcbiAgaWYgKHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0KSB7XG4gICAgc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQuY3NzVGV4dCA9IGNzcztcbiAgfSBlbHNlIHtcbiAgICB3aGlsZSAoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpIHtcbiAgICAgIHN0eWxlRWxlbWVudC5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCk7XG4gICAgfVxuICAgIHN0eWxlRWxlbWVudC5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjc3MpKTtcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSBzdHlsZVRhZ1RyYW5zZm9ybTsiLCJcInVzZSBzdHJpY3RcIjtcblxuLypcbiAgTUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcbiAgQXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcpIHtcbiAgdmFyIGxpc3QgPSBbXTtcblxuICAvLyByZXR1cm4gdGhlIGxpc3Qgb2YgbW9kdWxlcyBhcyBjc3Mgc3RyaW5nXG4gIGxpc3QudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgIHZhciBjb250ZW50ID0gXCJcIjtcbiAgICAgIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2YgaXRlbVs1XSAhPT0gXCJ1bmRlZmluZWRcIjtcbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKTtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIik7XG4gICAgICB9XG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKTtcbiAgICAgIH1cbiAgICAgIGNvbnRlbnQgKz0gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtKTtcbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgfSkuam9pbihcIlwiKTtcbiAgfTtcblxuICAvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuICBsaXN0LmkgPSBmdW5jdGlvbiBpKG1vZHVsZXMsIG1lZGlhLCBkZWR1cGUsIHN1cHBvcnRzLCBsYXllcikge1xuICAgIGlmICh0eXBlb2YgbW9kdWxlcyA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgbW9kdWxlcyA9IFtbbnVsbCwgbW9kdWxlcywgdW5kZWZpbmVkXV07XG4gICAgfVxuICAgIHZhciBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzID0ge307XG4gICAgaWYgKGRlZHVwZSkge1xuICAgICAgZm9yICh2YXIgayA9IDA7IGsgPCB0aGlzLmxlbmd0aDsgaysrKSB7XG4gICAgICAgIHZhciBpZCA9IHRoaXNba11bMF07XG4gICAgICAgIGlmIChpZCAhPSBudWxsKSB7XG4gICAgICAgICAgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIGZvciAodmFyIF9rID0gMDsgX2sgPCBtb2R1bGVzLmxlbmd0aDsgX2srKykge1xuICAgICAgdmFyIGl0ZW0gPSBbXS5jb25jYXQobW9kdWxlc1tfa10pO1xuICAgICAgaWYgKGRlZHVwZSAmJiBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2l0ZW1bMF1dKSB7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuICAgICAgaWYgKHR5cGVvZiBsYXllciAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICBpZiAodHlwZW9mIGl0ZW1bNV0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChtZWRpYSkge1xuICAgICAgICBpZiAoIWl0ZW1bMl0pIHtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAoc3VwcG9ydHMpIHtcbiAgICAgICAgaWYgKCFpdGVtWzRdKSB7XG4gICAgICAgICAgaXRlbVs0XSA9IFwiXCIuY29uY2F0KHN1cHBvcnRzKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNF0gPSBzdXBwb3J0cztcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgbGlzdC5wdXNoKGl0ZW0pO1xuICAgIH1cbiAgfTtcbiAgcmV0dXJuIGxpc3Q7XG59OyIsIiFmdW5jdGlvbih0LGUpe1wib2JqZWN0XCI9PXR5cGVvZiBleHBvcnRzJiZcInVuZGVmaW5lZFwiIT10eXBlb2YgbW9kdWxlP21vZHVsZS5leHBvcnRzPWUoKTpcImZ1bmN0aW9uXCI9PXR5cGVvZiBkZWZpbmUmJmRlZmluZS5hbWQ/ZGVmaW5lKGUpOih0PVwidW5kZWZpbmVkXCIhPXR5cGVvZiBnbG9iYWxUaGlzP2dsb2JhbFRoaXM6dHx8c2VsZikuZGF5anM9ZSgpfSh0aGlzLChmdW5jdGlvbigpe1widXNlIHN0cmljdFwiO3ZhciB0PTFlMyxlPTZlNCxuPTM2ZTUscj1cIm1pbGxpc2Vjb25kXCIsaT1cInNlY29uZFwiLHM9XCJtaW51dGVcIix1PVwiaG91clwiLGE9XCJkYXlcIixvPVwid2Vla1wiLGM9XCJtb250aFwiLGY9XCJxdWFydGVyXCIsaD1cInllYXJcIixkPVwiZGF0ZVwiLGw9XCJJbnZhbGlkIERhdGVcIiwkPS9eKFxcZHs0fSlbLS9dPyhcXGR7MSwyfSk/Wy0vXT8oXFxkezAsMn0pW1R0XFxzXSooXFxkezEsMn0pPzo/KFxcZHsxLDJ9KT86PyhcXGR7MSwyfSk/Wy46XT8oXFxkKyk/JC8seT0vXFxbKFteXFxdXSspXXxZezEsNH18TXsxLDR9fER7MSwyfXxkezEsNH18SHsxLDJ9fGh7MSwyfXxhfEF8bXsxLDJ9fHN7MSwyfXxaezEsMn18U1NTL2csTT17bmFtZTpcImVuXCIsd2Vla2RheXM6XCJTdW5kYXlfTW9uZGF5X1R1ZXNkYXlfV2VkbmVzZGF5X1RodXJzZGF5X0ZyaWRheV9TYXR1cmRheVwiLnNwbGl0KFwiX1wiKSxtb250aHM6XCJKYW51YXJ5X0ZlYnJ1YXJ5X01hcmNoX0FwcmlsX01heV9KdW5lX0p1bHlfQXVndXN0X1NlcHRlbWJlcl9PY3RvYmVyX05vdmVtYmVyX0RlY2VtYmVyXCIuc3BsaXQoXCJfXCIpLG9yZGluYWw6ZnVuY3Rpb24odCl7dmFyIGU9W1widGhcIixcInN0XCIsXCJuZFwiLFwicmRcIl0sbj10JTEwMDtyZXR1cm5cIltcIit0KyhlWyhuLTIwKSUxMF18fGVbbl18fGVbMF0pK1wiXVwifX0sbT1mdW5jdGlvbih0LGUsbil7dmFyIHI9U3RyaW5nKHQpO3JldHVybiFyfHxyLmxlbmd0aD49ZT90OlwiXCIrQXJyYXkoZSsxLXIubGVuZ3RoKS5qb2luKG4pK3R9LHY9e3M6bSx6OmZ1bmN0aW9uKHQpe3ZhciBlPS10LnV0Y09mZnNldCgpLG49TWF0aC5hYnMoZSkscj1NYXRoLmZsb29yKG4vNjApLGk9biU2MDtyZXR1cm4oZTw9MD9cIitcIjpcIi1cIikrbShyLDIsXCIwXCIpK1wiOlwiK20oaSwyLFwiMFwiKX0sbTpmdW5jdGlvbiB0KGUsbil7aWYoZS5kYXRlKCk8bi5kYXRlKCkpcmV0dXJuLXQobixlKTt2YXIgcj0xMioobi55ZWFyKCktZS55ZWFyKCkpKyhuLm1vbnRoKCktZS5tb250aCgpKSxpPWUuY2xvbmUoKS5hZGQocixjKSxzPW4taTwwLHU9ZS5jbG9uZSgpLmFkZChyKyhzPy0xOjEpLGMpO3JldHVybisoLShyKyhuLWkpLyhzP2ktdTp1LWkpKXx8MCl9LGE6ZnVuY3Rpb24odCl7cmV0dXJuIHQ8MD9NYXRoLmNlaWwodCl8fDA6TWF0aC5mbG9vcih0KX0scDpmdW5jdGlvbih0KXtyZXR1cm57TTpjLHk6aCx3Om8sZDphLEQ6ZCxoOnUsbTpzLHM6aSxtczpyLFE6Zn1bdF18fFN0cmluZyh0fHxcIlwiKS50b0xvd2VyQ2FzZSgpLnJlcGxhY2UoL3MkLyxcIlwiKX0sdTpmdW5jdGlvbih0KXtyZXR1cm4gdm9pZCAwPT09dH19LGc9XCJlblwiLEQ9e307RFtnXT1NO3ZhciBwPVwiJGlzRGF5anNPYmplY3RcIixTPWZ1bmN0aW9uKHQpe3JldHVybiB0IGluc3RhbmNlb2YgX3x8ISghdHx8IXRbcF0pfSx3PWZ1bmN0aW9uIHQoZSxuLHIpe3ZhciBpO2lmKCFlKXJldHVybiBnO2lmKFwic3RyaW5nXCI9PXR5cGVvZiBlKXt2YXIgcz1lLnRvTG93ZXJDYXNlKCk7RFtzXSYmKGk9cyksbiYmKERbc109bixpPXMpO3ZhciB1PWUuc3BsaXQoXCItXCIpO2lmKCFpJiZ1Lmxlbmd0aD4xKXJldHVybiB0KHVbMF0pfWVsc2V7dmFyIGE9ZS5uYW1lO0RbYV09ZSxpPWF9cmV0dXJuIXImJmkmJihnPWkpLGl8fCFyJiZnfSxPPWZ1bmN0aW9uKHQsZSl7aWYoUyh0KSlyZXR1cm4gdC5jbG9uZSgpO3ZhciBuPVwib2JqZWN0XCI9PXR5cGVvZiBlP2U6e307cmV0dXJuIG4uZGF0ZT10LG4uYXJncz1hcmd1bWVudHMsbmV3IF8obil9LGI9djtiLmw9dyxiLmk9UyxiLnc9ZnVuY3Rpb24odCxlKXtyZXR1cm4gTyh0LHtsb2NhbGU6ZS4kTCx1dGM6ZS4kdSx4OmUuJHgsJG9mZnNldDplLiRvZmZzZXR9KX07dmFyIF89ZnVuY3Rpb24oKXtmdW5jdGlvbiBNKHQpe3RoaXMuJEw9dyh0LmxvY2FsZSxudWxsLCEwKSx0aGlzLnBhcnNlKHQpLHRoaXMuJHg9dGhpcy4keHx8dC54fHx7fSx0aGlzW3BdPSEwfXZhciBtPU0ucHJvdG90eXBlO3JldHVybiBtLnBhcnNlPWZ1bmN0aW9uKHQpe3RoaXMuJGQ9ZnVuY3Rpb24odCl7dmFyIGU9dC5kYXRlLG49dC51dGM7aWYobnVsbD09PWUpcmV0dXJuIG5ldyBEYXRlKE5hTik7aWYoYi51KGUpKXJldHVybiBuZXcgRGF0ZTtpZihlIGluc3RhbmNlb2YgRGF0ZSlyZXR1cm4gbmV3IERhdGUoZSk7aWYoXCJzdHJpbmdcIj09dHlwZW9mIGUmJiEvWiQvaS50ZXN0KGUpKXt2YXIgcj1lLm1hdGNoKCQpO2lmKHIpe3ZhciBpPXJbMl0tMXx8MCxzPShyWzddfHxcIjBcIikuc3Vic3RyaW5nKDAsMyk7cmV0dXJuIG4/bmV3IERhdGUoRGF0ZS5VVEMoclsxXSxpLHJbM118fDEscls0XXx8MCxyWzVdfHwwLHJbNl18fDAscykpOm5ldyBEYXRlKHJbMV0saSxyWzNdfHwxLHJbNF18fDAscls1XXx8MCxyWzZdfHwwLHMpfX1yZXR1cm4gbmV3IERhdGUoZSl9KHQpLHRoaXMuaW5pdCgpfSxtLmluaXQ9ZnVuY3Rpb24oKXt2YXIgdD10aGlzLiRkO3RoaXMuJHk9dC5nZXRGdWxsWWVhcigpLHRoaXMuJE09dC5nZXRNb250aCgpLHRoaXMuJEQ9dC5nZXREYXRlKCksdGhpcy4kVz10LmdldERheSgpLHRoaXMuJEg9dC5nZXRIb3VycygpLHRoaXMuJG09dC5nZXRNaW51dGVzKCksdGhpcy4kcz10LmdldFNlY29uZHMoKSx0aGlzLiRtcz10LmdldE1pbGxpc2Vjb25kcygpfSxtLiR1dGlscz1mdW5jdGlvbigpe3JldHVybiBifSxtLmlzVmFsaWQ9ZnVuY3Rpb24oKXtyZXR1cm4hKHRoaXMuJGQudG9TdHJpbmcoKT09PWwpfSxtLmlzU2FtZT1mdW5jdGlvbih0LGUpe3ZhciBuPU8odCk7cmV0dXJuIHRoaXMuc3RhcnRPZihlKTw9biYmbjw9dGhpcy5lbmRPZihlKX0sbS5pc0FmdGVyPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIE8odCk8dGhpcy5zdGFydE9mKGUpfSxtLmlzQmVmb3JlPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHRoaXMuZW5kT2YoZSk8Tyh0KX0sbS4kZz1mdW5jdGlvbih0LGUsbil7cmV0dXJuIGIudSh0KT90aGlzW2VdOnRoaXMuc2V0KG4sdCl9LG0udW5peD1mdW5jdGlvbigpe3JldHVybiBNYXRoLmZsb29yKHRoaXMudmFsdWVPZigpLzFlMyl9LG0udmFsdWVPZj1mdW5jdGlvbigpe3JldHVybiB0aGlzLiRkLmdldFRpbWUoKX0sbS5zdGFydE9mPWZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcyxyPSEhYi51KGUpfHxlLGY9Yi5wKHQpLGw9ZnVuY3Rpb24odCxlKXt2YXIgaT1iLncobi4kdT9EYXRlLlVUQyhuLiR5LGUsdCk6bmV3IERhdGUobi4keSxlLHQpLG4pO3JldHVybiByP2k6aS5lbmRPZihhKX0sJD1mdW5jdGlvbih0LGUpe3JldHVybiBiLncobi50b0RhdGUoKVt0XS5hcHBseShuLnRvRGF0ZShcInNcIiksKHI/WzAsMCwwLDBdOlsyMyw1OSw1OSw5OTldKS5zbGljZShlKSksbil9LHk9dGhpcy4kVyxNPXRoaXMuJE0sbT10aGlzLiRELHY9XCJzZXRcIisodGhpcy4kdT9cIlVUQ1wiOlwiXCIpO3N3aXRjaChmKXtjYXNlIGg6cmV0dXJuIHI/bCgxLDApOmwoMzEsMTEpO2Nhc2UgYzpyZXR1cm4gcj9sKDEsTSk6bCgwLE0rMSk7Y2FzZSBvOnZhciBnPXRoaXMuJGxvY2FsZSgpLndlZWtTdGFydHx8MCxEPSh5PGc/eSs3OnkpLWc7cmV0dXJuIGwocj9tLUQ6bSsoNi1EKSxNKTtjYXNlIGE6Y2FzZSBkOnJldHVybiAkKHYrXCJIb3Vyc1wiLDApO2Nhc2UgdTpyZXR1cm4gJCh2K1wiTWludXRlc1wiLDEpO2Nhc2UgczpyZXR1cm4gJCh2K1wiU2Vjb25kc1wiLDIpO2Nhc2UgaTpyZXR1cm4gJCh2K1wiTWlsbGlzZWNvbmRzXCIsMyk7ZGVmYXVsdDpyZXR1cm4gdGhpcy5jbG9uZSgpfX0sbS5lbmRPZj1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5zdGFydE9mKHQsITEpfSxtLiRzZXQ9ZnVuY3Rpb24odCxlKXt2YXIgbixvPWIucCh0KSxmPVwic2V0XCIrKHRoaXMuJHU/XCJVVENcIjpcIlwiKSxsPShuPXt9LG5bYV09ZitcIkRhdGVcIixuW2RdPWYrXCJEYXRlXCIsbltjXT1mK1wiTW9udGhcIixuW2hdPWYrXCJGdWxsWWVhclwiLG5bdV09ZitcIkhvdXJzXCIsbltzXT1mK1wiTWludXRlc1wiLG5baV09ZitcIlNlY29uZHNcIixuW3JdPWYrXCJNaWxsaXNlY29uZHNcIixuKVtvXSwkPW89PT1hP3RoaXMuJEQrKGUtdGhpcy4kVyk6ZTtpZihvPT09Y3x8bz09PWgpe3ZhciB5PXRoaXMuY2xvbmUoKS5zZXQoZCwxKTt5LiRkW2xdKCQpLHkuaW5pdCgpLHRoaXMuJGQ9eS5zZXQoZCxNYXRoLm1pbih0aGlzLiRELHkuZGF5c0luTW9udGgoKSkpLiRkfWVsc2UgbCYmdGhpcy4kZFtsXSgkKTtyZXR1cm4gdGhpcy5pbml0KCksdGhpc30sbS5zZXQ9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdGhpcy5jbG9uZSgpLiRzZXQodCxlKX0sbS5nZXQ9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXNbYi5wKHQpXSgpfSxtLmFkZD1mdW5jdGlvbihyLGYpe3ZhciBkLGw9dGhpcztyPU51bWJlcihyKTt2YXIgJD1iLnAoZikseT1mdW5jdGlvbih0KXt2YXIgZT1PKGwpO3JldHVybiBiLncoZS5kYXRlKGUuZGF0ZSgpK01hdGgucm91bmQodCpyKSksbCl9O2lmKCQ9PT1jKXJldHVybiB0aGlzLnNldChjLHRoaXMuJE0rcik7aWYoJD09PWgpcmV0dXJuIHRoaXMuc2V0KGgsdGhpcy4keStyKTtpZigkPT09YSlyZXR1cm4geSgxKTtpZigkPT09bylyZXR1cm4geSg3KTt2YXIgTT0oZD17fSxkW3NdPWUsZFt1XT1uLGRbaV09dCxkKVskXXx8MSxtPXRoaXMuJGQuZ2V0VGltZSgpK3IqTTtyZXR1cm4gYi53KG0sdGhpcyl9LG0uc3VidHJhY3Q9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdGhpcy5hZGQoLTEqdCxlKX0sbS5mb3JtYXQ9ZnVuY3Rpb24odCl7dmFyIGU9dGhpcyxuPXRoaXMuJGxvY2FsZSgpO2lmKCF0aGlzLmlzVmFsaWQoKSlyZXR1cm4gbi5pbnZhbGlkRGF0ZXx8bDt2YXIgcj10fHxcIllZWVktTU0tRERUSEg6bW06c3NaXCIsaT1iLnoodGhpcykscz10aGlzLiRILHU9dGhpcy4kbSxhPXRoaXMuJE0sbz1uLndlZWtkYXlzLGM9bi5tb250aHMsZj1uLm1lcmlkaWVtLGg9ZnVuY3Rpb24odCxuLGkscyl7cmV0dXJuIHQmJih0W25dfHx0KGUscikpfHxpW25dLnNsaWNlKDAscyl9LGQ9ZnVuY3Rpb24odCl7cmV0dXJuIGIucyhzJTEyfHwxMix0LFwiMFwiKX0sJD1mfHxmdW5jdGlvbih0LGUsbil7dmFyIHI9dDwxMj9cIkFNXCI6XCJQTVwiO3JldHVybiBuP3IudG9Mb3dlckNhc2UoKTpyfTtyZXR1cm4gci5yZXBsYWNlKHksKGZ1bmN0aW9uKHQscil7cmV0dXJuIHJ8fGZ1bmN0aW9uKHQpe3N3aXRjaCh0KXtjYXNlXCJZWVwiOnJldHVybiBTdHJpbmcoZS4keSkuc2xpY2UoLTIpO2Nhc2VcIllZWVlcIjpyZXR1cm4gYi5zKGUuJHksNCxcIjBcIik7Y2FzZVwiTVwiOnJldHVybiBhKzE7Y2FzZVwiTU1cIjpyZXR1cm4gYi5zKGErMSwyLFwiMFwiKTtjYXNlXCJNTU1cIjpyZXR1cm4gaChuLm1vbnRoc1Nob3J0LGEsYywzKTtjYXNlXCJNTU1NXCI6cmV0dXJuIGgoYyxhKTtjYXNlXCJEXCI6cmV0dXJuIGUuJEQ7Y2FzZVwiRERcIjpyZXR1cm4gYi5zKGUuJEQsMixcIjBcIik7Y2FzZVwiZFwiOnJldHVybiBTdHJpbmcoZS4kVyk7Y2FzZVwiZGRcIjpyZXR1cm4gaChuLndlZWtkYXlzTWluLGUuJFcsbywyKTtjYXNlXCJkZGRcIjpyZXR1cm4gaChuLndlZWtkYXlzU2hvcnQsZS4kVyxvLDMpO2Nhc2VcImRkZGRcIjpyZXR1cm4gb1tlLiRXXTtjYXNlXCJIXCI6cmV0dXJuIFN0cmluZyhzKTtjYXNlXCJISFwiOnJldHVybiBiLnMocywyLFwiMFwiKTtjYXNlXCJoXCI6cmV0dXJuIGQoMSk7Y2FzZVwiaGhcIjpyZXR1cm4gZCgyKTtjYXNlXCJhXCI6cmV0dXJuICQocyx1LCEwKTtjYXNlXCJBXCI6cmV0dXJuICQocyx1LCExKTtjYXNlXCJtXCI6cmV0dXJuIFN0cmluZyh1KTtjYXNlXCJtbVwiOnJldHVybiBiLnModSwyLFwiMFwiKTtjYXNlXCJzXCI6cmV0dXJuIFN0cmluZyhlLiRzKTtjYXNlXCJzc1wiOnJldHVybiBiLnMoZS4kcywyLFwiMFwiKTtjYXNlXCJTU1NcIjpyZXR1cm4gYi5zKGUuJG1zLDMsXCIwXCIpO2Nhc2VcIlpcIjpyZXR1cm4gaX1yZXR1cm4gbnVsbH0odCl8fGkucmVwbGFjZShcIjpcIixcIlwiKX0pKX0sbS51dGNPZmZzZXQ9ZnVuY3Rpb24oKXtyZXR1cm4gMTUqLU1hdGgucm91bmQodGhpcy4kZC5nZXRUaW1lem9uZU9mZnNldCgpLzE1KX0sbS5kaWZmPWZ1bmN0aW9uKHIsZCxsKXt2YXIgJCx5PXRoaXMsTT1iLnAoZCksbT1PKHIpLHY9KG0udXRjT2Zmc2V0KCktdGhpcy51dGNPZmZzZXQoKSkqZSxnPXRoaXMtbSxEPWZ1bmN0aW9uKCl7cmV0dXJuIGIubSh5LG0pfTtzd2l0Y2goTSl7Y2FzZSBoOiQ9RCgpLzEyO2JyZWFrO2Nhc2UgYzokPUQoKTticmVhaztjYXNlIGY6JD1EKCkvMzticmVhaztjYXNlIG86JD0oZy12KS82MDQ4ZTU7YnJlYWs7Y2FzZSBhOiQ9KGctdikvODY0ZTU7YnJlYWs7Y2FzZSB1OiQ9Zy9uO2JyZWFrO2Nhc2UgczokPWcvZTticmVhaztjYXNlIGk6JD1nL3Q7YnJlYWs7ZGVmYXVsdDokPWd9cmV0dXJuIGw/JDpiLmEoJCl9LG0uZGF5c0luTW9udGg9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5lbmRPZihjKS4kRH0sbS4kbG9jYWxlPWZ1bmN0aW9uKCl7cmV0dXJuIERbdGhpcy4kTF19LG0ubG9jYWxlPWZ1bmN0aW9uKHQsZSl7aWYoIXQpcmV0dXJuIHRoaXMuJEw7dmFyIG49dGhpcy5jbG9uZSgpLHI9dyh0LGUsITApO3JldHVybiByJiYobi4kTD1yKSxufSxtLmNsb25lPWZ1bmN0aW9uKCl7cmV0dXJuIGIudyh0aGlzLiRkLHRoaXMpfSxtLnRvRGF0ZT1mdW5jdGlvbigpe3JldHVybiBuZXcgRGF0ZSh0aGlzLnZhbHVlT2YoKSl9LG0udG9KU09OPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuaXNWYWxpZCgpP3RoaXMudG9JU09TdHJpbmcoKTpudWxsfSxtLnRvSVNPU3RyaW5nPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuJGQudG9JU09TdHJpbmcoKX0sbS50b1N0cmluZz1mdW5jdGlvbigpe3JldHVybiB0aGlzLiRkLnRvVVRDU3RyaW5nKCl9LE19KCksaz1fLnByb3RvdHlwZTtyZXR1cm4gTy5wcm90b3R5cGU9ayxbW1wiJG1zXCIscl0sW1wiJHNcIixpXSxbXCIkbVwiLHNdLFtcIiRIXCIsdV0sW1wiJFdcIixhXSxbXCIkTVwiLGNdLFtcIiR5XCIsaF0sW1wiJERcIixkXV0uZm9yRWFjaCgoZnVuY3Rpb24odCl7a1t0WzFdXT1mdW5jdGlvbihlKXtyZXR1cm4gdGhpcy4kZyhlLHRbMF0sdFsxXSl9fSkpLE8uZXh0ZW5kPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQuJGl8fCh0KGUsXyxPKSx0LiRpPSEwKSxPfSxPLmxvY2FsZT13LE8uaXNEYXlqcz1TLE8udW5peD1mdW5jdGlvbih0KXtyZXR1cm4gTygxZTMqdCl9LE8uZW49RFtnXSxPLkxzPUQsTy5wPXt9LE99KSk7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0ZW0pIHtcbiAgdmFyIGNvbnRlbnQgPSBpdGVtWzFdO1xuICB2YXIgY3NzTWFwcGluZyA9IGl0ZW1bM107XG4gIGlmICghY3NzTWFwcGluZykge1xuICAgIHJldHVybiBjb250ZW50O1xuICB9XG4gIGlmICh0eXBlb2YgYnRvYSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgdmFyIGJhc2U2NCA9IGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KGNzc01hcHBpbmcpKSkpO1xuICAgIHZhciBkYXRhID0gXCJzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxcIi5jb25jYXQoYmFzZTY0KTtcbiAgICB2YXIgc291cmNlTWFwcGluZyA9IFwiLyojIFwiLmNvbmNhdChkYXRhLCBcIiAqL1wiKTtcbiAgICByZXR1cm4gW2NvbnRlbnRdLmNvbmNhdChbc291cmNlTWFwcGluZ10pLmpvaW4oXCJcXG5cIik7XG4gIH1cbiAgcmV0dXJuIFtjb250ZW50XS5qb2luKFwiXFxuXCIpO1xufTsiLCIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBgLnNoYWtlIHtcbiAgYW5pbWF0aW9uOiBzaGFrZSAwLjZzO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHotaW5kZXg6IDEwO1xufVxuXG5Aa2V5ZnJhbWVzIHNoYWtlIHtcbiAgMCUsXG4gIDEwMCUge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcbiAgfVxuXG4gIDEwJSxcbiAgMzAlLFxuICA1MCUsXG4gIDcwJSxcbiAgOTAlIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTVweCk7XG4gIH1cblxuICAyMCUsXG4gIDQwJSxcbiAgNjAlLFxuICA4MCUge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCg1cHgpO1xuICB9XG59XG5gLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9mcmFtZXdvcmsvdmlldy9hYnN0cmFjdC12aWV3LmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtFQUNFLHFCQUFxQjtFQUNyQixrQkFBa0I7RUFDbEIsV0FBVztBQUNiOztBQUVBO0VBQ0U7O0lBRUUsd0JBQXdCO0VBQzFCOztFQUVBOzs7OztJQUtFLDJCQUEyQjtFQUM3Qjs7RUFFQTs7OztJQUlFLDBCQUEwQjtFQUM1QjtBQUNGXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIi5zaGFrZSB7XFxuICBhbmltYXRpb246IHNoYWtlIDAuNnM7XFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxuICB6LWluZGV4OiAxMDtcXG59XFxuXFxuQGtleWZyYW1lcyBzaGFrZSB7XFxuICAwJSxcXG4gIDEwMCUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XFxuICB9XFxuXFxuICAxMCUsXFxuICAzMCUsXFxuICA1MCUsXFxuICA3MCUsXFxuICA5MCUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTVweCk7XFxuICB9XFxuXFxuICAyMCUsXFxuICA0MCUsXFxuICA2MCUsXFxuICA4MCUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoNXB4KTtcXG4gIH1cXG59XFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKSB7XG4gIHZhciBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInN0eWxlXCIpO1xuICBvcHRpb25zLnNldEF0dHJpYnV0ZXMoZWxlbWVudCwgb3B0aW9ucy5hdHRyaWJ1dGVzKTtcbiAgb3B0aW9ucy5pbnNlcnQoZWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbiAgcmV0dXJuIGVsZW1lbnQ7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydFN0eWxlRWxlbWVudDsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIG1lbW8gPSB7fTtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBnZXRUYXJnZXQodGFyZ2V0KSB7XG4gIGlmICh0eXBlb2YgbWVtb1t0YXJnZXRdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgdmFyIHN0eWxlVGFyZ2V0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0YXJnZXQpO1xuXG4gICAgLy8gU3BlY2lhbCBjYXNlIHRvIHJldHVybiBoZWFkIG9mIGlmcmFtZSBpbnN0ZWFkIG9mIGlmcmFtZSBpdHNlbGZcbiAgICBpZiAod2luZG93LkhUTUxJRnJhbWVFbGVtZW50ICYmIHN0eWxlVGFyZ2V0IGluc3RhbmNlb2Ygd2luZG93LkhUTUxJRnJhbWVFbGVtZW50KSB7XG4gICAgICB0cnkge1xuICAgICAgICAvLyBUaGlzIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFjY2VzcyB0byBpZnJhbWUgaXMgYmxvY2tlZFxuICAgICAgICAvLyBkdWUgdG8gY3Jvc3Mtb3JpZ2luIHJlc3RyaWN0aW9uc1xuICAgICAgICBzdHlsZVRhcmdldCA9IHN0eWxlVGFyZ2V0LmNvbnRlbnREb2N1bWVudC5oZWFkO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAvLyBpc3RhbmJ1bCBpZ25vcmUgbmV4dFxuICAgICAgICBzdHlsZVRhcmdldCA9IG51bGw7XG4gICAgICB9XG4gICAgfVxuICAgIG1lbW9bdGFyZ2V0XSA9IHN0eWxlVGFyZ2V0O1xuICB9XG4gIHJldHVybiBtZW1vW3RhcmdldF07XG59XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gaW5zZXJ0QnlTZWxlY3RvcihpbnNlcnQsIHN0eWxlKSB7XG4gIHZhciB0YXJnZXQgPSBnZXRUYXJnZXQoaW5zZXJ0KTtcbiAgaWYgKCF0YXJnZXQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJDb3VsZG4ndCBmaW5kIGEgc3R5bGUgdGFyZ2V0LiBUaGlzIHByb2JhYmx5IG1lYW5zIHRoYXQgdGhlIHZhbHVlIGZvciB0aGUgJ2luc2VydCcgcGFyYW1ldGVyIGlzIGludmFsaWQuXCIpO1xuICB9XG4gIHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydEJ5U2VsZWN0b3I7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gYXBwbHkoc3R5bGVFbGVtZW50LCBvcHRpb25zLCBvYmopIHtcbiAgdmFyIGNzcyA9IFwiXCI7XG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChvYmouc3VwcG9ydHMsIFwiKSB7XCIpO1xuICB9XG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJAbWVkaWEgXCIuY29uY2F0KG9iai5tZWRpYSwgXCIge1wiKTtcbiAgfVxuICB2YXIgbmVlZExheWVyID0gdHlwZW9mIG9iai5sYXllciAhPT0gXCJ1bmRlZmluZWRcIjtcbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIkBsYXllclwiLmNvbmNhdChvYmoubGF5ZXIubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChvYmoubGF5ZXIpIDogXCJcIiwgXCIge1wiKTtcbiAgfVxuICBjc3MgKz0gb2JqLmNzcztcbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cbiAgdmFyIHNvdXJjZU1hcCA9IG9iai5zb3VyY2VNYXA7XG4gIGlmIChzb3VyY2VNYXAgJiYgdHlwZW9mIGJ0b2EgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICBjc3MgKz0gXCJcXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LFwiLmNvbmNhdChidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpLCBcIiAqL1wiKTtcbiAgfVxuXG4gIC8vIEZvciBvbGQgSUVcbiAgLyogaXN0YW5idWwgaWdub3JlIGlmICAqL1xuICBvcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50LCBvcHRpb25zLm9wdGlvbnMpO1xufVxuZnVuY3Rpb24gcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCkge1xuICAvLyBpc3RhbmJ1bCBpZ25vcmUgaWZcbiAgaWYgKHN0eWxlRWxlbWVudC5wYXJlbnROb2RlID09PSBudWxsKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIHN0eWxlRWxlbWVudC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudCk7XG59XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gZG9tQVBJKG9wdGlvbnMpIHtcbiAgaWYgKHR5cGVvZiBkb2N1bWVudCA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHJldHVybiB7XG4gICAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZSgpIHt9LFxuICAgICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoKSB7fVxuICAgIH07XG4gIH1cbiAgdmFyIHN0eWxlRWxlbWVudCA9IG9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpO1xuICByZXR1cm4ge1xuICAgIHVwZGF0ZTogZnVuY3Rpb24gdXBkYXRlKG9iaikge1xuICAgICAgYXBwbHkoc3R5bGVFbGVtZW50LCBvcHRpb25zLCBvYmopO1xuICAgIH0sXG4gICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoKSB7XG4gICAgICByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KTtcbiAgICB9XG4gIH07XG59XG5tb2R1bGUuZXhwb3J0cyA9IGRvbUFQSTsiLCIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgYC5mbGF0cGlja3ItY2FsZW5kYXJ7YmFja2dyb3VuZDp0cmFuc3BhcmVudDtvcGFjaXR5OjA7ZGlzcGxheTpub25lO3RleHQtYWxpZ246Y2VudGVyO3Zpc2liaWxpdHk6aGlkZGVuO3BhZGRpbmc6MDstd2Via2l0LWFuaW1hdGlvbjpub25lO2FuaW1hdGlvbjpub25lO2RpcmVjdGlvbjpsdHI7Ym9yZGVyOjA7Zm9udC1zaXplOjE0cHg7bGluZS1oZWlnaHQ6MjRweDtib3JkZXItcmFkaXVzOjVweDtwb3NpdGlvbjphYnNvbHV0ZTt3aWR0aDozMDcuODc1cHg7LXdlYmtpdC1ib3gtc2l6aW5nOmJvcmRlci1ib3g7Ym94LXNpemluZzpib3JkZXItYm94Oy1tcy10b3VjaC1hY3Rpb246bWFuaXB1bGF0aW9uO3RvdWNoLWFjdGlvbjptYW5pcHVsYXRpb247YmFja2dyb3VuZDojZmZmOy13ZWJraXQtYm94LXNoYWRvdzoxcHggMCAwICNlNmU2ZTYsLTFweCAwIDAgI2U2ZTZlNiwwIDFweCAwICNlNmU2ZTYsMCAtMXB4IDAgI2U2ZTZlNiwwIDNweCAxM3B4IHJnYmEoMCwwLDAsMC4wOCk7Ym94LXNoYWRvdzoxcHggMCAwICNlNmU2ZTYsLTFweCAwIDAgI2U2ZTZlNiwwIDFweCAwICNlNmU2ZTYsMCAtMXB4IDAgI2U2ZTZlNiwwIDNweCAxM3B4IHJnYmEoMCwwLDAsMC4wOCl9LmZsYXRwaWNrci1jYWxlbmRhci5vcGVuLC5mbGF0cGlja3ItY2FsZW5kYXIuaW5saW5le29wYWNpdHk6MTttYXgtaGVpZ2h0OjY0MHB4O3Zpc2liaWxpdHk6dmlzaWJsZX0uZmxhdHBpY2tyLWNhbGVuZGFyLm9wZW57ZGlzcGxheTppbmxpbmUtYmxvY2s7ei1pbmRleDo5OTk5OX0uZmxhdHBpY2tyLWNhbGVuZGFyLmFuaW1hdGUub3Blbnstd2Via2l0LWFuaW1hdGlvbjpmcEZhZGVJbkRvd24gMzAwbXMgY3ViaWMtYmV6aWVyKC4yMywxLC4zMiwxKTthbmltYXRpb246ZnBGYWRlSW5Eb3duIDMwMG1zIGN1YmljLWJlemllciguMjMsMSwuMzIsMSl9LmZsYXRwaWNrci1jYWxlbmRhci5pbmxpbmV7ZGlzcGxheTpibG9jaztwb3NpdGlvbjpyZWxhdGl2ZTt0b3A6MnB4fS5mbGF0cGlja3ItY2FsZW5kYXIuc3RhdGlje3Bvc2l0aW9uOmFic29sdXRlO3RvcDpjYWxjKDEwMCUgKyAycHgpfS5mbGF0cGlja3ItY2FsZW5kYXIuc3RhdGljLm9wZW57ei1pbmRleDo5OTk7ZGlzcGxheTpibG9ja30uZmxhdHBpY2tyLWNhbGVuZGFyLm11bHRpTW9udGggLmZsYXRwaWNrci1kYXlzIC5kYXlDb250YWluZXI6bnRoLWNoaWxkKG4rMSkgLmZsYXRwaWNrci1kYXkuaW5SYW5nZTpudGgtY2hpbGQoN24rNyl7LXdlYmtpdC1ib3gtc2hhZG93Om5vbmUgIWltcG9ydGFudDtib3gtc2hhZG93Om5vbmUgIWltcG9ydGFudH0uZmxhdHBpY2tyLWNhbGVuZGFyLm11bHRpTW9udGggLmZsYXRwaWNrci1kYXlzIC5kYXlDb250YWluZXI6bnRoLWNoaWxkKG4rMikgLmZsYXRwaWNrci1kYXkuaW5SYW5nZTpudGgtY2hpbGQoN24rMSl7LXdlYmtpdC1ib3gtc2hhZG93Oi0ycHggMCAwICNlNmU2ZTYsNXB4IDAgMCAjZTZlNmU2O2JveC1zaGFkb3c6LTJweCAwIDAgI2U2ZTZlNiw1cHggMCAwICNlNmU2ZTZ9LmZsYXRwaWNrci1jYWxlbmRhciAuaGFzV2Vla3MgLmRheUNvbnRhaW5lciwuZmxhdHBpY2tyLWNhbGVuZGFyIC5oYXNUaW1lIC5kYXlDb250YWluZXJ7Ym9yZGVyLWJvdHRvbTowO2JvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOjA7Ym9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czowfS5mbGF0cGlja3ItY2FsZW5kYXIgLmhhc1dlZWtzIC5kYXlDb250YWluZXJ7Ym9yZGVyLWxlZnQ6MH0uZmxhdHBpY2tyLWNhbGVuZGFyLmhhc1RpbWUgLmZsYXRwaWNrci10aW1le2hlaWdodDo0MHB4O2JvcmRlci10b3A6MXB4IHNvbGlkICNlNmU2ZTZ9LmZsYXRwaWNrci1jYWxlbmRhci5ub0NhbGVuZGFyLmhhc1RpbWUgLmZsYXRwaWNrci10aW1le2hlaWdodDphdXRvfS5mbGF0cGlja3ItY2FsZW5kYXI6YmVmb3JlLC5mbGF0cGlja3ItY2FsZW5kYXI6YWZ0ZXJ7cG9zaXRpb246YWJzb2x1dGU7ZGlzcGxheTpibG9jaztwb2ludGVyLWV2ZW50czpub25lO2JvcmRlcjpzb2xpZCB0cmFuc3BhcmVudDtjb250ZW50OicnO2hlaWdodDowO3dpZHRoOjA7bGVmdDoyMnB4fS5mbGF0cGlja3ItY2FsZW5kYXIucmlnaHRNb3N0OmJlZm9yZSwuZmxhdHBpY2tyLWNhbGVuZGFyLmFycm93UmlnaHQ6YmVmb3JlLC5mbGF0cGlja3ItY2FsZW5kYXIucmlnaHRNb3N0OmFmdGVyLC5mbGF0cGlja3ItY2FsZW5kYXIuYXJyb3dSaWdodDphZnRlcntsZWZ0OmF1dG87cmlnaHQ6MjJweH0uZmxhdHBpY2tyLWNhbGVuZGFyLmFycm93Q2VudGVyOmJlZm9yZSwuZmxhdHBpY2tyLWNhbGVuZGFyLmFycm93Q2VudGVyOmFmdGVye2xlZnQ6NTAlO3JpZ2h0OjUwJX0uZmxhdHBpY2tyLWNhbGVuZGFyOmJlZm9yZXtib3JkZXItd2lkdGg6NXB4O21hcmdpbjowIC01cHh9LmZsYXRwaWNrci1jYWxlbmRhcjphZnRlcntib3JkZXItd2lkdGg6NHB4O21hcmdpbjowIC00cHh9LmZsYXRwaWNrci1jYWxlbmRhci5hcnJvd1RvcDpiZWZvcmUsLmZsYXRwaWNrci1jYWxlbmRhci5hcnJvd1RvcDphZnRlcntib3R0b206MTAwJX0uZmxhdHBpY2tyLWNhbGVuZGFyLmFycm93VG9wOmJlZm9yZXtib3JkZXItYm90dG9tLWNvbG9yOiNlNmU2ZTZ9LmZsYXRwaWNrci1jYWxlbmRhci5hcnJvd1RvcDphZnRlcntib3JkZXItYm90dG9tLWNvbG9yOiNmZmZ9LmZsYXRwaWNrci1jYWxlbmRhci5hcnJvd0JvdHRvbTpiZWZvcmUsLmZsYXRwaWNrci1jYWxlbmRhci5hcnJvd0JvdHRvbTphZnRlcnt0b3A6MTAwJX0uZmxhdHBpY2tyLWNhbGVuZGFyLmFycm93Qm90dG9tOmJlZm9yZXtib3JkZXItdG9wLWNvbG9yOiNlNmU2ZTZ9LmZsYXRwaWNrci1jYWxlbmRhci5hcnJvd0JvdHRvbTphZnRlcntib3JkZXItdG9wLWNvbG9yOiNmZmZ9LmZsYXRwaWNrci1jYWxlbmRhcjpmb2N1c3tvdXRsaW5lOjB9LmZsYXRwaWNrci13cmFwcGVye3Bvc2l0aW9uOnJlbGF0aXZlO2Rpc3BsYXk6aW5saW5lLWJsb2NrfS5mbGF0cGlja3ItbW9udGhze2Rpc3BsYXk6LXdlYmtpdC1ib3g7ZGlzcGxheTotd2Via2l0LWZsZXg7ZGlzcGxheTotbXMtZmxleGJveDtkaXNwbGF5OmZsZXh9LmZsYXRwaWNrci1tb250aHMgLmZsYXRwaWNrci1tb250aHtiYWNrZ3JvdW5kOnRyYW5zcGFyZW50O2NvbG9yOnJnYmEoMCwwLDAsMC45KTtmaWxsOnJnYmEoMCwwLDAsMC45KTtoZWlnaHQ6MzRweDtsaW5lLWhlaWdodDoxO3RleHQtYWxpZ246Y2VudGVyO3Bvc2l0aW9uOnJlbGF0aXZlOy13ZWJraXQtdXNlci1zZWxlY3Q6bm9uZTstbW96LXVzZXItc2VsZWN0Om5vbmU7LW1zLXVzZXItc2VsZWN0Om5vbmU7dXNlci1zZWxlY3Q6bm9uZTtvdmVyZmxvdzpoaWRkZW47LXdlYmtpdC1ib3gtZmxleDoxOy13ZWJraXQtZmxleDoxOy1tcy1mbGV4OjE7ZmxleDoxfS5mbGF0cGlja3ItbW9udGhzIC5mbGF0cGlja3ItcHJldi1tb250aCwuZmxhdHBpY2tyLW1vbnRocyAuZmxhdHBpY2tyLW5leHQtbW9udGh7LXdlYmtpdC11c2VyLXNlbGVjdDpub25lOy1tb3otdXNlci1zZWxlY3Q6bm9uZTstbXMtdXNlci1zZWxlY3Q6bm9uZTt1c2VyLXNlbGVjdDpub25lO3RleHQtZGVjb3JhdGlvbjpub25lO2N1cnNvcjpwb2ludGVyO3Bvc2l0aW9uOmFic29sdXRlO3RvcDowO2hlaWdodDozNHB4O3BhZGRpbmc6MTBweDt6LWluZGV4OjM7Y29sb3I6cmdiYSgwLDAsMCwwLjkpO2ZpbGw6cmdiYSgwLDAsMCwwLjkpfS5mbGF0cGlja3ItbW9udGhzIC5mbGF0cGlja3ItcHJldi1tb250aC5mbGF0cGlja3ItZGlzYWJsZWQsLmZsYXRwaWNrci1tb250aHMgLmZsYXRwaWNrci1uZXh0LW1vbnRoLmZsYXRwaWNrci1kaXNhYmxlZHtkaXNwbGF5Om5vbmV9LmZsYXRwaWNrci1tb250aHMgLmZsYXRwaWNrci1wcmV2LW1vbnRoIGksLmZsYXRwaWNrci1tb250aHMgLmZsYXRwaWNrci1uZXh0LW1vbnRoIGl7cG9zaXRpb246cmVsYXRpdmV9LmZsYXRwaWNrci1tb250aHMgLmZsYXRwaWNrci1wcmV2LW1vbnRoLmZsYXRwaWNrci1wcmV2LW1vbnRoLC5mbGF0cGlja3ItbW9udGhzIC5mbGF0cGlja3ItbmV4dC1tb250aC5mbGF0cGlja3ItcHJldi1tb250aHsvKlxuICAgICAgLypydGw6YmVnaW46aWdub3JlKi9sZWZ0OjAvKlxuICAgICAgLypydGw6ZW5kOmlnbm9yZSovfS8qXG4gICAgICAvKnJ0bDpiZWdpbjppZ25vcmUqL1xuLypcbiAgICAgIC8qcnRsOmVuZDppZ25vcmUqL1xuLmZsYXRwaWNrci1tb250aHMgLmZsYXRwaWNrci1wcmV2LW1vbnRoLmZsYXRwaWNrci1uZXh0LW1vbnRoLC5mbGF0cGlja3ItbW9udGhzIC5mbGF0cGlja3ItbmV4dC1tb250aC5mbGF0cGlja3ItbmV4dC1tb250aHsvKlxuICAgICAgLypydGw6YmVnaW46aWdub3JlKi9yaWdodDowLypcbiAgICAgIC8qcnRsOmVuZDppZ25vcmUqL30vKlxuICAgICAgLypydGw6YmVnaW46aWdub3JlKi9cbi8qXG4gICAgICAvKnJ0bDplbmQ6aWdub3JlKi9cbi5mbGF0cGlja3ItbW9udGhzIC5mbGF0cGlja3ItcHJldi1tb250aDpob3ZlciwuZmxhdHBpY2tyLW1vbnRocyAuZmxhdHBpY2tyLW5leHQtbW9udGg6aG92ZXJ7Y29sb3I6Izk1OWVhOX0uZmxhdHBpY2tyLW1vbnRocyAuZmxhdHBpY2tyLXByZXYtbW9udGg6aG92ZXIgc3ZnLC5mbGF0cGlja3ItbW9udGhzIC5mbGF0cGlja3ItbmV4dC1tb250aDpob3ZlciBzdmd7ZmlsbDojZjY0NzQ3fS5mbGF0cGlja3ItbW9udGhzIC5mbGF0cGlja3ItcHJldi1tb250aCBzdmcsLmZsYXRwaWNrci1tb250aHMgLmZsYXRwaWNrci1uZXh0LW1vbnRoIHN2Z3t3aWR0aDoxNHB4O2hlaWdodDoxNHB4fS5mbGF0cGlja3ItbW9udGhzIC5mbGF0cGlja3ItcHJldi1tb250aCBzdmcgcGF0aCwuZmxhdHBpY2tyLW1vbnRocyAuZmxhdHBpY2tyLW5leHQtbW9udGggc3ZnIHBhdGh7LXdlYmtpdC10cmFuc2l0aW9uOmZpbGwgLjFzO3RyYW5zaXRpb246ZmlsbCAuMXM7ZmlsbDppbmhlcml0fS5udW1JbnB1dFdyYXBwZXJ7cG9zaXRpb246cmVsYXRpdmU7aGVpZ2h0OmF1dG99Lm51bUlucHV0V3JhcHBlciBpbnB1dCwubnVtSW5wdXRXcmFwcGVyIHNwYW57ZGlzcGxheTppbmxpbmUtYmxvY2t9Lm51bUlucHV0V3JhcHBlciBpbnB1dHt3aWR0aDoxMDAlfS5udW1JbnB1dFdyYXBwZXIgaW5wdXQ6Oi1tcy1jbGVhcntkaXNwbGF5Om5vbmV9Lm51bUlucHV0V3JhcHBlciBpbnB1dDo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbiwubnVtSW5wdXRXcmFwcGVyIGlucHV0Ojotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9ue21hcmdpbjowOy13ZWJraXQtYXBwZWFyYW5jZTpub25lfS5udW1JbnB1dFdyYXBwZXIgc3Bhbntwb3NpdGlvbjphYnNvbHV0ZTtyaWdodDowO3dpZHRoOjE0cHg7cGFkZGluZzowIDRweCAwIDJweDtoZWlnaHQ6NTAlO2xpbmUtaGVpZ2h0OjUwJTtvcGFjaXR5OjA7Y3Vyc29yOnBvaW50ZXI7Ym9yZGVyOjFweCBzb2xpZCByZ2JhKDU3LDU3LDU3LDAuMTUpOy13ZWJraXQtYm94LXNpemluZzpib3JkZXItYm94O2JveC1zaXppbmc6Ym9yZGVyLWJveH0ubnVtSW5wdXRXcmFwcGVyIHNwYW46aG92ZXJ7YmFja2dyb3VuZDpyZ2JhKDAsMCwwLDAuMSl9Lm51bUlucHV0V3JhcHBlciBzcGFuOmFjdGl2ZXtiYWNrZ3JvdW5kOnJnYmEoMCwwLDAsMC4yKX0ubnVtSW5wdXRXcmFwcGVyIHNwYW46YWZ0ZXJ7ZGlzcGxheTpibG9jaztjb250ZW50OlwiXCI7cG9zaXRpb246YWJzb2x1dGV9Lm51bUlucHV0V3JhcHBlciBzcGFuLmFycm93VXB7dG9wOjA7Ym9yZGVyLWJvdHRvbTowfS5udW1JbnB1dFdyYXBwZXIgc3Bhbi5hcnJvd1VwOmFmdGVye2JvcmRlci1sZWZ0OjRweCBzb2xpZCB0cmFuc3BhcmVudDtib3JkZXItcmlnaHQ6NHB4IHNvbGlkIHRyYW5zcGFyZW50O2JvcmRlci1ib3R0b206NHB4IHNvbGlkIHJnYmEoNTcsNTcsNTcsMC42KTt0b3A6MjYlfS5udW1JbnB1dFdyYXBwZXIgc3Bhbi5hcnJvd0Rvd257dG9wOjUwJX0ubnVtSW5wdXRXcmFwcGVyIHNwYW4uYXJyb3dEb3duOmFmdGVye2JvcmRlci1sZWZ0OjRweCBzb2xpZCB0cmFuc3BhcmVudDtib3JkZXItcmlnaHQ6NHB4IHNvbGlkIHRyYW5zcGFyZW50O2JvcmRlci10b3A6NHB4IHNvbGlkIHJnYmEoNTcsNTcsNTcsMC42KTt0b3A6NDAlfS5udW1JbnB1dFdyYXBwZXIgc3BhbiBzdmd7d2lkdGg6aW5oZXJpdDtoZWlnaHQ6YXV0b30ubnVtSW5wdXRXcmFwcGVyIHNwYW4gc3ZnIHBhdGh7ZmlsbDpyZ2JhKDAsMCwwLDAuNSl9Lm51bUlucHV0V3JhcHBlcjpob3ZlcntiYWNrZ3JvdW5kOnJnYmEoMCwwLDAsMC4wNSl9Lm51bUlucHV0V3JhcHBlcjpob3ZlciBzcGFue29wYWNpdHk6MX0uZmxhdHBpY2tyLWN1cnJlbnQtbW9udGh7Zm9udC1zaXplOjEzNSU7bGluZS1oZWlnaHQ6aW5oZXJpdDtmb250LXdlaWdodDozMDA7Y29sb3I6aW5oZXJpdDtwb3NpdGlvbjphYnNvbHV0ZTt3aWR0aDo3NSU7bGVmdDoxMi41JTtwYWRkaW5nOjcuNDhweCAwIDAgMDtsaW5lLWhlaWdodDoxO2hlaWdodDozNHB4O2Rpc3BsYXk6aW5saW5lLWJsb2NrO3RleHQtYWxpZ246Y2VudGVyOy13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsMCwwKTt0cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwwLDApfS5mbGF0cGlja3ItY3VycmVudC1tb250aCBzcGFuLmN1ci1tb250aHtmb250LWZhbWlseTppbmhlcml0O2ZvbnQtd2VpZ2h0OjcwMDtjb2xvcjppbmhlcml0O2Rpc3BsYXk6aW5saW5lLWJsb2NrO21hcmdpbi1sZWZ0Oi41Y2g7cGFkZGluZzowfS5mbGF0cGlja3ItY3VycmVudC1tb250aCBzcGFuLmN1ci1tb250aDpob3ZlcntiYWNrZ3JvdW5kOnJnYmEoMCwwLDAsMC4wNSl9LmZsYXRwaWNrci1jdXJyZW50LW1vbnRoIC5udW1JbnB1dFdyYXBwZXJ7d2lkdGg6NmNoO3dpZHRoOjdjaFxcXFwwO2Rpc3BsYXk6aW5saW5lLWJsb2NrfS5mbGF0cGlja3ItY3VycmVudC1tb250aCAubnVtSW5wdXRXcmFwcGVyIHNwYW4uYXJyb3dVcDphZnRlcntib3JkZXItYm90dG9tLWNvbG9yOnJnYmEoMCwwLDAsMC45KX0uZmxhdHBpY2tyLWN1cnJlbnQtbW9udGggLm51bUlucHV0V3JhcHBlciBzcGFuLmFycm93RG93bjphZnRlcntib3JkZXItdG9wLWNvbG9yOnJnYmEoMCwwLDAsMC45KX0uZmxhdHBpY2tyLWN1cnJlbnQtbW9udGggaW5wdXQuY3VyLXllYXJ7YmFja2dyb3VuZDp0cmFuc3BhcmVudDstd2Via2l0LWJveC1zaXppbmc6Ym9yZGVyLWJveDtib3gtc2l6aW5nOmJvcmRlci1ib3g7Y29sb3I6aW5oZXJpdDtjdXJzb3I6dGV4dDtwYWRkaW5nOjAgMCAwIC41Y2g7bWFyZ2luOjA7ZGlzcGxheTppbmxpbmUtYmxvY2s7Zm9udC1zaXplOmluaGVyaXQ7Zm9udC1mYW1pbHk6aW5oZXJpdDtmb250LXdlaWdodDozMDA7bGluZS1oZWlnaHQ6aW5oZXJpdDtoZWlnaHQ6YXV0bztib3JkZXI6MDtib3JkZXItcmFkaXVzOjA7dmVydGljYWwtYWxpZ246aW5pdGlhbDstd2Via2l0LWFwcGVhcmFuY2U6dGV4dGZpZWxkOy1tb3otYXBwZWFyYW5jZTp0ZXh0ZmllbGQ7YXBwZWFyYW5jZTp0ZXh0ZmllbGR9LmZsYXRwaWNrci1jdXJyZW50LW1vbnRoIGlucHV0LmN1ci15ZWFyOmZvY3Vze291dGxpbmU6MH0uZmxhdHBpY2tyLWN1cnJlbnQtbW9udGggaW5wdXQuY3VyLXllYXJbZGlzYWJsZWRdLC5mbGF0cGlja3ItY3VycmVudC1tb250aCBpbnB1dC5jdXIteWVhcltkaXNhYmxlZF06aG92ZXJ7Zm9udC1zaXplOjEwMCU7Y29sb3I6cmdiYSgwLDAsMCwwLjUpO2JhY2tncm91bmQ6dHJhbnNwYXJlbnQ7cG9pbnRlci1ldmVudHM6bm9uZX0uZmxhdHBpY2tyLWN1cnJlbnQtbW9udGggLmZsYXRwaWNrci1tb250aERyb3Bkb3duLW1vbnRoc3thcHBlYXJhbmNlOm1lbnVsaXN0O2JhY2tncm91bmQ6dHJhbnNwYXJlbnQ7Ym9yZGVyOm5vbmU7Ym9yZGVyLXJhZGl1czowO2JveC1zaXppbmc6Ym9yZGVyLWJveDtjb2xvcjppbmhlcml0O2N1cnNvcjpwb2ludGVyO2ZvbnQtc2l6ZTppbmhlcml0O2ZvbnQtZmFtaWx5OmluaGVyaXQ7Zm9udC13ZWlnaHQ6MzAwO2hlaWdodDphdXRvO2xpbmUtaGVpZ2h0OmluaGVyaXQ7bWFyZ2luOi0xcHggMCAwIDA7b3V0bGluZTpub25lO3BhZGRpbmc6MCAwIDAgLjVjaDtwb3NpdGlvbjpyZWxhdGl2ZTt2ZXJ0aWNhbC1hbGlnbjppbml0aWFsOy13ZWJraXQtYm94LXNpemluZzpib3JkZXItYm94Oy13ZWJraXQtYXBwZWFyYW5jZTptZW51bGlzdDstbW96LWFwcGVhcmFuY2U6bWVudWxpc3Q7d2lkdGg6YXV0b30uZmxhdHBpY2tyLWN1cnJlbnQtbW9udGggLmZsYXRwaWNrci1tb250aERyb3Bkb3duLW1vbnRoczpmb2N1cywuZmxhdHBpY2tyLWN1cnJlbnQtbW9udGggLmZsYXRwaWNrci1tb250aERyb3Bkb3duLW1vbnRoczphY3RpdmV7b3V0bGluZTpub25lfS5mbGF0cGlja3ItY3VycmVudC1tb250aCAuZmxhdHBpY2tyLW1vbnRoRHJvcGRvd24tbW9udGhzOmhvdmVye2JhY2tncm91bmQ6cmdiYSgwLDAsMCwwLjA1KX0uZmxhdHBpY2tyLWN1cnJlbnQtbW9udGggLmZsYXRwaWNrci1tb250aERyb3Bkb3duLW1vbnRocyAuZmxhdHBpY2tyLW1vbnRoRHJvcGRvd24tbW9udGh7YmFja2dyb3VuZC1jb2xvcjp0cmFuc3BhcmVudDtvdXRsaW5lOm5vbmU7cGFkZGluZzowfS5mbGF0cGlja3Itd2Vla2RheXN7YmFja2dyb3VuZDp0cmFuc3BhcmVudDt0ZXh0LWFsaWduOmNlbnRlcjtvdmVyZmxvdzpoaWRkZW47d2lkdGg6MTAwJTtkaXNwbGF5Oi13ZWJraXQtYm94O2Rpc3BsYXk6LXdlYmtpdC1mbGV4O2Rpc3BsYXk6LW1zLWZsZXhib3g7ZGlzcGxheTpmbGV4Oy13ZWJraXQtYm94LWFsaWduOmNlbnRlcjstd2Via2l0LWFsaWduLWl0ZW1zOmNlbnRlcjstbXMtZmxleC1hbGlnbjpjZW50ZXI7YWxpZ24taXRlbXM6Y2VudGVyO2hlaWdodDoyOHB4fS5mbGF0cGlja3Itd2Vla2RheXMgLmZsYXRwaWNrci13ZWVrZGF5Y29udGFpbmVye2Rpc3BsYXk6LXdlYmtpdC1ib3g7ZGlzcGxheTotd2Via2l0LWZsZXg7ZGlzcGxheTotbXMtZmxleGJveDtkaXNwbGF5OmZsZXg7LXdlYmtpdC1ib3gtZmxleDoxOy13ZWJraXQtZmxleDoxOy1tcy1mbGV4OjE7ZmxleDoxfXNwYW4uZmxhdHBpY2tyLXdlZWtkYXl7Y3Vyc29yOmRlZmF1bHQ7Zm9udC1zaXplOjkwJTtiYWNrZ3JvdW5kOnRyYW5zcGFyZW50O2NvbG9yOnJnYmEoMCwwLDAsMC41NCk7bGluZS1oZWlnaHQ6MTttYXJnaW46MDt0ZXh0LWFsaWduOmNlbnRlcjtkaXNwbGF5OmJsb2NrOy13ZWJraXQtYm94LWZsZXg6MTstd2Via2l0LWZsZXg6MTstbXMtZmxleDoxO2ZsZXg6MTtmb250LXdlaWdodDpib2xkZXJ9LmRheUNvbnRhaW5lciwuZmxhdHBpY2tyLXdlZWtze3BhZGRpbmc6MXB4IDAgMCAwfS5mbGF0cGlja3ItZGF5c3twb3NpdGlvbjpyZWxhdGl2ZTtvdmVyZmxvdzpoaWRkZW47ZGlzcGxheTotd2Via2l0LWJveDtkaXNwbGF5Oi13ZWJraXQtZmxleDtkaXNwbGF5Oi1tcy1mbGV4Ym94O2Rpc3BsYXk6ZmxleDstd2Via2l0LWJveC1hbGlnbjpzdGFydDstd2Via2l0LWFsaWduLWl0ZW1zOmZsZXgtc3RhcnQ7LW1zLWZsZXgtYWxpZ246c3RhcnQ7YWxpZ24taXRlbXM6ZmxleC1zdGFydDt3aWR0aDozMDcuODc1cHh9LmZsYXRwaWNrci1kYXlzOmZvY3Vze291dGxpbmU6MH0uZGF5Q29udGFpbmVye3BhZGRpbmc6MDtvdXRsaW5lOjA7dGV4dC1hbGlnbjpsZWZ0O3dpZHRoOjMwNy44NzVweDttaW4td2lkdGg6MzA3Ljg3NXB4O21heC13aWR0aDozMDcuODc1cHg7LXdlYmtpdC1ib3gtc2l6aW5nOmJvcmRlci1ib3g7Ym94LXNpemluZzpib3JkZXItYm94O2Rpc3BsYXk6aW5saW5lLWJsb2NrO2Rpc3BsYXk6LW1zLWZsZXhib3g7ZGlzcGxheTotd2Via2l0LWJveDtkaXNwbGF5Oi13ZWJraXQtZmxleDtkaXNwbGF5OmZsZXg7LXdlYmtpdC1mbGV4LXdyYXA6d3JhcDtmbGV4LXdyYXA6d3JhcDstbXMtZmxleC13cmFwOndyYXA7LW1zLWZsZXgtcGFjazpqdXN0aWZ5Oy13ZWJraXQtanVzdGlmeS1jb250ZW50OnNwYWNlLWFyb3VuZDtqdXN0aWZ5LWNvbnRlbnQ6c3BhY2UtYXJvdW5kOy13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsMCwwKTt0cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwwLDApO29wYWNpdHk6MX0uZGF5Q29udGFpbmVyICsgLmRheUNvbnRhaW5lcnstd2Via2l0LWJveC1zaGFkb3c6LTFweCAwIDAgI2U2ZTZlNjtib3gtc2hhZG93Oi0xcHggMCAwICNlNmU2ZTZ9LmZsYXRwaWNrci1kYXl7YmFja2dyb3VuZDpub25lO2JvcmRlcjoxcHggc29saWQgdHJhbnNwYXJlbnQ7Ym9yZGVyLXJhZGl1czoxNTBweDstd2Via2l0LWJveC1zaXppbmc6Ym9yZGVyLWJveDtib3gtc2l6aW5nOmJvcmRlci1ib3g7Y29sb3I6IzM5MzkzOTtjdXJzb3I6cG9pbnRlcjtmb250LXdlaWdodDo0MDA7d2lkdGg6MTQuMjg1NzE0MyU7LXdlYmtpdC1mbGV4LWJhc2lzOjE0LjI4NTcxNDMlOy1tcy1mbGV4LXByZWZlcnJlZC1zaXplOjE0LjI4NTcxNDMlO2ZsZXgtYmFzaXM6MTQuMjg1NzE0MyU7bWF4LXdpZHRoOjM5cHg7aGVpZ2h0OjM5cHg7bGluZS1oZWlnaHQ6MzlweDttYXJnaW46MDtkaXNwbGF5OmlubGluZS1ibG9jaztwb3NpdGlvbjpyZWxhdGl2ZTstd2Via2l0LWJveC1wYWNrOmNlbnRlcjstd2Via2l0LWp1c3RpZnktY29udGVudDpjZW50ZXI7LW1zLWZsZXgtcGFjazpjZW50ZXI7anVzdGlmeS1jb250ZW50OmNlbnRlcjt0ZXh0LWFsaWduOmNlbnRlcn0uZmxhdHBpY2tyLWRheS5pblJhbmdlLC5mbGF0cGlja3ItZGF5LnByZXZNb250aERheS5pblJhbmdlLC5mbGF0cGlja3ItZGF5Lm5leHRNb250aERheS5pblJhbmdlLC5mbGF0cGlja3ItZGF5LnRvZGF5LmluUmFuZ2UsLmZsYXRwaWNrci1kYXkucHJldk1vbnRoRGF5LnRvZGF5LmluUmFuZ2UsLmZsYXRwaWNrci1kYXkubmV4dE1vbnRoRGF5LnRvZGF5LmluUmFuZ2UsLmZsYXRwaWNrci1kYXk6aG92ZXIsLmZsYXRwaWNrci1kYXkucHJldk1vbnRoRGF5OmhvdmVyLC5mbGF0cGlja3ItZGF5Lm5leHRNb250aERheTpob3ZlciwuZmxhdHBpY2tyLWRheTpmb2N1cywuZmxhdHBpY2tyLWRheS5wcmV2TW9udGhEYXk6Zm9jdXMsLmZsYXRwaWNrci1kYXkubmV4dE1vbnRoRGF5OmZvY3Vze2N1cnNvcjpwb2ludGVyO291dGxpbmU6MDtiYWNrZ3JvdW5kOiNlNmU2ZTY7Ym9yZGVyLWNvbG9yOiNlNmU2ZTZ9LmZsYXRwaWNrci1kYXkudG9kYXl7Ym9yZGVyLWNvbG9yOiM5NTllYTl9LmZsYXRwaWNrci1kYXkudG9kYXk6aG92ZXIsLmZsYXRwaWNrci1kYXkudG9kYXk6Zm9jdXN7Ym9yZGVyLWNvbG9yOiM5NTllYTk7YmFja2dyb3VuZDojOTU5ZWE5O2NvbG9yOiNmZmZ9LmZsYXRwaWNrci1kYXkuc2VsZWN0ZWQsLmZsYXRwaWNrci1kYXkuc3RhcnRSYW5nZSwuZmxhdHBpY2tyLWRheS5lbmRSYW5nZSwuZmxhdHBpY2tyLWRheS5zZWxlY3RlZC5pblJhbmdlLC5mbGF0cGlja3ItZGF5LnN0YXJ0UmFuZ2UuaW5SYW5nZSwuZmxhdHBpY2tyLWRheS5lbmRSYW5nZS5pblJhbmdlLC5mbGF0cGlja3ItZGF5LnNlbGVjdGVkOmZvY3VzLC5mbGF0cGlja3ItZGF5LnN0YXJ0UmFuZ2U6Zm9jdXMsLmZsYXRwaWNrci1kYXkuZW5kUmFuZ2U6Zm9jdXMsLmZsYXRwaWNrci1kYXkuc2VsZWN0ZWQ6aG92ZXIsLmZsYXRwaWNrci1kYXkuc3RhcnRSYW5nZTpob3ZlciwuZmxhdHBpY2tyLWRheS5lbmRSYW5nZTpob3ZlciwuZmxhdHBpY2tyLWRheS5zZWxlY3RlZC5wcmV2TW9udGhEYXksLmZsYXRwaWNrci1kYXkuc3RhcnRSYW5nZS5wcmV2TW9udGhEYXksLmZsYXRwaWNrci1kYXkuZW5kUmFuZ2UucHJldk1vbnRoRGF5LC5mbGF0cGlja3ItZGF5LnNlbGVjdGVkLm5leHRNb250aERheSwuZmxhdHBpY2tyLWRheS5zdGFydFJhbmdlLm5leHRNb250aERheSwuZmxhdHBpY2tyLWRheS5lbmRSYW5nZS5uZXh0TW9udGhEYXl7YmFja2dyb3VuZDojNTY5ZmY3Oy13ZWJraXQtYm94LXNoYWRvdzpub25lO2JveC1zaGFkb3c6bm9uZTtjb2xvcjojZmZmO2JvcmRlci1jb2xvcjojNTY5ZmY3fS5mbGF0cGlja3ItZGF5LnNlbGVjdGVkLnN0YXJ0UmFuZ2UsLmZsYXRwaWNrci1kYXkuc3RhcnRSYW5nZS5zdGFydFJhbmdlLC5mbGF0cGlja3ItZGF5LmVuZFJhbmdlLnN0YXJ0UmFuZ2V7Ym9yZGVyLXJhZGl1czo1MHB4IDAgMCA1MHB4fS5mbGF0cGlja3ItZGF5LnNlbGVjdGVkLmVuZFJhbmdlLC5mbGF0cGlja3ItZGF5LnN0YXJ0UmFuZ2UuZW5kUmFuZ2UsLmZsYXRwaWNrci1kYXkuZW5kUmFuZ2UuZW5kUmFuZ2V7Ym9yZGVyLXJhZGl1czowIDUwcHggNTBweCAwfS5mbGF0cGlja3ItZGF5LnNlbGVjdGVkLnN0YXJ0UmFuZ2UgKyAuZW5kUmFuZ2U6bm90KDpudGgtY2hpbGQoN24rMSkpLC5mbGF0cGlja3ItZGF5LnN0YXJ0UmFuZ2Uuc3RhcnRSYW5nZSArIC5lbmRSYW5nZTpub3QoOm50aC1jaGlsZCg3bisxKSksLmZsYXRwaWNrci1kYXkuZW5kUmFuZ2Uuc3RhcnRSYW5nZSArIC5lbmRSYW5nZTpub3QoOm50aC1jaGlsZCg3bisxKSl7LXdlYmtpdC1ib3gtc2hhZG93Oi0xMHB4IDAgMCAjNTY5ZmY3O2JveC1zaGFkb3c6LTEwcHggMCAwICM1NjlmZjd9LmZsYXRwaWNrci1kYXkuc2VsZWN0ZWQuc3RhcnRSYW5nZS5lbmRSYW5nZSwuZmxhdHBpY2tyLWRheS5zdGFydFJhbmdlLnN0YXJ0UmFuZ2UuZW5kUmFuZ2UsLmZsYXRwaWNrci1kYXkuZW5kUmFuZ2Uuc3RhcnRSYW5nZS5lbmRSYW5nZXtib3JkZXItcmFkaXVzOjUwcHh9LmZsYXRwaWNrci1kYXkuaW5SYW5nZXtib3JkZXItcmFkaXVzOjA7LXdlYmtpdC1ib3gtc2hhZG93Oi01cHggMCAwICNlNmU2ZTYsNXB4IDAgMCAjZTZlNmU2O2JveC1zaGFkb3c6LTVweCAwIDAgI2U2ZTZlNiw1cHggMCAwICNlNmU2ZTZ9LmZsYXRwaWNrci1kYXkuZmxhdHBpY2tyLWRpc2FibGVkLC5mbGF0cGlja3ItZGF5LmZsYXRwaWNrci1kaXNhYmxlZDpob3ZlciwuZmxhdHBpY2tyLWRheS5wcmV2TW9udGhEYXksLmZsYXRwaWNrci1kYXkubmV4dE1vbnRoRGF5LC5mbGF0cGlja3ItZGF5Lm5vdEFsbG93ZWQsLmZsYXRwaWNrci1kYXkubm90QWxsb3dlZC5wcmV2TW9udGhEYXksLmZsYXRwaWNrci1kYXkubm90QWxsb3dlZC5uZXh0TW9udGhEYXl7Y29sb3I6cmdiYSg1Nyw1Nyw1NywwLjMpO2JhY2tncm91bmQ6dHJhbnNwYXJlbnQ7Ym9yZGVyLWNvbG9yOnRyYW5zcGFyZW50O2N1cnNvcjpkZWZhdWx0fS5mbGF0cGlja3ItZGF5LmZsYXRwaWNrci1kaXNhYmxlZCwuZmxhdHBpY2tyLWRheS5mbGF0cGlja3ItZGlzYWJsZWQ6aG92ZXJ7Y3Vyc29yOm5vdC1hbGxvd2VkO2NvbG9yOnJnYmEoNTcsNTcsNTcsMC4xKX0uZmxhdHBpY2tyLWRheS53ZWVrLnNlbGVjdGVke2JvcmRlci1yYWRpdXM6MDstd2Via2l0LWJveC1zaGFkb3c6LTVweCAwIDAgIzU2OWZmNyw1cHggMCAwICM1NjlmZjc7Ym94LXNoYWRvdzotNXB4IDAgMCAjNTY5ZmY3LDVweCAwIDAgIzU2OWZmN30uZmxhdHBpY2tyLWRheS5oaWRkZW57dmlzaWJpbGl0eTpoaWRkZW59LnJhbmdlTW9kZSAuZmxhdHBpY2tyLWRheXttYXJnaW4tdG9wOjFweH0uZmxhdHBpY2tyLXdlZWt3cmFwcGVye2Zsb2F0OmxlZnR9LmZsYXRwaWNrci13ZWVrd3JhcHBlciAuZmxhdHBpY2tyLXdlZWtze3BhZGRpbmc6MCAxMnB4Oy13ZWJraXQtYm94LXNoYWRvdzoxcHggMCAwICNlNmU2ZTY7Ym94LXNoYWRvdzoxcHggMCAwICNlNmU2ZTZ9LmZsYXRwaWNrci13ZWVrd3JhcHBlciAuZmxhdHBpY2tyLXdlZWtkYXl7ZmxvYXQ6bm9uZTt3aWR0aDoxMDAlO2xpbmUtaGVpZ2h0OjI4cHh9LmZsYXRwaWNrci13ZWVrd3JhcHBlciBzcGFuLmZsYXRwaWNrci1kYXksLmZsYXRwaWNrci13ZWVrd3JhcHBlciBzcGFuLmZsYXRwaWNrci1kYXk6aG92ZXJ7ZGlzcGxheTpibG9jazt3aWR0aDoxMDAlO21heC13aWR0aDpub25lO2NvbG9yOnJnYmEoNTcsNTcsNTcsMC4zKTtiYWNrZ3JvdW5kOnRyYW5zcGFyZW50O2N1cnNvcjpkZWZhdWx0O2JvcmRlcjpub25lfS5mbGF0cGlja3ItaW5uZXJDb250YWluZXJ7ZGlzcGxheTpibG9jaztkaXNwbGF5Oi13ZWJraXQtYm94O2Rpc3BsYXk6LXdlYmtpdC1mbGV4O2Rpc3BsYXk6LW1zLWZsZXhib3g7ZGlzcGxheTpmbGV4Oy13ZWJraXQtYm94LXNpemluZzpib3JkZXItYm94O2JveC1zaXppbmc6Ym9yZGVyLWJveDtvdmVyZmxvdzpoaWRkZW59LmZsYXRwaWNrci1yQ29udGFpbmVye2Rpc3BsYXk6aW5saW5lLWJsb2NrO3BhZGRpbmc6MDstd2Via2l0LWJveC1zaXppbmc6Ym9yZGVyLWJveDtib3gtc2l6aW5nOmJvcmRlci1ib3h9LmZsYXRwaWNrci10aW1le3RleHQtYWxpZ246Y2VudGVyO291dGxpbmU6MDtkaXNwbGF5OmJsb2NrO2hlaWdodDowO2xpbmUtaGVpZ2h0OjQwcHg7bWF4LWhlaWdodDo0MHB4Oy13ZWJraXQtYm94LXNpemluZzpib3JkZXItYm94O2JveC1zaXppbmc6Ym9yZGVyLWJveDtvdmVyZmxvdzpoaWRkZW47ZGlzcGxheTotd2Via2l0LWJveDtkaXNwbGF5Oi13ZWJraXQtZmxleDtkaXNwbGF5Oi1tcy1mbGV4Ym94O2Rpc3BsYXk6ZmxleH0uZmxhdHBpY2tyLXRpbWU6YWZ0ZXJ7Y29udGVudDpcIlwiO2Rpc3BsYXk6dGFibGU7Y2xlYXI6Ym90aH0uZmxhdHBpY2tyLXRpbWUgLm51bUlucHV0V3JhcHBlcnstd2Via2l0LWJveC1mbGV4OjE7LXdlYmtpdC1mbGV4OjE7LW1zLWZsZXg6MTtmbGV4OjE7d2lkdGg6NDAlO2hlaWdodDo0MHB4O2Zsb2F0OmxlZnR9LmZsYXRwaWNrci10aW1lIC5udW1JbnB1dFdyYXBwZXIgc3Bhbi5hcnJvd1VwOmFmdGVye2JvcmRlci1ib3R0b20tY29sb3I6IzM5MzkzOX0uZmxhdHBpY2tyLXRpbWUgLm51bUlucHV0V3JhcHBlciBzcGFuLmFycm93RG93bjphZnRlcntib3JkZXItdG9wLWNvbG9yOiMzOTM5Mzl9LmZsYXRwaWNrci10aW1lLmhhc1NlY29uZHMgLm51bUlucHV0V3JhcHBlcnt3aWR0aDoyNiV9LmZsYXRwaWNrci10aW1lLnRpbWUyNGhyIC5udW1JbnB1dFdyYXBwZXJ7d2lkdGg6NDklfS5mbGF0cGlja3ItdGltZSBpbnB1dHtiYWNrZ3JvdW5kOnRyYW5zcGFyZW50Oy13ZWJraXQtYm94LXNoYWRvdzpub25lO2JveC1zaGFkb3c6bm9uZTtib3JkZXI6MDtib3JkZXItcmFkaXVzOjA7dGV4dC1hbGlnbjpjZW50ZXI7bWFyZ2luOjA7cGFkZGluZzowO2hlaWdodDppbmhlcml0O2xpbmUtaGVpZ2h0OmluaGVyaXQ7Y29sb3I6IzM5MzkzOTtmb250LXNpemU6MTRweDtwb3NpdGlvbjpyZWxhdGl2ZTstd2Via2l0LWJveC1zaXppbmc6Ym9yZGVyLWJveDtib3gtc2l6aW5nOmJvcmRlci1ib3g7LXdlYmtpdC1hcHBlYXJhbmNlOnRleHRmaWVsZDstbW96LWFwcGVhcmFuY2U6dGV4dGZpZWxkO2FwcGVhcmFuY2U6dGV4dGZpZWxkfS5mbGF0cGlja3ItdGltZSBpbnB1dC5mbGF0cGlja3ItaG91cntmb250LXdlaWdodDpib2xkfS5mbGF0cGlja3ItdGltZSBpbnB1dC5mbGF0cGlja3ItbWludXRlLC5mbGF0cGlja3ItdGltZSBpbnB1dC5mbGF0cGlja3Itc2Vjb25ke2ZvbnQtd2VpZ2h0OjQwMH0uZmxhdHBpY2tyLXRpbWUgaW5wdXQ6Zm9jdXN7b3V0bGluZTowO2JvcmRlcjowfS5mbGF0cGlja3ItdGltZSAuZmxhdHBpY2tyLXRpbWUtc2VwYXJhdG9yLC5mbGF0cGlja3ItdGltZSAuZmxhdHBpY2tyLWFtLXBte2hlaWdodDppbmhlcml0O2Zsb2F0OmxlZnQ7bGluZS1oZWlnaHQ6aW5oZXJpdDtjb2xvcjojMzkzOTM5O2ZvbnQtd2VpZ2h0OmJvbGQ7d2lkdGg6MiU7LXdlYmtpdC11c2VyLXNlbGVjdDpub25lOy1tb3otdXNlci1zZWxlY3Q6bm9uZTstbXMtdXNlci1zZWxlY3Q6bm9uZTt1c2VyLXNlbGVjdDpub25lOy13ZWJraXQtYWxpZ24tc2VsZjpjZW50ZXI7LW1zLWZsZXgtaXRlbS1hbGlnbjpjZW50ZXI7YWxpZ24tc2VsZjpjZW50ZXJ9LmZsYXRwaWNrci10aW1lIC5mbGF0cGlja3ItYW0tcG17b3V0bGluZTowO3dpZHRoOjE4JTtjdXJzb3I6cG9pbnRlcjt0ZXh0LWFsaWduOmNlbnRlcjtmb250LXdlaWdodDo0MDB9LmZsYXRwaWNrci10aW1lIGlucHV0OmhvdmVyLC5mbGF0cGlja3ItdGltZSAuZmxhdHBpY2tyLWFtLXBtOmhvdmVyLC5mbGF0cGlja3ItdGltZSBpbnB1dDpmb2N1cywuZmxhdHBpY2tyLXRpbWUgLmZsYXRwaWNrci1hbS1wbTpmb2N1c3tiYWNrZ3JvdW5kOiNlZWV9LmZsYXRwaWNrci1pbnB1dFtyZWFkb25seV17Y3Vyc29yOnBvaW50ZXJ9QC13ZWJraXQta2V5ZnJhbWVzIGZwRmFkZUluRG93bntmcm9te29wYWNpdHk6MDstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLC0yMHB4LDApO3RyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLC0yMHB4LDApfXRve29wYWNpdHk6MTstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLDAsMCk7dHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsMCwwKX19QGtleWZyYW1lcyBmcEZhZGVJbkRvd257ZnJvbXtvcGFjaXR5OjA7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwtMjBweCwwKTt0cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwtMjBweCwwKX10b3tvcGFjaXR5OjE7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwwLDApO3RyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLDAsMCl9fWAsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vbm9kZV9tb2R1bGVzL2ZsYXRwaWNrci9kaXN0L2ZsYXRwaWNrci5taW4uY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBLG9CQUFvQixzQkFBc0IsQ0FBQyxTQUFTLENBQUMsWUFBWSxDQUFDLGlCQUFpQixDQUFDLGlCQUFpQixDQUFDLFNBQVMsQ0FBQyxzQkFBc0IsQ0FBQyxjQUFjLENBQUMsYUFBYSxDQUFDLFFBQVEsQ0FBQyxjQUFjLENBQUMsZ0JBQWdCLENBQUMsaUJBQWlCLENBQUMsaUJBQWlCLENBQUMsZUFBZSxDQUFDLDZCQUE2QixDQUFDLHFCQUFxQixDQUFDLDZCQUE2QixDQUFDLHlCQUF5QixDQUFDLGVBQWUsQ0FBQyxnSEFBZ0gsQ0FBQyx3R0FBd0csQ0FBQyxvREFBb0QsU0FBUyxDQUFDLGdCQUFnQixDQUFDLGtCQUFrQixDQUFDLHlCQUF5QixvQkFBb0IsQ0FBQyxhQUFhLENBQUMsaUNBQWlDLDhEQUE4RCxDQUFDLHNEQUFzRCxDQUFDLDJCQUEyQixhQUFhLENBQUMsaUJBQWlCLENBQUMsT0FBTyxDQUFDLDJCQUEyQixpQkFBaUIsQ0FBQyxvQkFBb0IsQ0FBQyxnQ0FBZ0MsV0FBVyxDQUFDLGFBQWEsQ0FBQyxtSEFBbUgsa0NBQWtDLENBQUMsMEJBQTBCLENBQUMsbUhBQW1ILG1EQUFtRCxDQUFDLDJDQUEyQyxDQUFDLHVGQUF1RixlQUFlLENBQUMsNEJBQTRCLENBQUMsMkJBQTJCLENBQUMsNENBQTRDLGFBQWEsQ0FBQyw0Q0FBNEMsV0FBVyxDQUFDLDRCQUE0QixDQUFDLHVEQUF1RCxXQUFXLENB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LENBQUMsd0NBQXdDLENBQUMsZ0NBQWdDLENBQUMsR0FBRyxTQUFTLENBQUMsb0NBQW9DLENBQUMsNEJBQTRCLENBQUNcIixcInNvdXJjZXNDb250ZW50XCI6W1wiLmZsYXRwaWNrci1jYWxlbmRhcntiYWNrZ3JvdW5kOnRyYW5zcGFyZW50O29wYWNpdHk6MDtkaXNwbGF5Om5vbmU7dGV4dC1hbGlnbjpjZW50ZXI7dmlzaWJpbGl0eTpoaWRkZW47cGFkZGluZzowOy13ZWJraXQtYW5pbWF0aW9uOm5vbmU7YW5pbWF0aW9uOm5vbmU7ZGlyZWN0aW9uOmx0cjtib3JkZXI6MDtmb250LXNpemU6MTRweDtsaW5lLWhlaWdodDoyNHB4O2JvcmRlci1yYWRpdXM6NXB4O3Bvc2l0aW9uOmFic29sdXRlO3dpZHRoOjMwNy44NzVweDstd2Via2l0LWJveC1zaXppbmc6Ym9yZGVyLWJveDtib3gtc2l6aW5nOmJvcmRlci1ib3g7LW1zLXRvdWNoLWFjdGlvbjptYW5pcHVsYXRpb247dG91Y2gtYWN0aW9uOm1hbmlwdWxhdGlvbjtiYWNrZ3JvdW5kOiNmZmY7LXdlYmtpdC1ib3gtc2hhZG93OjFweCAwIDAgI2U2ZTZlNiwtMXB4IDAgMCAjZTZlNmU2LDAgMXB4IDAgI2U2ZTZlNiwwIC0xcHggMCAjZTZlNmU2LDAgM3B4IDEzcHggcmdiYSgwLDAsMCwwLjA4KTtib3gtc2hhZG93OjFweCAwIDAgI2U2ZTZlNiwtMXB4IDAgMCAjZTZlNmU2LDAgMXB4IDAgI2U2ZTZlNiwwIC0xcHggMCAjZTZlNmU2LDAgM3B4IDEzcHggcmdiYSgwLDAsMCwwLjA4KX0uZmxhdHBpY2tyLWNhbGVuZGFyLm9wZW4sLmZsYXRwaWNrci1jYWxlbmRhci5pbmxpbmV7b3BhY2l0eToxO21heC1oZWlnaHQ6NjQwcHg7dmlzaWJpbGl0eTp2aXNpYmxlfS5mbGF0cGlja3ItY2FsZW5kYXIub3BlbntkaXNwbGF5OmlubGluZS1ibG9jazt6LWluZGV4Ojk5OTk5fS5mbGF0cGlja3ItY2FsZW5kYXIuYW5pbWF0ZS5vcGVuey13ZWJraXQtYW5pbWF0aW9uOmZwRmFkZUluRG93biAzMDBtcyBjdWJpYy1iZXppZXIoLjIzLDEsLjMyLDEpO2FuaW1hdGlvbjpmcEZhZGVJbkRvd24gMzAwbXMgY3ViaWMtYmV6aWVyKC4yMywxLC4zMiwxKX0uZmxhdHBpY2tyLWNhbGVuZGFyLmlubGluZXtkaXNwbGF5OmJsb2NrO3Bvc2l0aW9uOnJlbGF0aXZlO3RvcDoycHh9LmZsYXRwaWNrci1jYWxlbmRhci5zdGF0aWN7cG9zaXRpb246YWJzb2x1dGU7dG9wOmNhbGMoMTAwJSArIDJweCl9LmZsYXRwaWNrci1jYWxlbmRhci5zdGF0aWMub3Blbnt6LWluZGV4Ojk5OTtkaXNwbGF5OmJsb2NrfS5mbGF0cGlja3ItY2FsZW5kYXIubXVsdGlNb250aCAuZmxhdHBpY2tyLWRheXMgLmRheUNvbnRhaW5lcjpudGgtY2hpbGQobisxKSAuZmxhdHBpY2tyLWRheS5pblJhbmdlOm50aC1jaGlsZCg3bis3KXstd2Via2l0LWJveC1zaGFkb3c6bm9uZSAhaW1wb3J0YW50O2JveC1zaGFkb3c6bm9uZSAhaW1wb3J0YW50fS5mbGF0cGlja3ItY2FsZW5kYXIubXVsdGlNb250aCAuZmxhdHBpY2tyLWRheXMgLmRheUNvbnRhaW5lcjpudGgtY2hpbGQobisyKSAuZmxhdHBpY2tyLWRheS5pblJhbmdlOm50aC1jaGlsZCg3bisxKXstd2Via2l0LWJveC1zaGFkb3c6LTJweCAwIDAgI2U2ZTZlNiw1cHggMCAwICNlNmU2ZTY7Ym94LXNoYWRvdzotMnB4IDAgMCAjZTZlNmU2LDVweCAwIDAgI2U2ZTZlNn0uZmxhdHBpY2tyLWNhbGVuZGFyIC5oYXNXZWVrcyAuZGF5Q29udGFpbmVyLC5mbGF0cGlja3ItY2FsZW5kYXIgLmhhc1RpbWUgLmRheUNvbnRhaW5lcntib3JkZXItYm90dG9tOjA7Ym9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6MDtib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOjB9LmZsYXRwaWNrci1jYWxlbmRhciAuaGFzV2Vla3MgLmRheUNvbnRhaW5lcntib3JkZXItbGVmdDowfS5mbGF0cGlja3ItY2FsZW5kYXIuaGFzVGltZSAuZmxhdHBpY2tyLXRpbWV7aGVpZ2h0OjQwcHg7Ym9yZGVyLXRvcDoxcHggc29saWQgI2U2ZTZlNn0uZmxhdHBpY2tyLWNhbGVuZGFyLm5vQ2FsZW5kYXIuaGFzVGltZSAuZmxhdHBpY2tyLXRpbWV7aGVpZ2h0OmF1dG99LmZsYXRwaWNrci1jYWxlbmRhcjpiZWZvcmUsLmZsYXRwaWNrci1jYWxlbmRhcjphZnRlcntwb3NpdGlvbjphYnNvbHV0ZTtkaXNwbGF5OmJsb2NrO3BvaW50ZXItZXZlbnRzOm5vbmU7Ym9yZGVyOnNvbGlkIHRyYW5zcGFyZW50O2NvbnRlbnQ6Jyc7aGVpZ2h0OjA7d2lkdGg6MDtsZWZ0OjIycHh9LmZsYXRwaWNrci1jYWxlbmRhci5yaWdodE1vc3Q6YmVmb3JlLC5mbGF0cGlja3ItY2FsZW5kYXIuYXJyb3dSaWdodDpiZWZvcmUsLmZsYXRwaWNrci1jYWxlbmRhci5yaWdodE1vc3Q6YWZ0ZXIsLmZsYXRwaWNrci1jYWxlbmRhci5hcnJvd1JpZ2h0OmFmdGVye2xlZnQ6YXV0bztyaWdodDoyMnB4fS5mbGF0cGlja3ItY2FsZW5kYXIuYXJyb3dDZW50ZXI6YmVmb3JlLC5mbGF0cGlja3ItY2FsZW5kYXIuYXJyb3dDZW50ZXI6YWZ0ZXJ7bGVmdDo1MCU7cmlnaHQ6NTAlfS5mbGF0cGlja3ItY2FsZW5kYXI6YmVmb3Jle2JvcmRlci13aWR0aDo1cHg7bWFyZ2luOjAgLTVweH0uZmxhdHBpY2tyLWNhbGVuZGFyOmFmdGVye2JvcmRlci13aWR0aDo0cHg7bWFyZ2luOjAgLTRweH0uZmxhdHBpY2tyLWNhbGVuZGFyLmFycm93VG9wOmJlZm9yZSwuZmxhdHBpY2tyLWNhbGVuZGFyLmFycm93VG9wOmFmdGVye2JvdHRvbToxMDAlfS5mbGF0cGlja3ItY2FsZW5kYXIuYXJyb3dUb3A6YmVmb3Jle2JvcmRlci1ib3R0b20tY29sb3I6I2U2ZTZlNn0uZmxhdHBpY2tyLWNhbGVuZGFyLmFycm93VG9wOmFmdGVye2JvcmRlci1ib3R0b20tY29sb3I6I2ZmZn0uZmxhdHBpY2tyLWNhbGVuZGFyLmFycm93Qm90dG9tOmJlZm9yZSwuZmxhdHBpY2tyLWNhbGVuZGFyLmFycm93Qm90dG9tOmFmdGVye3RvcDoxMDAlfS5mbGF0cGlja3ItY2FsZW5kYXIuYXJyb3dCb3R0b206YmVmb3Jle2JvcmRlci10b3AtY29sb3I6I2U2ZTZlNn0uZmxhdHBpY2tyLWNhbGVuZGFyLmFycm93Qm90dG9tOmFmdGVye2JvcmRlci10b3AtY29sb3I6I2ZmZn0uZmxhdHBpY2tyLWNhbGVuZGFyOmZvY3Vze291dGxpbmU6MH0uZmxhdHBpY2tyLXdyYXBwZXJ7cG9zaXRpb246cmVsYXRpdmU7ZGlzcGxheTppbmxpbmUtYmxvY2t9LmZsYXRwaWNrci1tb250aHN7ZGlzcGxheTotd2Via2l0LWJveDtkaXNwbGF5Oi13ZWJraXQtZmxleDtkaXNwbGF5Oi1tcy1mbGV4Ym94O2Rpc3BsYXk6ZmxleH0uZmxhdHBpY2tyLW1vbnRocyAuZmxhdHBpY2tyLW1vbnRoe2JhY2tncm91bmQ6dHJhbnNwYXJlbnQ7Y29sb3I6cmdiYSgwLDAsMCwwLjkpO2ZpbGw6cmdiYSgwLDAsMCwwLjkpO2hlaWdodDozNHB4O2xpbmUtaGVpZ2h0OjE7dGV4dC1hbGlnbjpjZW50ZXI7cG9zaXRpb246cmVsYXRpdmU7LXdlYmtpdC11c2VyLXNlbGVjdDpub25lOy1tb3otdXNlci1zZWxlY3Q6bm9uZTstbXMtdXNlci1zZWxlY3Q6bm9uZTt1c2VyLXNlbGVjdDpub25lO292ZXJmbG93OmhpZGRlbjstd2Via2l0LWJveC1mbGV4OjE7LXdlYmtpdC1mbGV4OjE7LW1zLWZsZXg6MTtmbGV4OjF9LmZsYXRwaWNrci1tb250aHMgLmZsYXRwaWNrci1wcmV2LW1vbnRoLC5mbGF0cGlja3ItbW9udGhzIC5mbGF0cGlja3ItbmV4dC1tb250aHstd2Via2l0LXVzZXItc2VsZWN0Om5vbmU7LW1vei11c2VyLXNlbGVjdDpub25lOy1tcy11c2VyLXNlbGVjdDpub25lO3VzZXItc2VsZWN0Om5vbmU7dGV4dC1kZWNvcmF0aW9uOm5vbmU7Y3Vyc29yOnBvaW50ZXI7cG9zaXRpb246YWJzb2x1dGU7dG9wOjA7aGVpZ2h0OjM0cHg7cGFkZGluZzoxMHB4O3otaW5kZXg6Mztjb2xvcjpyZ2JhKDAsMCwwLDAuOSk7ZmlsbDpyZ2JhKDAsMCwwLDAuOSl9LmZsYXRwaWNrci1tb250aHMgLmZsYXRwaWNrci1wcmV2LW1vbnRoLmZsYXRwaWNrci1kaXNhYmxlZCwuZmxhdHBpY2tyLW1vbnRocyAuZmxhdHBpY2tyLW5leHQtbW9udGguZmxhdHBpY2tyLWRpc2FibGVke2Rpc3BsYXk6bm9uZX0uZmxhdHBpY2tyLW1vbnRocyAuZmxhdHBpY2tyLXByZXYtbW9udGggaSwuZmxhdHBpY2tyLW1vbnRocyAuZmxhdHBpY2tyLW5leHQtbW9udGggaXtwb3NpdGlvbjpyZWxhdGl2ZX0uZmxhdHBpY2tyLW1vbnRocyAuZmxhdHBpY2tyLXByZXYtbW9udGguZmxhdHBpY2tyLXByZXYtbW9udGgsLmZsYXRwaWNrci1tb250aHMgLmZsYXRwaWNrci1uZXh0LW1vbnRoLmZsYXRwaWNrci1wcmV2LW1vbnRoey8qXFxuICAgICAgLypydGw6YmVnaW46aWdub3JlKi9sZWZ0OjAvKlxcbiAgICAgIC8qcnRsOmVuZDppZ25vcmUqL30vKlxcbiAgICAgIC8qcnRsOmJlZ2luOmlnbm9yZSovXFxuLypcXG4gICAgICAvKnJ0bDplbmQ6aWdub3JlKi9cXG4uZmxhdHBpY2tyLW1vbnRocyAuZmxhdHBpY2tyLXByZXYtbW9udGguZmxhdHBpY2tyLW5leHQtbW9udGgsLmZsYXRwaWNrci1tb250aHMgLmZsYXRwaWNrci1uZXh0LW1vbnRoLmZsYXRwaWNrci1uZXh0LW1vbnRoey8qXFxuICAgICAgLypydGw6YmVnaW46aWdub3JlKi9yaWdodDowLypcXG4gICAgICAvKnJ0bDplbmQ6aWdub3JlKi99LypcXG4gICAgICAvKnJ0bDpiZWdpbjppZ25vcmUqL1xcbi8qXFxuICAgICAgLypydGw6ZW5kOmlnbm9yZSovXFxuLmZsYXRwaWNrci1tb250aHMgLmZsYXRwaWNrci1wcmV2LW1vbnRoOmhvdmVyLC5mbGF0cGlja3ItbW9udGhzIC5mbGF0cGlja3ItbmV4dC1tb250aDpob3Zlcntjb2xvcjojOTU5ZWE5fS5mbGF0cGlja3ItbW9udGhzIC5mbGF0cGlja3ItcHJldi1tb250aDpob3ZlciBzdmcsLmZsYXRwaWNrci1tb250aHMgLmZsYXRwaWNrci1uZXh0LW1vbnRoOmhvdmVyIHN2Z3tmaWxsOiNmNjQ3NDd9LmZsYXRwaWNrci1tb250aHMgLmZsYXRwaWNrci1wcmV2LW1vbnRoIHN2ZywuZmxhdHBpY2tyLW1vbnRocyAuZmxhdHBpY2tyLW5leHQtbW9udGggc3Zne3dpZHRoOjE0cHg7aGVpZ2h0OjE0cHh9LmZsYXRwaWNrci1tb250aHMgLmZsYXRwaWNrci1wcmV2LW1vbnRoIHN2ZyBwYXRoLC5mbGF0cGlja3ItbW9udGhzIC5mbGF0cGlja3ItbmV4dC1tb250aCBzdmcgcGF0aHstd2Via2l0LXRyYW5zaXRpb246ZmlsbCAuMXM7dHJhbnNpdGlvbjpmaWxsIC4xcztmaWxsOmluaGVyaXR9Lm51bUlucHV0V3JhcHBlcntwb3NpdGlvbjpyZWxhdGl2ZTtoZWlnaHQ6YXV0b30ubnVtSW5wdXRXcmFwcGVyIGlucHV0LC5udW1JbnB1dFdyYXBwZXIgc3BhbntkaXNwbGF5OmlubGluZS1ibG9ja30ubnVtSW5wdXRXcmFwcGVyIGlucHV0e3dpZHRoOjEwMCV9Lm51bUlucHV0V3JhcHBlciBpbnB1dDo6LW1zLWNsZWFye2Rpc3BsYXk6bm9uZX0ubnVtSW5wdXRXcmFwcGVyIGlucHV0Ojotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uLC5udW1JbnB1dFdyYXBwZXIgaW5wdXQ6Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b257bWFyZ2luOjA7LXdlYmtpdC1hcHBlYXJhbmNlOm5vbmV9Lm51bUlucHV0V3JhcHBlciBzcGFue3Bvc2l0aW9uOmFic29sdXRlO3JpZ2h0OjA7d2lkdGg6MTRweDtwYWRkaW5nOjAgNHB4IDAgMnB4O2hlaWdodDo1MCU7bGluZS1oZWlnaHQ6NTAlO29wYWNpdHk6MDtjdXJzb3I6cG9pbnRlcjtib3JkZXI6MXB4IHNvbGlkIHJnYmEoNTcsNTcsNTcsMC4xNSk7LXdlYmtpdC1ib3gtc2l6aW5nOmJvcmRlci1ib3g7Ym94LXNpemluZzpib3JkZXItYm94fS5udW1JbnB1dFdyYXBwZXIgc3Bhbjpob3ZlcntiYWNrZ3JvdW5kOnJnYmEoMCwwLDAsMC4xKX0ubnVtSW5wdXRXcmFwcGVyIHNwYW46YWN0aXZle2JhY2tncm91bmQ6cmdiYSgwLDAsMCwwLjIpfS5udW1JbnB1dFdyYXBwZXIgc3BhbjphZnRlcntkaXNwbGF5OmJsb2NrO2NvbnRlbnQ6XFxcIlxcXCI7cG9zaXRpb246YWJzb2x1dGV9Lm51bUlucHV0V3JhcHBlciBzcGFuLmFycm93VXB7dG9wOjA7Ym9yZGVyLWJvdHRvbTowfS5udW1JbnB1dFdyYXBwZXIgc3Bhbi5hcnJvd1VwOmFmdGVye2JvcmRlci1sZWZ0OjRweCBzb2xpZCB0cmFuc3BhcmVudDtib3JkZXItcmlnaHQ6NHB4IHNvbGlkIHRyYW5zcGFyZW50O2JvcmRlci1ib3R0b206NHB4IHNvbGlkIHJnYmEoNTcsNTcsNTcsMC42KTt0b3A6MjYlfS5udW1JbnB1dFdyYXBwZXIgc3Bhbi5hcnJvd0Rvd257dG9wOjUwJX0ubnVtSW5wdXRXcmFwcGVyIHNwYW4uYXJyb3dEb3duOmFmdGVye2JvcmRlci1sZWZ0OjRweCBzb2xpZCB0cmFuc3BhcmVudDtib3JkZXItcmlnaHQ6NHB4IHNvbGlkIHRyYW5zcGFyZW50O2JvcmRlci10b3A6NHB4IHNvbGlkIHJnYmEoNTcsNTcsNTcsMC42KTt0b3A6NDAlfS5udW1JbnB1dFdyYXBwZXIgc3BhbiBzdmd7d2lkdGg6aW5oZXJpdDtoZWlnaHQ6YXV0b30ubnVtSW5wdXRXcmFwcGVyIHNwYW4gc3ZnIHBhdGh7ZmlsbDpyZ2JhKDAsMCwwLDAuNSl9Lm51bUlucHV0V3JhcHBlcjpob3ZlcntiYWNrZ3JvdW5kOnJnYmEoMCwwLDAsMC4wNSl9Lm51bUlucHV0V3JhcHBlcjpob3ZlciBzcGFue29wYWNpdHk6MX0uZmxhdHBpY2tyLWN1cnJlbnQtbW9udGh7Zm9udC1zaXplOjEzNSU7bGluZS1oZWlnaHQ6aW5oZXJpdDtmb250LXdlaWdodDozMDA7Y29sb3I6aW5oZXJpdDtwb3NpdGlvbjphYnNvbHV0ZTt3aWR0aDo3NSU7bGVmdDoxMi41JTtwYWRkaW5nOjcuNDhweCAwIDAgMDtsaW5lLWhlaWdodDoxO2hlaWdodDozNHB4O2Rpc3BsYXk6aW5saW5lLWJsb2NrO3RleHQtYWxpZ246Y2VudGVyOy13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsMCwwKTt0cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwwLDApfS5mbGF0cGlja3ItY3VycmVudC1tb250aCBzcGFuLmN1ci1tb250aHtmb250LWZhbWlseTppbmhlcml0O2ZvbnQtd2VpZ2h0OjcwMDtjb2xvcjppbmhlcml0O2Rpc3BsYXk6aW5saW5lLWJsb2NrO21hcmdpbi1sZWZ0Oi41Y2g7cGFkZGluZzowfS5mbGF0cGlja3ItY3VycmVudC1tb250aCBzcGFuLmN1ci1tb250aDpob3ZlcntiYWNrZ3JvdW5kOnJnYmEoMCwwLDAsMC4wNSl9LmZsYXRwaWNrci1jdXJyZW50LW1vbnRoIC5udW1JbnB1dFdyYXBwZXJ7d2lkdGg6NmNoO3dpZHRoOjdjaFxcXFwwO2Rpc3BsYXk6aW5saW5lLWJsb2NrfS5mbGF0cGlja3ItY3VycmVudC1tb250aCAubnVtSW5wdXRXcmFwcGVyIHNwYW4uYXJyb3dVcDphZnRlcntib3JkZXItYm90dG9tLWNvbG9yOnJnYmEoMCwwLDAsMC45KX0uZmxhdHBpY2tyLWN1cnJlbnQtbW9udGggLm51bUlucHV0V3JhcHBlciBzcGFuLmFycm93RG93bjphZnRlcntib3JkZXItdG9wLWNvbG9yOnJnYmEoMCwwLDAsMC45KX0uZmxhdHBpY2tyLWN1cnJlbnQtbW9udGggaW5wdXQuY3VyLXllYXJ7YmFja2dyb3VuZDp0cmFuc3BhcmVudDstd2Via2l0LWJveC1zaXppbmc6Ym9yZGVyLWJveDtib3gtc2l6aW5nOmJvcmRlci1ib3g7Y29sb3I6aW5oZXJpdDtjdXJzb3I6dGV4dDtwYWRkaW5nOjAgMCAwIC41Y2g7bWFyZ2luOjA7ZGlzcGxheTppbmxpbmUtYmxvY2s7Zm9udC1zaXplOmluaGVyaXQ7Zm9udC1mYW1pbHk6aW5oZXJpdDtmb250LXdlaWdodDozMDA7bGluZS1oZWlnaHQ6aW5oZXJpdDtoZWlnaHQ6YXV0bztib3JkZXI6MDtib3JkZXItcmFkaXVzOjA7dmVydGljYWwtYWxpZ246aW5pdGlhbDstd2Via2l0LWFwcGVhcmFuY2U6dGV4dGZpZWxkOy1tb3otYXBwZWFyYW5jZTp0ZXh0ZmllbGQ7YXBwZWFyYW5jZTp0ZXh0ZmllbGR9LmZsYXRwaWNrci1jdXJyZW50LW1vbnRoIGlucHV0LmN1ci15ZWFyOmZvY3Vze291dGxpbmU6MH0uZmxhdHBpY2tyLWN1cnJlbnQtbW9udGggaW5wdXQuY3VyLXllYXJbZGlzYWJsZWRdLC5mbGF0cGlja3ItY3VycmVudC1tb250aCBpbnB1dC5jdXIteWVhcltkaXNhYmxlZF06aG92ZXJ7Zm9udC1zaXplOjEwMCU7Y29sb3I6cmdiYSgwLDAsMCwwLjUpO2JhY2tncm91bmQ6dHJhbnNwYXJlbnQ7cG9pbnRlci1ldmVudHM6bm9uZX0uZmxhdHBpY2tyLWN1cnJlbnQtbW9udGggLmZsYXRwaWNrci1tb250aERyb3Bkb3duLW1vbnRoc3thcHBlYXJhbmNlOm1lbnVsaXN0O2JhY2tncm91bmQ6dHJhbnNwYXJlbnQ7Ym9yZGVyOm5vbmU7Ym9yZGVyLXJhZGl1czowO2JveC1zaXppbmc6Ym9yZGVyLWJveDtjb2xvcjppbmhlcml0O2N1cnNvcjpwb2ludGVyO2ZvbnQtc2l6ZTppbmhlcml0O2ZvbnQtZmFtaWx5OmluaGVyaXQ7Zm9udC13ZWlnaHQ6MzAwO2hlaWdodDphdXRvO2xpbmUtaGVpZ2h0OmluaGVyaXQ7bWFyZ2luOi0xcHggMCAwIDA7b3V0bGluZTpub25lO3BhZGRpbmc6MCAwIDAgLjVjaDtwb3NpdGlvbjpyZWxhdGl2ZTt2ZXJ0aWNhbC1hbGlnbjppbml0aWFsOy13ZWJraXQtYm94LXNpemluZzpib3JkZXItYm94Oy13ZWJraXQtYXBwZWFyYW5jZTptZW51bGlzdDstbW96LWFwcGVhcmFuY2U6bWVudWxpc3Q7d2lkdGg6YXV0b30uZmxhdHBpY2tyLWN1cnJlbnQtbW9udGggLmZsYXRwaWNrci1tb250aERyb3Bkb3duLW1vbnRoczpmb2N1cywuZmxhdHBpY2tyLWN1cnJlbnQtbW9udGggLmZsYXRwaWNrci1tb250aERyb3Bkb3duLW1vbnRoczphY3RpdmV7b3V0bGluZTpub25lfS5mbGF0cGlja3ItY3VycmVudC1tb250aCAuZmxhdHBpY2tyLW1vbnRoRHJvcGRvd24tbW9udGhzOmhvdmVye2JhY2tncm91bmQ6cmdiYSgwLDAsMCwwLjA1KX0uZmxhdHBpY2tyLWN1cnJlbnQtbW9udGggLmZsYXRwaWNrci1tb250aERyb3Bkb3duLW1vbnRocyAuZmxhdHBpY2tyLW1vbnRoRHJvcGRvd24tbW9udGh7YmFja2dyb3VuZC1jb2xvcjp0cmFuc3BhcmVudDtvdXRsaW5lOm5vbmU7cGFkZGluZzowfS5mbGF0cGlja3Itd2Vla2RheXN7YmFja2dyb3VuZDp0cmFuc3BhcmVudDt0ZXh0LWFsaWduOmNlbnRlcjtvdmVyZmxvdzpoaWRkZW47d2lkdGg6MTAwJTtkaXNwbGF5Oi13ZWJraXQtYm94O2Rpc3BsYXk6LXdlYmtpdC1mbGV4O2Rpc3BsYXk6LW1zLWZsZXhib3g7ZGlzcGxheTpmbGV4Oy13ZWJraXQtYm94LWFsaWduOmNlbnRlcjstd2Via2l0LWFsaWduLWl0ZW1zOmNlbnRlcjstbXMtZmxleC1hbGlnbjpjZW50ZXI7YWxpZ24taXRlbXM6Y2VudGVyO2hlaWdodDoyOHB4fS5mbGF0cGlja3Itd2Vla2RheXMgLmZsYXRwaWNrci13ZWVrZGF5Y29udGFpbmVye2Rpc3BsYXk6LXdlYmtpdC1ib3g7ZGlzcGxheTotd2Via2l0LWZsZXg7ZGlzcGxheTotbXMtZmxleGJveDtkaXNwbGF5OmZsZXg7LXdlYmtpdC1ib3gtZmxleDoxOy13ZWJraXQtZmxleDoxOy1tcy1mbGV4OjE7ZmxleDoxfXNwYW4uZmxhdHBpY2tyLXdlZWtkYXl7Y3Vyc29yOmRlZmF1bHQ7Zm9udC1zaXplOjkwJTtiYWNrZ3JvdW5kOnRyYW5zcGFyZW50O2NvbG9yOnJnYmEoMCwwLDAsMC41NCk7bGluZS1oZWlnaHQ6MTttYXJnaW46MDt0ZXh0LWFsaWduOmNlbnRlcjtkaXNwbGF5OmJsb2NrOy13ZWJraXQtYm94LWZsZXg6MTstd2Via2l0LWZsZXg6MTstbXMtZmxleDoxO2ZsZXg6MTtmb250LXdlaWdodDpib2xkZXJ9LmRheUNvbnRhaW5lciwuZmxhdHBpY2tyLXdlZWtze3BhZGRpbmc6MXB4IDAgMCAwfS5mbGF0cGlja3ItZGF5c3twb3NpdGlvbjpyZWxhdGl2ZTtvdmVyZmxvdzpoaWRkZW47ZGlzcGxheTotd2Via2l0LWJveDtkaXNwbGF5Oi13ZWJraXQtZmxleDtkaXNwbGF5Oi1tcy1mbGV4Ym94O2Rpc3BsYXk6ZmxleDstd2Via2l0LWJveC1hbGlnbjpzdGFydDstd2Via2l0LWFsaWduLWl0ZW1zOmZsZXgtc3RhcnQ7LW1zLWZsZXgtYWxpZ246c3RhcnQ7YWxpZ24taXRlbXM6ZmxleC1zdGFydDt3aWR0aDozMDcuODc1cHh9LmZsYXRwaWNrci1kYXlzOmZvY3Vze291dGxpbmU6MH0uZGF5Q29udGFpbmVye3BhZGRpbmc6MDtvdXRsaW5lOjA7dGV4dC1hbGlnbjpsZWZ0O3dpZHRoOjMwNy44NzVweDttaW4td2lkdGg6MzA3Ljg3NXB4O21heC13aWR0aDozMDcuODc1cHg7LXdlYmtpdC1ib3gtc2l6aW5nOmJvcmRlci1ib3g7Ym94LXNpemluZzpib3JkZXItYm94O2Rpc3BsYXk6aW5saW5lLWJsb2NrO2Rpc3BsYXk6LW1zLWZsZXhib3g7ZGlzcGxheTotd2Via2l0LWJveDtkaXNwbGF5Oi13ZWJraXQtZmxleDtkaXNwbGF5OmZsZXg7LXdlYmtpdC1mbGV4LXdyYXA6d3JhcDtmbGV4LXdyYXA6d3JhcDstbXMtZmxleC13cmFwOndyYXA7LW1zLWZsZXgtcGFjazpqdXN0aWZ5Oy13ZWJraXQtanVzdGlmeS1jb250ZW50OnNwYWNlLWFyb3VuZDtqdXN0aWZ5LWNvbnRlbnQ6c3BhY2UtYXJvdW5kOy13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsMCwwKTt0cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwwLDApO29wYWNpdHk6MX0uZGF5Q29udGFpbmVyICsgLmRheUNvbnRhaW5lcnstd2Via2l0LWJveC1zaGFkb3c6LTFweCAwIDAgI2U2ZTZlNjtib3gtc2hhZG93Oi0xcHggMCAwICNlNmU2ZTZ9LmZsYXRwaWNrci1kYXl7YmFja2dyb3VuZDpub25lO2JvcmRlcjoxcHggc29saWQgdHJhbnNwYXJlbnQ7Ym9yZGVyLXJhZGl1czoxNTBweDstd2Via2l0LWJveC1zaXppbmc6Ym9yZGVyLWJveDtib3gtc2l6aW5nOmJvcmRlci1ib3g7Y29sb3I6IzM5MzkzOTtjdXJzb3I6cG9pbnRlcjtmb250LXdlaWdodDo0MDA7d2lkdGg6MTQuMjg1NzE0MyU7LXdlYmtpdC1mbGV4LWJhc2lzOjE0LjI4NTcxNDMlOy1tcy1mbGV4LXByZWZlcnJlZC1zaXplOjE0LjI4NTcxNDMlO2ZsZXgtYmFzaXM6MTQuMjg1NzE0MyU7bWF4LXdpZHRoOjM5cHg7aGVpZ2h0OjM5cHg7bGluZS1oZWlnaHQ6MzlweDttYXJnaW46MDtkaXNwbGF5OmlubGluZS1ibG9jaztwb3NpdGlvbjpyZWxhdGl2ZTstd2Via2l0LWJveC1wYWNrOmNlbnRlcjstd2Via2l0LWp1c3RpZnktY29udGVudDpjZW50ZXI7LW1zLWZsZXgtcGFjazpjZW50ZXI7anVzdGlmeS1jb250ZW50OmNlbnRlcjt0ZXh0LWFsaWduOmNlbnRlcn0uZmxhdHBpY2tyLWRheS5pblJhbmdlLC5mbGF0cGlja3ItZGF5LnByZXZNb250aERheS5pblJhbmdlLC5mbGF0cGlja3ItZGF5Lm5leHRNb250aERheS5pblJhbmdlLC5mbGF0cGlja3ItZGF5LnRvZGF5LmluUmFuZ2UsLmZsYXRwaWNrci1kYXkucHJldk1vbnRoRGF5LnRvZGF5LmluUmFuZ2UsLmZsYXRwaWNrci1kYXkubmV4dE1vbnRoRGF5LnRvZGF5LmluUmFuZ2UsLmZsYXRwaWNrci1kYXk6aG92ZXIsLmZsYXRwaWNrci1kYXkucHJldk1vbnRoRGF5OmhvdmVyLC5mbGF0cGlja3ItZGF5Lm5leHRNb250aERheTpob3ZlciwuZmxhdHBpY2tyLWRheTpmb2N1cywuZmxhdHBpY2tyLWRheS5wcmV2TW9udGhEYXk6Zm9jdXMsLmZsYXRwaWNrci1kYXkubmV4dE1vbnRoRGF5OmZvY3Vze2N1cnNvcjpwb2ludGVyO291dGxpbmU6MDtiYWNrZ3JvdW5kOiNlNmU2ZTY7Ym9yZGVyLWNvbG9yOiNlNmU2ZTZ9LmZsYXRwaWNrci1kYXkudG9kYXl7Ym9yZGVyLWNvbG9yOiM5NTllYTl9LmZsYXRwaWNrci1kYXkudG9kYXk6aG92ZXIsLmZsYXRwaWNrci1kYXkudG9kYXk6Zm9jdXN7Ym9yZGVyLWNvbG9yOiM5NTllYTk7YmFja2dyb3VuZDojOTU5ZWE5O2NvbG9yOiNmZmZ9LmZsYXRwaWNrci1kYXkuc2VsZWN0ZWQsLmZsYXRwaWNrci1kYXkuc3RhcnRSYW5nZSwuZmxhdHBpY2tyLWRheS5lbmRSYW5nZSwuZmxhdHBpY2tyLWRheS5zZWxlY3RlZC5pblJhbmdlLC5mbGF0cGlja3ItZGF5LnN0YXJ0UmFuZ2UuaW5SYW5nZSwuZmxhdHBpY2tyLWRheS5lbmRSYW5nZS5pblJhbmdlLC5mbGF0cGlja3ItZGF5LnNlbGVjdGVkOmZvY3VzLC5mbGF0cGlja3ItZGF5LnN0YXJ0UmFuZ2U6Zm9jdXMsLmZsYXRwaWNrci1kYXkuZW5kUmFuZ2U6Zm9jdXMsLmZsYXRwaWNrci1kYXkuc2VsZWN0ZWQ6aG92ZXIsLmZsYXRwaWNrci1kYXkuc3RhcnRSYW5nZTpob3ZlciwuZmxhdHBpY2tyLWRheS5lbmRSYW5nZTpob3ZlciwuZmxhdHBpY2tyLWRheS5zZWxlY3RlZC5wcmV2TW9udGhEYXksLmZsYXRwaWNrci1kYXkuc3RhcnRSYW5nZS5wcmV2TW9udGhEYXksLmZsYXRwaWNrci1kYXkuZW5kUmFuZ2UucHJldk1vbnRoRGF5LC5mbGF0cGlja3ItZGF5LnNlbGVjdGVkLm5leHRNb250aERheSwuZmxhdHBpY2tyLWRheS5zdGFydFJhbmdlLm5leHRNb250aERheSwuZmxhdHBpY2tyLWRheS5lbmRSYW5nZS5uZXh0TW9udGhEYXl7YmFja2dyb3VuZDojNTY5ZmY3Oy13ZWJraXQtYm94LXNoYWRvdzpub25lO2JveC1zaGFkb3c6bm9uZTtjb2xvcjojZmZmO2JvcmRlci1jb2xvcjojNTY5ZmY3fS5mbGF0cGlja3ItZGF5LnNlbGVjdGVkLnN0YXJ0UmFuZ2UsLmZsYXRwaWNrci1kYXkuc3RhcnRSYW5nZS5zdGFydFJhbmdlLC5mbGF0cGlja3ItZGF5LmVuZFJhbmdlLnN0YXJ0UmFuZ2V7Ym9yZGVyLXJhZGl1czo1MHB4IDAgMCA1MHB4fS5mbGF0cGlja3ItZGF5LnNlbGVjdGVkLmVuZFJhbmdlLC5mbGF0cGlja3ItZGF5LnN0YXJ0UmFuZ2UuZW5kUmFuZ2UsLmZsYXRwaWNrci1kYXkuZW5kUmFuZ2UuZW5kUmFuZ2V7Ym9yZGVyLXJhZGl1czowIDUwcHggNTBweCAwfS5mbGF0cGlja3ItZGF5LnNlbGVjdGVkLnN0YXJ0UmFuZ2UgKyAuZW5kUmFuZ2U6bm90KDpudGgtY2hpbGQoN24rMSkpLC5mbGF0cGlja3ItZGF5LnN0YXJ0UmFuZ2Uuc3RhcnRSYW5nZSArIC5lbmRSYW5nZTpub3QoOm50aC1jaGlsZCg3bisxKSksLmZsYXRwaWNrci1kYXkuZW5kUmFuZ2Uuc3RhcnRSYW5nZSArIC5lbmRSYW5nZTpub3QoOm50aC1jaGlsZCg3bisxKSl7LXdlYmtpdC1ib3gtc2hhZG93Oi0xMHB4IDAgMCAjNTY5ZmY3O2JveC1zaGFkb3c6LTEwcHggMCAwICM1NjlmZjd9LmZsYXRwaWNrci1kYXkuc2VsZWN0ZWQuc3RhcnRSYW5nZS5lbmRSYW5nZSwuZmxhdHBpY2tyLWRheS5zdGFydFJhbmdlLnN0YXJ0UmFuZ2UuZW5kUmFuZ2UsLmZsYXRwaWNrci1kYXkuZW5kUmFuZ2Uuc3RhcnRSYW5nZS5lbmRSYW5nZXtib3JkZXItcmFkaXVzOjUwcHh9LmZsYXRwaWNrci1kYXkuaW5SYW5nZXtib3JkZXItcmFkaXVzOjA7LXdlYmtpdC1ib3gtc2hhZG93Oi01cHggMCAwICNlNmU2ZTYsNXB4IDAgMCAjZTZlNmU2O2JveC1zaGFkb3c6LTVweCAwIDAgI2U2ZTZlNiw1cHggMCAwICNlNmU2ZTZ9LmZsYXRwaWNrci1kYXkuZmxhdHBpY2tyLWRpc2FibGVkLC5mbGF0cGlja3ItZGF5LmZsYXRwaWNrci1kaXNhYmxlZDpob3ZlciwuZmxhdHBpY2tyLWRheS5wcmV2TW9udGhEYXksLmZsYXRwaWNrci1kYXkubmV4dE1vbnRoRGF5LC5mbGF0cGlja3ItZGF5Lm5vdEFsbG93ZWQsLmZsYXRwaWNrci1kYXkubm90QWxsb3dlZC5wcmV2TW9udGhEYXksLmZsYXRwaWNrci1kYXkubm90QWxsb3dlZC5uZXh0TW9udGhEYXl7Y29sb3I6cmdiYSg1Nyw1Nyw1NywwLjMpO2JhY2tncm91bmQ6dHJhbnNwYXJlbnQ7Ym9yZGVyLWNvbG9yOnRyYW5zcGFyZW50O2N1cnNvcjpkZWZhdWx0fS5mbGF0cGlja3ItZGF5LmZsYXRwaWNrci1kaXNhYmxlZCwuZmxhdHBpY2tyLWRheS5mbGF0cGlja3ItZGlzYWJsZWQ6aG92ZXJ7Y3Vyc29yOm5vdC1hbGxvd2VkO2NvbG9yOnJnYmEoNTcsNTcsNTcsMC4xKX0uZmxhdHBpY2tyLWRheS53ZWVrLnNlbGVjdGVke2JvcmRlci1yYWRpdXM6MDstd2Via2l0LWJveC1zaGFkb3c6LTVweCAwIDAgIzU2OWZmNyw1cHggMCAwICM1NjlmZjc7Ym94LXNoYWRvdzotNXB4IDAgMCAjNTY5ZmY3LDVweCAwIDAgIzU2OWZmN30uZmxhdHBpY2tyLWRheS5oaWRkZW57dmlzaWJpbGl0eTpoaWRkZW59LnJhbmdlTW9kZSAuZmxhdHBpY2tyLWRheXttYXJnaW4tdG9wOjFweH0uZmxhdHBpY2tyLXdlZWt3cmFwcGVye2Zsb2F0OmxlZnR9LmZsYXRwaWNrci13ZWVrd3JhcHBlciAuZmxhdHBpY2tyLXdlZWtze3BhZGRpbmc6MCAxMnB4Oy13ZWJraXQtYm94LXNoYWRvdzoxcHggMCAwICNlNmU2ZTY7Ym94LXNoYWRvdzoxcHggMCAwICNlNmU2ZTZ9LmZsYXRwaWNrci13ZWVrd3JhcHBlciAuZmxhdHBpY2tyLXdlZWtkYXl7ZmxvYXQ6bm9uZTt3aWR0aDoxMDAlO2xpbmUtaGVpZ2h0OjI4cHh9LmZsYXRwaWNrci13ZWVrd3JhcHBlciBzcGFuLmZsYXRwaWNrci1kYXksLmZsYXRwaWNrci13ZWVrd3JhcHBlciBzcGFuLmZsYXRwaWNrci1kYXk6aG92ZXJ7ZGlzcGxheTpibG9jazt3aWR0aDoxMDAlO21heC13aWR0aDpub25lO2NvbG9yOnJnYmEoNTcsNTcsNTcsMC4zKTtiYWNrZ3JvdW5kOnRyYW5zcGFyZW50O2N1cnNvcjpkZWZhdWx0O2JvcmRlcjpub25lfS5mbGF0cGlja3ItaW5uZXJDb250YWluZXJ7ZGlzcGxheTpibG9jaztkaXNwbGF5Oi13ZWJraXQtYm94O2Rpc3BsYXk6LXdlYmtpdC1mbGV4O2Rpc3BsYXk6LW1zLWZsZXhib3g7ZGlzcGxheTpmbGV4Oy13ZWJraXQtYm94LXNpemluZzpib3JkZXItYm94O2JveC1zaXppbmc6Ym9yZGVyLWJveDtvdmVyZmxvdzpoaWRkZW59LmZsYXRwaWNrci1yQ29udGFpbmVye2Rpc3BsYXk6aW5saW5lLWJsb2NrO3BhZGRpbmc6MDstd2Via2l0LWJveC1zaXppbmc6Ym9yZGVyLWJveDtib3gtc2l6aW5nOmJvcmRlci1ib3h9LmZsYXRwaWNrci10aW1le3RleHQtYWxpZ246Y2VudGVyO291dGxpbmU6MDtkaXNwbGF5OmJsb2NrO2hlaWdodDowO2xpbmUtaGVpZ2h0OjQwcHg7bWF4LWhlaWdodDo0MHB4Oy13ZWJraXQtYm94LXNpemluZzpib3JkZXItYm94O2JveC1zaXppbmc6Ym9yZGVyLWJveDtvdmVyZmxvdzpoaWRkZW47ZGlzcGxheTotd2Via2l0LWJveDtkaXNwbGF5Oi13ZWJraXQtZmxleDtkaXNwbGF5Oi1tcy1mbGV4Ym94O2Rpc3BsYXk6ZmxleH0uZmxhdHBpY2tyLXRpbWU6YWZ0ZXJ7Y29udGVudDpcXFwiXFxcIjtkaXNwbGF5OnRhYmxlO2NsZWFyOmJvdGh9LmZsYXRwaWNrci10aW1lIC5udW1JbnB1dFdyYXBwZXJ7LXdlYmtpdC1ib3gtZmxleDoxOy13ZWJraXQtZmxleDoxOy1tcy1mbGV4OjE7ZmxleDoxO3dpZHRoOjQwJTtoZWlnaHQ6NDBweDtmbG9hdDpsZWZ0fS5mbGF0cGlja3ItdGltZSAubnVtSW5wdXRXcmFwcGVyIHNwYW4uYXJyb3dVcDphZnRlcntib3JkZXItYm90dG9tLWNvbG9yOiMzOTM5Mzl9LmZsYXRwaWNrci10aW1lIC5udW1JbnB1dFdyYXBwZXIgc3Bhbi5hcnJvd0Rvd246YWZ0ZXJ7Ym9yZGVyLXRvcC1jb2xvcjojMzkzOTM5fS5mbGF0cGlja3ItdGltZS5oYXNTZWNvbmRzIC5udW1JbnB1dFdyYXBwZXJ7d2lkdGg6MjYlfS5mbGF0cGlja3ItdGltZS50aW1lMjRociAubnVtSW5wdXRXcmFwcGVye3dpZHRoOjQ5JX0uZmxhdHBpY2tyLXRpbWUgaW5wdXR7YmFja2dyb3VuZDp0cmFuc3BhcmVudDstd2Via2l0LWJveC1zaGFkb3c6bm9uZTtib3gtc2hhZG93Om5vbmU7Ym9yZGVyOjA7Ym9yZGVyLXJhZGl1czowO3RleHQtYWxpZ246Y2VudGVyO21hcmdpbjowO3BhZGRpbmc6MDtoZWlnaHQ6aW5oZXJpdDtsaW5lLWhlaWdodDppbmhlcml0O2NvbG9yOiMzOTM5Mzk7Zm9udC1zaXplOjE0cHg7cG9zaXRpb246cmVsYXRpdmU7LXdlYmtpdC1ib3gtc2l6aW5nOmJvcmRlci1ib3g7Ym94LXNpemluZzpib3JkZXItYm94Oy13ZWJraXQtYXBwZWFyYW5jZTp0ZXh0ZmllbGQ7LW1vei1hcHBlYXJhbmNlOnRleHRmaWVsZDthcHBlYXJhbmNlOnRleHRmaWVsZH0uZmxhdHBpY2tyLXRpbWUgaW5wdXQuZmxhdHBpY2tyLWhvdXJ7Zm9udC13ZWlnaHQ6Ym9sZH0uZmxhdHBpY2tyLXRpbWUgaW5wdXQuZmxhdHBpY2tyLW1pbnV0ZSwuZmxhdHBpY2tyLXRpbWUgaW5wdXQuZmxhdHBpY2tyLXNlY29uZHtmb250LXdlaWdodDo0MDB9LmZsYXRwaWNrci10aW1lIGlucHV0OmZvY3Vze291dGxpbmU6MDtib3JkZXI6MH0uZmxhdHBpY2tyLXRpbWUgLmZsYXRwaWNrci10aW1lLXNlcGFyYXRvciwuZmxhdHBpY2tyLXRpbWUgLmZsYXRwaWNrci1hbS1wbXtoZWlnaHQ6aW5oZXJpdDtmbG9hdDpsZWZ0O2xpbmUtaGVpZ2h0OmluaGVyaXQ7Y29sb3I6IzM5MzkzOTtmb250LXdlaWdodDpib2xkO3dpZHRoOjIlOy13ZWJraXQtdXNlci1zZWxlY3Q6bm9uZTstbW96LXVzZXItc2VsZWN0Om5vbmU7LW1zLXVzZXItc2VsZWN0Om5vbmU7dXNlci1zZWxlY3Q6bm9uZTstd2Via2l0LWFsaWduLXNlbGY6Y2VudGVyOy1tcy1mbGV4LWl0ZW0tYWxpZ246Y2VudGVyO2FsaWduLXNlbGY6Y2VudGVyfS5mbGF0cGlja3ItdGltZSAuZmxhdHBpY2tyLWFtLXBte291dGxpbmU6MDt3aWR0aDoxOCU7Y3Vyc29yOnBvaW50ZXI7dGV4dC1hbGlnbjpjZW50ZXI7Zm9udC13ZWlnaHQ6NDAwfS5mbGF0cGlja3ItdGltZSBpbnB1dDpob3ZlciwuZmxhdHBpY2tyLXRpbWUgLmZsYXRwaWNrci1hbS1wbTpob3ZlciwuZmxhdHBpY2tyLXRpbWUgaW5wdXQ6Zm9jdXMsLmZsYXRwaWNrci10aW1lIC5mbGF0cGlja3ItYW0tcG06Zm9jdXN7YmFja2dyb3VuZDojZWVlfS5mbGF0cGlja3ItaW5wdXRbcmVhZG9ubHlde2N1cnNvcjpwb2ludGVyfUAtd2Via2l0LWtleWZyYW1lcyBmcEZhZGVJbkRvd257ZnJvbXtvcGFjaXR5OjA7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwtMjBweCwwKTt0cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwtMjBweCwwKX10b3tvcGFjaXR5OjE7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwwLDApO3RyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLDAsMCl9fUBrZXlmcmFtZXMgZnBGYWRlSW5Eb3due2Zyb217b3BhY2l0eTowOy13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsLTIwcHgsMCk7dHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsLTIwcHgsMCl9dG97b3BhY2l0eToxOy13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsMCwwKTt0cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwwLDApfX1cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5pZiAodHlwZW9mIE9iamVjdC5hc3NpZ24gIT09IFwiZnVuY3Rpb25cIikge1xuICAgIE9iamVjdC5hc3NpZ24gPSBmdW5jdGlvbiAodGFyZ2V0KSB7XG4gICAgICAgIHZhciBhcmdzID0gW107XG4gICAgICAgIGZvciAodmFyIF9pID0gMTsgX2kgPCBhcmd1bWVudHMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICAgICAgICBhcmdzW19pIC0gMV0gPSBhcmd1bWVudHNbX2ldO1xuICAgICAgICB9XG4gICAgICAgIGlmICghdGFyZ2V0KSB7XG4gICAgICAgICAgICB0aHJvdyBUeXBlRXJyb3IoXCJDYW5ub3QgY29udmVydCB1bmRlZmluZWQgb3IgbnVsbCB0byBvYmplY3RcIik7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIF9sb29wXzEgPSBmdW5jdGlvbiAoc291cmNlKSB7XG4gICAgICAgICAgICBpZiAoc291cmNlKSB7XG4gICAgICAgICAgICAgICAgT2JqZWN0LmtleXMoc291cmNlKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsgcmV0dXJuICh0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldKTsgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIGZvciAodmFyIF9hID0gMCwgYXJnc18xID0gYXJnczsgX2EgPCBhcmdzXzEubGVuZ3RoOyBfYSsrKSB7XG4gICAgICAgICAgICB2YXIgc291cmNlID0gYXJnc18xW19hXTtcbiAgICAgICAgICAgIF9sb29wXzEoc291cmNlKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGFyZ2V0O1xuICAgIH07XG59XG4iLCIvLyBUaGUgbW9kdWxlIGNhY2hlXG52YXIgX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fID0ge307XG5cbi8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG5mdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuXHR2YXIgY2FjaGVkTW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXTtcblx0aWYgKGNhY2hlZE1vZHVsZSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0cmV0dXJuIGNhY2hlZE1vZHVsZS5leHBvcnRzO1xuXHR9XG5cdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG5cdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdID0ge1xuXHRcdGlkOiBtb2R1bGVJZCxcblx0XHQvLyBubyBtb2R1bGUubG9hZGVkIG5lZWRlZFxuXHRcdGV4cG9ydHM6IHt9XG5cdH07XG5cblx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG5cdF9fd2VicGFja19tb2R1bGVzX19bbW9kdWxlSWRdLmNhbGwobW9kdWxlLmV4cG9ydHMsIG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG5cdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG5cdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbn1cblxuIiwiLy8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbl9fd2VicGFja19yZXF1aXJlX18ubiA9IChtb2R1bGUpID0+IHtcblx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG5cdFx0KCkgPT4gKG1vZHVsZVsnZGVmYXVsdCddKSA6XG5cdFx0KCkgPT4gKG1vZHVsZSk7XG5cdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsIHsgYTogZ2V0dGVyIH0pO1xuXHRyZXR1cm4gZ2V0dGVyO1xufTsiLCIvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9ucyBmb3IgaGFybW9ueSBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSAoZXhwb3J0cywgZGVmaW5pdGlvbikgPT4ge1xuXHRmb3IodmFyIGtleSBpbiBkZWZpbml0aW9uKSB7XG5cdFx0aWYoX193ZWJwYWNrX3JlcXVpcmVfXy5vKGRlZmluaXRpb24sIGtleSkgJiYgIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBrZXkpKSB7XG5cdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywga2V5LCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZGVmaW5pdGlvbltrZXldIH0pO1xuXHRcdH1cblx0fVxufTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSAob2JqLCBwcm9wKSA9PiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCkpIiwiX193ZWJwYWNrX3JlcXVpcmVfXy5uYyA9IHVuZGVmaW5lZDsiLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vYWJzdHJhY3Qtdmlldy5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcbm9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9hYnN0cmFjdC12aWV3LmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsImltcG9ydCB7Y3JlYXRlRWxlbWVudH0gZnJvbSAnLi4vcmVuZGVyLmpzJztcbmltcG9ydCAnLi9hYnN0cmFjdC12aWV3LmNzcyc7XG5cbi8qKiBAY29uc3Qge3N0cmluZ30g0JrQu9Cw0YHRgSwg0YDQtdCw0LvQuNC30YPRjtGJ0LjQuSDRjdGE0YTQtdC60YIgXCLQv9C+0LrQsNGH0LjQstCw0L3QuNGPINCz0L7Qu9C+0LLQvtC5XCIgKi9cbmNvbnN0IFNIQUtFX0NMQVNTX05BTUUgPSAnc2hha2UnO1xuXG4vKiogQGNvbnN0IHtudW1iZXJ9INCS0YDQtdC80Y8g0LDQvdC40LzQsNGG0LjQuCDQsiDQvNC40LvQu9C40YHQtdC60YPQvdC00LDRhSAqL1xuY29uc3QgU0hBS0VfQU5JTUFUSU9OX1RJTUVPVVQgPSA2MDA7XG5cbi8qKlxuICog0JDQsdGB0YLRgNCw0LrRgtC90YvQuSDQutC70LDRgdGBINC/0YDQtdC00YHRgtCw0LLQu9C10L3QuNGPXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEFic3RyYWN0VmlldyB7XG4gIC8qKiBAdHlwZSB7SFRNTEVsZW1lbnR8bnVsbH0g0K3Qu9C10LzQtdC90YIg0L/RgNC10LTRgdGC0LDQstC70LXQvdC40Y8gKi9cbiAgI2VsZW1lbnQgPSBudWxsO1xuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIGlmIChuZXcudGFyZ2V0ID09PSBBYnN0cmFjdFZpZXcpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignQ2FuXFwndCBpbnN0YW50aWF0ZSBBYnN0cmFjdFZpZXcsIG9ubHkgY29uY3JldGUgb25lLicpO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiDQk9C10YLRgtC10YAg0LTQu9GPINC/0L7Qu9GD0YfQtdC90LjRjyDRjdC70LXQvNC10L3RgtCwXG4gICAqIEByZXR1cm5zIHtIVE1MRWxlbWVudH0g0K3Qu9C10LzQtdC90YIg0L/RgNC10LTRgdGC0LDQstC70LXQvdC40Y9cbiAgICovXG4gIGdldCBlbGVtZW50KCkge1xuICAgIGlmICghdGhpcy4jZWxlbWVudCkge1xuICAgICAgdGhpcy4jZWxlbWVudCA9IGNyZWF0ZUVsZW1lbnQodGhpcy50ZW1wbGF0ZSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRoaXMuI2VsZW1lbnQ7XG4gIH1cblxuICAvKipcbiAgICog0JPQtdGC0YLQtdGAINC00LvRjyDQv9C+0LvRg9GH0LXQvdC40Y8g0YDQsNC30LzQtdGC0LrQuCDRjdC70LXQvNC10L3RgtCwXG4gICAqIEBhYnN0cmFjdFxuICAgKiBAcmV0dXJucyB7c3RyaW5nfSDQoNCw0LfQvNC10YLQutCwINGN0LvQtdC80LXQvdGC0LAg0LIg0LLQuNC00LUg0YHRgtGA0L7QutC4XG4gICAqL1xuICBnZXQgdGVtcGxhdGUoKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdBYnN0cmFjdCBtZXRob2Qgbm90IGltcGxlbWVudGVkOiBnZXQgdGVtcGxhdGUnKTtcbiAgfVxuXG4gIC8qKiDQnNC10YLQvtC0INC00LvRjyDRg9C00LDQu9C10L3QuNGPINGN0LvQtdC80LXQvdGC0LAgKi9cbiAgcmVtb3ZlRWxlbWVudCgpIHtcbiAgICB0aGlzLiNlbGVtZW50ID0gbnVsbDtcbiAgfVxuXG4gIC8qKlxuICAgKiDQnNC10YLQvtC0LCDRgNC10LDQu9C40LfRg9GO0YnQuNC5INGN0YTRhNC10LrRgiBcItC/0L7QutCw0YfQuNCy0LDQvdC40Y8g0LPQvtC70L7QstC+0LlcIlxuICAgKiBAcGFyYW0ge3NoYWtlQ2FsbGJhY2t9IFtjYWxsYmFja10g0KTRg9C90LrRhtC40Y8sINC60L7RgtC+0YDQsNGPINCx0YPQtNC10YIg0LLRi9C30LLQsNC90LAg0L/QvtGB0LvQtSDQt9Cw0LLQtdGA0YjQtdC90LjRjyDQsNC90LjQvNCw0YbQuNC4XG4gICAqL1xuICBzaGFrZShjYWxsYmFjaykge1xuICAgIHRoaXMuZWxlbWVudC5jbGFzc0xpc3QuYWRkKFNIQUtFX0NMQVNTX05BTUUpO1xuICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgdGhpcy5lbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoU0hBS0VfQ0xBU1NfTkFNRSk7XG4gICAgICBjYWxsYmFjaz8uKCk7XG4gICAgfSwgU0hBS0VfQU5JTUFUSU9OX1RJTUVPVVQpO1xuICB9XG59XG5cbi8qKlxuICog0KTRg9C90LrRhtC40Y8sINC60L7RgtC+0YDQsNGPINCx0YPQtNC10YIg0LLRi9C30LLQsNC90LAg0LzQtdGC0L7QtNC+0Lwgc2hha2Ug0L/QvtGB0LvQtSDQt9Cw0LLQtdGA0YjQtdC90LjRjyDQsNC90LjQvNCw0YbQuNC4XG4gKiBAY2FsbGJhY2sgc2hha2VDYWxsYmFja1xuICovXG4iLCJpbXBvcnQgQWJzdHJhY3RWaWV3IGZyb20gJy4vdmlldy9hYnN0cmFjdC12aWV3LmpzJztcblxuLyoqIEBlbnVtIHtzdHJpbmd9INCf0LXRgNC10YfQuNGB0LvQtdC90LjQtSDQstC+0LfQvNC+0LbQvdGL0YUg0L/QvtC30LjRhtC40Lkg0LTQu9GPINC+0YLRgNC40YHQvtCy0LrQuCAqL1xuY29uc3QgUmVuZGVyUG9zaXRpb24gPSB7XG4gIEJFRk9SRUJFR0lOOiAnYmVmb3JlYmVnaW4nLFxuICBBRlRFUkJFR0lOOiAnYWZ0ZXJiZWdpbicsXG4gIEJFRk9SRUVORDogJ2JlZm9yZWVuZCcsXG4gIEFGVEVSRU5EOiAnYWZ0ZXJlbmQnLFxufTtcblxuLyoqXG4gKiDQpNGD0L3QutGG0LjRjyDQtNC70Y8g0YHQvtC30LTQsNC90LjRjyDRjdC70LXQvNC10L3RgtCwINC90LAg0L7RgdC90L7QstC1INGA0LDQt9C80LXRgtC60LhcbiAqIEBwYXJhbSB7c3RyaW5nfSB0ZW1wbGF0ZSDQoNCw0LfQvNC10YLQutCwINCyINCy0LjQtNC1INGB0YLRgNC+0LrQuFxuICogQHJldHVybnMge0hUTUxFbGVtZW50fSDQodC+0LfQtNCw0L3QvdGL0Lkg0Y3Qu9C10LzQtdC90YJcbiAqL1xuZnVuY3Rpb24gY3JlYXRlRWxlbWVudCh0ZW1wbGF0ZSkge1xuICBjb25zdCBuZXdFbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gIG5ld0VsZW1lbnQuaW5uZXJIVE1MID0gdGVtcGxhdGU7XG5cbiAgcmV0dXJuIG5ld0VsZW1lbnQuZmlyc3RFbGVtZW50Q2hpbGQ7XG59XG5cbi8qKlxuICog0KTRg9C90LrRhtC40Y8g0LTQu9GPINC+0YLRgNC40YHQvtCy0LrQuCDRjdC70LXQvNC10L3RgtCwXG4gKiBAcGFyYW0ge0Fic3RyYWN0Vmlld30gY29tcG9uZW50INCa0L7QvNC/0L7QvdC10L3Rgiwg0LrQvtGC0L7RgNGL0Lkg0LTQvtC70LbQtdC9INCx0YvQuyDQvtGC0YDQuNGB0L7QstCw0L1cbiAqIEBwYXJhbSB7SFRNTEVsZW1lbnR9IGNvbnRhaW5lciDQrdC70LXQvNC10L3RgiDQsiDQutC+0YLQvtGA0L7QvCDQsdGD0LTQtdGCINC+0YLRgNC40YHQvtCy0LDQvSDQutC+0LzQv9C+0L3QtdC90YJcbiAqIEBwYXJhbSB7c3RyaW5nfSBwbGFjZSDQn9C+0LfQuNGG0LjRjyDQutC+0LzQv9C+0L3QtdC90YLQsCDQvtGC0L3QvtGB0LjRgtC10LvRjNC90L4g0LrQvtC90YLQtdC50L3QtdGA0LAuINCf0L4g0YPQvNC+0LvRh9Cw0L3QuNGOIC0gYGJlZm9yZWVuZGBcbiAqL1xuZnVuY3Rpb24gcmVuZGVyKGNvbXBvbmVudCwgY29udGFpbmVyLCBwbGFjZSA9IFJlbmRlclBvc2l0aW9uLkJFRk9SRUVORCkge1xuICBpZiAoIShjb21wb25lbnQgaW5zdGFuY2VvZiBBYnN0cmFjdFZpZXcpKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdDYW4gcmVuZGVyIG9ubHkgY29tcG9uZW50cycpO1xuICB9XG5cbiAgaWYgKGNvbnRhaW5lciA9PT0gbnVsbCkge1xuICAgIHRocm93IG5ldyBFcnJvcignQ29udGFpbmVyIGVsZW1lbnQgZG9lc25cXCd0IGV4aXN0Jyk7XG4gIH1cblxuICBjb250YWluZXIuaW5zZXJ0QWRqYWNlbnRFbGVtZW50KHBsYWNlLCBjb21wb25lbnQuZWxlbWVudCk7XG59XG5cbi8qKlxuICog0KTRg9C90LrRhtC40Y8g0LTQu9GPINC30LDQvNC10L3RiyDQvtC00L3QvtCz0L4g0LrQvtC80L/QvtC90LXQvdGC0LAg0L3QsCDQtNGA0YPQs9C+0LlcbiAqIEBwYXJhbSB7QWJzdHJhY3RWaWV3fSBuZXdDb21wb25lbnQg0JrQvtC80L/QvtC90LXQvdGCLCDQutC+0YLQvtGA0YvQuSDQvdGD0LbQvdC+INC/0L7QutCw0LfQsNGC0YxcbiAqIEBwYXJhbSB7QWJzdHJhY3RWaWV3fSBvbGRDb21wb25lbnQg0JrQvtC80L/QvtC90LXQvdGCLCDQutC+0YLQvtGA0YvQuSDQvdGD0LbQvdC+INGB0LrRgNGL0YLRjFxuICovXG5mdW5jdGlvbiByZXBsYWNlKG5ld0NvbXBvbmVudCwgb2xkQ29tcG9uZW50KSB7XG4gIGlmICghKG5ld0NvbXBvbmVudCBpbnN0YW5jZW9mIEFic3RyYWN0VmlldyAmJiBvbGRDb21wb25lbnQgaW5zdGFuY2VvZiBBYnN0cmFjdFZpZXcpKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdDYW4gcmVwbGFjZSBvbmx5IGNvbXBvbmVudHMnKTtcbiAgfVxuXG4gIGNvbnN0IG5ld0VsZW1lbnQgPSBuZXdDb21wb25lbnQuZWxlbWVudDtcbiAgY29uc3Qgb2xkRWxlbWVudCA9IG9sZENvbXBvbmVudC5lbGVtZW50O1xuXG4gIGNvbnN0IHBhcmVudCA9IG9sZEVsZW1lbnQucGFyZW50RWxlbWVudDtcblxuICBpZiAocGFyZW50ID09PSBudWxsKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdQYXJlbnQgZWxlbWVudCBkb2VzblxcJ3QgZXhpc3QnKTtcbiAgfVxuXG4gIHBhcmVudC5yZXBsYWNlQ2hpbGQobmV3RWxlbWVudCwgb2xkRWxlbWVudCk7XG59XG5cbi8qKlxuICog0KTRg9C90LrRhtC40Y8g0LTQu9GPINGD0LTQsNC70LXQvdC40Y8g0LrQvtC80L/QvtC90LXQvdGC0LBcbiAqIEBwYXJhbSB7QWJzdHJhY3RWaWV3fSBjb21wb25lbnQg0JrQvtC80L/QvtC90LXQvdGCLCDQutC+0YLQvtGA0YvQuSDQvdGD0LbQvdC+INGD0LTQsNC70LjRgtGMXG4gKi9cbmZ1bmN0aW9uIHJlbW92ZShjb21wb25lbnQpIHtcbiAgaWYgKGNvbXBvbmVudCA9PT0gbnVsbCkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGlmICghKGNvbXBvbmVudCBpbnN0YW5jZW9mIEFic3RyYWN0VmlldykpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0NhbiByZW1vdmUgb25seSBjb21wb25lbnRzJyk7XG4gIH1cblxuICBjb21wb25lbnQuZWxlbWVudC5yZW1vdmUoKTtcbiAgY29tcG9uZW50LnJlbW92ZUVsZW1lbnQoKTtcbn1cblxuZXhwb3J0IHtSZW5kZXJQb3NpdGlvbiwgY3JlYXRlRWxlbWVudCwgcmVuZGVyLCByZXBsYWNlLCByZW1vdmV9O1xuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9pbnQge1xuICBjb25zdHJ1Y3RvcihpZCwgdHlwZSwgZGVzdGluYXRpb24sIGRhdGVGcm9tLCBkYXRlVG8sIGJhc2VQcmljZSwgb2ZmZXJzLCBpc0Zhdm9yaXRlKSB7XG4gICAgdGhpcy5pZCA9IGlkO1xuICAgIHRoaXMudHlwZSA9IHR5cGU7XG4gICAgdGhpcy5kZXN0aW5hdGlvbiA9IGRlc3RpbmF0aW9uO1xuICAgIHRoaXMuZGF0ZUZyb20gPSBkYXRlRnJvbTtcbiAgICB0aGlzLmRhdGVUbyA9IGRhdGVUbztcbiAgICB0aGlzLmJhc2VQcmljZSA9IGJhc2VQcmljZTtcbiAgICB0aGlzLm9mZmVycyA9IG9mZmVycztcbiAgICB0aGlzLmlzRmF2b3JpdGUgPSBpc0Zhdm9yaXRlO1xuICB9XG59XG4iLCJpbXBvcnQgUG9pbnQgZnJvbSAnLi4vbW9kZWwvcG9pbnQuanMnO1xuXG5jb25zdCBERVNUSU5BVElPTlMgPSBbXG4gIHtcbiAgICBpZDogJ2QxJyxcbiAgICBuYW1lOiAnQW1zdGVyZGFtJyxcbiAgICBkZXNjcmlwdGlvbjogJ0Ftc3RlcmRhbSwgY2FwaXRhbCBvZiB0aGUgTmV0aGVybGFuZHMnLFxuICAgIHBpY3R1cmVzOiBbXVxuICB9LFxuICB7XG4gICAgaWQ6ICdkMicsXG4gICAgbmFtZTogJ0NoYW1vbml4JyxcbiAgICBkZXNjcmlwdGlvbjogJ0NoYW1vbml4LCBhIHJlc29ydCBhcmVhIG5lYXIgTW9udCBCbGFuYycsXG4gICAgcGljdHVyZXM6IFtdXG4gIH0sXG4gIHtcbiAgICBpZDogJ2QzJyxcbiAgICBuYW1lOiAnR2VuZXZhJyxcbiAgICBkZXNjcmlwdGlvbjogJ0dlbmV2YSwgU3dpc3MgY2l0eSBvbiBMYWtlIEdlbmV2YScsXG4gICAgcGljdHVyZXM6IFtdXG4gIH1cbl07XG5cbmV4cG9ydCBjb25zdCBnZW5lcmF0ZURlc3RpbmF0aW9ucyA9ICgpID0+IERFU1RJTkFUSU9OUztcblxuZXhwb3J0IGNvbnN0IGdlbmVyYXRlT2ZmZXJzID0gKCkgPT4gKHtcbiAgdGF4aTogW1xuICAgIHtpZDogJ3RheGkxJywgdGl0bGU6ICdPcmRlciBVYmVyJywgcHJpY2U6IDIwfVxuICBdLFxuICBmbGlnaHQ6IFtcbiAgICB7aWQ6ICdmbGlnaHQxJywgdGl0bGU6ICdBZGQgbHVnZ2FnZScsIHByaWNlOiA1MH0sXG4gICAge2lkOiAnZmxpZ2h0MicsIHRpdGxlOiAnU3dpdGNoIHRvIGNvbWZvcnQnLCBwcmljZTogODB9XG4gIF0sXG4gIGRyaXZlOiBbXG4gICAge2lkOiAnZHJpdmUxJywgdGl0bGU6ICdSZW50IGEgY2FyJywgcHJpY2U6IDIwMH1cbiAgXSxcbiAgJ2NoZWNrLWluJzogW1xuICAgIHtpZDogJ2NoZWNraW4xJywgdGl0bGU6ICdBZGQgYnJlYWtmYXN0JywgcHJpY2U6IDUwfVxuICBdXG59KTtcblxuZXhwb3J0IGNvbnN0IGdlbmVyYXRlUG9pbnRzID0gKCkgPT4gW1xuICBuZXcgUG9pbnQoXG4gICAgJ3AxJyxcbiAgICAndGF4aScsXG4gICAgJ2QxJyxcbiAgICBuZXcgRGF0ZSgnMjAyNC0wMy0xOFQxMDozMDowMCcpLFxuICAgIG5ldyBEYXRlKCcyMDI0LTAzLTE4VDExOjAwOjAwJyksXG4gICAgMjAsXG4gICAgWyd0YXhpMSddLFxuICAgIGZhbHNlXG4gICksXG4gIG5ldyBQb2ludChcbiAgICAncDInLFxuICAgICdmbGlnaHQnLFxuICAgICdkMicsXG4gICAgbmV3IERhdGUoJzIwMjQtMDMtMThUMTI6MjU6MDAnKSxcbiAgICBuZXcgRGF0ZSgnMjAyNC0wMy0xOFQxMzozNTowMCcpLFxuICAgIDE2MCxcbiAgICBbJ2ZsaWdodDEnLCAnZmxpZ2h0MiddLFxuICAgIGZhbHNlXG4gICksXG4gIG5ldyBQb2ludChcbiAgICAncDMnLFxuICAgICdkcml2ZScsXG4gICAgJ2QyJyxcbiAgICBuZXcgRGF0ZSgnMjAyNC0wMy0xOFQxNDozMDowMCcpLFxuICAgIG5ldyBEYXRlKCcyMDI0LTAzLTE4VDE2OjA1OjAwJyksXG4gICAgMTYwLFxuICAgIFsnZHJpdmUxJ10sXG4gICAgZmFsc2VcbiAgKSxcbiAgbmV3IFBvaW50KFxuICAgICdwNCcsXG4gICAgJ2NoZWNrLWluJyxcbiAgICAnZDInLFxuICAgIG5ldyBEYXRlKCcyMDI0LTAzLTE4VDE2OjIwOjAwJyksXG4gICAgbmV3IERhdGUoJzIwMjQtMDMtMThUMTc6MDA6MDAnKSxcbiAgICA2MDAsXG4gICAgWydjaGVja2luMSddLFxuICAgIGZhbHNlXG4gIClcbl07XG5cbmV4cG9ydCBjb25zdCBnZW5lcmF0ZUZpbHRlcnMgPSAocG9pbnRzKSA9PiBbXG4gIHsgdHlwZTogJ2V2ZXJ5dGhpbmcnLCBuYW1lOiAnRXZlcnl0aGluZycsIGlzRGlzYWJsZWQ6IGZhbHNlLCBpc0NoZWNrZWQ6IHRydWUgfSxcbiAgeyB0eXBlOiAnZnV0dXJlJywgbmFtZTogJ0Z1dHVyZScsIGlzRGlzYWJsZWQ6IHBvaW50cy5sZW5ndGggPT09IDAsIGlzQ2hlY2tlZDogZmFsc2UgfSxcbiAgeyB0eXBlOiAncHJlc2VudCcsIG5hbWU6ICdQcmVzZW50JywgaXNEaXNhYmxlZDogdHJ1ZSwgaXNDaGVja2VkOiBmYWxzZSB9LFxuICB7IHR5cGU6ICdwYXN0JywgbmFtZTogJ1Bhc3QnLCBpc0Rpc2FibGVkOiBmYWxzZSwgaXNDaGVja2VkOiBmYWxzZSB9XG5dO1xuXG4iLCJpbXBvcnQgeyBnZW5lcmF0ZURlc3RpbmF0aW9ucywgZ2VuZXJhdGVPZmZlcnMsIGdlbmVyYXRlUG9pbnRzIH0gZnJvbSAnLi4vbW9jay9tb2NrLmpzJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTW9kZWwge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICB0aGlzLmRlc3RpbmF0aW9ucyA9IGdlbmVyYXRlRGVzdGluYXRpb25zKCk7XG4gICAgdGhpcy5vZmZlcnMgPSBnZW5lcmF0ZU9mZmVycygpO1xuICAgIHRoaXMucG9pbnRzID0gZ2VuZXJhdGVQb2ludHModGhpcy5kZXN0aW5hdGlvbnMpO1xuICB9XG5cbiAgZ2V0RGVzdGluYXRpb25zKCkge1xuICAgIHJldHVybiB0aGlzLmRlc3RpbmF0aW9ucztcbiAgfVxuXG4gIGdldE9mZmVycygpIHtcbiAgICByZXR1cm4gdGhpcy5vZmZlcnM7XG4gIH1cblxuICBnZXRQb2ludHMoKSB7XG4gICAgcmV0dXJuIHRoaXMucG9pbnRzO1xuICB9XG5cbiAgZ2V0UG9pbnRCeUlkKGlkKSB7XG4gICAgcmV0dXJuIHRoaXMucG9pbnRzLmZpbmQoKHBvaW50KSA9PiBwb2ludC5pZCA9PT0gaWQpO1xuICB9XG5cbiAgdXBkYXRlUG9pbnQodXBkYXRlZFBvaW50KSB7XG4gICAgY29uc3QgaW5kZXggPSB0aGlzLnBvaW50cy5maW5kSW5kZXgoKHBvaW50KSA9PiBwb2ludC5pZCA9PT0gdXBkYXRlZFBvaW50LmlkKTtcbiAgICBpZiAoaW5kZXggPT09IC0xKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYENhbid0IHVwZGF0ZSB1bmV4aXN0aW5nIHBvaW50IHdpdGggaWQ6ICR7dXBkYXRlZFBvaW50LmlkfWApO1xuICAgIH1cblxuICAgIHRoaXMucG9pbnRzW2luZGV4XSA9IHVwZGF0ZWRQb2ludDtcbiAgfVxufVxuIiwiaW1wb3J0IEFic3RyYWN0VmlldyBmcm9tICcuLi9mcmFtZXdvcmsvdmlldy9hYnN0cmFjdC12aWV3LmpzJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgRmlsdGVyc1ZpZXcgZXh0ZW5kcyBBYnN0cmFjdFZpZXcge1xuICAjZmlsdGVycyA9IFtdO1xuXG4gIGNvbnN0cnVjdG9yKGZpbHRlcnMpIHtcbiAgICBzdXBlcigpO1xuICAgIHRoaXMuI2ZpbHRlcnMgPSBmaWx0ZXJzO1xuICB9XG5cbiAgZ2V0IHRlbXBsYXRlKCkge1xuICAgIHJldHVybiBgXG4gICAgICA8Zm9ybSBjbGFzcz1cInRyaXAtZmlsdGVyc1wiPlxuICAgICAgICAke3RoaXMuI2ZpbHRlcnMubWFwKCh7IHR5cGUsIG5hbWUsIGlzRGlzYWJsZWQsIGlzQ2hlY2tlZCB9KSA9PiBgXG4gICAgICAgICAgPGRpdiBjbGFzcz1cInRyaXAtZmlsdGVyc19fZmlsdGVyXCI+XG4gICAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgICAgaWQ9XCJmaWx0ZXItJHt0eXBlfVwiXG4gICAgICAgICAgICAgIGNsYXNzPVwidHJpcC1maWx0ZXJzX19maWx0ZXItaW5wdXQgdmlzdWFsbHktaGlkZGVuXCJcbiAgICAgICAgICAgICAgdHlwZT1cInJhZGlvXCJcbiAgICAgICAgICAgICAgbmFtZT1cInRyaXAtZmlsdGVyXCJcbiAgICAgICAgICAgICAgdmFsdWU9XCIke3R5cGV9XCJcbiAgICAgICAgICAgICAgJHtpc0NoZWNrZWQgPyAnY2hlY2tlZCcgOiAnJ31cbiAgICAgICAgICAgICAgJHtpc0Rpc2FibGVkID8gJ2Rpc2FibGVkJyA6ICcnfVxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgPGxhYmVsIGNsYXNzPVwidHJpcC1maWx0ZXJzX19maWx0ZXItbGFiZWxcIiBmb3I9XCJmaWx0ZXItJHt0eXBlfVwiPiR7bmFtZX08L2xhYmVsPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICBgKS5qb2luKCcnKX1cbiAgICAgICAgPGJ1dHRvbiBjbGFzcz1cInZpc3VhbGx5LWhpZGRlblwiIHR5cGU9XCJzdWJtaXRcIj5BY2NlcHQgZmlsdGVyPC9idXR0b24+XG4gICAgICA8L2Zvcm0+XG4gICAgYDtcbiAgfVxufVxuIiwiaW1wb3J0IEFic3RyYWN0VmlldyBmcm9tICcuLi9mcmFtZXdvcmsvdmlldy9hYnN0cmFjdC12aWV3LmpzJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU29ydFZpZXcgZXh0ZW5kcyBBYnN0cmFjdFZpZXcge1xuICAjc29ydHMgPSBbXTtcbiAgI2hhbmRsZVNvcnRUeXBlQ2hhbmdlID0gbnVsbDtcblxuICBjb25zdHJ1Y3Rvcihzb3J0cywgaGFuZGxlU29ydFR5cGVDaGFuZ2UpIHtcbiAgICBzdXBlcigpO1xuICAgIHRoaXMuI3NvcnRzID0gc29ydHM7XG4gICAgdGhpcy4jaGFuZGxlU29ydFR5cGVDaGFuZ2UgPSBoYW5kbGVTb3J0VHlwZUNoYW5nZTtcblxuICAgIHRoaXMuZWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCB0aGlzLiNzb3J0VHlwZUNoYW5nZUhhbmRsZXIpO1xuICB9XG5cbiAgZ2V0IHRlbXBsYXRlKCkge1xuICAgIHJldHVybiBgXG4gICAgICA8ZGl2IGNsYXNzPVwidHJpcC1zb3J0XCI+XG4gICAgICAgICR7dGhpcy4jc29ydHMubWFwKCh7IHR5cGUsIG5hbWUsIGlzQ2hlY2tlZCB9KSA9PiBgXG4gICAgICAgICAgPGRpdiBjbGFzcz1cInRyaXAtc29ydF9faXRlbVwiPlxuICAgICAgICAgICAgPGlucHV0IGlkPVwic29ydC0ke3R5cGV9XCIgdHlwZT1cInJhZGlvXCIgbmFtZT1cInRyaXAtc29ydFwiIHZhbHVlPVwiJHt0eXBlfVwiICR7aXNDaGVja2VkID8gJ2NoZWNrZWQnIDogJyd9PlxuICAgICAgICAgICAgPGxhYmVsIGZvcj1cInNvcnQtJHt0eXBlfVwiPiR7bmFtZX08L2xhYmVsPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICBgKS5qb2luKCcnKX1cbiAgICAgIDwvZGl2PlxuICAgIGA7XG4gIH1cblxuICAjc29ydFR5cGVDaGFuZ2VIYW5kbGVyID0gKGV2dCkgPT4ge1xuICAgIGlmIChldnQudGFyZ2V0Lm5hbWUgPT09ICd0cmlwLXNvcnQnKSB7XG4gICAgICB0aGlzLiNoYW5kbGVTb3J0VHlwZUNoYW5nZShldnQudGFyZ2V0LnZhbHVlKTtcbiAgICB9XG4gIH07XG59XG4iLCJpbXBvcnQgQWJzdHJhY3RWaWV3IGZyb20gJy4uL2ZyYW1ld29yay92aWV3L2Fic3RyYWN0LXZpZXcuanMnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBFbXB0eUxpc3RWaWV3IGV4dGVuZHMgQWJzdHJhY3RWaWV3IHtcbiAgZ2V0IHRlbXBsYXRlKCkge1xuICAgIHJldHVybiBgXG4gICAgICA8cCBjbGFzcz1cInRyaXAtZXZlbnRzX19tc2dcIj5cbiAgICAgICAgQ2xpY2sgTmV3IEV2ZW50IHRvIGNyZWF0ZSB5b3VyIGZpcnN0IHBvaW50XG4gICAgICA8L3A+XG4gICAgYDtcbiAgfVxufVxuIiwiaW1wb3J0IEFic3RyYWN0VmlldyBmcm9tICcuLi9mcmFtZXdvcmsvdmlldy9hYnN0cmFjdC12aWV3LmpzJztcbmltcG9ydCBkYXlqcyBmcm9tICdkYXlqcyc7XG5cbmZ1bmN0aW9uIGZvcm1hdERhdGUoZGF0ZSkge1xuICByZXR1cm4gZGF5anMoZGF0ZSkuZm9ybWF0KCdISDptbScpO1xufVxuXG5mdW5jdGlvbiBnZXREdXJhdGlvbihkYXRlRnJvbSwgZGF0ZVRvKSB7XG4gIGNvbnN0IGRpZmZNcyA9IGRheWpzKGRhdGVUbykuZGlmZihkYXlqcyhkYXRlRnJvbSkpO1xuICBjb25zdCBkaWZmTWludXRlcyA9IE1hdGguZmxvb3IoZGlmZk1zIC8gKDEwMDAgKiA2MCkpO1xuICBjb25zdCBkaWZmSG91cnMgPSBNYXRoLmZsb29yKGRpZmZNaW51dGVzIC8gNjApO1xuICBjb25zdCBkaWZmRGF5cyA9IE1hdGguZmxvb3IoZGlmZkhvdXJzIC8gMjQpO1xuXG4gIGNvbnN0IG1pbnV0ZXMgPSBkaWZmTWludXRlcyAlIDYwO1xuICBjb25zdCBob3VycyA9IGRpZmZIb3VycyAlIDI0O1xuICBjb25zdCBkYXlzID0gZGlmZkRheXM7XG5cbiAgaWYgKGRpZmZNaW51dGVzIDwgNjApIHtcbiAgICByZXR1cm4gYCR7ZGlmZk1pbnV0ZXN9TWA7XG4gIH0gZWxzZSBpZiAoZGlmZkhvdXJzIDwgMjQpIHtcbiAgICByZXR1cm4gYCR7aG91cnMudG9TdHJpbmcoKS5wYWRTdGFydCgyLCAnMCcpfUggJHttaW51dGVzLnRvU3RyaW5nKCkucGFkU3RhcnQoMiwgJzAnKX1NYDtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gYCR7ZGF5cy50b1N0cmluZygpLnBhZFN0YXJ0KDIsICcwJyl9RCAke2hvdXJzLnRvU3RyaW5nKCkucGFkU3RhcnQoMiwgJzAnKX1IICR7bWludXRlcy50b1N0cmluZygpLnBhZFN0YXJ0KDIsICcwJyl9TWA7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9pbnRWaWV3IGV4dGVuZHMgQWJzdHJhY3RWaWV3IHtcbiAgI3BvaW50ID0gbnVsbDtcbiAgI2Rlc3RpbmF0aW9uID0gbnVsbDtcbiAgI29mZmVycyA9IG51bGw7XG4gICNoYW5kbGVFZGl0Q2xpY2sgPSBudWxsO1xuICAjaGFuZGxlRmF2b3JpdGVDbGljayA9IG51bGw7XG5cbiAgY29uc3RydWN0b3IocG9pbnQsIGRlc3RpbmF0aW9ucywgb2ZmZXJzLCBvbkVkaXRDbGljaywgb25GYXZvcml0ZUNsaWNrKSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLiNwb2ludCA9IHBvaW50O1xuICAgIHRoaXMuI2Rlc3RpbmF0aW9uID0gZGVzdGluYXRpb25zLmZpbmQoKGQpID0+IGQuaWQgPT09IHBvaW50LmRlc3RpbmF0aW9uKTtcbiAgICB0aGlzLiNvZmZlcnMgPSBvZmZlcnNbcG9pbnQudHlwZV0/LmZpbHRlcigobykgPT4gcG9pbnQub2ZmZXJzLmluY2x1ZGVzKG8uaWQpKSB8fCBbXTtcbiAgICB0aGlzLiNoYW5kbGVFZGl0Q2xpY2sgPSBvbkVkaXRDbGljaztcbiAgICB0aGlzLiNoYW5kbGVGYXZvcml0ZUNsaWNrID0gb25GYXZvcml0ZUNsaWNrO1xuXG4gICAgdGhpcy5lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5ldmVudF9fcm9sbHVwLWJ0bicpPy5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMuI2VkaXRDbGlja0hhbmRsZXIpO1xuICAgIHRoaXMuZWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuZXZlbnRfX2Zhdm9yaXRlLWJ0bicpPy5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMuI2Zhdm9yaXRlQ2xpY2tIYW5kbGVyKTtcbiAgfVxuXG4gIGdldCB0ZW1wbGF0ZSgpIHtcbiAgICBjb25zdCB7YmFzZVByaWNlLCBkYXRlRnJvbSwgZGF0ZVRvLCB0eXBlLCBpc0Zhdm9yaXRlfSA9IHRoaXMuI3BvaW50O1xuICAgIGNvbnN0IGRlc3RpbmF0aW9uTmFtZSA9IHRoaXMuI2Rlc3RpbmF0aW9uID8gdGhpcy4jZGVzdGluYXRpb24ubmFtZSA6ICcnO1xuICAgIGNvbnN0IG9mZmVyc01hcmt1cCA9IHRoaXMuI29mZmVycy5sZW5ndGggPiAwID8gdGhpcy4jb2ZmZXJzLm1hcCgob2ZmZXIpID0+IGBcbiAgICAgIDxsaSBjbGFzcz1cImV2ZW50X19vZmZlclwiPlxuICAgICAgICA8c3BhbiBjbGFzcz1cImV2ZW50X19vZmZlci10aXRsZVwiPiR7b2ZmZXIudGl0bGV9PC9zcGFuPlxuICAgICAgICAmcGx1czsmZXVybzsmbmJzcDs8c3BhbiBjbGFzcz1cImV2ZW50X19vZmZlci1wcmljZVwiPiR7b2ZmZXIucHJpY2V9PC9zcGFuPlxuICAgICAgPC9saT5cbiAgICBgKS5qb2luKCcnKSA6ICcnO1xuXG4gICAgcmV0dXJuIGBcbiAgICAgIDxsaSBjbGFzcz1cInRyaXAtZXZlbnRzX19pdGVtXCI+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJldmVudFwiPlxuICAgICAgICAgIDx0aW1lIGNsYXNzPVwiZXZlbnRfX2RhdGVcIiBkYXRldGltZT1cIiR7ZGF5anMoZGF0ZUZyb20pLmZvcm1hdCgnWVlZWS1NTS1ERCcpfVwiPiR7ZGF5anMoZGF0ZUZyb20pLmZvcm1hdCgnTU1NIEQnKX08L3RpbWU+XG4gICAgICAgICAgPGRpdiBjbGFzcz1cImV2ZW50X190eXBlXCI+XG4gICAgICAgICAgICA8aW1nIGNsYXNzPVwiZXZlbnRfX3R5cGUtaWNvblwiIHdpZHRoPVwiNDJcIiBoZWlnaHQ9XCI0MlwiIHNyYz1cImltZy9pY29ucy8ke3R5cGV9LnBuZ1wiIGFsdD1cIkV2ZW50IHR5cGUgaWNvblwiPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDxoMyBjbGFzcz1cImV2ZW50X190aXRsZVwiPiR7dHlwZX0gJHtkZXN0aW5hdGlvbk5hbWV9PC9oMz5cbiAgICAgICAgICA8ZGl2IGNsYXNzPVwiZXZlbnRfX3NjaGVkdWxlXCI+XG4gICAgICAgICAgICA8cCBjbGFzcz1cImV2ZW50X190aW1lXCI+XG4gICAgICAgICAgICAgIDx0aW1lIGNsYXNzPVwiZXZlbnRfX3N0YXJ0LXRpbWVcIiBkYXRldGltZT1cIiR7ZGF5anMoZGF0ZUZyb20pLnRvSVNPU3RyaW5nKCl9XCI+JHtmb3JtYXREYXRlKGRhdGVGcm9tKX08L3RpbWU+XG4gICAgICAgICAgICAgICZtZGFzaDtcbiAgICAgICAgICAgICAgPHRpbWUgY2xhc3M9XCJldmVudF9fZW5kLXRpbWVcIiBkYXRldGltZT1cIiR7ZGF5anMoZGF0ZVRvKS50b0lTT1N0cmluZygpfVwiPiR7Zm9ybWF0RGF0ZShkYXRlVG8pfTwvdGltZT5cbiAgICAgICAgICAgIDwvcD5cbiAgICAgICAgICAgIDxwIGNsYXNzPVwiZXZlbnRfX2R1cmF0aW9uXCI+JHtnZXREdXJhdGlvbihkYXRlRnJvbSwgZGF0ZVRvKX08L3A+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPHAgY2xhc3M9XCJldmVudF9fcHJpY2VcIj5cbiAgICAgICAgICAgICZldXJvOyZuYnNwOzxzcGFuIGNsYXNzPVwiZXZlbnRfX3ByaWNlLXZhbHVlXCI+JHtiYXNlUHJpY2V9PC9zcGFuPlxuICAgICAgICAgIDwvcD5cbiAgICAgICAgICA8aDQgY2xhc3M9XCJ2aXN1YWxseS1oaWRkZW5cIj5PZmZlcnM6PC9oND5cbiAgICAgICAgICA8dWwgY2xhc3M9XCJldmVudF9fc2VsZWN0ZWQtb2ZmZXJzXCI+XG4gICAgICAgICAgICAke29mZmVyc01hcmt1cH1cbiAgICAgICAgICA8L3VsPlxuICAgICAgICAgIDxidXR0b24gY2xhc3M9XCJldmVudF9fZmF2b3JpdGUtYnRuICR7aXNGYXZvcml0ZSA/ICdldmVudF9fZmF2b3JpdGUtYnRuLS1hY3RpdmUnIDogJyd9XCIgdHlwZT1cImJ1dHRvblwiPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJ2aXN1YWxseS1oaWRkZW5cIj5BZGQgdG8gZmF2b3JpdGU8L3NwYW4+XG4gICAgICAgICAgICA8c3ZnIGNsYXNzPVwiZXZlbnRfX2Zhdm9yaXRlLWljb25cIiB3aWR0aD1cIjI4XCIgaGVpZ2h0PVwiMjhcIiB2aWV3Qm94PVwiMCAwIDI4IDI4XCI+XG4gICAgICAgICAgICAgIDxwYXRoIGQ9XCJNMTQgMjFsLTYuMTYgMy4yNCAxLjE4LTYuODhMMyAxMi43NGw2LjktMUwxNCA1bDIuMSA2Ljc0IDYuOSAxLTUgNC42MiAxLjE4IDYuODh6XCIvPlxuICAgICAgICAgICAgPC9zdmc+XG4gICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgPGJ1dHRvbiBjbGFzcz1cImV2ZW50X19yb2xsdXAtYnRuXCIgdHlwZT1cImJ1dHRvblwiPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJ2aXN1YWxseS1oaWRkZW5cIj5PcGVuIGV2ZW50PC9zcGFuPlxuICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvbGk+XG4gICAgYDtcbiAgfVxuXG4gICNlZGl0Q2xpY2tIYW5kbGVyID0gKGV2dCkgPT4ge1xuICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIHRoaXMuI2hhbmRsZUVkaXRDbGljaygpO1xuICB9O1xuXG4gICNmYXZvcml0ZUNsaWNrSGFuZGxlciA9IChldnQpID0+IHtcbiAgICBldnQucHJldmVudERlZmF1bHQoKTtcblxuICAgIGNvbnN0IHVwZGF0ZWRQb2ludCA9IHtcbiAgICAgIC4uLnRoaXMuI3BvaW50LFxuICAgICAgaXNGYXZvcml0ZTogIXRoaXMuI3BvaW50LmlzRmF2b3JpdGUsXG4gICAgfTtcblxuICAgIHRoaXMuI2hhbmRsZUZhdm9yaXRlQ2xpY2sodXBkYXRlZFBvaW50KTtcbiAgfTtcbn1cbiIsImltcG9ydCBBYnN0cmFjdFZpZXcgZnJvbSAnLi9hYnN0cmFjdC12aWV3LmpzJztcblxuLyoqXG4gKiDQkNCx0YHRgtGA0LDQutGC0L3Ri9C5INC60LvQsNGB0YEg0L/RgNC10LTRgdGC0LDQstC70LXQvdC40Y8g0YEg0YHQvtGB0YLQvtGP0L3QuNC10LxcbiAqL1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQWJzdHJhY3RTdGF0ZWZ1bFZpZXcgZXh0ZW5kcyBBYnN0cmFjdFZpZXcge1xuICAvKiogQHR5cGUge09iamVjdH0g0J7QsdGK0LXQutGCINGB0L7RgdGC0L7Rj9C90LjRjyAqL1xuICBfc3RhdGUgPSB7fTtcblxuICAvKipcbiAgICog0JzQtdGC0L7QtCDQtNC70Y8g0L7QsdC90L7QstC70LXQvdC40Y8g0YHQvtGB0YLQvtGP0L3QuNGPINC4INC/0LXRgNC10YDQuNGB0L7QstC60Lgg0Y3Qu9C10LzQtdC90YLQsFxuICAgKiBAcGFyYW0ge09iamVjdH0gdXBkYXRlINCe0LHRitC10LrRgiDRgSDQvtCx0L3QvtCy0LvRkdC90L3QvtC5INGH0LDRgdGC0YzRjiDRgdC+0YHRgtC+0Y/QvdC40Y9cbiAgICovXG4gIHVwZGF0ZUVsZW1lbnQodXBkYXRlKSB7XG4gICAgaWYgKCF1cGRhdGUpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICB0aGlzLl9zZXRTdGF0ZSh1cGRhdGUpO1xuXG4gICAgdGhpcy4jcmVyZW5kZXJFbGVtZW50KCk7XG4gIH1cblxuICAvKipcbiAgICog0JzQtdGC0L7QtCDQtNC70Y8g0LLQvtGB0YHRgtCw0L3QvtCy0LvQtdC90LjRjyDQvtCx0YDQsNCx0L7RgtGH0LjQutC+0LIg0L/QvtGB0LvQtSDQv9C10YDQtdGA0LjRgdC+0LLQutC4INGN0LvQtdC80LXQvdGC0LBcbiAgICogQGFic3RyYWN0XG4gICAqL1xuICBfcmVzdG9yZUhhbmRsZXJzKCkge1xuICAgIHRocm93IG5ldyBFcnJvcignQWJzdHJhY3QgbWV0aG9kIG5vdCBpbXBsZW1lbnRlZDogcmVzdG9yZUhhbmRsZXJzJyk7XG4gIH1cblxuICAvKipcbiAgICog0JzQtdGC0L7QtCDQtNC70Y8g0L7QsdC90L7QstC70LXQvdC40Y8g0YHQvtGB0YLQvtGP0L3QuNGPXG4gICAqIEBwYXJhbSB7T2JqZWN0fSB1cGRhdGUg0J7QsdGK0LXQutGCINGBINC+0LHQvdC+0LLQu9GR0L3QvdC+0Lkg0YfQsNGB0YLRjNGOINGB0L7RgdGC0L7Rj9C90LjRj1xuICAgKi9cbiAgX3NldFN0YXRlKHVwZGF0ZSkge1xuICAgIHRoaXMuX3N0YXRlID0gc3RydWN0dXJlZENsb25lKHsuLi50aGlzLl9zdGF0ZSwgLi4udXBkYXRlfSk7XG4gIH1cblxuICAvKiog0JzQtdGC0L7QtCDQtNC70Y8g0L/QtdGA0LXRgNC40YHQvtCy0LrQuCDRjdC70LXQvNC10L3RgtCwICovXG4gICNyZXJlbmRlckVsZW1lbnQoKSB7XG4gICAgY29uc3QgcHJldkVsZW1lbnQgPSB0aGlzLmVsZW1lbnQ7XG4gICAgY29uc3QgcGFyZW50ID0gcHJldkVsZW1lbnQucGFyZW50RWxlbWVudDtcbiAgICB0aGlzLnJlbW92ZUVsZW1lbnQoKTtcblxuICAgIGNvbnN0IG5ld0VsZW1lbnQgPSB0aGlzLmVsZW1lbnQ7XG5cbiAgICBwYXJlbnQucmVwbGFjZUNoaWxkKG5ld0VsZW1lbnQsIHByZXZFbGVtZW50KTtcblxuICAgIHRoaXMuX3Jlc3RvcmVIYW5kbGVycygpO1xuICB9XG59XG4iLCJleHBvcnQgdmFyIEhPT0tTID0gW1xuICAgIFwib25DaGFuZ2VcIixcbiAgICBcIm9uQ2xvc2VcIixcbiAgICBcIm9uRGF5Q3JlYXRlXCIsXG4gICAgXCJvbkRlc3Ryb3lcIixcbiAgICBcIm9uS2V5RG93blwiLFxuICAgIFwib25Nb250aENoYW5nZVwiLFxuICAgIFwib25PcGVuXCIsXG4gICAgXCJvblBhcnNlQ29uZmlnXCIsXG4gICAgXCJvblJlYWR5XCIsXG4gICAgXCJvblZhbHVlVXBkYXRlXCIsXG4gICAgXCJvblllYXJDaGFuZ2VcIixcbiAgICBcIm9uUHJlQ2FsZW5kYXJQb3NpdGlvblwiLFxuXTtcbmV4cG9ydCB2YXIgZGVmYXVsdHMgPSB7XG4gICAgX2Rpc2FibGU6IFtdLFxuICAgIGFsbG93SW5wdXQ6IGZhbHNlLFxuICAgIGFsbG93SW52YWxpZFByZWxvYWQ6IGZhbHNlLFxuICAgIGFsdEZvcm1hdDogXCJGIGosIFlcIixcbiAgICBhbHRJbnB1dDogZmFsc2UsXG4gICAgYWx0SW5wdXRDbGFzczogXCJmb3JtLWNvbnRyb2wgaW5wdXRcIixcbiAgICBhbmltYXRlOiB0eXBlb2Ygd2luZG93ID09PSBcIm9iamVjdFwiICYmXG4gICAgICAgIHdpbmRvdy5uYXZpZ2F0b3IudXNlckFnZW50LmluZGV4T2YoXCJNU0lFXCIpID09PSAtMSxcbiAgICBhcmlhRGF0ZUZvcm1hdDogXCJGIGosIFlcIixcbiAgICBhdXRvRmlsbERlZmF1bHRUaW1lOiB0cnVlLFxuICAgIGNsaWNrT3BlbnM6IHRydWUsXG4gICAgY2xvc2VPblNlbGVjdDogdHJ1ZSxcbiAgICBjb25qdW5jdGlvbjogXCIsIFwiLFxuICAgIGRhdGVGb3JtYXQ6IFwiWS1tLWRcIixcbiAgICBkZWZhdWx0SG91cjogMTIsXG4gICAgZGVmYXVsdE1pbnV0ZTogMCxcbiAgICBkZWZhdWx0U2Vjb25kczogMCxcbiAgICBkaXNhYmxlOiBbXSxcbiAgICBkaXNhYmxlTW9iaWxlOiBmYWxzZSxcbiAgICBlbmFibGVTZWNvbmRzOiBmYWxzZSxcbiAgICBlbmFibGVUaW1lOiBmYWxzZSxcbiAgICBlcnJvckhhbmRsZXI6IGZ1bmN0aW9uIChlcnIpIHtcbiAgICAgICAgcmV0dXJuIHR5cGVvZiBjb25zb2xlICE9PSBcInVuZGVmaW5lZFwiICYmIGNvbnNvbGUud2FybihlcnIpO1xuICAgIH0sXG4gICAgZ2V0V2VlazogZnVuY3Rpb24gKGdpdmVuRGF0ZSkge1xuICAgICAgICB2YXIgZGF0ZSA9IG5ldyBEYXRlKGdpdmVuRGF0ZS5nZXRUaW1lKCkpO1xuICAgICAgICBkYXRlLnNldEhvdXJzKDAsIDAsIDAsIDApO1xuICAgICAgICBkYXRlLnNldERhdGUoZGF0ZS5nZXREYXRlKCkgKyAzIC0gKChkYXRlLmdldERheSgpICsgNikgJSA3KSk7XG4gICAgICAgIHZhciB3ZWVrMSA9IG5ldyBEYXRlKGRhdGUuZ2V0RnVsbFllYXIoKSwgMCwgNCk7XG4gICAgICAgIHJldHVybiAoMSArXG4gICAgICAgICAgICBNYXRoLnJvdW5kKCgoZGF0ZS5nZXRUaW1lKCkgLSB3ZWVrMS5nZXRUaW1lKCkpIC8gODY0MDAwMDAgLVxuICAgICAgICAgICAgICAgIDMgK1xuICAgICAgICAgICAgICAgICgod2VlazEuZ2V0RGF5KCkgKyA2KSAlIDcpKSAvXG4gICAgICAgICAgICAgICAgNykpO1xuICAgIH0sXG4gICAgaG91ckluY3JlbWVudDogMSxcbiAgICBpZ25vcmVkRm9jdXNFbGVtZW50czogW10sXG4gICAgaW5saW5lOiBmYWxzZSxcbiAgICBsb2NhbGU6IFwiZGVmYXVsdFwiLFxuICAgIG1pbnV0ZUluY3JlbWVudDogNSxcbiAgICBtb2RlOiBcInNpbmdsZVwiLFxuICAgIG1vbnRoU2VsZWN0b3JUeXBlOiBcImRyb3Bkb3duXCIsXG4gICAgbmV4dEFycm93OiBcIjxzdmcgdmVyc2lvbj0nMS4xJyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHhtbG5zOnhsaW5rPSdodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rJyB2aWV3Qm94PScwIDAgMTcgMTcnPjxnPjwvZz48cGF0aCBkPSdNMTMuMjA3IDguNDcybC03Ljg1NCA3Ljg1NC0wLjcwNy0wLjcwNyA3LjE0Ni03LjE0Ni03LjE0Ni03LjE0OCAwLjcwNy0wLjcwNyA3Ljg1NCA3Ljg1NHonIC8+PC9zdmc+XCIsXG4gICAgbm9DYWxlbmRhcjogZmFsc2UsXG4gICAgbm93OiBuZXcgRGF0ZSgpLFxuICAgIG9uQ2hhbmdlOiBbXSxcbiAgICBvbkNsb3NlOiBbXSxcbiAgICBvbkRheUNyZWF0ZTogW10sXG4gICAgb25EZXN0cm95OiBbXSxcbiAgICBvbktleURvd246IFtdLFxuICAgIG9uTW9udGhDaGFuZ2U6IFtdLFxuICAgIG9uT3BlbjogW10sXG4gICAgb25QYXJzZUNvbmZpZzogW10sXG4gICAgb25SZWFkeTogW10sXG4gICAgb25WYWx1ZVVwZGF0ZTogW10sXG4gICAgb25ZZWFyQ2hhbmdlOiBbXSxcbiAgICBvblByZUNhbGVuZGFyUG9zaXRpb246IFtdLFxuICAgIHBsdWdpbnM6IFtdLFxuICAgIHBvc2l0aW9uOiBcImF1dG9cIixcbiAgICBwb3NpdGlvbkVsZW1lbnQ6IHVuZGVmaW5lZCxcbiAgICBwcmV2QXJyb3c6IFwiPHN2ZyB2ZXJzaW9uPScxLjEnIHhtbG5zPSdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZycgeG1sbnM6eGxpbms9J2h0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsnIHZpZXdCb3g9JzAgMCAxNyAxNyc+PGc+PC9nPjxwYXRoIGQ9J001LjIwNyA4LjQ3MWw3LjE0NiA3LjE0Ny0wLjcwNyAwLjcwNy03Ljg1My03Ljg1NCA3Ljg1NC03Ljg1MyAwLjcwNyAwLjcwNy03LjE0NyA3LjE0NnonIC8+PC9zdmc+XCIsXG4gICAgc2hvcnRoYW5kQ3VycmVudE1vbnRoOiBmYWxzZSxcbiAgICBzaG93TW9udGhzOiAxLFxuICAgIHN0YXRpYzogZmFsc2UsXG4gICAgdGltZV8yNGhyOiBmYWxzZSxcbiAgICB3ZWVrTnVtYmVyczogZmFsc2UsXG4gICAgd3JhcDogZmFsc2UsXG59O1xuIiwiZXhwb3J0IHZhciBlbmdsaXNoID0ge1xuICAgIHdlZWtkYXlzOiB7XG4gICAgICAgIHNob3J0aGFuZDogW1wiU3VuXCIsIFwiTW9uXCIsIFwiVHVlXCIsIFwiV2VkXCIsIFwiVGh1XCIsIFwiRnJpXCIsIFwiU2F0XCJdLFxuICAgICAgICBsb25naGFuZDogW1xuICAgICAgICAgICAgXCJTdW5kYXlcIixcbiAgICAgICAgICAgIFwiTW9uZGF5XCIsXG4gICAgICAgICAgICBcIlR1ZXNkYXlcIixcbiAgICAgICAgICAgIFwiV2VkbmVzZGF5XCIsXG4gICAgICAgICAgICBcIlRodXJzZGF5XCIsXG4gICAgICAgICAgICBcIkZyaWRheVwiLFxuICAgICAgICAgICAgXCJTYXR1cmRheVwiLFxuICAgICAgICBdLFxuICAgIH0sXG4gICAgbW9udGhzOiB7XG4gICAgICAgIHNob3J0aGFuZDogW1xuICAgICAgICAgICAgXCJKYW5cIixcbiAgICAgICAgICAgIFwiRmViXCIsXG4gICAgICAgICAgICBcIk1hclwiLFxuICAgICAgICAgICAgXCJBcHJcIixcbiAgICAgICAgICAgIFwiTWF5XCIsXG4gICAgICAgICAgICBcIkp1blwiLFxuICAgICAgICAgICAgXCJKdWxcIixcbiAgICAgICAgICAgIFwiQXVnXCIsXG4gICAgICAgICAgICBcIlNlcFwiLFxuICAgICAgICAgICAgXCJPY3RcIixcbiAgICAgICAgICAgIFwiTm92XCIsXG4gICAgICAgICAgICBcIkRlY1wiLFxuICAgICAgICBdLFxuICAgICAgICBsb25naGFuZDogW1xuICAgICAgICAgICAgXCJKYW51YXJ5XCIsXG4gICAgICAgICAgICBcIkZlYnJ1YXJ5XCIsXG4gICAgICAgICAgICBcIk1hcmNoXCIsXG4gICAgICAgICAgICBcIkFwcmlsXCIsXG4gICAgICAgICAgICBcIk1heVwiLFxuICAgICAgICAgICAgXCJKdW5lXCIsXG4gICAgICAgICAgICBcIkp1bHlcIixcbiAgICAgICAgICAgIFwiQXVndXN0XCIsXG4gICAgICAgICAgICBcIlNlcHRlbWJlclwiLFxuICAgICAgICAgICAgXCJPY3RvYmVyXCIsXG4gICAgICAgICAgICBcIk5vdmVtYmVyXCIsXG4gICAgICAgICAgICBcIkRlY2VtYmVyXCIsXG4gICAgICAgIF0sXG4gICAgfSxcbiAgICBkYXlzSW5Nb250aDogWzMxLCAyOCwgMzEsIDMwLCAzMSwgMzAsIDMxLCAzMSwgMzAsIDMxLCAzMCwgMzFdLFxuICAgIGZpcnN0RGF5T2ZXZWVrOiAwLFxuICAgIG9yZGluYWw6IGZ1bmN0aW9uIChudGgpIHtcbiAgICAgICAgdmFyIHMgPSBudGggJSAxMDA7XG4gICAgICAgIGlmIChzID4gMyAmJiBzIDwgMjEpXG4gICAgICAgICAgICByZXR1cm4gXCJ0aFwiO1xuICAgICAgICBzd2l0Y2ggKHMgJSAxMCkge1xuICAgICAgICAgICAgY2FzZSAxOlxuICAgICAgICAgICAgICAgIHJldHVybiBcInN0XCI7XG4gICAgICAgICAgICBjYXNlIDI6XG4gICAgICAgICAgICAgICAgcmV0dXJuIFwibmRcIjtcbiAgICAgICAgICAgIGNhc2UgMzpcbiAgICAgICAgICAgICAgICByZXR1cm4gXCJyZFwiO1xuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICByZXR1cm4gXCJ0aFwiO1xuICAgICAgICB9XG4gICAgfSxcbiAgICByYW5nZVNlcGFyYXRvcjogXCIgdG8gXCIsXG4gICAgd2Vla0FiYnJldmlhdGlvbjogXCJXa1wiLFxuICAgIHNjcm9sbFRpdGxlOiBcIlNjcm9sbCB0byBpbmNyZW1lbnRcIixcbiAgICB0b2dnbGVUaXRsZTogXCJDbGljayB0byB0b2dnbGVcIixcbiAgICBhbVBNOiBbXCJBTVwiLCBcIlBNXCJdLFxuICAgIHllYXJBcmlhTGFiZWw6IFwiWWVhclwiLFxuICAgIG1vbnRoQXJpYUxhYmVsOiBcIk1vbnRoXCIsXG4gICAgaG91ckFyaWFMYWJlbDogXCJIb3VyXCIsXG4gICAgbWludXRlQXJpYUxhYmVsOiBcIk1pbnV0ZVwiLFxuICAgIHRpbWVfMjRocjogZmFsc2UsXG59O1xuZXhwb3J0IGRlZmF1bHQgZW5nbGlzaDtcbiIsImV4cG9ydCB2YXIgcGFkID0gZnVuY3Rpb24gKG51bWJlciwgbGVuZ3RoKSB7XG4gICAgaWYgKGxlbmd0aCA9PT0gdm9pZCAwKSB7IGxlbmd0aCA9IDI7IH1cbiAgICByZXR1cm4gKFwiMDAwXCIgKyBudW1iZXIpLnNsaWNlKGxlbmd0aCAqIC0xKTtcbn07XG5leHBvcnQgdmFyIGludCA9IGZ1bmN0aW9uIChib29sKSB7IHJldHVybiAoYm9vbCA9PT0gdHJ1ZSA/IDEgOiAwKTsgfTtcbmV4cG9ydCBmdW5jdGlvbiBkZWJvdW5jZShmbiwgd2FpdCkge1xuICAgIHZhciB0O1xuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICAgIHZhciBhcmdzID0gYXJndW1lbnRzO1xuICAgICAgICBjbGVhclRpbWVvdXQodCk7XG4gICAgICAgIHQgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsgcmV0dXJuIGZuLmFwcGx5KF90aGlzLCBhcmdzKTsgfSwgd2FpdCk7XG4gICAgfTtcbn1cbmV4cG9ydCB2YXIgYXJyYXlpZnkgPSBmdW5jdGlvbiAob2JqKSB7XG4gICAgcmV0dXJuIG9iaiBpbnN0YW5jZW9mIEFycmF5ID8gb2JqIDogW29ial07XG59O1xuIiwiZXhwb3J0IGZ1bmN0aW9uIHRvZ2dsZUNsYXNzKGVsZW0sIGNsYXNzTmFtZSwgYm9vbCkge1xuICAgIGlmIChib29sID09PSB0cnVlKVxuICAgICAgICByZXR1cm4gZWxlbS5jbGFzc0xpc3QuYWRkKGNsYXNzTmFtZSk7XG4gICAgZWxlbS5jbGFzc0xpc3QucmVtb3ZlKGNsYXNzTmFtZSk7XG59XG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlRWxlbWVudCh0YWcsIGNsYXNzTmFtZSwgY29udGVudCkge1xuICAgIHZhciBlID0gd2luZG93LmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQodGFnKTtcbiAgICBjbGFzc05hbWUgPSBjbGFzc05hbWUgfHwgXCJcIjtcbiAgICBjb250ZW50ID0gY29udGVudCB8fCBcIlwiO1xuICAgIGUuY2xhc3NOYW1lID0gY2xhc3NOYW1lO1xuICAgIGlmIChjb250ZW50ICE9PSB1bmRlZmluZWQpXG4gICAgICAgIGUudGV4dENvbnRlbnQgPSBjb250ZW50O1xuICAgIHJldHVybiBlO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGNsZWFyTm9kZShub2RlKSB7XG4gICAgd2hpbGUgKG5vZGUuZmlyc3RDaGlsZClcbiAgICAgICAgbm9kZS5yZW1vdmVDaGlsZChub2RlLmZpcnN0Q2hpbGQpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGZpbmRQYXJlbnQobm9kZSwgY29uZGl0aW9uKSB7XG4gICAgaWYgKGNvbmRpdGlvbihub2RlKSlcbiAgICAgICAgcmV0dXJuIG5vZGU7XG4gICAgZWxzZSBpZiAobm9kZS5wYXJlbnROb2RlKVxuICAgICAgICByZXR1cm4gZmluZFBhcmVudChub2RlLnBhcmVudE5vZGUsIGNvbmRpdGlvbik7XG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcbn1cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVOdW1iZXJJbnB1dChpbnB1dENsYXNzTmFtZSwgb3B0cykge1xuICAgIHZhciB3cmFwcGVyID0gY3JlYXRlRWxlbWVudChcImRpdlwiLCBcIm51bUlucHV0V3JhcHBlclwiKSwgbnVtSW5wdXQgPSBjcmVhdGVFbGVtZW50KFwiaW5wdXRcIiwgXCJudW1JbnB1dCBcIiArIGlucHV0Q2xhc3NOYW1lKSwgYXJyb3dVcCA9IGNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsIFwiYXJyb3dVcFwiKSwgYXJyb3dEb3duID0gY3JlYXRlRWxlbWVudChcInNwYW5cIiwgXCJhcnJvd0Rvd25cIik7XG4gICAgaWYgKG5hdmlnYXRvci51c2VyQWdlbnQuaW5kZXhPZihcIk1TSUUgOS4wXCIpID09PSAtMSkge1xuICAgICAgICBudW1JbnB1dC50eXBlID0gXCJudW1iZXJcIjtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIG51bUlucHV0LnR5cGUgPSBcInRleHRcIjtcbiAgICAgICAgbnVtSW5wdXQucGF0dGVybiA9IFwiXFxcXGQqXCI7XG4gICAgfVxuICAgIGlmIChvcHRzICE9PSB1bmRlZmluZWQpXG4gICAgICAgIGZvciAodmFyIGtleSBpbiBvcHRzKVxuICAgICAgICAgICAgbnVtSW5wdXQuc2V0QXR0cmlidXRlKGtleSwgb3B0c1trZXldKTtcbiAgICB3cmFwcGVyLmFwcGVuZENoaWxkKG51bUlucHV0KTtcbiAgICB3cmFwcGVyLmFwcGVuZENoaWxkKGFycm93VXApO1xuICAgIHdyYXBwZXIuYXBwZW5kQ2hpbGQoYXJyb3dEb3duKTtcbiAgICByZXR1cm4gd3JhcHBlcjtcbn1cbmV4cG9ydCBmdW5jdGlvbiBnZXRFdmVudFRhcmdldChldmVudCkge1xuICAgIHRyeSB7XG4gICAgICAgIGlmICh0eXBlb2YgZXZlbnQuY29tcG9zZWRQYXRoID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgICAgIHZhciBwYXRoID0gZXZlbnQuY29tcG9zZWRQYXRoKCk7XG4gICAgICAgICAgICByZXR1cm4gcGF0aFswXTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZXZlbnQudGFyZ2V0O1xuICAgIH1cbiAgICBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgcmV0dXJuIGV2ZW50LnRhcmdldDtcbiAgICB9XG59XG4iLCJpbXBvcnQgeyBpbnQsIHBhZCB9IGZyb20gXCIuLi91dGlsc1wiO1xudmFyIGRvTm90aGluZyA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHVuZGVmaW5lZDsgfTtcbmV4cG9ydCB2YXIgbW9udGhUb1N0ciA9IGZ1bmN0aW9uIChtb250aE51bWJlciwgc2hvcnRoYW5kLCBsb2NhbGUpIHsgcmV0dXJuIGxvY2FsZS5tb250aHNbc2hvcnRoYW5kID8gXCJzaG9ydGhhbmRcIiA6IFwibG9uZ2hhbmRcIl1bbW9udGhOdW1iZXJdOyB9O1xuZXhwb3J0IHZhciByZXZGb3JtYXQgPSB7XG4gICAgRDogZG9Ob3RoaW5nLFxuICAgIEY6IGZ1bmN0aW9uIChkYXRlT2JqLCBtb250aE5hbWUsIGxvY2FsZSkge1xuICAgICAgICBkYXRlT2JqLnNldE1vbnRoKGxvY2FsZS5tb250aHMubG9uZ2hhbmQuaW5kZXhPZihtb250aE5hbWUpKTtcbiAgICB9LFxuICAgIEc6IGZ1bmN0aW9uIChkYXRlT2JqLCBob3VyKSB7XG4gICAgICAgIGRhdGVPYmouc2V0SG91cnMoKGRhdGVPYmouZ2V0SG91cnMoKSA+PSAxMiA/IDEyIDogMCkgKyBwYXJzZUZsb2F0KGhvdXIpKTtcbiAgICB9LFxuICAgIEg6IGZ1bmN0aW9uIChkYXRlT2JqLCBob3VyKSB7XG4gICAgICAgIGRhdGVPYmouc2V0SG91cnMocGFyc2VGbG9hdChob3VyKSk7XG4gICAgfSxcbiAgICBKOiBmdW5jdGlvbiAoZGF0ZU9iaiwgZGF5KSB7XG4gICAgICAgIGRhdGVPYmouc2V0RGF0ZShwYXJzZUZsb2F0KGRheSkpO1xuICAgIH0sXG4gICAgSzogZnVuY3Rpb24gKGRhdGVPYmosIGFtUE0sIGxvY2FsZSkge1xuICAgICAgICBkYXRlT2JqLnNldEhvdXJzKChkYXRlT2JqLmdldEhvdXJzKCkgJSAxMikgK1xuICAgICAgICAgICAgMTIgKiBpbnQobmV3IFJlZ0V4cChsb2NhbGUuYW1QTVsxXSwgXCJpXCIpLnRlc3QoYW1QTSkpKTtcbiAgICB9LFxuICAgIE06IGZ1bmN0aW9uIChkYXRlT2JqLCBzaG9ydE1vbnRoLCBsb2NhbGUpIHtcbiAgICAgICAgZGF0ZU9iai5zZXRNb250aChsb2NhbGUubW9udGhzLnNob3J0aGFuZC5pbmRleE9mKHNob3J0TW9udGgpKTtcbiAgICB9LFxuICAgIFM6IGZ1bmN0aW9uIChkYXRlT2JqLCBzZWNvbmRzKSB7XG4gICAgICAgIGRhdGVPYmouc2V0U2Vjb25kcyhwYXJzZUZsb2F0KHNlY29uZHMpKTtcbiAgICB9LFxuICAgIFU6IGZ1bmN0aW9uIChfLCB1bml4U2Vjb25kcykgeyByZXR1cm4gbmV3IERhdGUocGFyc2VGbG9hdCh1bml4U2Vjb25kcykgKiAxMDAwKTsgfSxcbiAgICBXOiBmdW5jdGlvbiAoZGF0ZU9iaiwgd2Vla051bSwgbG9jYWxlKSB7XG4gICAgICAgIHZhciB3ZWVrTnVtYmVyID0gcGFyc2VJbnQod2Vla051bSk7XG4gICAgICAgIHZhciBkYXRlID0gbmV3IERhdGUoZGF0ZU9iai5nZXRGdWxsWWVhcigpLCAwLCAyICsgKHdlZWtOdW1iZXIgLSAxKSAqIDcsIDAsIDAsIDAsIDApO1xuICAgICAgICBkYXRlLnNldERhdGUoZGF0ZS5nZXREYXRlKCkgLSBkYXRlLmdldERheSgpICsgbG9jYWxlLmZpcnN0RGF5T2ZXZWVrKTtcbiAgICAgICAgcmV0dXJuIGRhdGU7XG4gICAgfSxcbiAgICBZOiBmdW5jdGlvbiAoZGF0ZU9iaiwgeWVhcikge1xuICAgICAgICBkYXRlT2JqLnNldEZ1bGxZZWFyKHBhcnNlRmxvYXQoeWVhcikpO1xuICAgIH0sXG4gICAgWjogZnVuY3Rpb24gKF8sIElTT0RhdGUpIHsgcmV0dXJuIG5ldyBEYXRlKElTT0RhdGUpOyB9LFxuICAgIGQ6IGZ1bmN0aW9uIChkYXRlT2JqLCBkYXkpIHtcbiAgICAgICAgZGF0ZU9iai5zZXREYXRlKHBhcnNlRmxvYXQoZGF5KSk7XG4gICAgfSxcbiAgICBoOiBmdW5jdGlvbiAoZGF0ZU9iaiwgaG91cikge1xuICAgICAgICBkYXRlT2JqLnNldEhvdXJzKChkYXRlT2JqLmdldEhvdXJzKCkgPj0gMTIgPyAxMiA6IDApICsgcGFyc2VGbG9hdChob3VyKSk7XG4gICAgfSxcbiAgICBpOiBmdW5jdGlvbiAoZGF0ZU9iaiwgbWludXRlcykge1xuICAgICAgICBkYXRlT2JqLnNldE1pbnV0ZXMocGFyc2VGbG9hdChtaW51dGVzKSk7XG4gICAgfSxcbiAgICBqOiBmdW5jdGlvbiAoZGF0ZU9iaiwgZGF5KSB7XG4gICAgICAgIGRhdGVPYmouc2V0RGF0ZShwYXJzZUZsb2F0KGRheSkpO1xuICAgIH0sXG4gICAgbDogZG9Ob3RoaW5nLFxuICAgIG06IGZ1bmN0aW9uIChkYXRlT2JqLCBtb250aCkge1xuICAgICAgICBkYXRlT2JqLnNldE1vbnRoKHBhcnNlRmxvYXQobW9udGgpIC0gMSk7XG4gICAgfSxcbiAgICBuOiBmdW5jdGlvbiAoZGF0ZU9iaiwgbW9udGgpIHtcbiAgICAgICAgZGF0ZU9iai5zZXRNb250aChwYXJzZUZsb2F0KG1vbnRoKSAtIDEpO1xuICAgIH0sXG4gICAgczogZnVuY3Rpb24gKGRhdGVPYmosIHNlY29uZHMpIHtcbiAgICAgICAgZGF0ZU9iai5zZXRTZWNvbmRzKHBhcnNlRmxvYXQoc2Vjb25kcykpO1xuICAgIH0sXG4gICAgdTogZnVuY3Rpb24gKF8sIHVuaXhNaWxsU2Vjb25kcykge1xuICAgICAgICByZXR1cm4gbmV3IERhdGUocGFyc2VGbG9hdCh1bml4TWlsbFNlY29uZHMpKTtcbiAgICB9LFxuICAgIHc6IGRvTm90aGluZyxcbiAgICB5OiBmdW5jdGlvbiAoZGF0ZU9iaiwgeWVhcikge1xuICAgICAgICBkYXRlT2JqLnNldEZ1bGxZZWFyKDIwMDAgKyBwYXJzZUZsb2F0KHllYXIpKTtcbiAgICB9LFxufTtcbmV4cG9ydCB2YXIgdG9rZW5SZWdleCA9IHtcbiAgICBEOiBcIlwiLFxuICAgIEY6IFwiXCIsXG4gICAgRzogXCIoXFxcXGRcXFxcZHxcXFxcZClcIixcbiAgICBIOiBcIihcXFxcZFxcXFxkfFxcXFxkKVwiLFxuICAgIEo6IFwiKFxcXFxkXFxcXGR8XFxcXGQpXFxcXHcrXCIsXG4gICAgSzogXCJcIixcbiAgICBNOiBcIlwiLFxuICAgIFM6IFwiKFxcXFxkXFxcXGR8XFxcXGQpXCIsXG4gICAgVTogXCIoLispXCIsXG4gICAgVzogXCIoXFxcXGRcXFxcZHxcXFxcZClcIixcbiAgICBZOiBcIihcXFxcZHs0fSlcIixcbiAgICBaOiBcIiguKylcIixcbiAgICBkOiBcIihcXFxcZFxcXFxkfFxcXFxkKVwiLFxuICAgIGg6IFwiKFxcXFxkXFxcXGR8XFxcXGQpXCIsXG4gICAgaTogXCIoXFxcXGRcXFxcZHxcXFxcZClcIixcbiAgICBqOiBcIihcXFxcZFxcXFxkfFxcXFxkKVwiLFxuICAgIGw6IFwiXCIsXG4gICAgbTogXCIoXFxcXGRcXFxcZHxcXFxcZClcIixcbiAgICBuOiBcIihcXFxcZFxcXFxkfFxcXFxkKVwiLFxuICAgIHM6IFwiKFxcXFxkXFxcXGR8XFxcXGQpXCIsXG4gICAgdTogXCIoLispXCIsXG4gICAgdzogXCIoXFxcXGRcXFxcZHxcXFxcZClcIixcbiAgICB5OiBcIihcXFxcZHsyfSlcIixcbn07XG5leHBvcnQgdmFyIGZvcm1hdHMgPSB7XG4gICAgWjogZnVuY3Rpb24gKGRhdGUpIHsgcmV0dXJuIGRhdGUudG9JU09TdHJpbmcoKTsgfSxcbiAgICBEOiBmdW5jdGlvbiAoZGF0ZSwgbG9jYWxlLCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiBsb2NhbGUud2Vla2RheXMuc2hvcnRoYW5kW2Zvcm1hdHMudyhkYXRlLCBsb2NhbGUsIG9wdGlvbnMpXTtcbiAgICB9LFxuICAgIEY6IGZ1bmN0aW9uIChkYXRlLCBsb2NhbGUsIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIG1vbnRoVG9TdHIoZm9ybWF0cy5uKGRhdGUsIGxvY2FsZSwgb3B0aW9ucykgLSAxLCBmYWxzZSwgbG9jYWxlKTtcbiAgICB9LFxuICAgIEc6IGZ1bmN0aW9uIChkYXRlLCBsb2NhbGUsIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHBhZChmb3JtYXRzLmgoZGF0ZSwgbG9jYWxlLCBvcHRpb25zKSk7XG4gICAgfSxcbiAgICBIOiBmdW5jdGlvbiAoZGF0ZSkgeyByZXR1cm4gcGFkKGRhdGUuZ2V0SG91cnMoKSk7IH0sXG4gICAgSjogZnVuY3Rpb24gKGRhdGUsIGxvY2FsZSkge1xuICAgICAgICByZXR1cm4gbG9jYWxlLm9yZGluYWwgIT09IHVuZGVmaW5lZFxuICAgICAgICAgICAgPyBkYXRlLmdldERhdGUoKSArIGxvY2FsZS5vcmRpbmFsKGRhdGUuZ2V0RGF0ZSgpKVxuICAgICAgICAgICAgOiBkYXRlLmdldERhdGUoKTtcbiAgICB9LFxuICAgIEs6IGZ1bmN0aW9uIChkYXRlLCBsb2NhbGUpIHsgcmV0dXJuIGxvY2FsZS5hbVBNW2ludChkYXRlLmdldEhvdXJzKCkgPiAxMSldOyB9LFxuICAgIE06IGZ1bmN0aW9uIChkYXRlLCBsb2NhbGUpIHtcbiAgICAgICAgcmV0dXJuIG1vbnRoVG9TdHIoZGF0ZS5nZXRNb250aCgpLCB0cnVlLCBsb2NhbGUpO1xuICAgIH0sXG4gICAgUzogZnVuY3Rpb24gKGRhdGUpIHsgcmV0dXJuIHBhZChkYXRlLmdldFNlY29uZHMoKSk7IH0sXG4gICAgVTogZnVuY3Rpb24gKGRhdGUpIHsgcmV0dXJuIGRhdGUuZ2V0VGltZSgpIC8gMTAwMDsgfSxcbiAgICBXOiBmdW5jdGlvbiAoZGF0ZSwgXywgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gb3B0aW9ucy5nZXRXZWVrKGRhdGUpO1xuICAgIH0sXG4gICAgWTogZnVuY3Rpb24gKGRhdGUpIHsgcmV0dXJuIHBhZChkYXRlLmdldEZ1bGxZZWFyKCksIDQpOyB9LFxuICAgIGQ6IGZ1bmN0aW9uIChkYXRlKSB7IHJldHVybiBwYWQoZGF0ZS5nZXREYXRlKCkpOyB9LFxuICAgIGg6IGZ1bmN0aW9uIChkYXRlKSB7IHJldHVybiAoZGF0ZS5nZXRIb3VycygpICUgMTIgPyBkYXRlLmdldEhvdXJzKCkgJSAxMiA6IDEyKTsgfSxcbiAgICBpOiBmdW5jdGlvbiAoZGF0ZSkgeyByZXR1cm4gcGFkKGRhdGUuZ2V0TWludXRlcygpKTsgfSxcbiAgICBqOiBmdW5jdGlvbiAoZGF0ZSkgeyByZXR1cm4gZGF0ZS5nZXREYXRlKCk7IH0sXG4gICAgbDogZnVuY3Rpb24gKGRhdGUsIGxvY2FsZSkge1xuICAgICAgICByZXR1cm4gbG9jYWxlLndlZWtkYXlzLmxvbmdoYW5kW2RhdGUuZ2V0RGF5KCldO1xuICAgIH0sXG4gICAgbTogZnVuY3Rpb24gKGRhdGUpIHsgcmV0dXJuIHBhZChkYXRlLmdldE1vbnRoKCkgKyAxKTsgfSxcbiAgICBuOiBmdW5jdGlvbiAoZGF0ZSkgeyByZXR1cm4gZGF0ZS5nZXRNb250aCgpICsgMTsgfSxcbiAgICBzOiBmdW5jdGlvbiAoZGF0ZSkgeyByZXR1cm4gZGF0ZS5nZXRTZWNvbmRzKCk7IH0sXG4gICAgdTogZnVuY3Rpb24gKGRhdGUpIHsgcmV0dXJuIGRhdGUuZ2V0VGltZSgpOyB9LFxuICAgIHc6IGZ1bmN0aW9uIChkYXRlKSB7IHJldHVybiBkYXRlLmdldERheSgpOyB9LFxuICAgIHk6IGZ1bmN0aW9uIChkYXRlKSB7IHJldHVybiBTdHJpbmcoZGF0ZS5nZXRGdWxsWWVhcigpKS5zdWJzdHJpbmcoMik7IH0sXG59O1xuIiwiaW1wb3J0IHsgdG9rZW5SZWdleCwgcmV2Rm9ybWF0LCBmb3JtYXRzLCB9IGZyb20gXCIuL2Zvcm1hdHRpbmdcIjtcbmltcG9ydCB7IGRlZmF1bHRzIH0gZnJvbSBcIi4uL3R5cGVzL29wdGlvbnNcIjtcbmltcG9ydCB7IGVuZ2xpc2ggfSBmcm9tIFwiLi4vbDEwbi9kZWZhdWx0XCI7XG5leHBvcnQgdmFyIGNyZWF0ZURhdGVGb3JtYXR0ZXIgPSBmdW5jdGlvbiAoX2EpIHtcbiAgICB2YXIgX2IgPSBfYS5jb25maWcsIGNvbmZpZyA9IF9iID09PSB2b2lkIDAgPyBkZWZhdWx0cyA6IF9iLCBfYyA9IF9hLmwxMG4sIGwxMG4gPSBfYyA9PT0gdm9pZCAwID8gZW5nbGlzaCA6IF9jLCBfZCA9IF9hLmlzTW9iaWxlLCBpc01vYmlsZSA9IF9kID09PSB2b2lkIDAgPyBmYWxzZSA6IF9kO1xuICAgIHJldHVybiBmdW5jdGlvbiAoZGF0ZU9iaiwgZnJtdCwgb3ZlcnJpZGVMb2NhbGUpIHtcbiAgICAgICAgdmFyIGxvY2FsZSA9IG92ZXJyaWRlTG9jYWxlIHx8IGwxMG47XG4gICAgICAgIGlmIChjb25maWcuZm9ybWF0RGF0ZSAhPT0gdW5kZWZpbmVkICYmICFpc01vYmlsZSkge1xuICAgICAgICAgICAgcmV0dXJuIGNvbmZpZy5mb3JtYXREYXRlKGRhdGVPYmosIGZybXQsIGxvY2FsZSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGZybXRcbiAgICAgICAgICAgIC5zcGxpdChcIlwiKVxuICAgICAgICAgICAgLm1hcChmdW5jdGlvbiAoYywgaSwgYXJyKSB7XG4gICAgICAgICAgICByZXR1cm4gZm9ybWF0c1tjXSAmJiBhcnJbaSAtIDFdICE9PSBcIlxcXFxcIlxuICAgICAgICAgICAgICAgID8gZm9ybWF0c1tjXShkYXRlT2JqLCBsb2NhbGUsIGNvbmZpZylcbiAgICAgICAgICAgICAgICA6IGMgIT09IFwiXFxcXFwiXG4gICAgICAgICAgICAgICAgICAgID8gY1xuICAgICAgICAgICAgICAgICAgICA6IFwiXCI7XG4gICAgICAgIH0pXG4gICAgICAgICAgICAuam9pbihcIlwiKTtcbiAgICB9O1xufTtcbmV4cG9ydCB2YXIgY3JlYXRlRGF0ZVBhcnNlciA9IGZ1bmN0aW9uIChfYSkge1xuICAgIHZhciBfYiA9IF9hLmNvbmZpZywgY29uZmlnID0gX2IgPT09IHZvaWQgMCA/IGRlZmF1bHRzIDogX2IsIF9jID0gX2EubDEwbiwgbDEwbiA9IF9jID09PSB2b2lkIDAgPyBlbmdsaXNoIDogX2M7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChkYXRlLCBnaXZlbkZvcm1hdCwgdGltZWxlc3MsIGN1c3RvbUxvY2FsZSkge1xuICAgICAgICBpZiAoZGF0ZSAhPT0gMCAmJiAhZGF0ZSlcbiAgICAgICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgICAgIHZhciBsb2NhbGUgPSBjdXN0b21Mb2NhbGUgfHwgbDEwbjtcbiAgICAgICAgdmFyIHBhcnNlZERhdGU7XG4gICAgICAgIHZhciBkYXRlT3JpZyA9IGRhdGU7XG4gICAgICAgIGlmIChkYXRlIGluc3RhbmNlb2YgRGF0ZSlcbiAgICAgICAgICAgIHBhcnNlZERhdGUgPSBuZXcgRGF0ZShkYXRlLmdldFRpbWUoKSk7XG4gICAgICAgIGVsc2UgaWYgKHR5cGVvZiBkYXRlICE9PSBcInN0cmluZ1wiICYmXG4gICAgICAgICAgICBkYXRlLnRvRml4ZWQgIT09IHVuZGVmaW5lZClcbiAgICAgICAgICAgIHBhcnNlZERhdGUgPSBuZXcgRGF0ZShkYXRlKTtcbiAgICAgICAgZWxzZSBpZiAodHlwZW9mIGRhdGUgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgICAgIHZhciBmb3JtYXQgPSBnaXZlbkZvcm1hdCB8fCAoY29uZmlnIHx8IGRlZmF1bHRzKS5kYXRlRm9ybWF0O1xuICAgICAgICAgICAgdmFyIGRhdGVzdHIgPSBTdHJpbmcoZGF0ZSkudHJpbSgpO1xuICAgICAgICAgICAgaWYgKGRhdGVzdHIgPT09IFwidG9kYXlcIikge1xuICAgICAgICAgICAgICAgIHBhcnNlZERhdGUgPSBuZXcgRGF0ZSgpO1xuICAgICAgICAgICAgICAgIHRpbWVsZXNzID0gdHJ1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKGNvbmZpZyAmJiBjb25maWcucGFyc2VEYXRlKSB7XG4gICAgICAgICAgICAgICAgcGFyc2VkRGF0ZSA9IGNvbmZpZy5wYXJzZURhdGUoZGF0ZSwgZm9ybWF0KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKC9aJC8udGVzdChkYXRlc3RyKSB8fFxuICAgICAgICAgICAgICAgIC9HTVQkLy50ZXN0KGRhdGVzdHIpKSB7XG4gICAgICAgICAgICAgICAgcGFyc2VkRGF0ZSA9IG5ldyBEYXRlKGRhdGUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgdmFyIG1hdGNoZWQgPSB2b2lkIDAsIG9wcyA9IFtdO1xuICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwLCBtYXRjaEluZGV4ID0gMCwgcmVnZXhTdHIgPSBcIlwiOyBpIDwgZm9ybWF0Lmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciB0b2tlbiA9IGZvcm1hdFtpXTtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGlzQmFja1NsYXNoID0gdG9rZW4gPT09IFwiXFxcXFwiO1xuICAgICAgICAgICAgICAgICAgICB2YXIgZXNjYXBlZCA9IGZvcm1hdFtpIC0gMV0gPT09IFwiXFxcXFwiIHx8IGlzQmFja1NsYXNoO1xuICAgICAgICAgICAgICAgICAgICBpZiAodG9rZW5SZWdleFt0b2tlbl0gJiYgIWVzY2FwZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlZ2V4U3RyICs9IHRva2VuUmVnZXhbdG9rZW5dO1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIG1hdGNoID0gbmV3IFJlZ0V4cChyZWdleFN0cikuZXhlYyhkYXRlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChtYXRjaCAmJiAobWF0Y2hlZCA9IHRydWUpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb3BzW3Rva2VuICE9PSBcIllcIiA/IFwicHVzaFwiIDogXCJ1bnNoaWZ0XCJdKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm46IHJldkZvcm1hdFt0b2tlbl0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbDogbWF0Y2hbKyttYXRjaEluZGV4XSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlIGlmICghaXNCYWNrU2xhc2gpXG4gICAgICAgICAgICAgICAgICAgICAgICByZWdleFN0ciArPSBcIi5cIjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcGFyc2VkRGF0ZSA9XG4gICAgICAgICAgICAgICAgICAgICFjb25maWcgfHwgIWNvbmZpZy5ub0NhbGVuZGFyXG4gICAgICAgICAgICAgICAgICAgICAgICA/IG5ldyBEYXRlKG5ldyBEYXRlKCkuZ2V0RnVsbFllYXIoKSwgMCwgMSwgMCwgMCwgMCwgMClcbiAgICAgICAgICAgICAgICAgICAgICAgIDogbmV3IERhdGUobmV3IERhdGUoKS5zZXRIb3VycygwLCAwLCAwLCAwKSk7XG4gICAgICAgICAgICAgICAgb3BzLmZvckVhY2goZnVuY3Rpb24gKF9hKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBmbiA9IF9hLmZuLCB2YWwgPSBfYS52YWw7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiAocGFyc2VkRGF0ZSA9IGZuKHBhcnNlZERhdGUsIHZhbCwgbG9jYWxlKSB8fCBwYXJzZWREYXRlKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICBwYXJzZWREYXRlID0gbWF0Y2hlZCA/IHBhcnNlZERhdGUgOiB1bmRlZmluZWQ7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCEocGFyc2VkRGF0ZSBpbnN0YW5jZW9mIERhdGUgJiYgIWlzTmFOKHBhcnNlZERhdGUuZ2V0VGltZSgpKSkpIHtcbiAgICAgICAgICAgIGNvbmZpZy5lcnJvckhhbmRsZXIobmV3IEVycm9yKFwiSW52YWxpZCBkYXRlIHByb3ZpZGVkOiBcIiArIGRhdGVPcmlnKSk7XG4gICAgICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aW1lbGVzcyA9PT0gdHJ1ZSlcbiAgICAgICAgICAgIHBhcnNlZERhdGUuc2V0SG91cnMoMCwgMCwgMCwgMCk7XG4gICAgICAgIHJldHVybiBwYXJzZWREYXRlO1xuICAgIH07XG59O1xuZXhwb3J0IGZ1bmN0aW9uIGNvbXBhcmVEYXRlcyhkYXRlMSwgZGF0ZTIsIHRpbWVsZXNzKSB7XG4gICAgaWYgKHRpbWVsZXNzID09PSB2b2lkIDApIHsgdGltZWxlc3MgPSB0cnVlOyB9XG4gICAgaWYgKHRpbWVsZXNzICE9PSBmYWxzZSkge1xuICAgICAgICByZXR1cm4gKG5ldyBEYXRlKGRhdGUxLmdldFRpbWUoKSkuc2V0SG91cnMoMCwgMCwgMCwgMCkgLVxuICAgICAgICAgICAgbmV3IERhdGUoZGF0ZTIuZ2V0VGltZSgpKS5zZXRIb3VycygwLCAwLCAwLCAwKSk7XG4gICAgfVxuICAgIHJldHVybiBkYXRlMS5nZXRUaW1lKCkgLSBkYXRlMi5nZXRUaW1lKCk7XG59XG5leHBvcnQgZnVuY3Rpb24gY29tcGFyZVRpbWVzKGRhdGUxLCBkYXRlMikge1xuICAgIHJldHVybiAoMzYwMCAqIChkYXRlMS5nZXRIb3VycygpIC0gZGF0ZTIuZ2V0SG91cnMoKSkgK1xuICAgICAgICA2MCAqIChkYXRlMS5nZXRNaW51dGVzKCkgLSBkYXRlMi5nZXRNaW51dGVzKCkpICtcbiAgICAgICAgZGF0ZTEuZ2V0U2Vjb25kcygpIC1cbiAgICAgICAgZGF0ZTIuZ2V0U2Vjb25kcygpKTtcbn1cbmV4cG9ydCB2YXIgaXNCZXR3ZWVuID0gZnVuY3Rpb24gKHRzLCB0czEsIHRzMikge1xuICAgIHJldHVybiB0cyA+IE1hdGgubWluKHRzMSwgdHMyKSAmJiB0cyA8IE1hdGgubWF4KHRzMSwgdHMyKTtcbn07XG5leHBvcnQgdmFyIGNhbGN1bGF0ZVNlY29uZHNTaW5jZU1pZG5pZ2h0ID0gZnVuY3Rpb24gKGhvdXJzLCBtaW51dGVzLCBzZWNvbmRzKSB7XG4gICAgcmV0dXJuIGhvdXJzICogMzYwMCArIG1pbnV0ZXMgKiA2MCArIHNlY29uZHM7XG59O1xuZXhwb3J0IHZhciBwYXJzZVNlY29uZHMgPSBmdW5jdGlvbiAoc2Vjb25kc1NpbmNlTWlkbmlnaHQpIHtcbiAgICB2YXIgaG91cnMgPSBNYXRoLmZsb29yKHNlY29uZHNTaW5jZU1pZG5pZ2h0IC8gMzYwMCksIG1pbnV0ZXMgPSAoc2Vjb25kc1NpbmNlTWlkbmlnaHQgLSBob3VycyAqIDM2MDApIC8gNjA7XG4gICAgcmV0dXJuIFtob3VycywgbWludXRlcywgc2Vjb25kc1NpbmNlTWlkbmlnaHQgLSBob3VycyAqIDM2MDAgLSBtaW51dGVzICogNjBdO1xufTtcbmV4cG9ydCB2YXIgZHVyYXRpb24gPSB7XG4gICAgREFZOiA4NjQwMDAwMCxcbn07XG5leHBvcnQgZnVuY3Rpb24gZ2V0RGVmYXVsdEhvdXJzKGNvbmZpZykge1xuICAgIHZhciBob3VycyA9IGNvbmZpZy5kZWZhdWx0SG91cjtcbiAgICB2YXIgbWludXRlcyA9IGNvbmZpZy5kZWZhdWx0TWludXRlO1xuICAgIHZhciBzZWNvbmRzID0gY29uZmlnLmRlZmF1bHRTZWNvbmRzO1xuICAgIGlmIChjb25maWcubWluRGF0ZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHZhciBtaW5Ib3VyID0gY29uZmlnLm1pbkRhdGUuZ2V0SG91cnMoKTtcbiAgICAgICAgdmFyIG1pbk1pbnV0ZXMgPSBjb25maWcubWluRGF0ZS5nZXRNaW51dGVzKCk7XG4gICAgICAgIHZhciBtaW5TZWNvbmRzID0gY29uZmlnLm1pbkRhdGUuZ2V0U2Vjb25kcygpO1xuICAgICAgICBpZiAoaG91cnMgPCBtaW5Ib3VyKSB7XG4gICAgICAgICAgICBob3VycyA9IG1pbkhvdXI7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGhvdXJzID09PSBtaW5Ib3VyICYmIG1pbnV0ZXMgPCBtaW5NaW51dGVzKSB7XG4gICAgICAgICAgICBtaW51dGVzID0gbWluTWludXRlcztcbiAgICAgICAgfVxuICAgICAgICBpZiAoaG91cnMgPT09IG1pbkhvdXIgJiYgbWludXRlcyA9PT0gbWluTWludXRlcyAmJiBzZWNvbmRzIDwgbWluU2Vjb25kcylcbiAgICAgICAgICAgIHNlY29uZHMgPSBjb25maWcubWluRGF0ZS5nZXRTZWNvbmRzKCk7XG4gICAgfVxuICAgIGlmIChjb25maWcubWF4RGF0ZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHZhciBtYXhIciA9IGNvbmZpZy5tYXhEYXRlLmdldEhvdXJzKCk7XG4gICAgICAgIHZhciBtYXhNaW51dGVzID0gY29uZmlnLm1heERhdGUuZ2V0TWludXRlcygpO1xuICAgICAgICBob3VycyA9IE1hdGgubWluKGhvdXJzLCBtYXhIcik7XG4gICAgICAgIGlmIChob3VycyA9PT0gbWF4SHIpXG4gICAgICAgICAgICBtaW51dGVzID0gTWF0aC5taW4obWF4TWludXRlcywgbWludXRlcyk7XG4gICAgICAgIGlmIChob3VycyA9PT0gbWF4SHIgJiYgbWludXRlcyA9PT0gbWF4TWludXRlcylcbiAgICAgICAgICAgIHNlY29uZHMgPSBjb25maWcubWF4RGF0ZS5nZXRTZWNvbmRzKCk7XG4gICAgfVxuICAgIHJldHVybiB7IGhvdXJzOiBob3VycywgbWludXRlczogbWludXRlcywgc2Vjb25kczogc2Vjb25kcyB9O1xufVxuIiwidmFyIF9fYXNzaWduID0gKHRoaXMgJiYgdGhpcy5fX2Fzc2lnbikgfHwgZnVuY3Rpb24gKCkge1xuICAgIF9fYXNzaWduID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbih0KSB7XG4gICAgICAgIGZvciAodmFyIHMsIGkgPSAxLCBuID0gYXJndW1lbnRzLmxlbmd0aDsgaSA8IG47IGkrKykge1xuICAgICAgICAgICAgcyA9IGFyZ3VtZW50c1tpXTtcbiAgICAgICAgICAgIGZvciAodmFyIHAgaW4gcykgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLCBwKSlcbiAgICAgICAgICAgICAgICB0W3BdID0gc1twXTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdDtcbiAgICB9O1xuICAgIHJldHVybiBfX2Fzc2lnbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xufTtcbnZhciBfX3NwcmVhZEFycmF5cyA9ICh0aGlzICYmIHRoaXMuX19zcHJlYWRBcnJheXMpIHx8IGZ1bmN0aW9uICgpIHtcbiAgICBmb3IgKHZhciBzID0gMCwgaSA9IDAsIGlsID0gYXJndW1lbnRzLmxlbmd0aDsgaSA8IGlsOyBpKyspIHMgKz0gYXJndW1lbnRzW2ldLmxlbmd0aDtcbiAgICBmb3IgKHZhciByID0gQXJyYXkocyksIGsgPSAwLCBpID0gMDsgaSA8IGlsOyBpKyspXG4gICAgICAgIGZvciAodmFyIGEgPSBhcmd1bWVudHNbaV0sIGogPSAwLCBqbCA9IGEubGVuZ3RoOyBqIDwgamw7IGorKywgaysrKVxuICAgICAgICAgICAgcltrXSA9IGFbal07XG4gICAgcmV0dXJuIHI7XG59O1xuaW1wb3J0IHsgZGVmYXVsdHMgYXMgZGVmYXVsdE9wdGlvbnMsIEhPT0tTLCB9IGZyb20gXCIuL3R5cGVzL29wdGlvbnNcIjtcbmltcG9ydCBFbmdsaXNoIGZyb20gXCIuL2wxMG4vZGVmYXVsdFwiO1xuaW1wb3J0IHsgYXJyYXlpZnksIGRlYm91bmNlLCBpbnQsIHBhZCB9IGZyb20gXCIuL3V0aWxzXCI7XG5pbXBvcnQgeyBjbGVhck5vZGUsIGNyZWF0ZUVsZW1lbnQsIGNyZWF0ZU51bWJlcklucHV0LCBmaW5kUGFyZW50LCB0b2dnbGVDbGFzcywgZ2V0RXZlbnRUYXJnZXQsIH0gZnJvbSBcIi4vdXRpbHMvZG9tXCI7XG5pbXBvcnQgeyBjb21wYXJlRGF0ZXMsIGNyZWF0ZURhdGVQYXJzZXIsIGNyZWF0ZURhdGVGb3JtYXR0ZXIsIGR1cmF0aW9uLCBpc0JldHdlZW4sIGdldERlZmF1bHRIb3VycywgY2FsY3VsYXRlU2Vjb25kc1NpbmNlTWlkbmlnaHQsIHBhcnNlU2Vjb25kcywgfSBmcm9tIFwiLi91dGlscy9kYXRlc1wiO1xuaW1wb3J0IHsgdG9rZW5SZWdleCwgbW9udGhUb1N0ciB9IGZyb20gXCIuL3V0aWxzL2Zvcm1hdHRpbmdcIjtcbmltcG9ydCBcIi4vdXRpbHMvcG9seWZpbGxzXCI7XG52YXIgREVCT1VOQ0VEX0NIQU5HRV9NUyA9IDMwMDtcbmZ1bmN0aW9uIEZsYXRwaWNrckluc3RhbmNlKGVsZW1lbnQsIGluc3RhbmNlQ29uZmlnKSB7XG4gICAgdmFyIHNlbGYgPSB7XG4gICAgICAgIGNvbmZpZzogX19hc3NpZ24oX19hc3NpZ24oe30sIGRlZmF1bHRPcHRpb25zKSwgZmxhdHBpY2tyLmRlZmF1bHRDb25maWcpLFxuICAgICAgICBsMTBuOiBFbmdsaXNoLFxuICAgIH07XG4gICAgc2VsZi5wYXJzZURhdGUgPSBjcmVhdGVEYXRlUGFyc2VyKHsgY29uZmlnOiBzZWxmLmNvbmZpZywgbDEwbjogc2VsZi5sMTBuIH0pO1xuICAgIHNlbGYuX2hhbmRsZXJzID0gW107XG4gICAgc2VsZi5wbHVnaW5FbGVtZW50cyA9IFtdO1xuICAgIHNlbGYubG9hZGVkUGx1Z2lucyA9IFtdO1xuICAgIHNlbGYuX2JpbmQgPSBiaW5kO1xuICAgIHNlbGYuX3NldEhvdXJzRnJvbURhdGUgPSBzZXRIb3Vyc0Zyb21EYXRlO1xuICAgIHNlbGYuX3Bvc2l0aW9uQ2FsZW5kYXIgPSBwb3NpdGlvbkNhbGVuZGFyO1xuICAgIHNlbGYuY2hhbmdlTW9udGggPSBjaGFuZ2VNb250aDtcbiAgICBzZWxmLmNoYW5nZVllYXIgPSBjaGFuZ2VZZWFyO1xuICAgIHNlbGYuY2xlYXIgPSBjbGVhcjtcbiAgICBzZWxmLmNsb3NlID0gY2xvc2U7XG4gICAgc2VsZi5vbk1vdXNlT3ZlciA9IG9uTW91c2VPdmVyO1xuICAgIHNlbGYuX2NyZWF0ZUVsZW1lbnQgPSBjcmVhdGVFbGVtZW50O1xuICAgIHNlbGYuY3JlYXRlRGF5ID0gY3JlYXRlRGF5O1xuICAgIHNlbGYuZGVzdHJveSA9IGRlc3Ryb3k7XG4gICAgc2VsZi5pc0VuYWJsZWQgPSBpc0VuYWJsZWQ7XG4gICAgc2VsZi5qdW1wVG9EYXRlID0ganVtcFRvRGF0ZTtcbiAgICBzZWxmLnVwZGF0ZVZhbHVlID0gdXBkYXRlVmFsdWU7XG4gICAgc2VsZi5vcGVuID0gb3BlbjtcbiAgICBzZWxmLnJlZHJhdyA9IHJlZHJhdztcbiAgICBzZWxmLnNldCA9IHNldDtcbiAgICBzZWxmLnNldERhdGUgPSBzZXREYXRlO1xuICAgIHNlbGYudG9nZ2xlID0gdG9nZ2xlO1xuICAgIGZ1bmN0aW9uIHNldHVwSGVscGVyRnVuY3Rpb25zKCkge1xuICAgICAgICBzZWxmLnV0aWxzID0ge1xuICAgICAgICAgICAgZ2V0RGF5c0luTW9udGg6IGZ1bmN0aW9uIChtb250aCwgeXIpIHtcbiAgICAgICAgICAgICAgICBpZiAobW9udGggPT09IHZvaWQgMCkgeyBtb250aCA9IHNlbGYuY3VycmVudE1vbnRoOyB9XG4gICAgICAgICAgICAgICAgaWYgKHlyID09PSB2b2lkIDApIHsgeXIgPSBzZWxmLmN1cnJlbnRZZWFyOyB9XG4gICAgICAgICAgICAgICAgaWYgKG1vbnRoID09PSAxICYmICgoeXIgJSA0ID09PSAwICYmIHlyICUgMTAwICE9PSAwKSB8fCB5ciAlIDQwMCA9PT0gMCkpXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiAyOTtcbiAgICAgICAgICAgICAgICByZXR1cm4gc2VsZi5sMTBuLmRheXNJbk1vbnRoW21vbnRoXTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH07XG4gICAgfVxuICAgIGZ1bmN0aW9uIGluaXQoKSB7XG4gICAgICAgIHNlbGYuZWxlbWVudCA9IHNlbGYuaW5wdXQgPSBlbGVtZW50O1xuICAgICAgICBzZWxmLmlzT3BlbiA9IGZhbHNlO1xuICAgICAgICBwYXJzZUNvbmZpZygpO1xuICAgICAgICBzZXR1cExvY2FsZSgpO1xuICAgICAgICBzZXR1cElucHV0cygpO1xuICAgICAgICBzZXR1cERhdGVzKCk7XG4gICAgICAgIHNldHVwSGVscGVyRnVuY3Rpb25zKCk7XG4gICAgICAgIGlmICghc2VsZi5pc01vYmlsZSlcbiAgICAgICAgICAgIGJ1aWxkKCk7XG4gICAgICAgIGJpbmRFdmVudHMoKTtcbiAgICAgICAgaWYgKHNlbGYuc2VsZWN0ZWREYXRlcy5sZW5ndGggfHwgc2VsZi5jb25maWcubm9DYWxlbmRhcikge1xuICAgICAgICAgICAgaWYgKHNlbGYuY29uZmlnLmVuYWJsZVRpbWUpIHtcbiAgICAgICAgICAgICAgICBzZXRIb3Vyc0Zyb21EYXRlKHNlbGYuY29uZmlnLm5vQ2FsZW5kYXIgPyBzZWxmLmxhdGVzdFNlbGVjdGVkRGF0ZU9iaiA6IHVuZGVmaW5lZCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB1cGRhdGVWYWx1ZShmYWxzZSk7XG4gICAgICAgIH1cbiAgICAgICAgc2V0Q2FsZW5kYXJXaWR0aCgpO1xuICAgICAgICB2YXIgaXNTYWZhcmkgPSAvXigoPyFjaHJvbWV8YW5kcm9pZCkuKSpzYWZhcmkvaS50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQpO1xuICAgICAgICBpZiAoIXNlbGYuaXNNb2JpbGUgJiYgaXNTYWZhcmkpIHtcbiAgICAgICAgICAgIHBvc2l0aW9uQ2FsZW5kYXIoKTtcbiAgICAgICAgfVxuICAgICAgICB0cmlnZ2VyRXZlbnQoXCJvblJlYWR5XCIpO1xuICAgIH1cbiAgICBmdW5jdGlvbiBnZXRDbG9zZXN0QWN0aXZlRWxlbWVudCgpIHtcbiAgICAgICAgdmFyIF9hO1xuICAgICAgICByZXR1cm4gKCgoX2EgPSBzZWxmLmNhbGVuZGFyQ29udGFpbmVyKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EuZ2V0Um9vdE5vZGUoKSlcbiAgICAgICAgICAgIC5hY3RpdmVFbGVtZW50IHx8IGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQpO1xuICAgIH1cbiAgICBmdW5jdGlvbiBiaW5kVG9JbnN0YW5jZShmbikge1xuICAgICAgICByZXR1cm4gZm4uYmluZChzZWxmKTtcbiAgICB9XG4gICAgZnVuY3Rpb24gc2V0Q2FsZW5kYXJXaWR0aCgpIHtcbiAgICAgICAgdmFyIGNvbmZpZyA9IHNlbGYuY29uZmlnO1xuICAgICAgICBpZiAoY29uZmlnLndlZWtOdW1iZXJzID09PSBmYWxzZSAmJiBjb25maWcuc2hvd01vbnRocyA9PT0gMSkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGNvbmZpZy5ub0NhbGVuZGFyICE9PSB0cnVlKSB7XG4gICAgICAgICAgICB3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICBpZiAoc2VsZi5jYWxlbmRhckNvbnRhaW5lciAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgICAgIHNlbGYuY2FsZW5kYXJDb250YWluZXIuc3R5bGUudmlzaWJpbGl0eSA9IFwiaGlkZGVuXCI7XG4gICAgICAgICAgICAgICAgICAgIHNlbGYuY2FsZW5kYXJDb250YWluZXIuc3R5bGUuZGlzcGxheSA9IFwiYmxvY2tcIjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKHNlbGYuZGF5c0NvbnRhaW5lciAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBkYXlzV2lkdGggPSAoc2VsZi5kYXlzLm9mZnNldFdpZHRoICsgMSkgKiBjb25maWcuc2hvd01vbnRocztcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5kYXlzQ29udGFpbmVyLnN0eWxlLndpZHRoID0gZGF5c1dpZHRoICsgXCJweFwiO1xuICAgICAgICAgICAgICAgICAgICBzZWxmLmNhbGVuZGFyQ29udGFpbmVyLnN0eWxlLndpZHRoID1cbiAgICAgICAgICAgICAgICAgICAgICAgIGRheXNXaWR0aCArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKHNlbGYud2Vla1dyYXBwZXIgIT09IHVuZGVmaW5lZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IHNlbGYud2Vla1dyYXBwZXIub2Zmc2V0V2lkdGhcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOiAwKSArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJweFwiO1xuICAgICAgICAgICAgICAgICAgICBzZWxmLmNhbGVuZGFyQ29udGFpbmVyLnN0eWxlLnJlbW92ZVByb3BlcnR5KFwidmlzaWJpbGl0eVwiKTtcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5jYWxlbmRhckNvbnRhaW5lci5zdHlsZS5yZW1vdmVQcm9wZXJ0eShcImRpc3BsYXlcIik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZnVuY3Rpb24gdXBkYXRlVGltZShlKSB7XG4gICAgICAgIGlmIChzZWxmLnNlbGVjdGVkRGF0ZXMubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICB2YXIgZGVmYXVsdERhdGUgPSBzZWxmLmNvbmZpZy5taW5EYXRlID09PSB1bmRlZmluZWQgfHxcbiAgICAgICAgICAgICAgICBjb21wYXJlRGF0ZXMobmV3IERhdGUoKSwgc2VsZi5jb25maWcubWluRGF0ZSkgPj0gMFxuICAgICAgICAgICAgICAgID8gbmV3IERhdGUoKVxuICAgICAgICAgICAgICAgIDogbmV3IERhdGUoc2VsZi5jb25maWcubWluRGF0ZS5nZXRUaW1lKCkpO1xuICAgICAgICAgICAgdmFyIGRlZmF1bHRzID0gZ2V0RGVmYXVsdEhvdXJzKHNlbGYuY29uZmlnKTtcbiAgICAgICAgICAgIGRlZmF1bHREYXRlLnNldEhvdXJzKGRlZmF1bHRzLmhvdXJzLCBkZWZhdWx0cy5taW51dGVzLCBkZWZhdWx0cy5zZWNvbmRzLCBkZWZhdWx0RGF0ZS5nZXRNaWxsaXNlY29uZHMoKSk7XG4gICAgICAgICAgICBzZWxmLnNlbGVjdGVkRGF0ZXMgPSBbZGVmYXVsdERhdGVdO1xuICAgICAgICAgICAgc2VsZi5sYXRlc3RTZWxlY3RlZERhdGVPYmogPSBkZWZhdWx0RGF0ZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoZSAhPT0gdW5kZWZpbmVkICYmIGUudHlwZSAhPT0gXCJibHVyXCIpIHtcbiAgICAgICAgICAgIHRpbWVXcmFwcGVyKGUpO1xuICAgICAgICB9XG4gICAgICAgIHZhciBwcmV2VmFsdWUgPSBzZWxmLl9pbnB1dC52YWx1ZTtcbiAgICAgICAgc2V0SG91cnNGcm9tSW5wdXRzKCk7XG4gICAgICAgIHVwZGF0ZVZhbHVlKCk7XG4gICAgICAgIGlmIChzZWxmLl9pbnB1dC52YWx1ZSAhPT0gcHJldlZhbHVlKSB7XG4gICAgICAgICAgICBzZWxmLl9kZWJvdW5jZWRDaGFuZ2UoKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBmdW5jdGlvbiBhbXBtMm1pbGl0YXJ5KGhvdXIsIGFtUE0pIHtcbiAgICAgICAgcmV0dXJuIChob3VyICUgMTIpICsgMTIgKiBpbnQoYW1QTSA9PT0gc2VsZi5sMTBuLmFtUE1bMV0pO1xuICAgIH1cbiAgICBmdW5jdGlvbiBtaWxpdGFyeTJhbXBtKGhvdXIpIHtcbiAgICAgICAgc3dpdGNoIChob3VyICUgMjQpIHtcbiAgICAgICAgICAgIGNhc2UgMDpcbiAgICAgICAgICAgIGNhc2UgMTI6XG4gICAgICAgICAgICAgICAgcmV0dXJuIDEyO1xuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICByZXR1cm4gaG91ciAlIDEyO1xuICAgICAgICB9XG4gICAgfVxuICAgIGZ1bmN0aW9uIHNldEhvdXJzRnJvbUlucHV0cygpIHtcbiAgICAgICAgaWYgKHNlbGYuaG91ckVsZW1lbnQgPT09IHVuZGVmaW5lZCB8fCBzZWxmLm1pbnV0ZUVsZW1lbnQgPT09IHVuZGVmaW5lZClcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgdmFyIGhvdXJzID0gKHBhcnNlSW50KHNlbGYuaG91ckVsZW1lbnQudmFsdWUuc2xpY2UoLTIpLCAxMCkgfHwgMCkgJSAyNCwgbWludXRlcyA9IChwYXJzZUludChzZWxmLm1pbnV0ZUVsZW1lbnQudmFsdWUsIDEwKSB8fCAwKSAlIDYwLCBzZWNvbmRzID0gc2VsZi5zZWNvbmRFbGVtZW50ICE9PSB1bmRlZmluZWRcbiAgICAgICAgICAgID8gKHBhcnNlSW50KHNlbGYuc2Vjb25kRWxlbWVudC52YWx1ZSwgMTApIHx8IDApICUgNjBcbiAgICAgICAgICAgIDogMDtcbiAgICAgICAgaWYgKHNlbGYuYW1QTSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICBob3VycyA9IGFtcG0ybWlsaXRhcnkoaG91cnMsIHNlbGYuYW1QTS50ZXh0Q29udGVudCk7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIGxpbWl0TWluSG91cnMgPSBzZWxmLmNvbmZpZy5taW5UaW1lICE9PSB1bmRlZmluZWQgfHxcbiAgICAgICAgICAgIChzZWxmLmNvbmZpZy5taW5EYXRlICYmXG4gICAgICAgICAgICAgICAgc2VsZi5taW5EYXRlSGFzVGltZSAmJlxuICAgICAgICAgICAgICAgIHNlbGYubGF0ZXN0U2VsZWN0ZWREYXRlT2JqICYmXG4gICAgICAgICAgICAgICAgY29tcGFyZURhdGVzKHNlbGYubGF0ZXN0U2VsZWN0ZWREYXRlT2JqLCBzZWxmLmNvbmZpZy5taW5EYXRlLCB0cnVlKSA9PT1cbiAgICAgICAgICAgICAgICAgICAgMCk7XG4gICAgICAgIHZhciBsaW1pdE1heEhvdXJzID0gc2VsZi5jb25maWcubWF4VGltZSAhPT0gdW5kZWZpbmVkIHx8XG4gICAgICAgICAgICAoc2VsZi5jb25maWcubWF4RGF0ZSAmJlxuICAgICAgICAgICAgICAgIHNlbGYubWF4RGF0ZUhhc1RpbWUgJiZcbiAgICAgICAgICAgICAgICBzZWxmLmxhdGVzdFNlbGVjdGVkRGF0ZU9iaiAmJlxuICAgICAgICAgICAgICAgIGNvbXBhcmVEYXRlcyhzZWxmLmxhdGVzdFNlbGVjdGVkRGF0ZU9iaiwgc2VsZi5jb25maWcubWF4RGF0ZSwgdHJ1ZSkgPT09XG4gICAgICAgICAgICAgICAgICAgIDApO1xuICAgICAgICBpZiAoc2VsZi5jb25maWcubWF4VGltZSAhPT0gdW5kZWZpbmVkICYmXG4gICAgICAgICAgICBzZWxmLmNvbmZpZy5taW5UaW1lICE9PSB1bmRlZmluZWQgJiZcbiAgICAgICAgICAgIHNlbGYuY29uZmlnLm1pblRpbWUgPiBzZWxmLmNvbmZpZy5tYXhUaW1lKSB7XG4gICAgICAgICAgICB2YXIgbWluQm91bmQgPSBjYWxjdWxhdGVTZWNvbmRzU2luY2VNaWRuaWdodChzZWxmLmNvbmZpZy5taW5UaW1lLmdldEhvdXJzKCksIHNlbGYuY29uZmlnLm1pblRpbWUuZ2V0TWludXRlcygpLCBzZWxmLmNvbmZpZy5taW5UaW1lLmdldFNlY29uZHMoKSk7XG4gICAgICAgICAgICB2YXIgbWF4Qm91bmQgPSBjYWxjdWxhdGVTZWNvbmRzU2luY2VNaWRuaWdodChzZWxmLmNvbmZpZy5tYXhUaW1lLmdldEhvdXJzKCksIHNlbGYuY29uZmlnLm1heFRpbWUuZ2V0TWludXRlcygpLCBzZWxmLmNvbmZpZy5tYXhUaW1lLmdldFNlY29uZHMoKSk7XG4gICAgICAgICAgICB2YXIgY3VycmVudFRpbWUgPSBjYWxjdWxhdGVTZWNvbmRzU2luY2VNaWRuaWdodChob3VycywgbWludXRlcywgc2Vjb25kcyk7XG4gICAgICAgICAgICBpZiAoY3VycmVudFRpbWUgPiBtYXhCb3VuZCAmJiBjdXJyZW50VGltZSA8IG1pbkJvdW5kKSB7XG4gICAgICAgICAgICAgICAgdmFyIHJlc3VsdCA9IHBhcnNlU2Vjb25kcyhtaW5Cb3VuZCk7XG4gICAgICAgICAgICAgICAgaG91cnMgPSByZXN1bHRbMF07XG4gICAgICAgICAgICAgICAgbWludXRlcyA9IHJlc3VsdFsxXTtcbiAgICAgICAgICAgICAgICBzZWNvbmRzID0gcmVzdWx0WzJdO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgaWYgKGxpbWl0TWF4SG91cnMpIHtcbiAgICAgICAgICAgICAgICB2YXIgbWF4VGltZSA9IHNlbGYuY29uZmlnLm1heFRpbWUgIT09IHVuZGVmaW5lZFxuICAgICAgICAgICAgICAgICAgICA/IHNlbGYuY29uZmlnLm1heFRpbWVcbiAgICAgICAgICAgICAgICAgICAgOiBzZWxmLmNvbmZpZy5tYXhEYXRlO1xuICAgICAgICAgICAgICAgIGhvdXJzID0gTWF0aC5taW4oaG91cnMsIG1heFRpbWUuZ2V0SG91cnMoKSk7XG4gICAgICAgICAgICAgICAgaWYgKGhvdXJzID09PSBtYXhUaW1lLmdldEhvdXJzKCkpXG4gICAgICAgICAgICAgICAgICAgIG1pbnV0ZXMgPSBNYXRoLm1pbihtaW51dGVzLCBtYXhUaW1lLmdldE1pbnV0ZXMoKSk7XG4gICAgICAgICAgICAgICAgaWYgKG1pbnV0ZXMgPT09IG1heFRpbWUuZ2V0TWludXRlcygpKVxuICAgICAgICAgICAgICAgICAgICBzZWNvbmRzID0gTWF0aC5taW4oc2Vjb25kcywgbWF4VGltZS5nZXRTZWNvbmRzKCkpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGxpbWl0TWluSG91cnMpIHtcbiAgICAgICAgICAgICAgICB2YXIgbWluVGltZSA9IHNlbGYuY29uZmlnLm1pblRpbWUgIT09IHVuZGVmaW5lZFxuICAgICAgICAgICAgICAgICAgICA/IHNlbGYuY29uZmlnLm1pblRpbWVcbiAgICAgICAgICAgICAgICAgICAgOiBzZWxmLmNvbmZpZy5taW5EYXRlO1xuICAgICAgICAgICAgICAgIGhvdXJzID0gTWF0aC5tYXgoaG91cnMsIG1pblRpbWUuZ2V0SG91cnMoKSk7XG4gICAgICAgICAgICAgICAgaWYgKGhvdXJzID09PSBtaW5UaW1lLmdldEhvdXJzKCkgJiYgbWludXRlcyA8IG1pblRpbWUuZ2V0TWludXRlcygpKVxuICAgICAgICAgICAgICAgICAgICBtaW51dGVzID0gbWluVGltZS5nZXRNaW51dGVzKCk7XG4gICAgICAgICAgICAgICAgaWYgKG1pbnV0ZXMgPT09IG1pblRpbWUuZ2V0TWludXRlcygpKVxuICAgICAgICAgICAgICAgICAgICBzZWNvbmRzID0gTWF0aC5tYXgoc2Vjb25kcywgbWluVGltZS5nZXRTZWNvbmRzKCkpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHNldEhvdXJzKGhvdXJzLCBtaW51dGVzLCBzZWNvbmRzKTtcbiAgICB9XG4gICAgZnVuY3Rpb24gc2V0SG91cnNGcm9tRGF0ZShkYXRlT2JqKSB7XG4gICAgICAgIHZhciBkYXRlID0gZGF0ZU9iaiB8fCBzZWxmLmxhdGVzdFNlbGVjdGVkRGF0ZU9iajtcbiAgICAgICAgaWYgKGRhdGUgJiYgZGF0ZSBpbnN0YW5jZW9mIERhdGUpIHtcbiAgICAgICAgICAgIHNldEhvdXJzKGRhdGUuZ2V0SG91cnMoKSwgZGF0ZS5nZXRNaW51dGVzKCksIGRhdGUuZ2V0U2Vjb25kcygpKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBmdW5jdGlvbiBzZXRIb3Vycyhob3VycywgbWludXRlcywgc2Vjb25kcykge1xuICAgICAgICBpZiAoc2VsZi5sYXRlc3RTZWxlY3RlZERhdGVPYmogIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgc2VsZi5sYXRlc3RTZWxlY3RlZERhdGVPYmouc2V0SG91cnMoaG91cnMgJSAyNCwgbWludXRlcywgc2Vjb25kcyB8fCAwLCAwKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIXNlbGYuaG91ckVsZW1lbnQgfHwgIXNlbGYubWludXRlRWxlbWVudCB8fCBzZWxmLmlzTW9iaWxlKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICBzZWxmLmhvdXJFbGVtZW50LnZhbHVlID0gcGFkKCFzZWxmLmNvbmZpZy50aW1lXzI0aHJcbiAgICAgICAgICAgID8gKCgxMiArIGhvdXJzKSAlIDEyKSArIDEyICogaW50KGhvdXJzICUgMTIgPT09IDApXG4gICAgICAgICAgICA6IGhvdXJzKTtcbiAgICAgICAgc2VsZi5taW51dGVFbGVtZW50LnZhbHVlID0gcGFkKG1pbnV0ZXMpO1xuICAgICAgICBpZiAoc2VsZi5hbVBNICE9PSB1bmRlZmluZWQpXG4gICAgICAgICAgICBzZWxmLmFtUE0udGV4dENvbnRlbnQgPSBzZWxmLmwxMG4uYW1QTVtpbnQoaG91cnMgPj0gMTIpXTtcbiAgICAgICAgaWYgKHNlbGYuc2Vjb25kRWxlbWVudCAhPT0gdW5kZWZpbmVkKVxuICAgICAgICAgICAgc2VsZi5zZWNvbmRFbGVtZW50LnZhbHVlID0gcGFkKHNlY29uZHMpO1xuICAgIH1cbiAgICBmdW5jdGlvbiBvblllYXJJbnB1dChldmVudCkge1xuICAgICAgICB2YXIgZXZlbnRUYXJnZXQgPSBnZXRFdmVudFRhcmdldChldmVudCk7XG4gICAgICAgIHZhciB5ZWFyID0gcGFyc2VJbnQoZXZlbnRUYXJnZXQudmFsdWUpICsgKGV2ZW50LmRlbHRhIHx8IDApO1xuICAgICAgICBpZiAoeWVhciAvIDEwMDAgPiAxIHx8XG4gICAgICAgICAgICAoZXZlbnQua2V5ID09PSBcIkVudGVyXCIgJiYgIS9bXlxcZF0vLnRlc3QoeWVhci50b1N0cmluZygpKSkpIHtcbiAgICAgICAgICAgIGNoYW5nZVllYXIoeWVhcik7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZnVuY3Rpb24gYmluZChlbGVtZW50LCBldmVudCwgaGFuZGxlciwgb3B0aW9ucykge1xuICAgICAgICBpZiAoZXZlbnQgaW5zdGFuY2VvZiBBcnJheSlcbiAgICAgICAgICAgIHJldHVybiBldmVudC5mb3JFYWNoKGZ1bmN0aW9uIChldikgeyByZXR1cm4gYmluZChlbGVtZW50LCBldiwgaGFuZGxlciwgb3B0aW9ucyk7IH0pO1xuICAgICAgICBpZiAoZWxlbWVudCBpbnN0YW5jZW9mIEFycmF5KVxuICAgICAgICAgICAgcmV0dXJuIGVsZW1lbnQuZm9yRWFjaChmdW5jdGlvbiAoZWwpIHsgcmV0dXJuIGJpbmQoZWwsIGV2ZW50LCBoYW5kbGVyLCBvcHRpb25zKTsgfSk7XG4gICAgICAgIGVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihldmVudCwgaGFuZGxlciwgb3B0aW9ucyk7XG4gICAgICAgIHNlbGYuX2hhbmRsZXJzLnB1c2goe1xuICAgICAgICAgICAgcmVtb3ZlOiBmdW5jdGlvbiAoKSB7IHJldHVybiBlbGVtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoZXZlbnQsIGhhbmRsZXIsIG9wdGlvbnMpOyB9LFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgZnVuY3Rpb24gdHJpZ2dlckNoYW5nZSgpIHtcbiAgICAgICAgdHJpZ2dlckV2ZW50KFwib25DaGFuZ2VcIik7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGJpbmRFdmVudHMoKSB7XG4gICAgICAgIGlmIChzZWxmLmNvbmZpZy53cmFwKSB7XG4gICAgICAgICAgICBbXCJvcGVuXCIsIFwiY2xvc2VcIiwgXCJ0b2dnbGVcIiwgXCJjbGVhclwiXS5mb3JFYWNoKGZ1bmN0aW9uIChldnQpIHtcbiAgICAgICAgICAgICAgICBBcnJheS5wcm90b3R5cGUuZm9yRWFjaC5jYWxsKHNlbGYuZWxlbWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiW2RhdGEtXCIgKyBldnQgKyBcIl1cIiksIGZ1bmN0aW9uIChlbCkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gYmluZChlbCwgXCJjbGlja1wiLCBzZWxmW2V2dF0pO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHNlbGYuaXNNb2JpbGUpIHtcbiAgICAgICAgICAgIHNldHVwTW9iaWxlKCk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgdmFyIGRlYm91bmNlZFJlc2l6ZSA9IGRlYm91bmNlKG9uUmVzaXplLCA1MCk7XG4gICAgICAgIHNlbGYuX2RlYm91bmNlZENoYW5nZSA9IGRlYm91bmNlKHRyaWdnZXJDaGFuZ2UsIERFQk9VTkNFRF9DSEFOR0VfTVMpO1xuICAgICAgICBpZiAoc2VsZi5kYXlzQ29udGFpbmVyICYmICEvaVBob25lfGlQYWR8aVBvZC9pLnRlc3QobmF2aWdhdG9yLnVzZXJBZ2VudCkpXG4gICAgICAgICAgICBiaW5kKHNlbGYuZGF5c0NvbnRhaW5lciwgXCJtb3VzZW92ZXJcIiwgZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICAgICAgICBpZiAoc2VsZi5jb25maWcubW9kZSA9PT0gXCJyYW5nZVwiKVxuICAgICAgICAgICAgICAgICAgICBvbk1vdXNlT3ZlcihnZXRFdmVudFRhcmdldChlKSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgYmluZChzZWxmLl9pbnB1dCwgXCJrZXlkb3duXCIsIG9uS2V5RG93bik7XG4gICAgICAgIGlmIChzZWxmLmNhbGVuZGFyQ29udGFpbmVyICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIGJpbmQoc2VsZi5jYWxlbmRhckNvbnRhaW5lciwgXCJrZXlkb3duXCIsIG9uS2V5RG93bik7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCFzZWxmLmNvbmZpZy5pbmxpbmUgJiYgIXNlbGYuY29uZmlnLnN0YXRpYylcbiAgICAgICAgICAgIGJpbmQod2luZG93LCBcInJlc2l6ZVwiLCBkZWJvdW5jZWRSZXNpemUpO1xuICAgICAgICBpZiAod2luZG93Lm9udG91Y2hzdGFydCAhPT0gdW5kZWZpbmVkKVxuICAgICAgICAgICAgYmluZCh3aW5kb3cuZG9jdW1lbnQsIFwidG91Y2hzdGFydFwiLCBkb2N1bWVudENsaWNrKTtcbiAgICAgICAgZWxzZVxuICAgICAgICAgICAgYmluZCh3aW5kb3cuZG9jdW1lbnQsIFwibW91c2Vkb3duXCIsIGRvY3VtZW50Q2xpY2spO1xuICAgICAgICBiaW5kKHdpbmRvdy5kb2N1bWVudCwgXCJmb2N1c1wiLCBkb2N1bWVudENsaWNrLCB7IGNhcHR1cmU6IHRydWUgfSk7XG4gICAgICAgIGlmIChzZWxmLmNvbmZpZy5jbGlja09wZW5zID09PSB0cnVlKSB7XG4gICAgICAgICAgICBiaW5kKHNlbGYuX2lucHV0LCBcImZvY3VzXCIsIHNlbGYub3Blbik7XG4gICAgICAgICAgICBiaW5kKHNlbGYuX2lucHV0LCBcImNsaWNrXCIsIHNlbGYub3Blbik7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHNlbGYuZGF5c0NvbnRhaW5lciAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICBiaW5kKHNlbGYubW9udGhOYXYsIFwiY2xpY2tcIiwgb25Nb250aE5hdkNsaWNrKTtcbiAgICAgICAgICAgIGJpbmQoc2VsZi5tb250aE5hdiwgW1wia2V5dXBcIiwgXCJpbmNyZW1lbnRcIl0sIG9uWWVhcklucHV0KTtcbiAgICAgICAgICAgIGJpbmQoc2VsZi5kYXlzQ29udGFpbmVyLCBcImNsaWNrXCIsIHNlbGVjdERhdGUpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChzZWxmLnRpbWVDb250YWluZXIgIT09IHVuZGVmaW5lZCAmJlxuICAgICAgICAgICAgc2VsZi5taW51dGVFbGVtZW50ICE9PSB1bmRlZmluZWQgJiZcbiAgICAgICAgICAgIHNlbGYuaG91ckVsZW1lbnQgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgdmFyIHNlbFRleHQgPSBmdW5jdGlvbiAoZSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBnZXRFdmVudFRhcmdldChlKS5zZWxlY3QoKTtcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICBiaW5kKHNlbGYudGltZUNvbnRhaW5lciwgW1wiaW5jcmVtZW50XCJdLCB1cGRhdGVUaW1lKTtcbiAgICAgICAgICAgIGJpbmQoc2VsZi50aW1lQ29udGFpbmVyLCBcImJsdXJcIiwgdXBkYXRlVGltZSwgeyBjYXB0dXJlOiB0cnVlIH0pO1xuICAgICAgICAgICAgYmluZChzZWxmLnRpbWVDb250YWluZXIsIFwiY2xpY2tcIiwgdGltZUluY3JlbWVudCk7XG4gICAgICAgICAgICBiaW5kKFtzZWxmLmhvdXJFbGVtZW50LCBzZWxmLm1pbnV0ZUVsZW1lbnRdLCBbXCJmb2N1c1wiLCBcImNsaWNrXCJdLCBzZWxUZXh0KTtcbiAgICAgICAgICAgIGlmIChzZWxmLnNlY29uZEVsZW1lbnQgIT09IHVuZGVmaW5lZClcbiAgICAgICAgICAgICAgICBiaW5kKHNlbGYuc2Vjb25kRWxlbWVudCwgXCJmb2N1c1wiLCBmdW5jdGlvbiAoKSB7IHJldHVybiBzZWxmLnNlY29uZEVsZW1lbnQgJiYgc2VsZi5zZWNvbmRFbGVtZW50LnNlbGVjdCgpOyB9KTtcbiAgICAgICAgICAgIGlmIChzZWxmLmFtUE0gIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgIGJpbmQoc2VsZi5hbVBNLCBcImNsaWNrXCIsIGZ1bmN0aW9uIChlKSB7XG4gICAgICAgICAgICAgICAgICAgIHVwZGF0ZVRpbWUoZSk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHNlbGYuY29uZmlnLmFsbG93SW5wdXQpIHtcbiAgICAgICAgICAgIGJpbmQoc2VsZi5faW5wdXQsIFwiYmx1clwiLCBvbkJsdXIpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGZ1bmN0aW9uIGp1bXBUb0RhdGUoanVtcERhdGUsIHRyaWdnZXJDaGFuZ2UpIHtcbiAgICAgICAgdmFyIGp1bXBUbyA9IGp1bXBEYXRlICE9PSB1bmRlZmluZWRcbiAgICAgICAgICAgID8gc2VsZi5wYXJzZURhdGUoanVtcERhdGUpXG4gICAgICAgICAgICA6IHNlbGYubGF0ZXN0U2VsZWN0ZWREYXRlT2JqIHx8XG4gICAgICAgICAgICAgICAgKHNlbGYuY29uZmlnLm1pbkRhdGUgJiYgc2VsZi5jb25maWcubWluRGF0ZSA+IHNlbGYubm93XG4gICAgICAgICAgICAgICAgICAgID8gc2VsZi5jb25maWcubWluRGF0ZVxuICAgICAgICAgICAgICAgICAgICA6IHNlbGYuY29uZmlnLm1heERhdGUgJiYgc2VsZi5jb25maWcubWF4RGF0ZSA8IHNlbGYubm93XG4gICAgICAgICAgICAgICAgICAgICAgICA/IHNlbGYuY29uZmlnLm1heERhdGVcbiAgICAgICAgICAgICAgICAgICAgICAgIDogc2VsZi5ub3cpO1xuICAgICAgICB2YXIgb2xkWWVhciA9IHNlbGYuY3VycmVudFllYXI7XG4gICAgICAgIHZhciBvbGRNb250aCA9IHNlbGYuY3VycmVudE1vbnRoO1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgaWYgKGp1bXBUbyAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgc2VsZi5jdXJyZW50WWVhciA9IGp1bXBUby5nZXRGdWxsWWVhcigpO1xuICAgICAgICAgICAgICAgIHNlbGYuY3VycmVudE1vbnRoID0ganVtcFRvLmdldE1vbnRoKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgIGUubWVzc2FnZSA9IFwiSW52YWxpZCBkYXRlIHN1cHBsaWVkOiBcIiArIGp1bXBUbztcbiAgICAgICAgICAgIHNlbGYuY29uZmlnLmVycm9ySGFuZGxlcihlKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodHJpZ2dlckNoYW5nZSAmJiBzZWxmLmN1cnJlbnRZZWFyICE9PSBvbGRZZWFyKSB7XG4gICAgICAgICAgICB0cmlnZ2VyRXZlbnQoXCJvblllYXJDaGFuZ2VcIik7XG4gICAgICAgICAgICBidWlsZE1vbnRoU3dpdGNoKCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRyaWdnZXJDaGFuZ2UgJiZcbiAgICAgICAgICAgIChzZWxmLmN1cnJlbnRZZWFyICE9PSBvbGRZZWFyIHx8IHNlbGYuY3VycmVudE1vbnRoICE9PSBvbGRNb250aCkpIHtcbiAgICAgICAgICAgIHRyaWdnZXJFdmVudChcIm9uTW9udGhDaGFuZ2VcIik7XG4gICAgICAgIH1cbiAgICAgICAgc2VsZi5yZWRyYXcoKTtcbiAgICB9XG4gICAgZnVuY3Rpb24gdGltZUluY3JlbWVudChlKSB7XG4gICAgICAgIHZhciBldmVudFRhcmdldCA9IGdldEV2ZW50VGFyZ2V0KGUpO1xuICAgICAgICBpZiAofmV2ZW50VGFyZ2V0LmNsYXNzTmFtZS5pbmRleE9mKFwiYXJyb3dcIikpXG4gICAgICAgICAgICBpbmNyZW1lbnROdW1JbnB1dChlLCBldmVudFRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoXCJhcnJvd1VwXCIpID8gMSA6IC0xKTtcbiAgICB9XG4gICAgZnVuY3Rpb24gaW5jcmVtZW50TnVtSW5wdXQoZSwgZGVsdGEsIGlucHV0RWxlbSkge1xuICAgICAgICB2YXIgdGFyZ2V0ID0gZSAmJiBnZXRFdmVudFRhcmdldChlKTtcbiAgICAgICAgdmFyIGlucHV0ID0gaW5wdXRFbGVtIHx8XG4gICAgICAgICAgICAodGFyZ2V0ICYmIHRhcmdldC5wYXJlbnROb2RlICYmIHRhcmdldC5wYXJlbnROb2RlLmZpcnN0Q2hpbGQpO1xuICAgICAgICB2YXIgZXZlbnQgPSBjcmVhdGVFdmVudChcImluY3JlbWVudFwiKTtcbiAgICAgICAgZXZlbnQuZGVsdGEgPSBkZWx0YTtcbiAgICAgICAgaW5wdXQgJiYgaW5wdXQuZGlzcGF0Y2hFdmVudChldmVudCk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGJ1aWxkKCkge1xuICAgICAgICB2YXIgZnJhZ21lbnQgPSB3aW5kb3cuZG9jdW1lbnQuY3JlYXRlRG9jdW1lbnRGcmFnbWVudCgpO1xuICAgICAgICBzZWxmLmNhbGVuZGFyQ29udGFpbmVyID0gY3JlYXRlRWxlbWVudChcImRpdlwiLCBcImZsYXRwaWNrci1jYWxlbmRhclwiKTtcbiAgICAgICAgc2VsZi5jYWxlbmRhckNvbnRhaW5lci50YWJJbmRleCA9IC0xO1xuICAgICAgICBpZiAoIXNlbGYuY29uZmlnLm5vQ2FsZW5kYXIpIHtcbiAgICAgICAgICAgIGZyYWdtZW50LmFwcGVuZENoaWxkKGJ1aWxkTW9udGhOYXYoKSk7XG4gICAgICAgICAgICBzZWxmLmlubmVyQ29udGFpbmVyID0gY3JlYXRlRWxlbWVudChcImRpdlwiLCBcImZsYXRwaWNrci1pbm5lckNvbnRhaW5lclwiKTtcbiAgICAgICAgICAgIGlmIChzZWxmLmNvbmZpZy53ZWVrTnVtYmVycykge1xuICAgICAgICAgICAgICAgIHZhciBfYSA9IGJ1aWxkV2Vla3MoKSwgd2Vla1dyYXBwZXIgPSBfYS53ZWVrV3JhcHBlciwgd2Vla051bWJlcnMgPSBfYS53ZWVrTnVtYmVycztcbiAgICAgICAgICAgICAgICBzZWxmLmlubmVyQ29udGFpbmVyLmFwcGVuZENoaWxkKHdlZWtXcmFwcGVyKTtcbiAgICAgICAgICAgICAgICBzZWxmLndlZWtOdW1iZXJzID0gd2Vla051bWJlcnM7XG4gICAgICAgICAgICAgICAgc2VsZi53ZWVrV3JhcHBlciA9IHdlZWtXcmFwcGVyO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgc2VsZi5yQ29udGFpbmVyID0gY3JlYXRlRWxlbWVudChcImRpdlwiLCBcImZsYXRwaWNrci1yQ29udGFpbmVyXCIpO1xuICAgICAgICAgICAgc2VsZi5yQ29udGFpbmVyLmFwcGVuZENoaWxkKGJ1aWxkV2Vla2RheXMoKSk7XG4gICAgICAgICAgICBpZiAoIXNlbGYuZGF5c0NvbnRhaW5lcikge1xuICAgICAgICAgICAgICAgIHNlbGYuZGF5c0NvbnRhaW5lciA9IGNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgXCJmbGF0cGlja3ItZGF5c1wiKTtcbiAgICAgICAgICAgICAgICBzZWxmLmRheXNDb250YWluZXIudGFiSW5kZXggPSAtMTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGJ1aWxkRGF5cygpO1xuICAgICAgICAgICAgc2VsZi5yQ29udGFpbmVyLmFwcGVuZENoaWxkKHNlbGYuZGF5c0NvbnRhaW5lcik7XG4gICAgICAgICAgICBzZWxmLmlubmVyQ29udGFpbmVyLmFwcGVuZENoaWxkKHNlbGYuckNvbnRhaW5lcik7XG4gICAgICAgICAgICBmcmFnbWVudC5hcHBlbmRDaGlsZChzZWxmLmlubmVyQ29udGFpbmVyKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoc2VsZi5jb25maWcuZW5hYmxlVGltZSkge1xuICAgICAgICAgICAgZnJhZ21lbnQuYXBwZW5kQ2hpbGQoYnVpbGRUaW1lKCkpO1xuICAgICAgICB9XG4gICAgICAgIHRvZ2dsZUNsYXNzKHNlbGYuY2FsZW5kYXJDb250YWluZXIsIFwicmFuZ2VNb2RlXCIsIHNlbGYuY29uZmlnLm1vZGUgPT09IFwicmFuZ2VcIik7XG4gICAgICAgIHRvZ2dsZUNsYXNzKHNlbGYuY2FsZW5kYXJDb250YWluZXIsIFwiYW5pbWF0ZVwiLCBzZWxmLmNvbmZpZy5hbmltYXRlID09PSB0cnVlKTtcbiAgICAgICAgdG9nZ2xlQ2xhc3Moc2VsZi5jYWxlbmRhckNvbnRhaW5lciwgXCJtdWx0aU1vbnRoXCIsIHNlbGYuY29uZmlnLnNob3dNb250aHMgPiAxKTtcbiAgICAgICAgc2VsZi5jYWxlbmRhckNvbnRhaW5lci5hcHBlbmRDaGlsZChmcmFnbWVudCk7XG4gICAgICAgIHZhciBjdXN0b21BcHBlbmQgPSBzZWxmLmNvbmZpZy5hcHBlbmRUbyAhPT0gdW5kZWZpbmVkICYmXG4gICAgICAgICAgICBzZWxmLmNvbmZpZy5hcHBlbmRUby5ub2RlVHlwZSAhPT0gdW5kZWZpbmVkO1xuICAgICAgICBpZiAoc2VsZi5jb25maWcuaW5saW5lIHx8IHNlbGYuY29uZmlnLnN0YXRpYykge1xuICAgICAgICAgICAgc2VsZi5jYWxlbmRhckNvbnRhaW5lci5jbGFzc0xpc3QuYWRkKHNlbGYuY29uZmlnLmlubGluZSA/IFwiaW5saW5lXCIgOiBcInN0YXRpY1wiKTtcbiAgICAgICAgICAgIGlmIChzZWxmLmNvbmZpZy5pbmxpbmUpIHtcbiAgICAgICAgICAgICAgICBpZiAoIWN1c3RvbUFwcGVuZCAmJiBzZWxmLmVsZW1lbnQucGFyZW50Tm9kZSlcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5lbGVtZW50LnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKHNlbGYuY2FsZW5kYXJDb250YWluZXIsIHNlbGYuX2lucHV0Lm5leHRTaWJsaW5nKTtcbiAgICAgICAgICAgICAgICBlbHNlIGlmIChzZWxmLmNvbmZpZy5hcHBlbmRUbyAhPT0gdW5kZWZpbmVkKVxuICAgICAgICAgICAgICAgICAgICBzZWxmLmNvbmZpZy5hcHBlbmRUby5hcHBlbmRDaGlsZChzZWxmLmNhbGVuZGFyQ29udGFpbmVyKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChzZWxmLmNvbmZpZy5zdGF0aWMpIHtcbiAgICAgICAgICAgICAgICB2YXIgd3JhcHBlciA9IGNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgXCJmbGF0cGlja3Itd3JhcHBlclwiKTtcbiAgICAgICAgICAgICAgICBpZiAoc2VsZi5lbGVtZW50LnBhcmVudE5vZGUpXG4gICAgICAgICAgICAgICAgICAgIHNlbGYuZWxlbWVudC5wYXJlbnROb2RlLmluc2VydEJlZm9yZSh3cmFwcGVyLCBzZWxmLmVsZW1lbnQpO1xuICAgICAgICAgICAgICAgIHdyYXBwZXIuYXBwZW5kQ2hpbGQoc2VsZi5lbGVtZW50KTtcbiAgICAgICAgICAgICAgICBpZiAoc2VsZi5hbHRJbnB1dClcbiAgICAgICAgICAgICAgICAgICAgd3JhcHBlci5hcHBlbmRDaGlsZChzZWxmLmFsdElucHV0KTtcbiAgICAgICAgICAgICAgICB3cmFwcGVyLmFwcGVuZENoaWxkKHNlbGYuY2FsZW5kYXJDb250YWluZXIpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmICghc2VsZi5jb25maWcuc3RhdGljICYmICFzZWxmLmNvbmZpZy5pbmxpbmUpXG4gICAgICAgICAgICAoc2VsZi5jb25maWcuYXBwZW5kVG8gIT09IHVuZGVmaW5lZFxuICAgICAgICAgICAgICAgID8gc2VsZi5jb25maWcuYXBwZW5kVG9cbiAgICAgICAgICAgICAgICA6IHdpbmRvdy5kb2N1bWVudC5ib2R5KS5hcHBlbmRDaGlsZChzZWxmLmNhbGVuZGFyQ29udGFpbmVyKTtcbiAgICB9XG4gICAgZnVuY3Rpb24gY3JlYXRlRGF5KGNsYXNzTmFtZSwgZGF0ZSwgX2RheU51bWJlciwgaSkge1xuICAgICAgICB2YXIgZGF0ZUlzRW5hYmxlZCA9IGlzRW5hYmxlZChkYXRlLCB0cnVlKSwgZGF5RWxlbWVudCA9IGNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsIGNsYXNzTmFtZSwgZGF0ZS5nZXREYXRlKCkudG9TdHJpbmcoKSk7XG4gICAgICAgIGRheUVsZW1lbnQuZGF0ZU9iaiA9IGRhdGU7XG4gICAgICAgIGRheUVsZW1lbnQuJGkgPSBpO1xuICAgICAgICBkYXlFbGVtZW50LnNldEF0dHJpYnV0ZShcImFyaWEtbGFiZWxcIiwgc2VsZi5mb3JtYXREYXRlKGRhdGUsIHNlbGYuY29uZmlnLmFyaWFEYXRlRm9ybWF0KSk7XG4gICAgICAgIGlmIChjbGFzc05hbWUuaW5kZXhPZihcImhpZGRlblwiKSA9PT0gLTEgJiZcbiAgICAgICAgICAgIGNvbXBhcmVEYXRlcyhkYXRlLCBzZWxmLm5vdykgPT09IDApIHtcbiAgICAgICAgICAgIHNlbGYudG9kYXlEYXRlRWxlbSA9IGRheUVsZW1lbnQ7XG4gICAgICAgICAgICBkYXlFbGVtZW50LmNsYXNzTGlzdC5hZGQoXCJ0b2RheVwiKTtcbiAgICAgICAgICAgIGRheUVsZW1lbnQuc2V0QXR0cmlidXRlKFwiYXJpYS1jdXJyZW50XCIsIFwiZGF0ZVwiKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoZGF0ZUlzRW5hYmxlZCkge1xuICAgICAgICAgICAgZGF5RWxlbWVudC50YWJJbmRleCA9IC0xO1xuICAgICAgICAgICAgaWYgKGlzRGF0ZVNlbGVjdGVkKGRhdGUpKSB7XG4gICAgICAgICAgICAgICAgZGF5RWxlbWVudC5jbGFzc0xpc3QuYWRkKFwic2VsZWN0ZWRcIik7XG4gICAgICAgICAgICAgICAgc2VsZi5zZWxlY3RlZERhdGVFbGVtID0gZGF5RWxlbWVudDtcbiAgICAgICAgICAgICAgICBpZiAoc2VsZi5jb25maWcubW9kZSA9PT0gXCJyYW5nZVwiKSB7XG4gICAgICAgICAgICAgICAgICAgIHRvZ2dsZUNsYXNzKGRheUVsZW1lbnQsIFwic3RhcnRSYW5nZVwiLCBzZWxmLnNlbGVjdGVkRGF0ZXNbMF0gJiZcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbXBhcmVEYXRlcyhkYXRlLCBzZWxmLnNlbGVjdGVkRGF0ZXNbMF0sIHRydWUpID09PSAwKTtcbiAgICAgICAgICAgICAgICAgICAgdG9nZ2xlQ2xhc3MoZGF5RWxlbWVudCwgXCJlbmRSYW5nZVwiLCBzZWxmLnNlbGVjdGVkRGF0ZXNbMV0gJiZcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbXBhcmVEYXRlcyhkYXRlLCBzZWxmLnNlbGVjdGVkRGF0ZXNbMV0sIHRydWUpID09PSAwKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGNsYXNzTmFtZSA9PT0gXCJuZXh0TW9udGhEYXlcIilcbiAgICAgICAgICAgICAgICAgICAgICAgIGRheUVsZW1lbnQuY2xhc3NMaXN0LmFkZChcImluUmFuZ2VcIik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgZGF5RWxlbWVudC5jbGFzc0xpc3QuYWRkKFwiZmxhdHBpY2tyLWRpc2FibGVkXCIpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChzZWxmLmNvbmZpZy5tb2RlID09PSBcInJhbmdlXCIpIHtcbiAgICAgICAgICAgIGlmIChpc0RhdGVJblJhbmdlKGRhdGUpICYmICFpc0RhdGVTZWxlY3RlZChkYXRlKSlcbiAgICAgICAgICAgICAgICBkYXlFbGVtZW50LmNsYXNzTGlzdC5hZGQoXCJpblJhbmdlXCIpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChzZWxmLndlZWtOdW1iZXJzICYmXG4gICAgICAgICAgICBzZWxmLmNvbmZpZy5zaG93TW9udGhzID09PSAxICYmXG4gICAgICAgICAgICBjbGFzc05hbWUgIT09IFwicHJldk1vbnRoRGF5XCIgJiZcbiAgICAgICAgICAgIGkgJSA3ID09PSA2KSB7XG4gICAgICAgICAgICBzZWxmLndlZWtOdW1iZXJzLmluc2VydEFkamFjZW50SFRNTChcImJlZm9yZWVuZFwiLCBcIjxzcGFuIGNsYXNzPSdmbGF0cGlja3ItZGF5Jz5cIiArIHNlbGYuY29uZmlnLmdldFdlZWsoZGF0ZSkgKyBcIjwvc3Bhbj5cIik7XG4gICAgICAgIH1cbiAgICAgICAgdHJpZ2dlckV2ZW50KFwib25EYXlDcmVhdGVcIiwgZGF5RWxlbWVudCk7XG4gICAgICAgIHJldHVybiBkYXlFbGVtZW50O1xuICAgIH1cbiAgICBmdW5jdGlvbiBmb2N1c09uRGF5RWxlbSh0YXJnZXROb2RlKSB7XG4gICAgICAgIHRhcmdldE5vZGUuZm9jdXMoKTtcbiAgICAgICAgaWYgKHNlbGYuY29uZmlnLm1vZGUgPT09IFwicmFuZ2VcIilcbiAgICAgICAgICAgIG9uTW91c2VPdmVyKHRhcmdldE5vZGUpO1xuICAgIH1cbiAgICBmdW5jdGlvbiBnZXRGaXJzdEF2YWlsYWJsZURheShkZWx0YSkge1xuICAgICAgICB2YXIgc3RhcnRNb250aCA9IGRlbHRhID4gMCA/IDAgOiBzZWxmLmNvbmZpZy5zaG93TW9udGhzIC0gMTtcbiAgICAgICAgdmFyIGVuZE1vbnRoID0gZGVsdGEgPiAwID8gc2VsZi5jb25maWcuc2hvd01vbnRocyA6IC0xO1xuICAgICAgICBmb3IgKHZhciBtID0gc3RhcnRNb250aDsgbSAhPSBlbmRNb250aDsgbSArPSBkZWx0YSkge1xuICAgICAgICAgICAgdmFyIG1vbnRoID0gc2VsZi5kYXlzQ29udGFpbmVyLmNoaWxkcmVuW21dO1xuICAgICAgICAgICAgdmFyIHN0YXJ0SW5kZXggPSBkZWx0YSA+IDAgPyAwIDogbW9udGguY2hpbGRyZW4ubGVuZ3RoIC0gMTtcbiAgICAgICAgICAgIHZhciBlbmRJbmRleCA9IGRlbHRhID4gMCA/IG1vbnRoLmNoaWxkcmVuLmxlbmd0aCA6IC0xO1xuICAgICAgICAgICAgZm9yICh2YXIgaSA9IHN0YXJ0SW5kZXg7IGkgIT0gZW5kSW5kZXg7IGkgKz0gZGVsdGEpIHtcbiAgICAgICAgICAgICAgICB2YXIgYyA9IG1vbnRoLmNoaWxkcmVuW2ldO1xuICAgICAgICAgICAgICAgIGlmIChjLmNsYXNzTmFtZS5pbmRleE9mKFwiaGlkZGVuXCIpID09PSAtMSAmJiBpc0VuYWJsZWQoYy5kYXRlT2JqKSlcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGM7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgZnVuY3Rpb24gZ2V0TmV4dEF2YWlsYWJsZURheShjdXJyZW50LCBkZWx0YSkge1xuICAgICAgICB2YXIgZ2l2ZW5Nb250aCA9IGN1cnJlbnQuY2xhc3NOYW1lLmluZGV4T2YoXCJNb250aFwiKSA9PT0gLTFcbiAgICAgICAgICAgID8gY3VycmVudC5kYXRlT2JqLmdldE1vbnRoKClcbiAgICAgICAgICAgIDogc2VsZi5jdXJyZW50TW9udGg7XG4gICAgICAgIHZhciBlbmRNb250aCA9IGRlbHRhID4gMCA/IHNlbGYuY29uZmlnLnNob3dNb250aHMgOiAtMTtcbiAgICAgICAgdmFyIGxvb3BEZWx0YSA9IGRlbHRhID4gMCA/IDEgOiAtMTtcbiAgICAgICAgZm9yICh2YXIgbSA9IGdpdmVuTW9udGggLSBzZWxmLmN1cnJlbnRNb250aDsgbSAhPSBlbmRNb250aDsgbSArPSBsb29wRGVsdGEpIHtcbiAgICAgICAgICAgIHZhciBtb250aCA9IHNlbGYuZGF5c0NvbnRhaW5lci5jaGlsZHJlblttXTtcbiAgICAgICAgICAgIHZhciBzdGFydEluZGV4ID0gZ2l2ZW5Nb250aCAtIHNlbGYuY3VycmVudE1vbnRoID09PSBtXG4gICAgICAgICAgICAgICAgPyBjdXJyZW50LiRpICsgZGVsdGFcbiAgICAgICAgICAgICAgICA6IGRlbHRhIDwgMFxuICAgICAgICAgICAgICAgICAgICA/IG1vbnRoLmNoaWxkcmVuLmxlbmd0aCAtIDFcbiAgICAgICAgICAgICAgICAgICAgOiAwO1xuICAgICAgICAgICAgdmFyIG51bU1vbnRoRGF5cyA9IG1vbnRoLmNoaWxkcmVuLmxlbmd0aDtcbiAgICAgICAgICAgIGZvciAodmFyIGkgPSBzdGFydEluZGV4OyBpID49IDAgJiYgaSA8IG51bU1vbnRoRGF5cyAmJiBpICE9IChkZWx0YSA+IDAgPyBudW1Nb250aERheXMgOiAtMSk7IGkgKz0gbG9vcERlbHRhKSB7XG4gICAgICAgICAgICAgICAgdmFyIGMgPSBtb250aC5jaGlsZHJlbltpXTtcbiAgICAgICAgICAgICAgICBpZiAoYy5jbGFzc05hbWUuaW5kZXhPZihcImhpZGRlblwiKSA9PT0gLTEgJiZcbiAgICAgICAgICAgICAgICAgICAgaXNFbmFibGVkKGMuZGF0ZU9iaikgJiZcbiAgICAgICAgICAgICAgICAgICAgTWF0aC5hYnMoY3VycmVudC4kaSAtIGkpID49IE1hdGguYWJzKGRlbHRhKSlcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZvY3VzT25EYXlFbGVtKGMpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHNlbGYuY2hhbmdlTW9udGgobG9vcERlbHRhKTtcbiAgICAgICAgZm9jdXNPbkRheShnZXRGaXJzdEF2YWlsYWJsZURheShsb29wRGVsdGEpLCAwKTtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgZnVuY3Rpb24gZm9jdXNPbkRheShjdXJyZW50LCBvZmZzZXQpIHtcbiAgICAgICAgdmFyIGFjdGl2ZUVsZW1lbnQgPSBnZXRDbG9zZXN0QWN0aXZlRWxlbWVudCgpO1xuICAgICAgICB2YXIgZGF5Rm9jdXNlZCA9IGlzSW5WaWV3KGFjdGl2ZUVsZW1lbnQgfHwgZG9jdW1lbnQuYm9keSk7XG4gICAgICAgIHZhciBzdGFydEVsZW0gPSBjdXJyZW50ICE9PSB1bmRlZmluZWRcbiAgICAgICAgICAgID8gY3VycmVudFxuICAgICAgICAgICAgOiBkYXlGb2N1c2VkXG4gICAgICAgICAgICAgICAgPyBhY3RpdmVFbGVtZW50XG4gICAgICAgICAgICAgICAgOiBzZWxmLnNlbGVjdGVkRGF0ZUVsZW0gIT09IHVuZGVmaW5lZCAmJiBpc0luVmlldyhzZWxmLnNlbGVjdGVkRGF0ZUVsZW0pXG4gICAgICAgICAgICAgICAgICAgID8gc2VsZi5zZWxlY3RlZERhdGVFbGVtXG4gICAgICAgICAgICAgICAgICAgIDogc2VsZi50b2RheURhdGVFbGVtICE9PSB1bmRlZmluZWQgJiYgaXNJblZpZXcoc2VsZi50b2RheURhdGVFbGVtKVxuICAgICAgICAgICAgICAgICAgICAgICAgPyBzZWxmLnRvZGF5RGF0ZUVsZW1cbiAgICAgICAgICAgICAgICAgICAgICAgIDogZ2V0Rmlyc3RBdmFpbGFibGVEYXkob2Zmc2V0ID4gMCA/IDEgOiAtMSk7XG4gICAgICAgIGlmIChzdGFydEVsZW0gPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgc2VsZi5faW5wdXQuZm9jdXMoKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICghZGF5Rm9jdXNlZCkge1xuICAgICAgICAgICAgZm9jdXNPbkRheUVsZW0oc3RhcnRFbGVtKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGdldE5leHRBdmFpbGFibGVEYXkoc3RhcnRFbGVtLCBvZmZzZXQpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGZ1bmN0aW9uIGJ1aWxkTW9udGhEYXlzKHllYXIsIG1vbnRoKSB7XG4gICAgICAgIHZhciBmaXJzdE9mTW9udGggPSAobmV3IERhdGUoeWVhciwgbW9udGgsIDEpLmdldERheSgpIC0gc2VsZi5sMTBuLmZpcnN0RGF5T2ZXZWVrICsgNykgJSA3O1xuICAgICAgICB2YXIgcHJldk1vbnRoRGF5cyA9IHNlbGYudXRpbHMuZ2V0RGF5c0luTW9udGgoKG1vbnRoIC0gMSArIDEyKSAlIDEyLCB5ZWFyKTtcbiAgICAgICAgdmFyIGRheXNJbk1vbnRoID0gc2VsZi51dGlscy5nZXREYXlzSW5Nb250aChtb250aCwgeWVhciksIGRheXMgPSB3aW5kb3cuZG9jdW1lbnQuY3JlYXRlRG9jdW1lbnRGcmFnbWVudCgpLCBpc011bHRpTW9udGggPSBzZWxmLmNvbmZpZy5zaG93TW9udGhzID4gMSwgcHJldk1vbnRoRGF5Q2xhc3MgPSBpc011bHRpTW9udGggPyBcInByZXZNb250aERheSBoaWRkZW5cIiA6IFwicHJldk1vbnRoRGF5XCIsIG5leHRNb250aERheUNsYXNzID0gaXNNdWx0aU1vbnRoID8gXCJuZXh0TW9udGhEYXkgaGlkZGVuXCIgOiBcIm5leHRNb250aERheVwiO1xuICAgICAgICB2YXIgZGF5TnVtYmVyID0gcHJldk1vbnRoRGF5cyArIDEgLSBmaXJzdE9mTW9udGgsIGRheUluZGV4ID0gMDtcbiAgICAgICAgZm9yICg7IGRheU51bWJlciA8PSBwcmV2TW9udGhEYXlzOyBkYXlOdW1iZXIrKywgZGF5SW5kZXgrKykge1xuICAgICAgICAgICAgZGF5cy5hcHBlbmRDaGlsZChjcmVhdGVEYXkoXCJmbGF0cGlja3ItZGF5IFwiICsgcHJldk1vbnRoRGF5Q2xhc3MsIG5ldyBEYXRlKHllYXIsIG1vbnRoIC0gMSwgZGF5TnVtYmVyKSwgZGF5TnVtYmVyLCBkYXlJbmRleCkpO1xuICAgICAgICB9XG4gICAgICAgIGZvciAoZGF5TnVtYmVyID0gMTsgZGF5TnVtYmVyIDw9IGRheXNJbk1vbnRoOyBkYXlOdW1iZXIrKywgZGF5SW5kZXgrKykge1xuICAgICAgICAgICAgZGF5cy5hcHBlbmRDaGlsZChjcmVhdGVEYXkoXCJmbGF0cGlja3ItZGF5XCIsIG5ldyBEYXRlKHllYXIsIG1vbnRoLCBkYXlOdW1iZXIpLCBkYXlOdW1iZXIsIGRheUluZGV4KSk7XG4gICAgICAgIH1cbiAgICAgICAgZm9yICh2YXIgZGF5TnVtID0gZGF5c0luTW9udGggKyAxOyBkYXlOdW0gPD0gNDIgLSBmaXJzdE9mTW9udGggJiZcbiAgICAgICAgICAgIChzZWxmLmNvbmZpZy5zaG93TW9udGhzID09PSAxIHx8IGRheUluZGV4ICUgNyAhPT0gMCk7IGRheU51bSsrLCBkYXlJbmRleCsrKSB7XG4gICAgICAgICAgICBkYXlzLmFwcGVuZENoaWxkKGNyZWF0ZURheShcImZsYXRwaWNrci1kYXkgXCIgKyBuZXh0TW9udGhEYXlDbGFzcywgbmV3IERhdGUoeWVhciwgbW9udGggKyAxLCBkYXlOdW0gJSBkYXlzSW5Nb250aCksIGRheU51bSwgZGF5SW5kZXgpKTtcbiAgICAgICAgfVxuICAgICAgICB2YXIgZGF5Q29udGFpbmVyID0gY3JlYXRlRWxlbWVudChcImRpdlwiLCBcImRheUNvbnRhaW5lclwiKTtcbiAgICAgICAgZGF5Q29udGFpbmVyLmFwcGVuZENoaWxkKGRheXMpO1xuICAgICAgICByZXR1cm4gZGF5Q29udGFpbmVyO1xuICAgIH1cbiAgICBmdW5jdGlvbiBidWlsZERheXMoKSB7XG4gICAgICAgIGlmIChzZWxmLmRheXNDb250YWluZXIgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGNsZWFyTm9kZShzZWxmLmRheXNDb250YWluZXIpO1xuICAgICAgICBpZiAoc2VsZi53ZWVrTnVtYmVycylcbiAgICAgICAgICAgIGNsZWFyTm9kZShzZWxmLndlZWtOdW1iZXJzKTtcbiAgICAgICAgdmFyIGZyYWcgPSBkb2N1bWVudC5jcmVhdGVEb2N1bWVudEZyYWdtZW50KCk7XG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgc2VsZi5jb25maWcuc2hvd01vbnRoczsgaSsrKSB7XG4gICAgICAgICAgICB2YXIgZCA9IG5ldyBEYXRlKHNlbGYuY3VycmVudFllYXIsIHNlbGYuY3VycmVudE1vbnRoLCAxKTtcbiAgICAgICAgICAgIGQuc2V0TW9udGgoc2VsZi5jdXJyZW50TW9udGggKyBpKTtcbiAgICAgICAgICAgIGZyYWcuYXBwZW5kQ2hpbGQoYnVpbGRNb250aERheXMoZC5nZXRGdWxsWWVhcigpLCBkLmdldE1vbnRoKCkpKTtcbiAgICAgICAgfVxuICAgICAgICBzZWxmLmRheXNDb250YWluZXIuYXBwZW5kQ2hpbGQoZnJhZyk7XG4gICAgICAgIHNlbGYuZGF5cyA9IHNlbGYuZGF5c0NvbnRhaW5lci5maXJzdENoaWxkO1xuICAgICAgICBpZiAoc2VsZi5jb25maWcubW9kZSA9PT0gXCJyYW5nZVwiICYmIHNlbGYuc2VsZWN0ZWREYXRlcy5sZW5ndGggPT09IDEpIHtcbiAgICAgICAgICAgIG9uTW91c2VPdmVyKCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZnVuY3Rpb24gYnVpbGRNb250aFN3aXRjaCgpIHtcbiAgICAgICAgaWYgKHNlbGYuY29uZmlnLnNob3dNb250aHMgPiAxIHx8XG4gICAgICAgICAgICBzZWxmLmNvbmZpZy5tb250aFNlbGVjdG9yVHlwZSAhPT0gXCJkcm9wZG93blwiKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB2YXIgc2hvdWxkQnVpbGRNb250aCA9IGZ1bmN0aW9uIChtb250aCkge1xuICAgICAgICAgICAgaWYgKHNlbGYuY29uZmlnLm1pbkRhdGUgIT09IHVuZGVmaW5lZCAmJlxuICAgICAgICAgICAgICAgIHNlbGYuY3VycmVudFllYXIgPT09IHNlbGYuY29uZmlnLm1pbkRhdGUuZ2V0RnVsbFllYXIoKSAmJlxuICAgICAgICAgICAgICAgIG1vbnRoIDwgc2VsZi5jb25maWcubWluRGF0ZS5nZXRNb250aCgpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuICEoc2VsZi5jb25maWcubWF4RGF0ZSAhPT0gdW5kZWZpbmVkICYmXG4gICAgICAgICAgICAgICAgc2VsZi5jdXJyZW50WWVhciA9PT0gc2VsZi5jb25maWcubWF4RGF0ZS5nZXRGdWxsWWVhcigpICYmXG4gICAgICAgICAgICAgICAgbW9udGggPiBzZWxmLmNvbmZpZy5tYXhEYXRlLmdldE1vbnRoKCkpO1xuICAgICAgICB9O1xuICAgICAgICBzZWxmLm1vbnRoc0Ryb3Bkb3duQ29udGFpbmVyLnRhYkluZGV4ID0gLTE7XG4gICAgICAgIHNlbGYubW9udGhzRHJvcGRvd25Db250YWluZXIuaW5uZXJIVE1MID0gXCJcIjtcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCAxMjsgaSsrKSB7XG4gICAgICAgICAgICBpZiAoIXNob3VsZEJ1aWxkTW9udGgoaSkpXG4gICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICB2YXIgbW9udGggPSBjcmVhdGVFbGVtZW50KFwib3B0aW9uXCIsIFwiZmxhdHBpY2tyLW1vbnRoRHJvcGRvd24tbW9udGhcIik7XG4gICAgICAgICAgICBtb250aC52YWx1ZSA9IG5ldyBEYXRlKHNlbGYuY3VycmVudFllYXIsIGkpLmdldE1vbnRoKCkudG9TdHJpbmcoKTtcbiAgICAgICAgICAgIG1vbnRoLnRleHRDb250ZW50ID0gbW9udGhUb1N0cihpLCBzZWxmLmNvbmZpZy5zaG9ydGhhbmRDdXJyZW50TW9udGgsIHNlbGYubDEwbik7XG4gICAgICAgICAgICBtb250aC50YWJJbmRleCA9IC0xO1xuICAgICAgICAgICAgaWYgKHNlbGYuY3VycmVudE1vbnRoID09PSBpKSB7XG4gICAgICAgICAgICAgICAgbW9udGguc2VsZWN0ZWQgPSB0cnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgc2VsZi5tb250aHNEcm9wZG93bkNvbnRhaW5lci5hcHBlbmRDaGlsZChtb250aCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZnVuY3Rpb24gYnVpbGRNb250aCgpIHtcbiAgICAgICAgdmFyIGNvbnRhaW5lciA9IGNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgXCJmbGF0cGlja3ItbW9udGhcIik7XG4gICAgICAgIHZhciBtb250aE5hdkZyYWdtZW50ID0gd2luZG93LmRvY3VtZW50LmNyZWF0ZURvY3VtZW50RnJhZ21lbnQoKTtcbiAgICAgICAgdmFyIG1vbnRoRWxlbWVudDtcbiAgICAgICAgaWYgKHNlbGYuY29uZmlnLnNob3dNb250aHMgPiAxIHx8XG4gICAgICAgICAgICBzZWxmLmNvbmZpZy5tb250aFNlbGVjdG9yVHlwZSA9PT0gXCJzdGF0aWNcIikge1xuICAgICAgICAgICAgbW9udGhFbGVtZW50ID0gY3JlYXRlRWxlbWVudChcInNwYW5cIiwgXCJjdXItbW9udGhcIik7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBzZWxmLm1vbnRoc0Ryb3Bkb3duQ29udGFpbmVyID0gY3JlYXRlRWxlbWVudChcInNlbGVjdFwiLCBcImZsYXRwaWNrci1tb250aERyb3Bkb3duLW1vbnRoc1wiKTtcbiAgICAgICAgICAgIHNlbGYubW9udGhzRHJvcGRvd25Db250YWluZXIuc2V0QXR0cmlidXRlKFwiYXJpYS1sYWJlbFwiLCBzZWxmLmwxMG4ubW9udGhBcmlhTGFiZWwpO1xuICAgICAgICAgICAgYmluZChzZWxmLm1vbnRoc0Ryb3Bkb3duQ29udGFpbmVyLCBcImNoYW5nZVwiLCBmdW5jdGlvbiAoZSkge1xuICAgICAgICAgICAgICAgIHZhciB0YXJnZXQgPSBnZXRFdmVudFRhcmdldChlKTtcbiAgICAgICAgICAgICAgICB2YXIgc2VsZWN0ZWRNb250aCA9IHBhcnNlSW50KHRhcmdldC52YWx1ZSwgMTApO1xuICAgICAgICAgICAgICAgIHNlbGYuY2hhbmdlTW9udGgoc2VsZWN0ZWRNb250aCAtIHNlbGYuY3VycmVudE1vbnRoKTtcbiAgICAgICAgICAgICAgICB0cmlnZ2VyRXZlbnQoXCJvbk1vbnRoQ2hhbmdlXCIpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBidWlsZE1vbnRoU3dpdGNoKCk7XG4gICAgICAgICAgICBtb250aEVsZW1lbnQgPSBzZWxmLm1vbnRoc0Ryb3Bkb3duQ29udGFpbmVyO1xuICAgICAgICB9XG4gICAgICAgIHZhciB5ZWFySW5wdXQgPSBjcmVhdGVOdW1iZXJJbnB1dChcImN1ci15ZWFyXCIsIHsgdGFiaW5kZXg6IFwiLTFcIiB9KTtcbiAgICAgICAgdmFyIHllYXJFbGVtZW50ID0geWVhcklucHV0LmdldEVsZW1lbnRzQnlUYWdOYW1lKFwiaW5wdXRcIilbMF07XG4gICAgICAgIHllYXJFbGVtZW50LnNldEF0dHJpYnV0ZShcImFyaWEtbGFiZWxcIiwgc2VsZi5sMTBuLnllYXJBcmlhTGFiZWwpO1xuICAgICAgICBpZiAoc2VsZi5jb25maWcubWluRGF0ZSkge1xuICAgICAgICAgICAgeWVhckVsZW1lbnQuc2V0QXR0cmlidXRlKFwibWluXCIsIHNlbGYuY29uZmlnLm1pbkRhdGUuZ2V0RnVsbFllYXIoKS50b1N0cmluZygpKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoc2VsZi5jb25maWcubWF4RGF0ZSkge1xuICAgICAgICAgICAgeWVhckVsZW1lbnQuc2V0QXR0cmlidXRlKFwibWF4XCIsIHNlbGYuY29uZmlnLm1heERhdGUuZ2V0RnVsbFllYXIoKS50b1N0cmluZygpKTtcbiAgICAgICAgICAgIHllYXJFbGVtZW50LmRpc2FibGVkID1cbiAgICAgICAgICAgICAgICAhIXNlbGYuY29uZmlnLm1pbkRhdGUgJiZcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5jb25maWcubWluRGF0ZS5nZXRGdWxsWWVhcigpID09PSBzZWxmLmNvbmZpZy5tYXhEYXRlLmdldEZ1bGxZZWFyKCk7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIGN1cnJlbnRNb250aCA9IGNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgXCJmbGF0cGlja3ItY3VycmVudC1tb250aFwiKTtcbiAgICAgICAgY3VycmVudE1vbnRoLmFwcGVuZENoaWxkKG1vbnRoRWxlbWVudCk7XG4gICAgICAgIGN1cnJlbnRNb250aC5hcHBlbmRDaGlsZCh5ZWFySW5wdXQpO1xuICAgICAgICBtb250aE5hdkZyYWdtZW50LmFwcGVuZENoaWxkKGN1cnJlbnRNb250aCk7XG4gICAgICAgIGNvbnRhaW5lci5hcHBlbmRDaGlsZChtb250aE5hdkZyYWdtZW50KTtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGNvbnRhaW5lcjogY29udGFpbmVyLFxuICAgICAgICAgICAgeWVhckVsZW1lbnQ6IHllYXJFbGVtZW50LFxuICAgICAgICAgICAgbW9udGhFbGVtZW50OiBtb250aEVsZW1lbnQsXG4gICAgICAgIH07XG4gICAgfVxuICAgIGZ1bmN0aW9uIGJ1aWxkTW9udGhzKCkge1xuICAgICAgICBjbGVhck5vZGUoc2VsZi5tb250aE5hdik7XG4gICAgICAgIHNlbGYubW9udGhOYXYuYXBwZW5kQ2hpbGQoc2VsZi5wcmV2TW9udGhOYXYpO1xuICAgICAgICBpZiAoc2VsZi5jb25maWcuc2hvd01vbnRocykge1xuICAgICAgICAgICAgc2VsZi55ZWFyRWxlbWVudHMgPSBbXTtcbiAgICAgICAgICAgIHNlbGYubW9udGhFbGVtZW50cyA9IFtdO1xuICAgICAgICB9XG4gICAgICAgIGZvciAodmFyIG0gPSBzZWxmLmNvbmZpZy5zaG93TW9udGhzOyBtLS07KSB7XG4gICAgICAgICAgICB2YXIgbW9udGggPSBidWlsZE1vbnRoKCk7XG4gICAgICAgICAgICBzZWxmLnllYXJFbGVtZW50cy5wdXNoKG1vbnRoLnllYXJFbGVtZW50KTtcbiAgICAgICAgICAgIHNlbGYubW9udGhFbGVtZW50cy5wdXNoKG1vbnRoLm1vbnRoRWxlbWVudCk7XG4gICAgICAgICAgICBzZWxmLm1vbnRoTmF2LmFwcGVuZENoaWxkKG1vbnRoLmNvbnRhaW5lcik7XG4gICAgICAgIH1cbiAgICAgICAgc2VsZi5tb250aE5hdi5hcHBlbmRDaGlsZChzZWxmLm5leHRNb250aE5hdik7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGJ1aWxkTW9udGhOYXYoKSB7XG4gICAgICAgIHNlbGYubW9udGhOYXYgPSBjcmVhdGVFbGVtZW50KFwiZGl2XCIsIFwiZmxhdHBpY2tyLW1vbnRoc1wiKTtcbiAgICAgICAgc2VsZi55ZWFyRWxlbWVudHMgPSBbXTtcbiAgICAgICAgc2VsZi5tb250aEVsZW1lbnRzID0gW107XG4gICAgICAgIHNlbGYucHJldk1vbnRoTmF2ID0gY3JlYXRlRWxlbWVudChcInNwYW5cIiwgXCJmbGF0cGlja3ItcHJldi1tb250aFwiKTtcbiAgICAgICAgc2VsZi5wcmV2TW9udGhOYXYuaW5uZXJIVE1MID0gc2VsZi5jb25maWcucHJldkFycm93O1xuICAgICAgICBzZWxmLm5leHRNb250aE5hdiA9IGNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsIFwiZmxhdHBpY2tyLW5leHQtbW9udGhcIik7XG4gICAgICAgIHNlbGYubmV4dE1vbnRoTmF2LmlubmVySFRNTCA9IHNlbGYuY29uZmlnLm5leHRBcnJvdztcbiAgICAgICAgYnVpbGRNb250aHMoKTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHNlbGYsIFwiX2hpZGVQcmV2TW9udGhBcnJvd1wiLCB7XG4gICAgICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHNlbGYuX19oaWRlUHJldk1vbnRoQXJyb3c7IH0sXG4gICAgICAgICAgICBzZXQ6IGZ1bmN0aW9uIChib29sKSB7XG4gICAgICAgICAgICAgICAgaWYgKHNlbGYuX19oaWRlUHJldk1vbnRoQXJyb3cgIT09IGJvb2wpIHtcbiAgICAgICAgICAgICAgICAgICAgdG9nZ2xlQ2xhc3Moc2VsZi5wcmV2TW9udGhOYXYsIFwiZmxhdHBpY2tyLWRpc2FibGVkXCIsIGJvb2wpO1xuICAgICAgICAgICAgICAgICAgICBzZWxmLl9faGlkZVByZXZNb250aEFycm93ID0gYm9vbDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LFxuICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHNlbGYsIFwiX2hpZGVOZXh0TW9udGhBcnJvd1wiLCB7XG4gICAgICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHNlbGYuX19oaWRlTmV4dE1vbnRoQXJyb3c7IH0sXG4gICAgICAgICAgICBzZXQ6IGZ1bmN0aW9uIChib29sKSB7XG4gICAgICAgICAgICAgICAgaWYgKHNlbGYuX19oaWRlTmV4dE1vbnRoQXJyb3cgIT09IGJvb2wpIHtcbiAgICAgICAgICAgICAgICAgICAgdG9nZ2xlQ2xhc3Moc2VsZi5uZXh0TW9udGhOYXYsIFwiZmxhdHBpY2tyLWRpc2FibGVkXCIsIGJvb2wpO1xuICAgICAgICAgICAgICAgICAgICBzZWxmLl9faGlkZU5leHRNb250aEFycm93ID0gYm9vbDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LFxuICAgICAgICB9KTtcbiAgICAgICAgc2VsZi5jdXJyZW50WWVhckVsZW1lbnQgPSBzZWxmLnllYXJFbGVtZW50c1swXTtcbiAgICAgICAgdXBkYXRlTmF2aWdhdGlvbkN1cnJlbnRNb250aCgpO1xuICAgICAgICByZXR1cm4gc2VsZi5tb250aE5hdjtcbiAgICB9XG4gICAgZnVuY3Rpb24gYnVpbGRUaW1lKCkge1xuICAgICAgICBzZWxmLmNhbGVuZGFyQ29udGFpbmVyLmNsYXNzTGlzdC5hZGQoXCJoYXNUaW1lXCIpO1xuICAgICAgICBpZiAoc2VsZi5jb25maWcubm9DYWxlbmRhcilcbiAgICAgICAgICAgIHNlbGYuY2FsZW5kYXJDb250YWluZXIuY2xhc3NMaXN0LmFkZChcIm5vQ2FsZW5kYXJcIik7XG4gICAgICAgIHZhciBkZWZhdWx0cyA9IGdldERlZmF1bHRIb3VycyhzZWxmLmNvbmZpZyk7XG4gICAgICAgIHNlbGYudGltZUNvbnRhaW5lciA9IGNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgXCJmbGF0cGlja3ItdGltZVwiKTtcbiAgICAgICAgc2VsZi50aW1lQ29udGFpbmVyLnRhYkluZGV4ID0gLTE7XG4gICAgICAgIHZhciBzZXBhcmF0b3IgPSBjcmVhdGVFbGVtZW50KFwic3BhblwiLCBcImZsYXRwaWNrci10aW1lLXNlcGFyYXRvclwiLCBcIjpcIik7XG4gICAgICAgIHZhciBob3VySW5wdXQgPSBjcmVhdGVOdW1iZXJJbnB1dChcImZsYXRwaWNrci1ob3VyXCIsIHtcbiAgICAgICAgICAgIFwiYXJpYS1sYWJlbFwiOiBzZWxmLmwxMG4uaG91ckFyaWFMYWJlbCxcbiAgICAgICAgfSk7XG4gICAgICAgIHNlbGYuaG91ckVsZW1lbnQgPSBob3VySW5wdXQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJpbnB1dFwiKVswXTtcbiAgICAgICAgdmFyIG1pbnV0ZUlucHV0ID0gY3JlYXRlTnVtYmVySW5wdXQoXCJmbGF0cGlja3ItbWludXRlXCIsIHtcbiAgICAgICAgICAgIFwiYXJpYS1sYWJlbFwiOiBzZWxmLmwxMG4ubWludXRlQXJpYUxhYmVsLFxuICAgICAgICB9KTtcbiAgICAgICAgc2VsZi5taW51dGVFbGVtZW50ID0gbWludXRlSW5wdXQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJpbnB1dFwiKVswXTtcbiAgICAgICAgc2VsZi5ob3VyRWxlbWVudC50YWJJbmRleCA9IHNlbGYubWludXRlRWxlbWVudC50YWJJbmRleCA9IC0xO1xuICAgICAgICBzZWxmLmhvdXJFbGVtZW50LnZhbHVlID0gcGFkKHNlbGYubGF0ZXN0U2VsZWN0ZWREYXRlT2JqXG4gICAgICAgICAgICA/IHNlbGYubGF0ZXN0U2VsZWN0ZWREYXRlT2JqLmdldEhvdXJzKClcbiAgICAgICAgICAgIDogc2VsZi5jb25maWcudGltZV8yNGhyXG4gICAgICAgICAgICAgICAgPyBkZWZhdWx0cy5ob3Vyc1xuICAgICAgICAgICAgICAgIDogbWlsaXRhcnkyYW1wbShkZWZhdWx0cy5ob3VycykpO1xuICAgICAgICBzZWxmLm1pbnV0ZUVsZW1lbnQudmFsdWUgPSBwYWQoc2VsZi5sYXRlc3RTZWxlY3RlZERhdGVPYmpcbiAgICAgICAgICAgID8gc2VsZi5sYXRlc3RTZWxlY3RlZERhdGVPYmouZ2V0TWludXRlcygpXG4gICAgICAgICAgICA6IGRlZmF1bHRzLm1pbnV0ZXMpO1xuICAgICAgICBzZWxmLmhvdXJFbGVtZW50LnNldEF0dHJpYnV0ZShcInN0ZXBcIiwgc2VsZi5jb25maWcuaG91ckluY3JlbWVudC50b1N0cmluZygpKTtcbiAgICAgICAgc2VsZi5taW51dGVFbGVtZW50LnNldEF0dHJpYnV0ZShcInN0ZXBcIiwgc2VsZi5jb25maWcubWludXRlSW5jcmVtZW50LnRvU3RyaW5nKCkpO1xuICAgICAgICBzZWxmLmhvdXJFbGVtZW50LnNldEF0dHJpYnV0ZShcIm1pblwiLCBzZWxmLmNvbmZpZy50aW1lXzI0aHIgPyBcIjBcIiA6IFwiMVwiKTtcbiAgICAgICAgc2VsZi5ob3VyRWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJtYXhcIiwgc2VsZi5jb25maWcudGltZV8yNGhyID8gXCIyM1wiIDogXCIxMlwiKTtcbiAgICAgICAgc2VsZi5ob3VyRWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJtYXhsZW5ndGhcIiwgXCIyXCIpO1xuICAgICAgICBzZWxmLm1pbnV0ZUVsZW1lbnQuc2V0QXR0cmlidXRlKFwibWluXCIsIFwiMFwiKTtcbiAgICAgICAgc2VsZi5taW51dGVFbGVtZW50LnNldEF0dHJpYnV0ZShcIm1heFwiLCBcIjU5XCIpO1xuICAgICAgICBzZWxmLm1pbnV0ZUVsZW1lbnQuc2V0QXR0cmlidXRlKFwibWF4bGVuZ3RoXCIsIFwiMlwiKTtcbiAgICAgICAgc2VsZi50aW1lQ29udGFpbmVyLmFwcGVuZENoaWxkKGhvdXJJbnB1dCk7XG4gICAgICAgIHNlbGYudGltZUNvbnRhaW5lci5hcHBlbmRDaGlsZChzZXBhcmF0b3IpO1xuICAgICAgICBzZWxmLnRpbWVDb250YWluZXIuYXBwZW5kQ2hpbGQobWludXRlSW5wdXQpO1xuICAgICAgICBpZiAoc2VsZi5jb25maWcudGltZV8yNGhyKVxuICAgICAgICAgICAgc2VsZi50aW1lQ29udGFpbmVyLmNsYXNzTGlzdC5hZGQoXCJ0aW1lMjRoclwiKTtcbiAgICAgICAgaWYgKHNlbGYuY29uZmlnLmVuYWJsZVNlY29uZHMpIHtcbiAgICAgICAgICAgIHNlbGYudGltZUNvbnRhaW5lci5jbGFzc0xpc3QuYWRkKFwiaGFzU2Vjb25kc1wiKTtcbiAgICAgICAgICAgIHZhciBzZWNvbmRJbnB1dCA9IGNyZWF0ZU51bWJlcklucHV0KFwiZmxhdHBpY2tyLXNlY29uZFwiKTtcbiAgICAgICAgICAgIHNlbGYuc2Vjb25kRWxlbWVudCA9IHNlY29uZElucHV0LmdldEVsZW1lbnRzQnlUYWdOYW1lKFwiaW5wdXRcIilbMF07XG4gICAgICAgICAgICBzZWxmLnNlY29uZEVsZW1lbnQudmFsdWUgPSBwYWQoc2VsZi5sYXRlc3RTZWxlY3RlZERhdGVPYmpcbiAgICAgICAgICAgICAgICA/IHNlbGYubGF0ZXN0U2VsZWN0ZWREYXRlT2JqLmdldFNlY29uZHMoKVxuICAgICAgICAgICAgICAgIDogZGVmYXVsdHMuc2Vjb25kcyk7XG4gICAgICAgICAgICBzZWxmLnNlY29uZEVsZW1lbnQuc2V0QXR0cmlidXRlKFwic3RlcFwiLCBzZWxmLm1pbnV0ZUVsZW1lbnQuZ2V0QXR0cmlidXRlKFwic3RlcFwiKSk7XG4gICAgICAgICAgICBzZWxmLnNlY29uZEVsZW1lbnQuc2V0QXR0cmlidXRlKFwibWluXCIsIFwiMFwiKTtcbiAgICAgICAgICAgIHNlbGYuc2Vjb25kRWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJtYXhcIiwgXCI1OVwiKTtcbiAgICAgICAgICAgIHNlbGYuc2Vjb25kRWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJtYXhsZW5ndGhcIiwgXCIyXCIpO1xuICAgICAgICAgICAgc2VsZi50aW1lQ29udGFpbmVyLmFwcGVuZENoaWxkKGNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsIFwiZmxhdHBpY2tyLXRpbWUtc2VwYXJhdG9yXCIsIFwiOlwiKSk7XG4gICAgICAgICAgICBzZWxmLnRpbWVDb250YWluZXIuYXBwZW5kQ2hpbGQoc2Vjb25kSW5wdXQpO1xuICAgICAgICB9XG4gICAgICAgIGlmICghc2VsZi5jb25maWcudGltZV8yNGhyKSB7XG4gICAgICAgICAgICBzZWxmLmFtUE0gPSBjcmVhdGVFbGVtZW50KFwic3BhblwiLCBcImZsYXRwaWNrci1hbS1wbVwiLCBzZWxmLmwxMG4uYW1QTVtpbnQoKHNlbGYubGF0ZXN0U2VsZWN0ZWREYXRlT2JqXG4gICAgICAgICAgICAgICAgPyBzZWxmLmhvdXJFbGVtZW50LnZhbHVlXG4gICAgICAgICAgICAgICAgOiBzZWxmLmNvbmZpZy5kZWZhdWx0SG91cikgPiAxMSldKTtcbiAgICAgICAgICAgIHNlbGYuYW1QTS50aXRsZSA9IHNlbGYubDEwbi50b2dnbGVUaXRsZTtcbiAgICAgICAgICAgIHNlbGYuYW1QTS50YWJJbmRleCA9IC0xO1xuICAgICAgICAgICAgc2VsZi50aW1lQ29udGFpbmVyLmFwcGVuZENoaWxkKHNlbGYuYW1QTSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHNlbGYudGltZUNvbnRhaW5lcjtcbiAgICB9XG4gICAgZnVuY3Rpb24gYnVpbGRXZWVrZGF5cygpIHtcbiAgICAgICAgaWYgKCFzZWxmLndlZWtkYXlDb250YWluZXIpXG4gICAgICAgICAgICBzZWxmLndlZWtkYXlDb250YWluZXIgPSBjcmVhdGVFbGVtZW50KFwiZGl2XCIsIFwiZmxhdHBpY2tyLXdlZWtkYXlzXCIpO1xuICAgICAgICBlbHNlXG4gICAgICAgICAgICBjbGVhck5vZGUoc2VsZi53ZWVrZGF5Q29udGFpbmVyKTtcbiAgICAgICAgZm9yICh2YXIgaSA9IHNlbGYuY29uZmlnLnNob3dNb250aHM7IGktLTspIHtcbiAgICAgICAgICAgIHZhciBjb250YWluZXIgPSBjcmVhdGVFbGVtZW50KFwiZGl2XCIsIFwiZmxhdHBpY2tyLXdlZWtkYXljb250YWluZXJcIik7XG4gICAgICAgICAgICBzZWxmLndlZWtkYXlDb250YWluZXIuYXBwZW5kQ2hpbGQoY29udGFpbmVyKTtcbiAgICAgICAgfVxuICAgICAgICB1cGRhdGVXZWVrZGF5cygpO1xuICAgICAgICByZXR1cm4gc2VsZi53ZWVrZGF5Q29udGFpbmVyO1xuICAgIH1cbiAgICBmdW5jdGlvbiB1cGRhdGVXZWVrZGF5cygpIHtcbiAgICAgICAgaWYgKCFzZWxmLndlZWtkYXlDb250YWluZXIpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICB2YXIgZmlyc3REYXlPZldlZWsgPSBzZWxmLmwxMG4uZmlyc3REYXlPZldlZWs7XG4gICAgICAgIHZhciB3ZWVrZGF5cyA9IF9fc3ByZWFkQXJyYXlzKHNlbGYubDEwbi53ZWVrZGF5cy5zaG9ydGhhbmQpO1xuICAgICAgICBpZiAoZmlyc3REYXlPZldlZWsgPiAwICYmIGZpcnN0RGF5T2ZXZWVrIDwgd2Vla2RheXMubGVuZ3RoKSB7XG4gICAgICAgICAgICB3ZWVrZGF5cyA9IF9fc3ByZWFkQXJyYXlzKHdlZWtkYXlzLnNwbGljZShmaXJzdERheU9mV2Vlaywgd2Vla2RheXMubGVuZ3RoKSwgd2Vla2RheXMuc3BsaWNlKDAsIGZpcnN0RGF5T2ZXZWVrKSk7XG4gICAgICAgIH1cbiAgICAgICAgZm9yICh2YXIgaSA9IHNlbGYuY29uZmlnLnNob3dNb250aHM7IGktLTspIHtcbiAgICAgICAgICAgIHNlbGYud2Vla2RheUNvbnRhaW5lci5jaGlsZHJlbltpXS5pbm5lckhUTUwgPSBcIlxcbiAgICAgIDxzcGFuIGNsYXNzPSdmbGF0cGlja3Itd2Vla2RheSc+XFxuICAgICAgICBcIiArIHdlZWtkYXlzLmpvaW4oXCI8L3NwYW4+PHNwYW4gY2xhc3M9J2ZsYXRwaWNrci13ZWVrZGF5Jz5cIikgKyBcIlxcbiAgICAgIDwvc3Bhbj5cXG4gICAgICBcIjtcbiAgICAgICAgfVxuICAgIH1cbiAgICBmdW5jdGlvbiBidWlsZFdlZWtzKCkge1xuICAgICAgICBzZWxmLmNhbGVuZGFyQ29udGFpbmVyLmNsYXNzTGlzdC5hZGQoXCJoYXNXZWVrc1wiKTtcbiAgICAgICAgdmFyIHdlZWtXcmFwcGVyID0gY3JlYXRlRWxlbWVudChcImRpdlwiLCBcImZsYXRwaWNrci13ZWVrd3JhcHBlclwiKTtcbiAgICAgICAgd2Vla1dyYXBwZXIuYXBwZW5kQ2hpbGQoY3JlYXRlRWxlbWVudChcInNwYW5cIiwgXCJmbGF0cGlja3Itd2Vla2RheVwiLCBzZWxmLmwxMG4ud2Vla0FiYnJldmlhdGlvbikpO1xuICAgICAgICB2YXIgd2Vla051bWJlcnMgPSBjcmVhdGVFbGVtZW50KFwiZGl2XCIsIFwiZmxhdHBpY2tyLXdlZWtzXCIpO1xuICAgICAgICB3ZWVrV3JhcHBlci5hcHBlbmRDaGlsZCh3ZWVrTnVtYmVycyk7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICB3ZWVrV3JhcHBlcjogd2Vla1dyYXBwZXIsXG4gICAgICAgICAgICB3ZWVrTnVtYmVyczogd2Vla051bWJlcnMsXG4gICAgICAgIH07XG4gICAgfVxuICAgIGZ1bmN0aW9uIGNoYW5nZU1vbnRoKHZhbHVlLCBpc09mZnNldCkge1xuICAgICAgICBpZiAoaXNPZmZzZXQgPT09IHZvaWQgMCkgeyBpc09mZnNldCA9IHRydWU7IH1cbiAgICAgICAgdmFyIGRlbHRhID0gaXNPZmZzZXQgPyB2YWx1ZSA6IHZhbHVlIC0gc2VsZi5jdXJyZW50TW9udGg7XG4gICAgICAgIGlmICgoZGVsdGEgPCAwICYmIHNlbGYuX2hpZGVQcmV2TW9udGhBcnJvdyA9PT0gdHJ1ZSkgfHxcbiAgICAgICAgICAgIChkZWx0YSA+IDAgJiYgc2VsZi5faGlkZU5leHRNb250aEFycm93ID09PSB0cnVlKSlcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgc2VsZi5jdXJyZW50TW9udGggKz0gZGVsdGE7XG4gICAgICAgIGlmIChzZWxmLmN1cnJlbnRNb250aCA8IDAgfHwgc2VsZi5jdXJyZW50TW9udGggPiAxMSkge1xuICAgICAgICAgICAgc2VsZi5jdXJyZW50WWVhciArPSBzZWxmLmN1cnJlbnRNb250aCA+IDExID8gMSA6IC0xO1xuICAgICAgICAgICAgc2VsZi5jdXJyZW50TW9udGggPSAoc2VsZi5jdXJyZW50TW9udGggKyAxMikgJSAxMjtcbiAgICAgICAgICAgIHRyaWdnZXJFdmVudChcIm9uWWVhckNoYW5nZVwiKTtcbiAgICAgICAgICAgIGJ1aWxkTW9udGhTd2l0Y2goKTtcbiAgICAgICAgfVxuICAgICAgICBidWlsZERheXMoKTtcbiAgICAgICAgdHJpZ2dlckV2ZW50KFwib25Nb250aENoYW5nZVwiKTtcbiAgICAgICAgdXBkYXRlTmF2aWdhdGlvbkN1cnJlbnRNb250aCgpO1xuICAgIH1cbiAgICBmdW5jdGlvbiBjbGVhcih0cmlnZ2VyQ2hhbmdlRXZlbnQsIHRvSW5pdGlhbCkge1xuICAgICAgICBpZiAodHJpZ2dlckNoYW5nZUV2ZW50ID09PSB2b2lkIDApIHsgdHJpZ2dlckNoYW5nZUV2ZW50ID0gdHJ1ZTsgfVxuICAgICAgICBpZiAodG9Jbml0aWFsID09PSB2b2lkIDApIHsgdG9Jbml0aWFsID0gdHJ1ZTsgfVxuICAgICAgICBzZWxmLmlucHV0LnZhbHVlID0gXCJcIjtcbiAgICAgICAgaWYgKHNlbGYuYWx0SW5wdXQgIT09IHVuZGVmaW5lZClcbiAgICAgICAgICAgIHNlbGYuYWx0SW5wdXQudmFsdWUgPSBcIlwiO1xuICAgICAgICBpZiAoc2VsZi5tb2JpbGVJbnB1dCAhPT0gdW5kZWZpbmVkKVxuICAgICAgICAgICAgc2VsZi5tb2JpbGVJbnB1dC52YWx1ZSA9IFwiXCI7XG4gICAgICAgIHNlbGYuc2VsZWN0ZWREYXRlcyA9IFtdO1xuICAgICAgICBzZWxmLmxhdGVzdFNlbGVjdGVkRGF0ZU9iaiA9IHVuZGVmaW5lZDtcbiAgICAgICAgaWYgKHRvSW5pdGlhbCA9PT0gdHJ1ZSkge1xuICAgICAgICAgICAgc2VsZi5jdXJyZW50WWVhciA9IHNlbGYuX2luaXRpYWxEYXRlLmdldEZ1bGxZZWFyKCk7XG4gICAgICAgICAgICBzZWxmLmN1cnJlbnRNb250aCA9IHNlbGYuX2luaXRpYWxEYXRlLmdldE1vbnRoKCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHNlbGYuY29uZmlnLmVuYWJsZVRpbWUgPT09IHRydWUpIHtcbiAgICAgICAgICAgIHZhciBfYSA9IGdldERlZmF1bHRIb3VycyhzZWxmLmNvbmZpZyksIGhvdXJzID0gX2EuaG91cnMsIG1pbnV0ZXMgPSBfYS5taW51dGVzLCBzZWNvbmRzID0gX2Euc2Vjb25kcztcbiAgICAgICAgICAgIHNldEhvdXJzKGhvdXJzLCBtaW51dGVzLCBzZWNvbmRzKTtcbiAgICAgICAgfVxuICAgICAgICBzZWxmLnJlZHJhdygpO1xuICAgICAgICBpZiAodHJpZ2dlckNoYW5nZUV2ZW50KVxuICAgICAgICAgICAgdHJpZ2dlckV2ZW50KFwib25DaGFuZ2VcIik7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGNsb3NlKCkge1xuICAgICAgICBzZWxmLmlzT3BlbiA9IGZhbHNlO1xuICAgICAgICBpZiAoIXNlbGYuaXNNb2JpbGUpIHtcbiAgICAgICAgICAgIGlmIChzZWxmLmNhbGVuZGFyQ29udGFpbmVyICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICBzZWxmLmNhbGVuZGFyQ29udGFpbmVyLmNsYXNzTGlzdC5yZW1vdmUoXCJvcGVuXCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHNlbGYuX2lucHV0ICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICBzZWxmLl9pbnB1dC5jbGFzc0xpc3QucmVtb3ZlKFwiYWN0aXZlXCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHRyaWdnZXJFdmVudChcIm9uQ2xvc2VcIik7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGRlc3Ryb3koKSB7XG4gICAgICAgIGlmIChzZWxmLmNvbmZpZyAhPT0gdW5kZWZpbmVkKVxuICAgICAgICAgICAgdHJpZ2dlckV2ZW50KFwib25EZXN0cm95XCIpO1xuICAgICAgICBmb3IgKHZhciBpID0gc2VsZi5faGFuZGxlcnMubGVuZ3RoOyBpLS07KSB7XG4gICAgICAgICAgICBzZWxmLl9oYW5kbGVyc1tpXS5yZW1vdmUoKTtcbiAgICAgICAgfVxuICAgICAgICBzZWxmLl9oYW5kbGVycyA9IFtdO1xuICAgICAgICBpZiAoc2VsZi5tb2JpbGVJbnB1dCkge1xuICAgICAgICAgICAgaWYgKHNlbGYubW9iaWxlSW5wdXQucGFyZW50Tm9kZSlcbiAgICAgICAgICAgICAgICBzZWxmLm1vYmlsZUlucHV0LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc2VsZi5tb2JpbGVJbnB1dCk7XG4gICAgICAgICAgICBzZWxmLm1vYmlsZUlucHV0ID0gdW5kZWZpbmVkO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHNlbGYuY2FsZW5kYXJDb250YWluZXIgJiYgc2VsZi5jYWxlbmRhckNvbnRhaW5lci5wYXJlbnROb2RlKSB7XG4gICAgICAgICAgICBpZiAoc2VsZi5jb25maWcuc3RhdGljICYmIHNlbGYuY2FsZW5kYXJDb250YWluZXIucGFyZW50Tm9kZSkge1xuICAgICAgICAgICAgICAgIHZhciB3cmFwcGVyID0gc2VsZi5jYWxlbmRhckNvbnRhaW5lci5wYXJlbnROb2RlO1xuICAgICAgICAgICAgICAgIHdyYXBwZXIubGFzdENoaWxkICYmIHdyYXBwZXIucmVtb3ZlQ2hpbGQod3JhcHBlci5sYXN0Q2hpbGQpO1xuICAgICAgICAgICAgICAgIGlmICh3cmFwcGVyLnBhcmVudE5vZGUpIHtcbiAgICAgICAgICAgICAgICAgICAgd2hpbGUgKHdyYXBwZXIuZmlyc3RDaGlsZClcbiAgICAgICAgICAgICAgICAgICAgICAgIHdyYXBwZXIucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUod3JhcHBlci5maXJzdENoaWxkLCB3cmFwcGVyKTtcbiAgICAgICAgICAgICAgICAgICAgd3JhcHBlci5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHdyYXBwZXIpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2VcbiAgICAgICAgICAgICAgICBzZWxmLmNhbGVuZGFyQ29udGFpbmVyLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc2VsZi5jYWxlbmRhckNvbnRhaW5lcik7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHNlbGYuYWx0SW5wdXQpIHtcbiAgICAgICAgICAgIHNlbGYuaW5wdXQudHlwZSA9IFwidGV4dFwiO1xuICAgICAgICAgICAgaWYgKHNlbGYuYWx0SW5wdXQucGFyZW50Tm9kZSlcbiAgICAgICAgICAgICAgICBzZWxmLmFsdElucHV0LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc2VsZi5hbHRJbnB1dCk7XG4gICAgICAgICAgICBkZWxldGUgc2VsZi5hbHRJbnB1dDtcbiAgICAgICAgfVxuICAgICAgICBpZiAoc2VsZi5pbnB1dCkge1xuICAgICAgICAgICAgc2VsZi5pbnB1dC50eXBlID0gc2VsZi5pbnB1dC5fdHlwZTtcbiAgICAgICAgICAgIHNlbGYuaW5wdXQuY2xhc3NMaXN0LnJlbW92ZShcImZsYXRwaWNrci1pbnB1dFwiKTtcbiAgICAgICAgICAgIHNlbGYuaW5wdXQucmVtb3ZlQXR0cmlidXRlKFwicmVhZG9ubHlcIik7XG4gICAgICAgIH1cbiAgICAgICAgW1xuICAgICAgICAgICAgXCJfc2hvd1RpbWVJbnB1dFwiLFxuICAgICAgICAgICAgXCJsYXRlc3RTZWxlY3RlZERhdGVPYmpcIixcbiAgICAgICAgICAgIFwiX2hpZGVOZXh0TW9udGhBcnJvd1wiLFxuICAgICAgICAgICAgXCJfaGlkZVByZXZNb250aEFycm93XCIsXG4gICAgICAgICAgICBcIl9faGlkZU5leHRNb250aEFycm93XCIsXG4gICAgICAgICAgICBcIl9faGlkZVByZXZNb250aEFycm93XCIsXG4gICAgICAgICAgICBcImlzTW9iaWxlXCIsXG4gICAgICAgICAgICBcImlzT3BlblwiLFxuICAgICAgICAgICAgXCJzZWxlY3RlZERhdGVFbGVtXCIsXG4gICAgICAgICAgICBcIm1pbkRhdGVIYXNUaW1lXCIsXG4gICAgICAgICAgICBcIm1heERhdGVIYXNUaW1lXCIsXG4gICAgICAgICAgICBcImRheXNcIixcbiAgICAgICAgICAgIFwiZGF5c0NvbnRhaW5lclwiLFxuICAgICAgICAgICAgXCJfaW5wdXRcIixcbiAgICAgICAgICAgIFwiX3Bvc2l0aW9uRWxlbWVudFwiLFxuICAgICAgICAgICAgXCJpbm5lckNvbnRhaW5lclwiLFxuICAgICAgICAgICAgXCJyQ29udGFpbmVyXCIsXG4gICAgICAgICAgICBcIm1vbnRoTmF2XCIsXG4gICAgICAgICAgICBcInRvZGF5RGF0ZUVsZW1cIixcbiAgICAgICAgICAgIFwiY2FsZW5kYXJDb250YWluZXJcIixcbiAgICAgICAgICAgIFwid2Vla2RheUNvbnRhaW5lclwiLFxuICAgICAgICAgICAgXCJwcmV2TW9udGhOYXZcIixcbiAgICAgICAgICAgIFwibmV4dE1vbnRoTmF2XCIsXG4gICAgICAgICAgICBcIm1vbnRoc0Ryb3Bkb3duQ29udGFpbmVyXCIsXG4gICAgICAgICAgICBcImN1cnJlbnRNb250aEVsZW1lbnRcIixcbiAgICAgICAgICAgIFwiY3VycmVudFllYXJFbGVtZW50XCIsXG4gICAgICAgICAgICBcIm5hdmlnYXRpb25DdXJyZW50TW9udGhcIixcbiAgICAgICAgICAgIFwic2VsZWN0ZWREYXRlRWxlbVwiLFxuICAgICAgICAgICAgXCJjb25maWdcIixcbiAgICAgICAgXS5mb3JFYWNoKGZ1bmN0aW9uIChrKSB7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIGRlbGV0ZSBzZWxmW2tdO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY2F0Y2ggKF8pIHsgfVxuICAgICAgICB9KTtcbiAgICB9XG4gICAgZnVuY3Rpb24gaXNDYWxlbmRhckVsZW0oZWxlbSkge1xuICAgICAgICByZXR1cm4gc2VsZi5jYWxlbmRhckNvbnRhaW5lci5jb250YWlucyhlbGVtKTtcbiAgICB9XG4gICAgZnVuY3Rpb24gZG9jdW1lbnRDbGljayhlKSB7XG4gICAgICAgIGlmIChzZWxmLmlzT3BlbiAmJiAhc2VsZi5jb25maWcuaW5saW5lKSB7XG4gICAgICAgICAgICB2YXIgZXZlbnRUYXJnZXRfMSA9IGdldEV2ZW50VGFyZ2V0KGUpO1xuICAgICAgICAgICAgdmFyIGlzQ2FsZW5kYXJFbGVtZW50ID0gaXNDYWxlbmRhckVsZW0oZXZlbnRUYXJnZXRfMSk7XG4gICAgICAgICAgICB2YXIgaXNJbnB1dCA9IGV2ZW50VGFyZ2V0XzEgPT09IHNlbGYuaW5wdXQgfHxcbiAgICAgICAgICAgICAgICBldmVudFRhcmdldF8xID09PSBzZWxmLmFsdElucHV0IHx8XG4gICAgICAgICAgICAgICAgc2VsZi5lbGVtZW50LmNvbnRhaW5zKGV2ZW50VGFyZ2V0XzEpIHx8XG4gICAgICAgICAgICAgICAgKGUucGF0aCAmJlxuICAgICAgICAgICAgICAgICAgICBlLnBhdGguaW5kZXhPZiAmJlxuICAgICAgICAgICAgICAgICAgICAofmUucGF0aC5pbmRleE9mKHNlbGYuaW5wdXQpIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICB+ZS5wYXRoLmluZGV4T2Yoc2VsZi5hbHRJbnB1dCkpKTtcbiAgICAgICAgICAgIHZhciBsb3N0Rm9jdXMgPSAhaXNJbnB1dCAmJlxuICAgICAgICAgICAgICAgICFpc0NhbGVuZGFyRWxlbWVudCAmJlxuICAgICAgICAgICAgICAgICFpc0NhbGVuZGFyRWxlbShlLnJlbGF0ZWRUYXJnZXQpO1xuICAgICAgICAgICAgdmFyIGlzSWdub3JlZCA9ICFzZWxmLmNvbmZpZy5pZ25vcmVkRm9jdXNFbGVtZW50cy5zb21lKGZ1bmN0aW9uIChlbGVtKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGVsZW0uY29udGFpbnMoZXZlbnRUYXJnZXRfMSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIGlmIChsb3N0Rm9jdXMgJiYgaXNJZ25vcmVkKSB7XG4gICAgICAgICAgICAgICAgaWYgKHNlbGYuY29uZmlnLmFsbG93SW5wdXQpIHtcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5zZXREYXRlKHNlbGYuX2lucHV0LnZhbHVlLCBmYWxzZSwgc2VsZi5jb25maWcuYWx0SW5wdXRcbiAgICAgICAgICAgICAgICAgICAgICAgID8gc2VsZi5jb25maWcuYWx0Rm9ybWF0XG4gICAgICAgICAgICAgICAgICAgICAgICA6IHNlbGYuY29uZmlnLmRhdGVGb3JtYXQpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoc2VsZi50aW1lQ29udGFpbmVyICE9PSB1bmRlZmluZWQgJiZcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5taW51dGVFbGVtZW50ICE9PSB1bmRlZmluZWQgJiZcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5ob3VyRWxlbWVudCAhPT0gdW5kZWZpbmVkICYmXG4gICAgICAgICAgICAgICAgICAgIHNlbGYuaW5wdXQudmFsdWUgIT09IFwiXCIgJiZcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5pbnB1dC52YWx1ZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgICAgIHVwZGF0ZVRpbWUoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgc2VsZi5jbG9zZSgpO1xuICAgICAgICAgICAgICAgIGlmIChzZWxmLmNvbmZpZyAmJlxuICAgICAgICAgICAgICAgICAgICBzZWxmLmNvbmZpZy5tb2RlID09PSBcInJhbmdlXCIgJiZcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5zZWxlY3RlZERhdGVzLmxlbmd0aCA9PT0gMSlcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5jbGVhcihmYWxzZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgZnVuY3Rpb24gY2hhbmdlWWVhcihuZXdZZWFyKSB7XG4gICAgICAgIGlmICghbmV3WWVhciB8fFxuICAgICAgICAgICAgKHNlbGYuY29uZmlnLm1pbkRhdGUgJiYgbmV3WWVhciA8IHNlbGYuY29uZmlnLm1pbkRhdGUuZ2V0RnVsbFllYXIoKSkgfHxcbiAgICAgICAgICAgIChzZWxmLmNvbmZpZy5tYXhEYXRlICYmIG5ld1llYXIgPiBzZWxmLmNvbmZpZy5tYXhEYXRlLmdldEZ1bGxZZWFyKCkpKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB2YXIgbmV3WWVhck51bSA9IG5ld1llYXIsIGlzTmV3WWVhciA9IHNlbGYuY3VycmVudFllYXIgIT09IG5ld1llYXJOdW07XG4gICAgICAgIHNlbGYuY3VycmVudFllYXIgPSBuZXdZZWFyTnVtIHx8IHNlbGYuY3VycmVudFllYXI7XG4gICAgICAgIGlmIChzZWxmLmNvbmZpZy5tYXhEYXRlICYmXG4gICAgICAgICAgICBzZWxmLmN1cnJlbnRZZWFyID09PSBzZWxmLmNvbmZpZy5tYXhEYXRlLmdldEZ1bGxZZWFyKCkpIHtcbiAgICAgICAgICAgIHNlbGYuY3VycmVudE1vbnRoID0gTWF0aC5taW4oc2VsZi5jb25maWcubWF4RGF0ZS5nZXRNb250aCgpLCBzZWxmLmN1cnJlbnRNb250aCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoc2VsZi5jb25maWcubWluRGF0ZSAmJlxuICAgICAgICAgICAgc2VsZi5jdXJyZW50WWVhciA9PT0gc2VsZi5jb25maWcubWluRGF0ZS5nZXRGdWxsWWVhcigpKSB7XG4gICAgICAgICAgICBzZWxmLmN1cnJlbnRNb250aCA9IE1hdGgubWF4KHNlbGYuY29uZmlnLm1pbkRhdGUuZ2V0TW9udGgoKSwgc2VsZi5jdXJyZW50TW9udGgpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChpc05ld1llYXIpIHtcbiAgICAgICAgICAgIHNlbGYucmVkcmF3KCk7XG4gICAgICAgICAgICB0cmlnZ2VyRXZlbnQoXCJvblllYXJDaGFuZ2VcIik7XG4gICAgICAgICAgICBidWlsZE1vbnRoU3dpdGNoKCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZnVuY3Rpb24gaXNFbmFibGVkKGRhdGUsIHRpbWVsZXNzKSB7XG4gICAgICAgIHZhciBfYTtcbiAgICAgICAgaWYgKHRpbWVsZXNzID09PSB2b2lkIDApIHsgdGltZWxlc3MgPSB0cnVlOyB9XG4gICAgICAgIHZhciBkYXRlVG9DaGVjayA9IHNlbGYucGFyc2VEYXRlKGRhdGUsIHVuZGVmaW5lZCwgdGltZWxlc3MpO1xuICAgICAgICBpZiAoKHNlbGYuY29uZmlnLm1pbkRhdGUgJiZcbiAgICAgICAgICAgIGRhdGVUb0NoZWNrICYmXG4gICAgICAgICAgICBjb21wYXJlRGF0ZXMoZGF0ZVRvQ2hlY2ssIHNlbGYuY29uZmlnLm1pbkRhdGUsIHRpbWVsZXNzICE9PSB1bmRlZmluZWQgPyB0aW1lbGVzcyA6ICFzZWxmLm1pbkRhdGVIYXNUaW1lKSA8IDApIHx8XG4gICAgICAgICAgICAoc2VsZi5jb25maWcubWF4RGF0ZSAmJlxuICAgICAgICAgICAgICAgIGRhdGVUb0NoZWNrICYmXG4gICAgICAgICAgICAgICAgY29tcGFyZURhdGVzKGRhdGVUb0NoZWNrLCBzZWxmLmNvbmZpZy5tYXhEYXRlLCB0aW1lbGVzcyAhPT0gdW5kZWZpbmVkID8gdGltZWxlc3MgOiAhc2VsZi5tYXhEYXRlSGFzVGltZSkgPiAwKSlcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgaWYgKCFzZWxmLmNvbmZpZy5lbmFibGUgJiYgc2VsZi5jb25maWcuZGlzYWJsZS5sZW5ndGggPT09IDApXG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgaWYgKGRhdGVUb0NoZWNrID09PSB1bmRlZmluZWQpXG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIHZhciBib29sID0gISFzZWxmLmNvbmZpZy5lbmFibGUsIGFycmF5ID0gKF9hID0gc2VsZi5jb25maWcuZW5hYmxlKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBzZWxmLmNvbmZpZy5kaXNhYmxlO1xuICAgICAgICBmb3IgKHZhciBpID0gMCwgZCA9IHZvaWQgMDsgaSA8IGFycmF5Lmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBkID0gYXJyYXlbaV07XG4gICAgICAgICAgICBpZiAodHlwZW9mIGQgPT09IFwiZnVuY3Rpb25cIiAmJlxuICAgICAgICAgICAgICAgIGQoZGF0ZVRvQ2hlY2spKVxuICAgICAgICAgICAgICAgIHJldHVybiBib29sO1xuICAgICAgICAgICAgZWxzZSBpZiAoZCBpbnN0YW5jZW9mIERhdGUgJiZcbiAgICAgICAgICAgICAgICBkYXRlVG9DaGVjayAhPT0gdW5kZWZpbmVkICYmXG4gICAgICAgICAgICAgICAgZC5nZXRUaW1lKCkgPT09IGRhdGVUb0NoZWNrLmdldFRpbWUoKSlcbiAgICAgICAgICAgICAgICByZXR1cm4gYm9vbDtcbiAgICAgICAgICAgIGVsc2UgaWYgKHR5cGVvZiBkID09PSBcInN0cmluZ1wiKSB7XG4gICAgICAgICAgICAgICAgdmFyIHBhcnNlZCA9IHNlbGYucGFyc2VEYXRlKGQsIHVuZGVmaW5lZCwgdHJ1ZSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHBhcnNlZCAmJiBwYXJzZWQuZ2V0VGltZSgpID09PSBkYXRlVG9DaGVjay5nZXRUaW1lKClcbiAgICAgICAgICAgICAgICAgICAgPyBib29sXG4gICAgICAgICAgICAgICAgICAgIDogIWJvb2w7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmICh0eXBlb2YgZCA9PT0gXCJvYmplY3RcIiAmJlxuICAgICAgICAgICAgICAgIGRhdGVUb0NoZWNrICE9PSB1bmRlZmluZWQgJiZcbiAgICAgICAgICAgICAgICBkLmZyb20gJiZcbiAgICAgICAgICAgICAgICBkLnRvICYmXG4gICAgICAgICAgICAgICAgZGF0ZVRvQ2hlY2suZ2V0VGltZSgpID49IGQuZnJvbS5nZXRUaW1lKCkgJiZcbiAgICAgICAgICAgICAgICBkYXRlVG9DaGVjay5nZXRUaW1lKCkgPD0gZC50by5nZXRUaW1lKCkpXG4gICAgICAgICAgICAgICAgcmV0dXJuIGJvb2w7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuICFib29sO1xuICAgIH1cbiAgICBmdW5jdGlvbiBpc0luVmlldyhlbGVtKSB7XG4gICAgICAgIGlmIChzZWxmLmRheXNDb250YWluZXIgIT09IHVuZGVmaW5lZClcbiAgICAgICAgICAgIHJldHVybiAoZWxlbS5jbGFzc05hbWUuaW5kZXhPZihcImhpZGRlblwiKSA9PT0gLTEgJiZcbiAgICAgICAgICAgICAgICBlbGVtLmNsYXNzTmFtZS5pbmRleE9mKFwiZmxhdHBpY2tyLWRpc2FibGVkXCIpID09PSAtMSAmJlxuICAgICAgICAgICAgICAgIHNlbGYuZGF5c0NvbnRhaW5lci5jb250YWlucyhlbGVtKSk7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgZnVuY3Rpb24gb25CbHVyKGUpIHtcbiAgICAgICAgdmFyIGlzSW5wdXQgPSBlLnRhcmdldCA9PT0gc2VsZi5faW5wdXQ7XG4gICAgICAgIHZhciB2YWx1ZUNoYW5nZWQgPSBzZWxmLl9pbnB1dC52YWx1ZS50cmltRW5kKCkgIT09IGdldERhdGVTdHIoKTtcbiAgICAgICAgaWYgKGlzSW5wdXQgJiZcbiAgICAgICAgICAgIHZhbHVlQ2hhbmdlZCAmJlxuICAgICAgICAgICAgIShlLnJlbGF0ZWRUYXJnZXQgJiYgaXNDYWxlbmRhckVsZW0oZS5yZWxhdGVkVGFyZ2V0KSkpIHtcbiAgICAgICAgICAgIHNlbGYuc2V0RGF0ZShzZWxmLl9pbnB1dC52YWx1ZSwgdHJ1ZSwgZS50YXJnZXQgPT09IHNlbGYuYWx0SW5wdXRcbiAgICAgICAgICAgICAgICA/IHNlbGYuY29uZmlnLmFsdEZvcm1hdFxuICAgICAgICAgICAgICAgIDogc2VsZi5jb25maWcuZGF0ZUZvcm1hdCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZnVuY3Rpb24gb25LZXlEb3duKGUpIHtcbiAgICAgICAgdmFyIGV2ZW50VGFyZ2V0ID0gZ2V0RXZlbnRUYXJnZXQoZSk7XG4gICAgICAgIHZhciBpc0lucHV0ID0gc2VsZi5jb25maWcud3JhcFxuICAgICAgICAgICAgPyBlbGVtZW50LmNvbnRhaW5zKGV2ZW50VGFyZ2V0KVxuICAgICAgICAgICAgOiBldmVudFRhcmdldCA9PT0gc2VsZi5faW5wdXQ7XG4gICAgICAgIHZhciBhbGxvd0lucHV0ID0gc2VsZi5jb25maWcuYWxsb3dJbnB1dDtcbiAgICAgICAgdmFyIGFsbG93S2V5ZG93biA9IHNlbGYuaXNPcGVuICYmICghYWxsb3dJbnB1dCB8fCAhaXNJbnB1dCk7XG4gICAgICAgIHZhciBhbGxvd0lubGluZUtleWRvd24gPSBzZWxmLmNvbmZpZy5pbmxpbmUgJiYgaXNJbnB1dCAmJiAhYWxsb3dJbnB1dDtcbiAgICAgICAgaWYgKGUua2V5Q29kZSA9PT0gMTMgJiYgaXNJbnB1dCkge1xuICAgICAgICAgICAgaWYgKGFsbG93SW5wdXQpIHtcbiAgICAgICAgICAgICAgICBzZWxmLnNldERhdGUoc2VsZi5faW5wdXQudmFsdWUsIHRydWUsIGV2ZW50VGFyZ2V0ID09PSBzZWxmLmFsdElucHV0XG4gICAgICAgICAgICAgICAgICAgID8gc2VsZi5jb25maWcuYWx0Rm9ybWF0XG4gICAgICAgICAgICAgICAgICAgIDogc2VsZi5jb25maWcuZGF0ZUZvcm1hdCk7XG4gICAgICAgICAgICAgICAgc2VsZi5jbG9zZSgpO1xuICAgICAgICAgICAgICAgIHJldHVybiBldmVudFRhcmdldC5ibHVyKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBzZWxmLm9wZW4oKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChpc0NhbGVuZGFyRWxlbShldmVudFRhcmdldCkgfHxcbiAgICAgICAgICAgIGFsbG93S2V5ZG93biB8fFxuICAgICAgICAgICAgYWxsb3dJbmxpbmVLZXlkb3duKSB7XG4gICAgICAgICAgICB2YXIgaXNUaW1lT2JqID0gISFzZWxmLnRpbWVDb250YWluZXIgJiZcbiAgICAgICAgICAgICAgICBzZWxmLnRpbWVDb250YWluZXIuY29udGFpbnMoZXZlbnRUYXJnZXQpO1xuICAgICAgICAgICAgc3dpdGNoIChlLmtleUNvZGUpIHtcbiAgICAgICAgICAgICAgICBjYXNlIDEzOlxuICAgICAgICAgICAgICAgICAgICBpZiAoaXNUaW1lT2JqKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB1cGRhdGVUaW1lKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBmb2N1c0FuZENsb3NlKCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZVxuICAgICAgICAgICAgICAgICAgICAgICAgc2VsZWN0RGF0ZShlKTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSAyNzpcbiAgICAgICAgICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgICAgICAgICBmb2N1c0FuZENsb3NlKCk7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgODpcbiAgICAgICAgICAgICAgICBjYXNlIDQ2OlxuICAgICAgICAgICAgICAgICAgICBpZiAoaXNJbnB1dCAmJiAhc2VsZi5jb25maWcuYWxsb3dJbnB1dCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgc2VsZi5jbGVhcigpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgMzc6XG4gICAgICAgICAgICAgICAgY2FzZSAzOTpcbiAgICAgICAgICAgICAgICAgICAgaWYgKCFpc1RpbWVPYmogJiYgIWlzSW5wdXQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBhY3RpdmVFbGVtZW50ID0gZ2V0Q2xvc2VzdEFjdGl2ZUVsZW1lbnQoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzZWxmLmRheXNDb250YWluZXIgIT09IHVuZGVmaW5lZCAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIChhbGxvd0lucHV0ID09PSBmYWxzZSB8fFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoYWN0aXZlRWxlbWVudCAmJiBpc0luVmlldyhhY3RpdmVFbGVtZW50KSkpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGRlbHRhXzEgPSBlLmtleUNvZGUgPT09IDM5ID8gMSA6IC0xO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICghZS5jdHJsS2V5KVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb2N1c09uRGF5KHVuZGVmaW5lZCwgZGVsdGFfMSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoYW5nZU1vbnRoKGRlbHRhXzEpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb2N1c09uRGF5KGdldEZpcnN0QXZhaWxhYmxlRGF5KDEpLCAwKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSBpZiAoc2VsZi5ob3VyRWxlbWVudClcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlbGYuaG91ckVsZW1lbnQuZm9jdXMoKTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSAzODpcbiAgICAgICAgICAgICAgICBjYXNlIDQwOlxuICAgICAgICAgICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICAgICAgICAgIHZhciBkZWx0YSA9IGUua2V5Q29kZSA9PT0gNDAgPyAxIDogLTE7XG4gICAgICAgICAgICAgICAgICAgIGlmICgoc2VsZi5kYXlzQ29udGFpbmVyICYmXG4gICAgICAgICAgICAgICAgICAgICAgICBldmVudFRhcmdldC4kaSAhPT0gdW5kZWZpbmVkKSB8fFxuICAgICAgICAgICAgICAgICAgICAgICAgZXZlbnRUYXJnZXQgPT09IHNlbGYuaW5wdXQgfHxcbiAgICAgICAgICAgICAgICAgICAgICAgIGV2ZW50VGFyZ2V0ID09PSBzZWxmLmFsdElucHV0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoZS5jdHJsS2V5KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGFuZ2VZZWFyKHNlbGYuY3VycmVudFllYXIgLSBkZWx0YSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9jdXNPbkRheShnZXRGaXJzdEF2YWlsYWJsZURheSgxKSwgMCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBlbHNlIGlmICghaXNUaW1lT2JqKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvY3VzT25EYXkodW5kZWZpbmVkLCBkZWx0YSAqIDcpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2UgaWYgKGV2ZW50VGFyZ2V0ID09PSBzZWxmLmN1cnJlbnRZZWFyRWxlbWVudCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgY2hhbmdlWWVhcihzZWxmLmN1cnJlbnRZZWFyIC0gZGVsdGEpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2UgaWYgKHNlbGYuY29uZmlnLmVuYWJsZVRpbWUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICghaXNUaW1lT2JqICYmIHNlbGYuaG91ckVsZW1lbnQpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VsZi5ob3VyRWxlbWVudC5mb2N1cygpO1xuICAgICAgICAgICAgICAgICAgICAgICAgdXBkYXRlVGltZShlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlbGYuX2RlYm91bmNlZENoYW5nZSgpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgOTpcbiAgICAgICAgICAgICAgICAgICAgaWYgKGlzVGltZU9iaikge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGVsZW1zID0gW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlbGYuaG91ckVsZW1lbnQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VsZi5taW51dGVFbGVtZW50LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlbGYuc2Vjb25kRWxlbWVudCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZWxmLmFtUE0sXG4gICAgICAgICAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLmNvbmNhdChzZWxmLnBsdWdpbkVsZW1lbnRzKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5maWx0ZXIoZnVuY3Rpb24gKHgpIHsgcmV0dXJuIHg7IH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGkgPSBlbGVtcy5pbmRleE9mKGV2ZW50VGFyZ2V0KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpICE9PSAtMSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciB0YXJnZXQgPSBlbGVtc1tpICsgKGUuc2hpZnRLZXkgPyAtMSA6IDEpXTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKHRhcmdldCB8fCBzZWxmLl9pbnB1dCkuZm9jdXMoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlIGlmICghc2VsZi5jb25maWcubm9DYWxlbmRhciAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgc2VsZi5kYXlzQ29udGFpbmVyICYmXG4gICAgICAgICAgICAgICAgICAgICAgICBzZWxmLmRheXNDb250YWluZXIuY29udGFpbnMoZXZlbnRUYXJnZXQpICYmXG4gICAgICAgICAgICAgICAgICAgICAgICBlLnNoaWZ0S2V5KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBzZWxmLl9pbnB1dC5mb2N1cygpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmIChzZWxmLmFtUE0gIT09IHVuZGVmaW5lZCAmJiBldmVudFRhcmdldCA9PT0gc2VsZi5hbVBNKSB7XG4gICAgICAgICAgICBzd2l0Y2ggKGUua2V5KSB7XG4gICAgICAgICAgICAgICAgY2FzZSBzZWxmLmwxMG4uYW1QTVswXS5jaGFyQXQoMCk6XG4gICAgICAgICAgICAgICAgY2FzZSBzZWxmLmwxMG4uYW1QTVswXS5jaGFyQXQoMCkudG9Mb3dlckNhc2UoKTpcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5hbVBNLnRleHRDb250ZW50ID0gc2VsZi5sMTBuLmFtUE1bMF07XG4gICAgICAgICAgICAgICAgICAgIHNldEhvdXJzRnJvbUlucHV0cygpO1xuICAgICAgICAgICAgICAgICAgICB1cGRhdGVWYWx1ZSgpO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlIHNlbGYubDEwbi5hbVBNWzFdLmNoYXJBdCgwKTpcbiAgICAgICAgICAgICAgICBjYXNlIHNlbGYubDEwbi5hbVBNWzFdLmNoYXJBdCgwKS50b0xvd2VyQ2FzZSgpOlxuICAgICAgICAgICAgICAgICAgICBzZWxmLmFtUE0udGV4dENvbnRlbnQgPSBzZWxmLmwxMG4uYW1QTVsxXTtcbiAgICAgICAgICAgICAgICAgICAgc2V0SG91cnNGcm9tSW5wdXRzKCk7XG4gICAgICAgICAgICAgICAgICAgIHVwZGF0ZVZhbHVlKCk7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmIChpc0lucHV0IHx8IGlzQ2FsZW5kYXJFbGVtKGV2ZW50VGFyZ2V0KSkge1xuICAgICAgICAgICAgdHJpZ2dlckV2ZW50KFwib25LZXlEb3duXCIsIGUpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGZ1bmN0aW9uIG9uTW91c2VPdmVyKGVsZW0sIGNlbGxDbGFzcykge1xuICAgICAgICBpZiAoY2VsbENsYXNzID09PSB2b2lkIDApIHsgY2VsbENsYXNzID0gXCJmbGF0cGlja3ItZGF5XCI7IH1cbiAgICAgICAgaWYgKHNlbGYuc2VsZWN0ZWREYXRlcy5sZW5ndGggIT09IDEgfHxcbiAgICAgICAgICAgIChlbGVtICYmXG4gICAgICAgICAgICAgICAgKCFlbGVtLmNsYXNzTGlzdC5jb250YWlucyhjZWxsQ2xhc3MpIHx8XG4gICAgICAgICAgICAgICAgICAgIGVsZW0uY2xhc3NMaXN0LmNvbnRhaW5zKFwiZmxhdHBpY2tyLWRpc2FibGVkXCIpKSkpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIHZhciBob3ZlckRhdGUgPSBlbGVtXG4gICAgICAgICAgICA/IGVsZW0uZGF0ZU9iai5nZXRUaW1lKClcbiAgICAgICAgICAgIDogc2VsZi5kYXlzLmZpcnN0RWxlbWVudENoaWxkLmRhdGVPYmouZ2V0VGltZSgpLCBpbml0aWFsRGF0ZSA9IHNlbGYucGFyc2VEYXRlKHNlbGYuc2VsZWN0ZWREYXRlc1swXSwgdW5kZWZpbmVkLCB0cnVlKS5nZXRUaW1lKCksIHJhbmdlU3RhcnREYXRlID0gTWF0aC5taW4oaG92ZXJEYXRlLCBzZWxmLnNlbGVjdGVkRGF0ZXNbMF0uZ2V0VGltZSgpKSwgcmFuZ2VFbmREYXRlID0gTWF0aC5tYXgoaG92ZXJEYXRlLCBzZWxmLnNlbGVjdGVkRGF0ZXNbMF0uZ2V0VGltZSgpKTtcbiAgICAgICAgdmFyIGNvbnRhaW5zRGlzYWJsZWQgPSBmYWxzZTtcbiAgICAgICAgdmFyIG1pblJhbmdlID0gMCwgbWF4UmFuZ2UgPSAwO1xuICAgICAgICBmb3IgKHZhciB0ID0gcmFuZ2VTdGFydERhdGU7IHQgPCByYW5nZUVuZERhdGU7IHQgKz0gZHVyYXRpb24uREFZKSB7XG4gICAgICAgICAgICBpZiAoIWlzRW5hYmxlZChuZXcgRGF0ZSh0KSwgdHJ1ZSkpIHtcbiAgICAgICAgICAgICAgICBjb250YWluc0Rpc2FibGVkID1cbiAgICAgICAgICAgICAgICAgICAgY29udGFpbnNEaXNhYmxlZCB8fCAodCA+IHJhbmdlU3RhcnREYXRlICYmIHQgPCByYW5nZUVuZERhdGUpO1xuICAgICAgICAgICAgICAgIGlmICh0IDwgaW5pdGlhbERhdGUgJiYgKCFtaW5SYW5nZSB8fCB0ID4gbWluUmFuZ2UpKVxuICAgICAgICAgICAgICAgICAgICBtaW5SYW5nZSA9IHQ7XG4gICAgICAgICAgICAgICAgZWxzZSBpZiAodCA+IGluaXRpYWxEYXRlICYmICghbWF4UmFuZ2UgfHwgdCA8IG1heFJhbmdlKSlcbiAgICAgICAgICAgICAgICAgICAgbWF4UmFuZ2UgPSB0O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHZhciBob3ZlcmFibGVDZWxscyA9IEFycmF5LmZyb20oc2VsZi5yQ29udGFpbmVyLnF1ZXJ5U2VsZWN0b3JBbGwoXCIqOm50aC1jaGlsZCgtbitcIiArIHNlbGYuY29uZmlnLnNob3dNb250aHMgKyBcIikgPiAuXCIgKyBjZWxsQ2xhc3MpKTtcbiAgICAgICAgaG92ZXJhYmxlQ2VsbHMuZm9yRWFjaChmdW5jdGlvbiAoZGF5RWxlbSkge1xuICAgICAgICAgICAgdmFyIGRhdGUgPSBkYXlFbGVtLmRhdGVPYmo7XG4gICAgICAgICAgICB2YXIgdGltZXN0YW1wID0gZGF0ZS5nZXRUaW1lKCk7XG4gICAgICAgICAgICB2YXIgb3V0T2ZSYW5nZSA9IChtaW5SYW5nZSA+IDAgJiYgdGltZXN0YW1wIDwgbWluUmFuZ2UpIHx8XG4gICAgICAgICAgICAgICAgKG1heFJhbmdlID4gMCAmJiB0aW1lc3RhbXAgPiBtYXhSYW5nZSk7XG4gICAgICAgICAgICBpZiAob3V0T2ZSYW5nZSkge1xuICAgICAgICAgICAgICAgIGRheUVsZW0uY2xhc3NMaXN0LmFkZChcIm5vdEFsbG93ZWRcIik7XG4gICAgICAgICAgICAgICAgW1wiaW5SYW5nZVwiLCBcInN0YXJ0UmFuZ2VcIiwgXCJlbmRSYW5nZVwiXS5mb3JFYWNoKGZ1bmN0aW9uIChjKSB7XG4gICAgICAgICAgICAgICAgICAgIGRheUVsZW0uY2xhc3NMaXN0LnJlbW92ZShjKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmIChjb250YWluc0Rpc2FibGVkICYmICFvdXRPZlJhbmdlKVxuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIFtcInN0YXJ0UmFuZ2VcIiwgXCJpblJhbmdlXCIsIFwiZW5kUmFuZ2VcIiwgXCJub3RBbGxvd2VkXCJdLmZvckVhY2goZnVuY3Rpb24gKGMpIHtcbiAgICAgICAgICAgICAgICBkYXlFbGVtLmNsYXNzTGlzdC5yZW1vdmUoYyk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIGlmIChlbGVtICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICBlbGVtLmNsYXNzTGlzdC5hZGQoaG92ZXJEYXRlIDw9IHNlbGYuc2VsZWN0ZWREYXRlc1swXS5nZXRUaW1lKClcbiAgICAgICAgICAgICAgICAgICAgPyBcInN0YXJ0UmFuZ2VcIlxuICAgICAgICAgICAgICAgICAgICA6IFwiZW5kUmFuZ2VcIik7XG4gICAgICAgICAgICAgICAgaWYgKGluaXRpYWxEYXRlIDwgaG92ZXJEYXRlICYmIHRpbWVzdGFtcCA9PT0gaW5pdGlhbERhdGUpXG4gICAgICAgICAgICAgICAgICAgIGRheUVsZW0uY2xhc3NMaXN0LmFkZChcInN0YXJ0UmFuZ2VcIik7XG4gICAgICAgICAgICAgICAgZWxzZSBpZiAoaW5pdGlhbERhdGUgPiBob3ZlckRhdGUgJiYgdGltZXN0YW1wID09PSBpbml0aWFsRGF0ZSlcbiAgICAgICAgICAgICAgICAgICAgZGF5RWxlbS5jbGFzc0xpc3QuYWRkKFwiZW5kUmFuZ2VcIik7XG4gICAgICAgICAgICAgICAgaWYgKHRpbWVzdGFtcCA+PSBtaW5SYW5nZSAmJlxuICAgICAgICAgICAgICAgICAgICAobWF4UmFuZ2UgPT09IDAgfHwgdGltZXN0YW1wIDw9IG1heFJhbmdlKSAmJlxuICAgICAgICAgICAgICAgICAgICBpc0JldHdlZW4odGltZXN0YW1wLCBpbml0aWFsRGF0ZSwgaG92ZXJEYXRlKSlcbiAgICAgICAgICAgICAgICAgICAgZGF5RWxlbS5jbGFzc0xpc3QuYWRkKFwiaW5SYW5nZVwiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIG9uUmVzaXplKCkge1xuICAgICAgICBpZiAoc2VsZi5pc09wZW4gJiYgIXNlbGYuY29uZmlnLnN0YXRpYyAmJiAhc2VsZi5jb25maWcuaW5saW5lKVxuICAgICAgICAgICAgcG9zaXRpb25DYWxlbmRhcigpO1xuICAgIH1cbiAgICBmdW5jdGlvbiBvcGVuKGUsIHBvc2l0aW9uRWxlbWVudCkge1xuICAgICAgICBpZiAocG9zaXRpb25FbGVtZW50ID09PSB2b2lkIDApIHsgcG9zaXRpb25FbGVtZW50ID0gc2VsZi5fcG9zaXRpb25FbGVtZW50OyB9XG4gICAgICAgIGlmIChzZWxmLmlzTW9iaWxlID09PSB0cnVlKSB7XG4gICAgICAgICAgICBpZiAoZSkge1xuICAgICAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgICAgICB2YXIgZXZlbnRUYXJnZXQgPSBnZXRFdmVudFRhcmdldChlKTtcbiAgICAgICAgICAgICAgICBpZiAoZXZlbnRUYXJnZXQpIHtcbiAgICAgICAgICAgICAgICAgICAgZXZlbnRUYXJnZXQuYmx1cigpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChzZWxmLm1vYmlsZUlucHV0ICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICBzZWxmLm1vYmlsZUlucHV0LmZvY3VzKCk7XG4gICAgICAgICAgICAgICAgc2VsZi5tb2JpbGVJbnB1dC5jbGljaygpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdHJpZ2dlckV2ZW50KFwib25PcGVuXCIpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHNlbGYuX2lucHV0LmRpc2FibGVkIHx8IHNlbGYuY29uZmlnLmlubGluZSkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHZhciB3YXNPcGVuID0gc2VsZi5pc09wZW47XG4gICAgICAgIHNlbGYuaXNPcGVuID0gdHJ1ZTtcbiAgICAgICAgaWYgKCF3YXNPcGVuKSB7XG4gICAgICAgICAgICBzZWxmLmNhbGVuZGFyQ29udGFpbmVyLmNsYXNzTGlzdC5hZGQoXCJvcGVuXCIpO1xuICAgICAgICAgICAgc2VsZi5faW5wdXQuY2xhc3NMaXN0LmFkZChcImFjdGl2ZVwiKTtcbiAgICAgICAgICAgIHRyaWdnZXJFdmVudChcIm9uT3BlblwiKTtcbiAgICAgICAgICAgIHBvc2l0aW9uQ2FsZW5kYXIocG9zaXRpb25FbGVtZW50KTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoc2VsZi5jb25maWcuZW5hYmxlVGltZSA9PT0gdHJ1ZSAmJiBzZWxmLmNvbmZpZy5ub0NhbGVuZGFyID09PSB0cnVlKSB7XG4gICAgICAgICAgICBpZiAoc2VsZi5jb25maWcuYWxsb3dJbnB1dCA9PT0gZmFsc2UgJiZcbiAgICAgICAgICAgICAgICAoZSA9PT0gdW5kZWZpbmVkIHx8XG4gICAgICAgICAgICAgICAgICAgICFzZWxmLnRpbWVDb250YWluZXIuY29udGFpbnMoZS5yZWxhdGVkVGFyZ2V0KSkpIHtcbiAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsgcmV0dXJuIHNlbGYuaG91ckVsZW1lbnQuc2VsZWN0KCk7IH0sIDUwKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBmdW5jdGlvbiBtaW5NYXhEYXRlU2V0dGVyKHR5cGUpIHtcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uIChkYXRlKSB7XG4gICAgICAgICAgICB2YXIgZGF0ZU9iaiA9IChzZWxmLmNvbmZpZ1tcIl9cIiArIHR5cGUgKyBcIkRhdGVcIl0gPSBzZWxmLnBhcnNlRGF0ZShkYXRlLCBzZWxmLmNvbmZpZy5kYXRlRm9ybWF0KSk7XG4gICAgICAgICAgICB2YXIgaW52ZXJzZURhdGVPYmogPSBzZWxmLmNvbmZpZ1tcIl9cIiArICh0eXBlID09PSBcIm1pblwiID8gXCJtYXhcIiA6IFwibWluXCIpICsgXCJEYXRlXCJdO1xuICAgICAgICAgICAgaWYgKGRhdGVPYmogIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgIHNlbGZbdHlwZSA9PT0gXCJtaW5cIiA/IFwibWluRGF0ZUhhc1RpbWVcIiA6IFwibWF4RGF0ZUhhc1RpbWVcIl0gPVxuICAgICAgICAgICAgICAgICAgICBkYXRlT2JqLmdldEhvdXJzKCkgPiAwIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICBkYXRlT2JqLmdldE1pbnV0ZXMoKSA+IDAgfHxcbiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGVPYmouZ2V0U2Vjb25kcygpID4gMDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChzZWxmLnNlbGVjdGVkRGF0ZXMpIHtcbiAgICAgICAgICAgICAgICBzZWxmLnNlbGVjdGVkRGF0ZXMgPSBzZWxmLnNlbGVjdGVkRGF0ZXMuZmlsdGVyKGZ1bmN0aW9uIChkKSB7IHJldHVybiBpc0VuYWJsZWQoZCk7IH0pO1xuICAgICAgICAgICAgICAgIGlmICghc2VsZi5zZWxlY3RlZERhdGVzLmxlbmd0aCAmJiB0eXBlID09PSBcIm1pblwiKVxuICAgICAgICAgICAgICAgICAgICBzZXRIb3Vyc0Zyb21EYXRlKGRhdGVPYmopO1xuICAgICAgICAgICAgICAgIHVwZGF0ZVZhbHVlKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoc2VsZi5kYXlzQ29udGFpbmVyKSB7XG4gICAgICAgICAgICAgICAgcmVkcmF3KCk7XG4gICAgICAgICAgICAgICAgaWYgKGRhdGVPYmogIT09IHVuZGVmaW5lZClcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5jdXJyZW50WWVhckVsZW1lbnRbdHlwZV0gPSBkYXRlT2JqLmdldEZ1bGxZZWFyKCkudG9TdHJpbmcoKTtcbiAgICAgICAgICAgICAgICBlbHNlXG4gICAgICAgICAgICAgICAgICAgIHNlbGYuY3VycmVudFllYXJFbGVtZW50LnJlbW92ZUF0dHJpYnV0ZSh0eXBlKTtcbiAgICAgICAgICAgICAgICBzZWxmLmN1cnJlbnRZZWFyRWxlbWVudC5kaXNhYmxlZCA9XG4gICAgICAgICAgICAgICAgICAgICEhaW52ZXJzZURhdGVPYmogJiZcbiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGVPYmogIT09IHVuZGVmaW5lZCAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgaW52ZXJzZURhdGVPYmouZ2V0RnVsbFllYXIoKSA9PT0gZGF0ZU9iai5nZXRGdWxsWWVhcigpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgIH1cbiAgICBmdW5jdGlvbiBwYXJzZUNvbmZpZygpIHtcbiAgICAgICAgdmFyIGJvb2xPcHRzID0gW1xuICAgICAgICAgICAgXCJ3cmFwXCIsXG4gICAgICAgICAgICBcIndlZWtOdW1iZXJzXCIsXG4gICAgICAgICAgICBcImFsbG93SW5wdXRcIixcbiAgICAgICAgICAgIFwiYWxsb3dJbnZhbGlkUHJlbG9hZFwiLFxuICAgICAgICAgICAgXCJjbGlja09wZW5zXCIsXG4gICAgICAgICAgICBcInRpbWVfMjRoclwiLFxuICAgICAgICAgICAgXCJlbmFibGVUaW1lXCIsXG4gICAgICAgICAgICBcIm5vQ2FsZW5kYXJcIixcbiAgICAgICAgICAgIFwiYWx0SW5wdXRcIixcbiAgICAgICAgICAgIFwic2hvcnRoYW5kQ3VycmVudE1vbnRoXCIsXG4gICAgICAgICAgICBcImlubGluZVwiLFxuICAgICAgICAgICAgXCJzdGF0aWNcIixcbiAgICAgICAgICAgIFwiZW5hYmxlU2Vjb25kc1wiLFxuICAgICAgICAgICAgXCJkaXNhYmxlTW9iaWxlXCIsXG4gICAgICAgIF07XG4gICAgICAgIHZhciB1c2VyQ29uZmlnID0gX19hc3NpZ24oX19hc3NpZ24oe30sIEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkoZWxlbWVudC5kYXRhc2V0IHx8IHt9KSkpLCBpbnN0YW5jZUNvbmZpZyk7XG4gICAgICAgIHZhciBmb3JtYXRzID0ge307XG4gICAgICAgIHNlbGYuY29uZmlnLnBhcnNlRGF0ZSA9IHVzZXJDb25maWcucGFyc2VEYXRlO1xuICAgICAgICBzZWxmLmNvbmZpZy5mb3JtYXREYXRlID0gdXNlckNvbmZpZy5mb3JtYXREYXRlO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoc2VsZi5jb25maWcsIFwiZW5hYmxlXCIsIHtcbiAgICAgICAgICAgIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gc2VsZi5jb25maWcuX2VuYWJsZTsgfSxcbiAgICAgICAgICAgIHNldDogZnVuY3Rpb24gKGRhdGVzKSB7XG4gICAgICAgICAgICAgICAgc2VsZi5jb25maWcuX2VuYWJsZSA9IHBhcnNlRGF0ZVJ1bGVzKGRhdGVzKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoc2VsZi5jb25maWcsIFwiZGlzYWJsZVwiLCB7XG4gICAgICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHNlbGYuY29uZmlnLl9kaXNhYmxlOyB9LFxuICAgICAgICAgICAgc2V0OiBmdW5jdGlvbiAoZGF0ZXMpIHtcbiAgICAgICAgICAgICAgICBzZWxmLmNvbmZpZy5fZGlzYWJsZSA9IHBhcnNlRGF0ZVJ1bGVzKGRhdGVzKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH0pO1xuICAgICAgICB2YXIgdGltZU1vZGUgPSB1c2VyQ29uZmlnLm1vZGUgPT09IFwidGltZVwiO1xuICAgICAgICBpZiAoIXVzZXJDb25maWcuZGF0ZUZvcm1hdCAmJiAodXNlckNvbmZpZy5lbmFibGVUaW1lIHx8IHRpbWVNb2RlKSkge1xuICAgICAgICAgICAgdmFyIGRlZmF1bHREYXRlRm9ybWF0ID0gZmxhdHBpY2tyLmRlZmF1bHRDb25maWcuZGF0ZUZvcm1hdCB8fCBkZWZhdWx0T3B0aW9ucy5kYXRlRm9ybWF0O1xuICAgICAgICAgICAgZm9ybWF0cy5kYXRlRm9ybWF0ID1cbiAgICAgICAgICAgICAgICB1c2VyQ29uZmlnLm5vQ2FsZW5kYXIgfHwgdGltZU1vZGVcbiAgICAgICAgICAgICAgICAgICAgPyBcIkg6aVwiICsgKHVzZXJDb25maWcuZW5hYmxlU2Vjb25kcyA/IFwiOlNcIiA6IFwiXCIpXG4gICAgICAgICAgICAgICAgICAgIDogZGVmYXVsdERhdGVGb3JtYXQgKyBcIiBIOmlcIiArICh1c2VyQ29uZmlnLmVuYWJsZVNlY29uZHMgPyBcIjpTXCIgOiBcIlwiKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodXNlckNvbmZpZy5hbHRJbnB1dCAmJlxuICAgICAgICAgICAgKHVzZXJDb25maWcuZW5hYmxlVGltZSB8fCB0aW1lTW9kZSkgJiZcbiAgICAgICAgICAgICF1c2VyQ29uZmlnLmFsdEZvcm1hdCkge1xuICAgICAgICAgICAgdmFyIGRlZmF1bHRBbHRGb3JtYXQgPSBmbGF0cGlja3IuZGVmYXVsdENvbmZpZy5hbHRGb3JtYXQgfHwgZGVmYXVsdE9wdGlvbnMuYWx0Rm9ybWF0O1xuICAgICAgICAgICAgZm9ybWF0cy5hbHRGb3JtYXQgPVxuICAgICAgICAgICAgICAgIHVzZXJDb25maWcubm9DYWxlbmRhciB8fCB0aW1lTW9kZVxuICAgICAgICAgICAgICAgICAgICA/IFwiaDppXCIgKyAodXNlckNvbmZpZy5lbmFibGVTZWNvbmRzID8gXCI6UyBLXCIgOiBcIiBLXCIpXG4gICAgICAgICAgICAgICAgICAgIDogZGVmYXVsdEFsdEZvcm1hdCArIChcIiBoOmlcIiArICh1c2VyQ29uZmlnLmVuYWJsZVNlY29uZHMgPyBcIjpTXCIgOiBcIlwiKSArIFwiIEtcIik7XG4gICAgICAgIH1cbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHNlbGYuY29uZmlnLCBcIm1pbkRhdGVcIiwge1xuICAgICAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBzZWxmLmNvbmZpZy5fbWluRGF0ZTsgfSxcbiAgICAgICAgICAgIHNldDogbWluTWF4RGF0ZVNldHRlcihcIm1pblwiKSxcbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShzZWxmLmNvbmZpZywgXCJtYXhEYXRlXCIsIHtcbiAgICAgICAgICAgIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gc2VsZi5jb25maWcuX21heERhdGU7IH0sXG4gICAgICAgICAgICBzZXQ6IG1pbk1heERhdGVTZXR0ZXIoXCJtYXhcIiksXG4gICAgICAgIH0pO1xuICAgICAgICB2YXIgbWluTWF4VGltZVNldHRlciA9IGZ1bmN0aW9uICh0eXBlKSB7IHJldHVybiBmdW5jdGlvbiAodmFsKSB7XG4gICAgICAgICAgICBzZWxmLmNvbmZpZ1t0eXBlID09PSBcIm1pblwiID8gXCJfbWluVGltZVwiIDogXCJfbWF4VGltZVwiXSA9IHNlbGYucGFyc2VEYXRlKHZhbCwgXCJIOmk6U1wiKTtcbiAgICAgICAgfTsgfTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHNlbGYuY29uZmlnLCBcIm1pblRpbWVcIiwge1xuICAgICAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBzZWxmLmNvbmZpZy5fbWluVGltZTsgfSxcbiAgICAgICAgICAgIHNldDogbWluTWF4VGltZVNldHRlcihcIm1pblwiKSxcbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShzZWxmLmNvbmZpZywgXCJtYXhUaW1lXCIsIHtcbiAgICAgICAgICAgIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gc2VsZi5jb25maWcuX21heFRpbWU7IH0sXG4gICAgICAgICAgICBzZXQ6IG1pbk1heFRpbWVTZXR0ZXIoXCJtYXhcIiksXG4gICAgICAgIH0pO1xuICAgICAgICBpZiAodXNlckNvbmZpZy5tb2RlID09PSBcInRpbWVcIikge1xuICAgICAgICAgICAgc2VsZi5jb25maWcubm9DYWxlbmRhciA9IHRydWU7XG4gICAgICAgICAgICBzZWxmLmNvbmZpZy5lbmFibGVUaW1lID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICBPYmplY3QuYXNzaWduKHNlbGYuY29uZmlnLCBmb3JtYXRzLCB1c2VyQ29uZmlnKTtcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBib29sT3B0cy5sZW5ndGg7IGkrKylcbiAgICAgICAgICAgIHNlbGYuY29uZmlnW2Jvb2xPcHRzW2ldXSA9XG4gICAgICAgICAgICAgICAgc2VsZi5jb25maWdbYm9vbE9wdHNbaV1dID09PSB0cnVlIHx8XG4gICAgICAgICAgICAgICAgICAgIHNlbGYuY29uZmlnW2Jvb2xPcHRzW2ldXSA9PT0gXCJ0cnVlXCI7XG4gICAgICAgIEhPT0tTLmZpbHRlcihmdW5jdGlvbiAoaG9vaykgeyByZXR1cm4gc2VsZi5jb25maWdbaG9va10gIT09IHVuZGVmaW5lZDsgfSkuZm9yRWFjaChmdW5jdGlvbiAoaG9vaykge1xuICAgICAgICAgICAgc2VsZi5jb25maWdbaG9va10gPSBhcnJheWlmeShzZWxmLmNvbmZpZ1tob29rXSB8fCBbXSkubWFwKGJpbmRUb0luc3RhbmNlKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHNlbGYuaXNNb2JpbGUgPVxuICAgICAgICAgICAgIXNlbGYuY29uZmlnLmRpc2FibGVNb2JpbGUgJiZcbiAgICAgICAgICAgICAgICAhc2VsZi5jb25maWcuaW5saW5lICYmXG4gICAgICAgICAgICAgICAgc2VsZi5jb25maWcubW9kZSA9PT0gXCJzaW5nbGVcIiAmJlxuICAgICAgICAgICAgICAgICFzZWxmLmNvbmZpZy5kaXNhYmxlLmxlbmd0aCAmJlxuICAgICAgICAgICAgICAgICFzZWxmLmNvbmZpZy5lbmFibGUgJiZcbiAgICAgICAgICAgICAgICAhc2VsZi5jb25maWcud2Vla051bWJlcnMgJiZcbiAgICAgICAgICAgICAgICAvQW5kcm9pZHx3ZWJPU3xpUGhvbmV8aVBhZHxpUG9kfEJsYWNrQmVycnl8SUVNb2JpbGV8T3BlcmEgTWluaS9pLnRlc3QobmF2aWdhdG9yLnVzZXJBZ2VudCk7XG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgc2VsZi5jb25maWcucGx1Z2lucy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgdmFyIHBsdWdpbkNvbmYgPSBzZWxmLmNvbmZpZy5wbHVnaW5zW2ldKHNlbGYpIHx8IHt9O1xuICAgICAgICAgICAgZm9yICh2YXIga2V5IGluIHBsdWdpbkNvbmYpIHtcbiAgICAgICAgICAgICAgICBpZiAoSE9PS1MuaW5kZXhPZihrZXkpID4gLTEpIHtcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5jb25maWdba2V5XSA9IGFycmF5aWZ5KHBsdWdpbkNvbmZba2V5XSlcbiAgICAgICAgICAgICAgICAgICAgICAgIC5tYXAoYmluZFRvSW5zdGFuY2UpXG4gICAgICAgICAgICAgICAgICAgICAgICAuY29uY2F0KHNlbGYuY29uZmlnW2tleV0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIGlmICh0eXBlb2YgdXNlckNvbmZpZ1trZXldID09PSBcInVuZGVmaW5lZFwiKVxuICAgICAgICAgICAgICAgICAgICBzZWxmLmNvbmZpZ1trZXldID0gcGx1Z2luQ29uZltrZXldO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmICghdXNlckNvbmZpZy5hbHRJbnB1dENsYXNzKSB7XG4gICAgICAgICAgICBzZWxmLmNvbmZpZy5hbHRJbnB1dENsYXNzID1cbiAgICAgICAgICAgICAgICBnZXRJbnB1dEVsZW0oKS5jbGFzc05hbWUgKyBcIiBcIiArIHNlbGYuY29uZmlnLmFsdElucHV0Q2xhc3M7XG4gICAgICAgIH1cbiAgICAgICAgdHJpZ2dlckV2ZW50KFwib25QYXJzZUNvbmZpZ1wiKTtcbiAgICB9XG4gICAgZnVuY3Rpb24gZ2V0SW5wdXRFbGVtKCkge1xuICAgICAgICByZXR1cm4gc2VsZi5jb25maWcud3JhcFxuICAgICAgICAgICAgPyBlbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCJbZGF0YS1pbnB1dF1cIilcbiAgICAgICAgICAgIDogZWxlbWVudDtcbiAgICB9XG4gICAgZnVuY3Rpb24gc2V0dXBMb2NhbGUoKSB7XG4gICAgICAgIGlmICh0eXBlb2Ygc2VsZi5jb25maWcubG9jYWxlICE9PSBcIm9iamVjdFwiICYmXG4gICAgICAgICAgICB0eXBlb2YgZmxhdHBpY2tyLmwxMG5zW3NlbGYuY29uZmlnLmxvY2FsZV0gPT09IFwidW5kZWZpbmVkXCIpXG4gICAgICAgICAgICBzZWxmLmNvbmZpZy5lcnJvckhhbmRsZXIobmV3IEVycm9yKFwiZmxhdHBpY2tyOiBpbnZhbGlkIGxvY2FsZSBcIiArIHNlbGYuY29uZmlnLmxvY2FsZSkpO1xuICAgICAgICBzZWxmLmwxMG4gPSBfX2Fzc2lnbihfX2Fzc2lnbih7fSwgZmxhdHBpY2tyLmwxMG5zLmRlZmF1bHQpLCAodHlwZW9mIHNlbGYuY29uZmlnLmxvY2FsZSA9PT0gXCJvYmplY3RcIlxuICAgICAgICAgICAgPyBzZWxmLmNvbmZpZy5sb2NhbGVcbiAgICAgICAgICAgIDogc2VsZi5jb25maWcubG9jYWxlICE9PSBcImRlZmF1bHRcIlxuICAgICAgICAgICAgICAgID8gZmxhdHBpY2tyLmwxMG5zW3NlbGYuY29uZmlnLmxvY2FsZV1cbiAgICAgICAgICAgICAgICA6IHVuZGVmaW5lZCkpO1xuICAgICAgICB0b2tlblJlZ2V4LkQgPSBcIihcIiArIHNlbGYubDEwbi53ZWVrZGF5cy5zaG9ydGhhbmQuam9pbihcInxcIikgKyBcIilcIjtcbiAgICAgICAgdG9rZW5SZWdleC5sID0gXCIoXCIgKyBzZWxmLmwxMG4ud2Vla2RheXMubG9uZ2hhbmQuam9pbihcInxcIikgKyBcIilcIjtcbiAgICAgICAgdG9rZW5SZWdleC5NID0gXCIoXCIgKyBzZWxmLmwxMG4ubW9udGhzLnNob3J0aGFuZC5qb2luKFwifFwiKSArIFwiKVwiO1xuICAgICAgICB0b2tlblJlZ2V4LkYgPSBcIihcIiArIHNlbGYubDEwbi5tb250aHMubG9uZ2hhbmQuam9pbihcInxcIikgKyBcIilcIjtcbiAgICAgICAgdG9rZW5SZWdleC5LID0gXCIoXCIgKyBzZWxmLmwxMG4uYW1QTVswXSArIFwifFwiICsgc2VsZi5sMTBuLmFtUE1bMV0gKyBcInxcIiArIHNlbGYubDEwbi5hbVBNWzBdLnRvTG93ZXJDYXNlKCkgKyBcInxcIiArIHNlbGYubDEwbi5hbVBNWzFdLnRvTG93ZXJDYXNlKCkgKyBcIilcIjtcbiAgICAgICAgdmFyIHVzZXJDb25maWcgPSBfX2Fzc2lnbihfX2Fzc2lnbih7fSwgaW5zdGFuY2VDb25maWcpLCBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KGVsZW1lbnQuZGF0YXNldCB8fCB7fSkpKTtcbiAgICAgICAgaWYgKHVzZXJDb25maWcudGltZV8yNGhyID09PSB1bmRlZmluZWQgJiZcbiAgICAgICAgICAgIGZsYXRwaWNrci5kZWZhdWx0Q29uZmlnLnRpbWVfMjRociA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICBzZWxmLmNvbmZpZy50aW1lXzI0aHIgPSBzZWxmLmwxMG4udGltZV8yNGhyO1xuICAgICAgICB9XG4gICAgICAgIHNlbGYuZm9ybWF0RGF0ZSA9IGNyZWF0ZURhdGVGb3JtYXR0ZXIoc2VsZik7XG4gICAgICAgIHNlbGYucGFyc2VEYXRlID0gY3JlYXRlRGF0ZVBhcnNlcih7IGNvbmZpZzogc2VsZi5jb25maWcsIGwxMG46IHNlbGYubDEwbiB9KTtcbiAgICB9XG4gICAgZnVuY3Rpb24gcG9zaXRpb25DYWxlbmRhcihjdXN0b21Qb3NpdGlvbkVsZW1lbnQpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBzZWxmLmNvbmZpZy5wb3NpdGlvbiA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgICAgICByZXR1cm4gdm9pZCBzZWxmLmNvbmZpZy5wb3NpdGlvbihzZWxmLCBjdXN0b21Qb3NpdGlvbkVsZW1lbnQpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChzZWxmLmNhbGVuZGFyQ29udGFpbmVyID09PSB1bmRlZmluZWQpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIHRyaWdnZXJFdmVudChcIm9uUHJlQ2FsZW5kYXJQb3NpdGlvblwiKTtcbiAgICAgICAgdmFyIHBvc2l0aW9uRWxlbWVudCA9IGN1c3RvbVBvc2l0aW9uRWxlbWVudCB8fCBzZWxmLl9wb3NpdGlvbkVsZW1lbnQ7XG4gICAgICAgIHZhciBjYWxlbmRhckhlaWdodCA9IEFycmF5LnByb3RvdHlwZS5yZWR1Y2UuY2FsbChzZWxmLmNhbGVuZGFyQ29udGFpbmVyLmNoaWxkcmVuLCAoZnVuY3Rpb24gKGFjYywgY2hpbGQpIHsgcmV0dXJuIGFjYyArIGNoaWxkLm9mZnNldEhlaWdodDsgfSksIDApLCBjYWxlbmRhcldpZHRoID0gc2VsZi5jYWxlbmRhckNvbnRhaW5lci5vZmZzZXRXaWR0aCwgY29uZmlnUG9zID0gc2VsZi5jb25maWcucG9zaXRpb24uc3BsaXQoXCIgXCIpLCBjb25maWdQb3NWZXJ0aWNhbCA9IGNvbmZpZ1Bvc1swXSwgY29uZmlnUG9zSG9yaXpvbnRhbCA9IGNvbmZpZ1Bvcy5sZW5ndGggPiAxID8gY29uZmlnUG9zWzFdIDogbnVsbCwgaW5wdXRCb3VuZHMgPSBwb3NpdGlvbkVsZW1lbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCksIGRpc3RhbmNlRnJvbUJvdHRvbSA9IHdpbmRvdy5pbm5lckhlaWdodCAtIGlucHV0Qm91bmRzLmJvdHRvbSwgc2hvd09uVG9wID0gY29uZmlnUG9zVmVydGljYWwgPT09IFwiYWJvdmVcIiB8fFxuICAgICAgICAgICAgKGNvbmZpZ1Bvc1ZlcnRpY2FsICE9PSBcImJlbG93XCIgJiZcbiAgICAgICAgICAgICAgICBkaXN0YW5jZUZyb21Cb3R0b20gPCBjYWxlbmRhckhlaWdodCAmJlxuICAgICAgICAgICAgICAgIGlucHV0Qm91bmRzLnRvcCA+IGNhbGVuZGFySGVpZ2h0KTtcbiAgICAgICAgdmFyIHRvcCA9IHdpbmRvdy5wYWdlWU9mZnNldCArXG4gICAgICAgICAgICBpbnB1dEJvdW5kcy50b3AgK1xuICAgICAgICAgICAgKCFzaG93T25Ub3AgPyBwb3NpdGlvbkVsZW1lbnQub2Zmc2V0SGVpZ2h0ICsgMiA6IC1jYWxlbmRhckhlaWdodCAtIDIpO1xuICAgICAgICB0b2dnbGVDbGFzcyhzZWxmLmNhbGVuZGFyQ29udGFpbmVyLCBcImFycm93VG9wXCIsICFzaG93T25Ub3ApO1xuICAgICAgICB0b2dnbGVDbGFzcyhzZWxmLmNhbGVuZGFyQ29udGFpbmVyLCBcImFycm93Qm90dG9tXCIsIHNob3dPblRvcCk7XG4gICAgICAgIGlmIChzZWxmLmNvbmZpZy5pbmxpbmUpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIHZhciBsZWZ0ID0gd2luZG93LnBhZ2VYT2Zmc2V0ICsgaW5wdXRCb3VuZHMubGVmdDtcbiAgICAgICAgdmFyIGlzQ2VudGVyID0gZmFsc2U7XG4gICAgICAgIHZhciBpc1JpZ2h0ID0gZmFsc2U7XG4gICAgICAgIGlmIChjb25maWdQb3NIb3Jpem9udGFsID09PSBcImNlbnRlclwiKSB7XG4gICAgICAgICAgICBsZWZ0IC09IChjYWxlbmRhcldpZHRoIC0gaW5wdXRCb3VuZHMud2lkdGgpIC8gMjtcbiAgICAgICAgICAgIGlzQ2VudGVyID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChjb25maWdQb3NIb3Jpem9udGFsID09PSBcInJpZ2h0XCIpIHtcbiAgICAgICAgICAgIGxlZnQgLT0gY2FsZW5kYXJXaWR0aCAtIGlucHV0Qm91bmRzLndpZHRoO1xuICAgICAgICAgICAgaXNSaWdodCA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgdG9nZ2xlQ2xhc3Moc2VsZi5jYWxlbmRhckNvbnRhaW5lciwgXCJhcnJvd0xlZnRcIiwgIWlzQ2VudGVyICYmICFpc1JpZ2h0KTtcbiAgICAgICAgdG9nZ2xlQ2xhc3Moc2VsZi5jYWxlbmRhckNvbnRhaW5lciwgXCJhcnJvd0NlbnRlclwiLCBpc0NlbnRlcik7XG4gICAgICAgIHRvZ2dsZUNsYXNzKHNlbGYuY2FsZW5kYXJDb250YWluZXIsIFwiYXJyb3dSaWdodFwiLCBpc1JpZ2h0KTtcbiAgICAgICAgdmFyIHJpZ2h0ID0gd2luZG93LmRvY3VtZW50LmJvZHkub2Zmc2V0V2lkdGggLVxuICAgICAgICAgICAgKHdpbmRvdy5wYWdlWE9mZnNldCArIGlucHV0Qm91bmRzLnJpZ2h0KTtcbiAgICAgICAgdmFyIHJpZ2h0TW9zdCA9IGxlZnQgKyBjYWxlbmRhcldpZHRoID4gd2luZG93LmRvY3VtZW50LmJvZHkub2Zmc2V0V2lkdGg7XG4gICAgICAgIHZhciBjZW50ZXJNb3N0ID0gcmlnaHQgKyBjYWxlbmRhcldpZHRoID4gd2luZG93LmRvY3VtZW50LmJvZHkub2Zmc2V0V2lkdGg7XG4gICAgICAgIHRvZ2dsZUNsYXNzKHNlbGYuY2FsZW5kYXJDb250YWluZXIsIFwicmlnaHRNb3N0XCIsIHJpZ2h0TW9zdCk7XG4gICAgICAgIGlmIChzZWxmLmNvbmZpZy5zdGF0aWMpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIHNlbGYuY2FsZW5kYXJDb250YWluZXIuc3R5bGUudG9wID0gdG9wICsgXCJweFwiO1xuICAgICAgICBpZiAoIXJpZ2h0TW9zdCkge1xuICAgICAgICAgICAgc2VsZi5jYWxlbmRhckNvbnRhaW5lci5zdHlsZS5sZWZ0ID0gbGVmdCArIFwicHhcIjtcbiAgICAgICAgICAgIHNlbGYuY2FsZW5kYXJDb250YWluZXIuc3R5bGUucmlnaHQgPSBcImF1dG9cIjtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICghY2VudGVyTW9zdCkge1xuICAgICAgICAgICAgc2VsZi5jYWxlbmRhckNvbnRhaW5lci5zdHlsZS5sZWZ0ID0gXCJhdXRvXCI7XG4gICAgICAgICAgICBzZWxmLmNhbGVuZGFyQ29udGFpbmVyLnN0eWxlLnJpZ2h0ID0gcmlnaHQgKyBcInB4XCI7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB2YXIgZG9jID0gZ2V0RG9jdW1lbnRTdHlsZVNoZWV0KCk7XG4gICAgICAgICAgICBpZiAoZG9jID09PSB1bmRlZmluZWQpXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgdmFyIGJvZHlXaWR0aCA9IHdpbmRvdy5kb2N1bWVudC5ib2R5Lm9mZnNldFdpZHRoO1xuICAgICAgICAgICAgdmFyIGNlbnRlckxlZnQgPSBNYXRoLm1heCgwLCBib2R5V2lkdGggLyAyIC0gY2FsZW5kYXJXaWR0aCAvIDIpO1xuICAgICAgICAgICAgdmFyIGNlbnRlckJlZm9yZSA9IFwiLmZsYXRwaWNrci1jYWxlbmRhci5jZW50ZXJNb3N0OmJlZm9yZVwiO1xuICAgICAgICAgICAgdmFyIGNlbnRlckFmdGVyID0gXCIuZmxhdHBpY2tyLWNhbGVuZGFyLmNlbnRlck1vc3Q6YWZ0ZXJcIjtcbiAgICAgICAgICAgIHZhciBjZW50ZXJJbmRleCA9IGRvYy5jc3NSdWxlcy5sZW5ndGg7XG4gICAgICAgICAgICB2YXIgY2VudGVyU3R5bGUgPSBcIntsZWZ0OlwiICsgaW5wdXRCb3VuZHMubGVmdCArIFwicHg7cmlnaHQ6YXV0bzt9XCI7XG4gICAgICAgICAgICB0b2dnbGVDbGFzcyhzZWxmLmNhbGVuZGFyQ29udGFpbmVyLCBcInJpZ2h0TW9zdFwiLCBmYWxzZSk7XG4gICAgICAgICAgICB0b2dnbGVDbGFzcyhzZWxmLmNhbGVuZGFyQ29udGFpbmVyLCBcImNlbnRlck1vc3RcIiwgdHJ1ZSk7XG4gICAgICAgICAgICBkb2MuaW5zZXJ0UnVsZShjZW50ZXJCZWZvcmUgKyBcIixcIiArIGNlbnRlckFmdGVyICsgY2VudGVyU3R5bGUsIGNlbnRlckluZGV4KTtcbiAgICAgICAgICAgIHNlbGYuY2FsZW5kYXJDb250YWluZXIuc3R5bGUubGVmdCA9IGNlbnRlckxlZnQgKyBcInB4XCI7XG4gICAgICAgICAgICBzZWxmLmNhbGVuZGFyQ29udGFpbmVyLnN0eWxlLnJpZ2h0ID0gXCJhdXRvXCI7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZnVuY3Rpb24gZ2V0RG9jdW1lbnRTdHlsZVNoZWV0KCkge1xuICAgICAgICB2YXIgZWRpdGFibGVTaGVldCA9IG51bGw7XG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgZG9jdW1lbnQuc3R5bGVTaGVldHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIHZhciBzaGVldCA9IGRvY3VtZW50LnN0eWxlU2hlZXRzW2ldO1xuICAgICAgICAgICAgaWYgKCFzaGVldC5jc3NSdWxlcylcbiAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgc2hlZXQuY3NzUnVsZXM7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlZGl0YWJsZVNoZWV0ID0gc2hlZXQ7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZWRpdGFibGVTaGVldCAhPSBudWxsID8gZWRpdGFibGVTaGVldCA6IGNyZWF0ZVN0eWxlU2hlZXQoKTtcbiAgICB9XG4gICAgZnVuY3Rpb24gY3JlYXRlU3R5bGVTaGVldCgpIHtcbiAgICAgICAgdmFyIHN0eWxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInN0eWxlXCIpO1xuICAgICAgICBkb2N1bWVudC5oZWFkLmFwcGVuZENoaWxkKHN0eWxlKTtcbiAgICAgICAgcmV0dXJuIHN0eWxlLnNoZWV0O1xuICAgIH1cbiAgICBmdW5jdGlvbiByZWRyYXcoKSB7XG4gICAgICAgIGlmIChzZWxmLmNvbmZpZy5ub0NhbGVuZGFyIHx8IHNlbGYuaXNNb2JpbGUpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIGJ1aWxkTW9udGhTd2l0Y2goKTtcbiAgICAgICAgdXBkYXRlTmF2aWdhdGlvbkN1cnJlbnRNb250aCgpO1xuICAgICAgICBidWlsZERheXMoKTtcbiAgICB9XG4gICAgZnVuY3Rpb24gZm9jdXNBbmRDbG9zZSgpIHtcbiAgICAgICAgc2VsZi5faW5wdXQuZm9jdXMoKTtcbiAgICAgICAgaWYgKHdpbmRvdy5uYXZpZ2F0b3IudXNlckFnZW50LmluZGV4T2YoXCJNU0lFXCIpICE9PSAtMSB8fFxuICAgICAgICAgICAgbmF2aWdhdG9yLm1zTWF4VG91Y2hQb2ludHMgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgc2V0VGltZW91dChzZWxmLmNsb3NlLCAwKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHNlbGYuY2xvc2UoKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBmdW5jdGlvbiBzZWxlY3REYXRlKGUpIHtcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgICB2YXIgaXNTZWxlY3RhYmxlID0gZnVuY3Rpb24gKGRheSkge1xuICAgICAgICAgICAgcmV0dXJuIGRheS5jbGFzc0xpc3QgJiZcbiAgICAgICAgICAgICAgICBkYXkuY2xhc3NMaXN0LmNvbnRhaW5zKFwiZmxhdHBpY2tyLWRheVwiKSAmJlxuICAgICAgICAgICAgICAgICFkYXkuY2xhc3NMaXN0LmNvbnRhaW5zKFwiZmxhdHBpY2tyLWRpc2FibGVkXCIpICYmXG4gICAgICAgICAgICAgICAgIWRheS5jbGFzc0xpc3QuY29udGFpbnMoXCJub3RBbGxvd2VkXCIpO1xuICAgICAgICB9O1xuICAgICAgICB2YXIgdCA9IGZpbmRQYXJlbnQoZ2V0RXZlbnRUYXJnZXQoZSksIGlzU2VsZWN0YWJsZSk7XG4gICAgICAgIGlmICh0ID09PSB1bmRlZmluZWQpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIHZhciB0YXJnZXQgPSB0O1xuICAgICAgICB2YXIgc2VsZWN0ZWREYXRlID0gKHNlbGYubGF0ZXN0U2VsZWN0ZWREYXRlT2JqID0gbmV3IERhdGUodGFyZ2V0LmRhdGVPYmouZ2V0VGltZSgpKSk7XG4gICAgICAgIHZhciBzaG91bGRDaGFuZ2VNb250aCA9IChzZWxlY3RlZERhdGUuZ2V0TW9udGgoKSA8IHNlbGYuY3VycmVudE1vbnRoIHx8XG4gICAgICAgICAgICBzZWxlY3RlZERhdGUuZ2V0TW9udGgoKSA+XG4gICAgICAgICAgICAgICAgc2VsZi5jdXJyZW50TW9udGggKyBzZWxmLmNvbmZpZy5zaG93TW9udGhzIC0gMSkgJiZcbiAgICAgICAgICAgIHNlbGYuY29uZmlnLm1vZGUgIT09IFwicmFuZ2VcIjtcbiAgICAgICAgc2VsZi5zZWxlY3RlZERhdGVFbGVtID0gdGFyZ2V0O1xuICAgICAgICBpZiAoc2VsZi5jb25maWcubW9kZSA9PT0gXCJzaW5nbGVcIilcbiAgICAgICAgICAgIHNlbGYuc2VsZWN0ZWREYXRlcyA9IFtzZWxlY3RlZERhdGVdO1xuICAgICAgICBlbHNlIGlmIChzZWxmLmNvbmZpZy5tb2RlID09PSBcIm11bHRpcGxlXCIpIHtcbiAgICAgICAgICAgIHZhciBzZWxlY3RlZEluZGV4ID0gaXNEYXRlU2VsZWN0ZWQoc2VsZWN0ZWREYXRlKTtcbiAgICAgICAgICAgIGlmIChzZWxlY3RlZEluZGV4KVxuICAgICAgICAgICAgICAgIHNlbGYuc2VsZWN0ZWREYXRlcy5zcGxpY2UocGFyc2VJbnQoc2VsZWN0ZWRJbmRleCksIDEpO1xuICAgICAgICAgICAgZWxzZVxuICAgICAgICAgICAgICAgIHNlbGYuc2VsZWN0ZWREYXRlcy5wdXNoKHNlbGVjdGVkRGF0ZSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoc2VsZi5jb25maWcubW9kZSA9PT0gXCJyYW5nZVwiKSB7XG4gICAgICAgICAgICBpZiAoc2VsZi5zZWxlY3RlZERhdGVzLmxlbmd0aCA9PT0gMikge1xuICAgICAgICAgICAgICAgIHNlbGYuY2xlYXIoZmFsc2UsIGZhbHNlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHNlbGYubGF0ZXN0U2VsZWN0ZWREYXRlT2JqID0gc2VsZWN0ZWREYXRlO1xuICAgICAgICAgICAgc2VsZi5zZWxlY3RlZERhdGVzLnB1c2goc2VsZWN0ZWREYXRlKTtcbiAgICAgICAgICAgIGlmIChjb21wYXJlRGF0ZXMoc2VsZWN0ZWREYXRlLCBzZWxmLnNlbGVjdGVkRGF0ZXNbMF0sIHRydWUpICE9PSAwKVxuICAgICAgICAgICAgICAgIHNlbGYuc2VsZWN0ZWREYXRlcy5zb3J0KGZ1bmN0aW9uIChhLCBiKSB7IHJldHVybiBhLmdldFRpbWUoKSAtIGIuZ2V0VGltZSgpOyB9KTtcbiAgICAgICAgfVxuICAgICAgICBzZXRIb3Vyc0Zyb21JbnB1dHMoKTtcbiAgICAgICAgaWYgKHNob3VsZENoYW5nZU1vbnRoKSB7XG4gICAgICAgICAgICB2YXIgaXNOZXdZZWFyID0gc2VsZi5jdXJyZW50WWVhciAhPT0gc2VsZWN0ZWREYXRlLmdldEZ1bGxZZWFyKCk7XG4gICAgICAgICAgICBzZWxmLmN1cnJlbnRZZWFyID0gc2VsZWN0ZWREYXRlLmdldEZ1bGxZZWFyKCk7XG4gICAgICAgICAgICBzZWxmLmN1cnJlbnRNb250aCA9IHNlbGVjdGVkRGF0ZS5nZXRNb250aCgpO1xuICAgICAgICAgICAgaWYgKGlzTmV3WWVhcikge1xuICAgICAgICAgICAgICAgIHRyaWdnZXJFdmVudChcIm9uWWVhckNoYW5nZVwiKTtcbiAgICAgICAgICAgICAgICBidWlsZE1vbnRoU3dpdGNoKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0cmlnZ2VyRXZlbnQoXCJvbk1vbnRoQ2hhbmdlXCIpO1xuICAgICAgICB9XG4gICAgICAgIHVwZGF0ZU5hdmlnYXRpb25DdXJyZW50TW9udGgoKTtcbiAgICAgICAgYnVpbGREYXlzKCk7XG4gICAgICAgIHVwZGF0ZVZhbHVlKCk7XG4gICAgICAgIGlmICghc2hvdWxkQ2hhbmdlTW9udGggJiZcbiAgICAgICAgICAgIHNlbGYuY29uZmlnLm1vZGUgIT09IFwicmFuZ2VcIiAmJlxuICAgICAgICAgICAgc2VsZi5jb25maWcuc2hvd01vbnRocyA9PT0gMSlcbiAgICAgICAgICAgIGZvY3VzT25EYXlFbGVtKHRhcmdldCk7XG4gICAgICAgIGVsc2UgaWYgKHNlbGYuc2VsZWN0ZWREYXRlRWxlbSAhPT0gdW5kZWZpbmVkICYmXG4gICAgICAgICAgICBzZWxmLmhvdXJFbGVtZW50ID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHNlbGYuc2VsZWN0ZWREYXRlRWxlbSAmJiBzZWxmLnNlbGVjdGVkRGF0ZUVsZW0uZm9jdXMoKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoc2VsZi5ob3VyRWxlbWVudCAhPT0gdW5kZWZpbmVkKVxuICAgICAgICAgICAgc2VsZi5ob3VyRWxlbWVudCAhPT0gdW5kZWZpbmVkICYmIHNlbGYuaG91ckVsZW1lbnQuZm9jdXMoKTtcbiAgICAgICAgaWYgKHNlbGYuY29uZmlnLmNsb3NlT25TZWxlY3QpIHtcbiAgICAgICAgICAgIHZhciBzaW5nbGUgPSBzZWxmLmNvbmZpZy5tb2RlID09PSBcInNpbmdsZVwiICYmICFzZWxmLmNvbmZpZy5lbmFibGVUaW1lO1xuICAgICAgICAgICAgdmFyIHJhbmdlID0gc2VsZi5jb25maWcubW9kZSA9PT0gXCJyYW5nZVwiICYmXG4gICAgICAgICAgICAgICAgc2VsZi5zZWxlY3RlZERhdGVzLmxlbmd0aCA9PT0gMiAmJlxuICAgICAgICAgICAgICAgICFzZWxmLmNvbmZpZy5lbmFibGVUaW1lO1xuICAgICAgICAgICAgaWYgKHNpbmdsZSB8fCByYW5nZSkge1xuICAgICAgICAgICAgICAgIGZvY3VzQW5kQ2xvc2UoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICB0cmlnZ2VyQ2hhbmdlKCk7XG4gICAgfVxuICAgIHZhciBDQUxMQkFDS1MgPSB7XG4gICAgICAgIGxvY2FsZTogW3NldHVwTG9jYWxlLCB1cGRhdGVXZWVrZGF5c10sXG4gICAgICAgIHNob3dNb250aHM6IFtidWlsZE1vbnRocywgc2V0Q2FsZW5kYXJXaWR0aCwgYnVpbGRXZWVrZGF5c10sXG4gICAgICAgIG1pbkRhdGU6IFtqdW1wVG9EYXRlXSxcbiAgICAgICAgbWF4RGF0ZTogW2p1bXBUb0RhdGVdLFxuICAgICAgICBwb3NpdGlvbkVsZW1lbnQ6IFt1cGRhdGVQb3NpdGlvbkVsZW1lbnRdLFxuICAgICAgICBjbGlja09wZW5zOiBbXG4gICAgICAgICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgaWYgKHNlbGYuY29uZmlnLmNsaWNrT3BlbnMgPT09IHRydWUpIHtcbiAgICAgICAgICAgICAgICAgICAgYmluZChzZWxmLl9pbnB1dCwgXCJmb2N1c1wiLCBzZWxmLm9wZW4pO1xuICAgICAgICAgICAgICAgICAgICBiaW5kKHNlbGYuX2lucHV0LCBcImNsaWNrXCIsIHNlbGYub3Blbik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBzZWxmLl9pbnB1dC5yZW1vdmVFdmVudExpc3RlbmVyKFwiZm9jdXNcIiwgc2VsZi5vcGVuKTtcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5faW5wdXQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIHNlbGYub3Blbik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgXSxcbiAgICB9O1xuICAgIGZ1bmN0aW9uIHNldChvcHRpb24sIHZhbHVlKSB7XG4gICAgICAgIGlmIChvcHRpb24gIT09IG51bGwgJiYgdHlwZW9mIG9wdGlvbiA9PT0gXCJvYmplY3RcIikge1xuICAgICAgICAgICAgT2JqZWN0LmFzc2lnbihzZWxmLmNvbmZpZywgb3B0aW9uKTtcbiAgICAgICAgICAgIGZvciAodmFyIGtleSBpbiBvcHRpb24pIHtcbiAgICAgICAgICAgICAgICBpZiAoQ0FMTEJBQ0tTW2tleV0gIT09IHVuZGVmaW5lZClcbiAgICAgICAgICAgICAgICAgICAgQ0FMTEJBQ0tTW2tleV0uZm9yRWFjaChmdW5jdGlvbiAoeCkgeyByZXR1cm4geCgpOyB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHNlbGYuY29uZmlnW29wdGlvbl0gPSB2YWx1ZTtcbiAgICAgICAgICAgIGlmIChDQUxMQkFDS1Nbb3B0aW9uXSAhPT0gdW5kZWZpbmVkKVxuICAgICAgICAgICAgICAgIENBTExCQUNLU1tvcHRpb25dLmZvckVhY2goZnVuY3Rpb24gKHgpIHsgcmV0dXJuIHgoKTsgfSk7XG4gICAgICAgICAgICBlbHNlIGlmIChIT09LUy5pbmRleE9mKG9wdGlvbikgPiAtMSlcbiAgICAgICAgICAgICAgICBzZWxmLmNvbmZpZ1tvcHRpb25dID0gYXJyYXlpZnkodmFsdWUpO1xuICAgICAgICB9XG4gICAgICAgIHNlbGYucmVkcmF3KCk7XG4gICAgICAgIHVwZGF0ZVZhbHVlKHRydWUpO1xuICAgIH1cbiAgICBmdW5jdGlvbiBzZXRTZWxlY3RlZERhdGUoaW5wdXREYXRlLCBmb3JtYXQpIHtcbiAgICAgICAgdmFyIGRhdGVzID0gW107XG4gICAgICAgIGlmIChpbnB1dERhdGUgaW5zdGFuY2VvZiBBcnJheSlcbiAgICAgICAgICAgIGRhdGVzID0gaW5wdXREYXRlLm1hcChmdW5jdGlvbiAoZCkgeyByZXR1cm4gc2VsZi5wYXJzZURhdGUoZCwgZm9ybWF0KTsgfSk7XG4gICAgICAgIGVsc2UgaWYgKGlucHV0RGF0ZSBpbnN0YW5jZW9mIERhdGUgfHwgdHlwZW9mIGlucHV0RGF0ZSA9PT0gXCJudW1iZXJcIilcbiAgICAgICAgICAgIGRhdGVzID0gW3NlbGYucGFyc2VEYXRlKGlucHV0RGF0ZSwgZm9ybWF0KV07XG4gICAgICAgIGVsc2UgaWYgKHR5cGVvZiBpbnB1dERhdGUgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgICAgIHN3aXRjaCAoc2VsZi5jb25maWcubW9kZSkge1xuICAgICAgICAgICAgICAgIGNhc2UgXCJzaW5nbGVcIjpcbiAgICAgICAgICAgICAgICBjYXNlIFwidGltZVwiOlxuICAgICAgICAgICAgICAgICAgICBkYXRlcyA9IFtzZWxmLnBhcnNlRGF0ZShpbnB1dERhdGUsIGZvcm1hdCldO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlIFwibXVsdGlwbGVcIjpcbiAgICAgICAgICAgICAgICAgICAgZGF0ZXMgPSBpbnB1dERhdGVcbiAgICAgICAgICAgICAgICAgICAgICAgIC5zcGxpdChzZWxmLmNvbmZpZy5jb25qdW5jdGlvbilcbiAgICAgICAgICAgICAgICAgICAgICAgIC5tYXAoZnVuY3Rpb24gKGRhdGUpIHsgcmV0dXJuIHNlbGYucGFyc2VEYXRlKGRhdGUsIGZvcm1hdCk7IH0pO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlIFwicmFuZ2VcIjpcbiAgICAgICAgICAgICAgICAgICAgZGF0ZXMgPSBpbnB1dERhdGVcbiAgICAgICAgICAgICAgICAgICAgICAgIC5zcGxpdChzZWxmLmwxMG4ucmFuZ2VTZXBhcmF0b3IpXG4gICAgICAgICAgICAgICAgICAgICAgICAubWFwKGZ1bmN0aW9uIChkYXRlKSB7IHJldHVybiBzZWxmLnBhcnNlRGF0ZShkYXRlLCBmb3JtYXQpOyB9KTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZWxzZVxuICAgICAgICAgICAgc2VsZi5jb25maWcuZXJyb3JIYW5kbGVyKG5ldyBFcnJvcihcIkludmFsaWQgZGF0ZSBzdXBwbGllZDogXCIgKyBKU09OLnN0cmluZ2lmeShpbnB1dERhdGUpKSk7XG4gICAgICAgIHNlbGYuc2VsZWN0ZWREYXRlcyA9IChzZWxmLmNvbmZpZy5hbGxvd0ludmFsaWRQcmVsb2FkXG4gICAgICAgICAgICA/IGRhdGVzXG4gICAgICAgICAgICA6IGRhdGVzLmZpbHRlcihmdW5jdGlvbiAoZCkgeyByZXR1cm4gZCBpbnN0YW5jZW9mIERhdGUgJiYgaXNFbmFibGVkKGQsIGZhbHNlKTsgfSkpO1xuICAgICAgICBpZiAoc2VsZi5jb25maWcubW9kZSA9PT0gXCJyYW5nZVwiKVxuICAgICAgICAgICAgc2VsZi5zZWxlY3RlZERhdGVzLnNvcnQoZnVuY3Rpb24gKGEsIGIpIHsgcmV0dXJuIGEuZ2V0VGltZSgpIC0gYi5nZXRUaW1lKCk7IH0pO1xuICAgIH1cbiAgICBmdW5jdGlvbiBzZXREYXRlKGRhdGUsIHRyaWdnZXJDaGFuZ2UsIGZvcm1hdCkge1xuICAgICAgICBpZiAodHJpZ2dlckNoYW5nZSA9PT0gdm9pZCAwKSB7IHRyaWdnZXJDaGFuZ2UgPSBmYWxzZTsgfVxuICAgICAgICBpZiAoZm9ybWF0ID09PSB2b2lkIDApIHsgZm9ybWF0ID0gc2VsZi5jb25maWcuZGF0ZUZvcm1hdDsgfVxuICAgICAgICBpZiAoKGRhdGUgIT09IDAgJiYgIWRhdGUpIHx8IChkYXRlIGluc3RhbmNlb2YgQXJyYXkgJiYgZGF0ZS5sZW5ndGggPT09IDApKVxuICAgICAgICAgICAgcmV0dXJuIHNlbGYuY2xlYXIodHJpZ2dlckNoYW5nZSk7XG4gICAgICAgIHNldFNlbGVjdGVkRGF0ZShkYXRlLCBmb3JtYXQpO1xuICAgICAgICBzZWxmLmxhdGVzdFNlbGVjdGVkRGF0ZU9iaiA9XG4gICAgICAgICAgICBzZWxmLnNlbGVjdGVkRGF0ZXNbc2VsZi5zZWxlY3RlZERhdGVzLmxlbmd0aCAtIDFdO1xuICAgICAgICBzZWxmLnJlZHJhdygpO1xuICAgICAgICBqdW1wVG9EYXRlKHVuZGVmaW5lZCwgdHJpZ2dlckNoYW5nZSk7XG4gICAgICAgIHNldEhvdXJzRnJvbURhdGUoKTtcbiAgICAgICAgaWYgKHNlbGYuc2VsZWN0ZWREYXRlcy5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgIHNlbGYuY2xlYXIoZmFsc2UpO1xuICAgICAgICB9XG4gICAgICAgIHVwZGF0ZVZhbHVlKHRyaWdnZXJDaGFuZ2UpO1xuICAgICAgICBpZiAodHJpZ2dlckNoYW5nZSlcbiAgICAgICAgICAgIHRyaWdnZXJFdmVudChcIm9uQ2hhbmdlXCIpO1xuICAgIH1cbiAgICBmdW5jdGlvbiBwYXJzZURhdGVSdWxlcyhhcnIpIHtcbiAgICAgICAgcmV0dXJuIGFyclxuICAgICAgICAgICAgLnNsaWNlKClcbiAgICAgICAgICAgIC5tYXAoZnVuY3Rpb24gKHJ1bGUpIHtcbiAgICAgICAgICAgIGlmICh0eXBlb2YgcnVsZSA9PT0gXCJzdHJpbmdcIiB8fFxuICAgICAgICAgICAgICAgIHR5cGVvZiBydWxlID09PSBcIm51bWJlclwiIHx8XG4gICAgICAgICAgICAgICAgcnVsZSBpbnN0YW5jZW9mIERhdGUpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gc2VsZi5wYXJzZURhdGUocnVsZSwgdW5kZWZpbmVkLCB0cnVlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKHJ1bGUgJiZcbiAgICAgICAgICAgICAgICB0eXBlb2YgcnVsZSA9PT0gXCJvYmplY3RcIiAmJlxuICAgICAgICAgICAgICAgIHJ1bGUuZnJvbSAmJlxuICAgICAgICAgICAgICAgIHJ1bGUudG8pXG4gICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgZnJvbTogc2VsZi5wYXJzZURhdGUocnVsZS5mcm9tLCB1bmRlZmluZWQpLFxuICAgICAgICAgICAgICAgICAgICB0bzogc2VsZi5wYXJzZURhdGUocnVsZS50bywgdW5kZWZpbmVkKSxcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgcmV0dXJuIHJ1bGU7XG4gICAgICAgIH0pXG4gICAgICAgICAgICAuZmlsdGVyKGZ1bmN0aW9uICh4KSB7IHJldHVybiB4OyB9KTtcbiAgICB9XG4gICAgZnVuY3Rpb24gc2V0dXBEYXRlcygpIHtcbiAgICAgICAgc2VsZi5zZWxlY3RlZERhdGVzID0gW107XG4gICAgICAgIHNlbGYubm93ID0gc2VsZi5wYXJzZURhdGUoc2VsZi5jb25maWcubm93KSB8fCBuZXcgRGF0ZSgpO1xuICAgICAgICB2YXIgcHJlbG9hZGVkRGF0ZSA9IHNlbGYuY29uZmlnLmRlZmF1bHREYXRlIHx8XG4gICAgICAgICAgICAoKHNlbGYuaW5wdXQubm9kZU5hbWUgPT09IFwiSU5QVVRcIiB8fFxuICAgICAgICAgICAgICAgIHNlbGYuaW5wdXQubm9kZU5hbWUgPT09IFwiVEVYVEFSRUFcIikgJiZcbiAgICAgICAgICAgICAgICBzZWxmLmlucHV0LnBsYWNlaG9sZGVyICYmXG4gICAgICAgICAgICAgICAgc2VsZi5pbnB1dC52YWx1ZSA9PT0gc2VsZi5pbnB1dC5wbGFjZWhvbGRlclxuICAgICAgICAgICAgICAgID8gbnVsbFxuICAgICAgICAgICAgICAgIDogc2VsZi5pbnB1dC52YWx1ZSk7XG4gICAgICAgIGlmIChwcmVsb2FkZWREYXRlKVxuICAgICAgICAgICAgc2V0U2VsZWN0ZWREYXRlKHByZWxvYWRlZERhdGUsIHNlbGYuY29uZmlnLmRhdGVGb3JtYXQpO1xuICAgICAgICBzZWxmLl9pbml0aWFsRGF0ZSA9XG4gICAgICAgICAgICBzZWxmLnNlbGVjdGVkRGF0ZXMubGVuZ3RoID4gMFxuICAgICAgICAgICAgICAgID8gc2VsZi5zZWxlY3RlZERhdGVzWzBdXG4gICAgICAgICAgICAgICAgOiBzZWxmLmNvbmZpZy5taW5EYXRlICYmXG4gICAgICAgICAgICAgICAgICAgIHNlbGYuY29uZmlnLm1pbkRhdGUuZ2V0VGltZSgpID4gc2VsZi5ub3cuZ2V0VGltZSgpXG4gICAgICAgICAgICAgICAgICAgID8gc2VsZi5jb25maWcubWluRGF0ZVxuICAgICAgICAgICAgICAgICAgICA6IHNlbGYuY29uZmlnLm1heERhdGUgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlbGYuY29uZmlnLm1heERhdGUuZ2V0VGltZSgpIDwgc2VsZi5ub3cuZ2V0VGltZSgpXG4gICAgICAgICAgICAgICAgICAgICAgICA/IHNlbGYuY29uZmlnLm1heERhdGVcbiAgICAgICAgICAgICAgICAgICAgICAgIDogc2VsZi5ub3c7XG4gICAgICAgIHNlbGYuY3VycmVudFllYXIgPSBzZWxmLl9pbml0aWFsRGF0ZS5nZXRGdWxsWWVhcigpO1xuICAgICAgICBzZWxmLmN1cnJlbnRNb250aCA9IHNlbGYuX2luaXRpYWxEYXRlLmdldE1vbnRoKCk7XG4gICAgICAgIGlmIChzZWxmLnNlbGVjdGVkRGF0ZXMubGVuZ3RoID4gMClcbiAgICAgICAgICAgIHNlbGYubGF0ZXN0U2VsZWN0ZWREYXRlT2JqID0gc2VsZi5zZWxlY3RlZERhdGVzWzBdO1xuICAgICAgICBpZiAoc2VsZi5jb25maWcubWluVGltZSAhPT0gdW5kZWZpbmVkKVxuICAgICAgICAgICAgc2VsZi5jb25maWcubWluVGltZSA9IHNlbGYucGFyc2VEYXRlKHNlbGYuY29uZmlnLm1pblRpbWUsIFwiSDppXCIpO1xuICAgICAgICBpZiAoc2VsZi5jb25maWcubWF4VGltZSAhPT0gdW5kZWZpbmVkKVxuICAgICAgICAgICAgc2VsZi5jb25maWcubWF4VGltZSA9IHNlbGYucGFyc2VEYXRlKHNlbGYuY29uZmlnLm1heFRpbWUsIFwiSDppXCIpO1xuICAgICAgICBzZWxmLm1pbkRhdGVIYXNUaW1lID1cbiAgICAgICAgICAgICEhc2VsZi5jb25maWcubWluRGF0ZSAmJlxuICAgICAgICAgICAgICAgIChzZWxmLmNvbmZpZy5taW5EYXRlLmdldEhvdXJzKCkgPiAwIHx8XG4gICAgICAgICAgICAgICAgICAgIHNlbGYuY29uZmlnLm1pbkRhdGUuZ2V0TWludXRlcygpID4gMCB8fFxuICAgICAgICAgICAgICAgICAgICBzZWxmLmNvbmZpZy5taW5EYXRlLmdldFNlY29uZHMoKSA+IDApO1xuICAgICAgICBzZWxmLm1heERhdGVIYXNUaW1lID1cbiAgICAgICAgICAgICEhc2VsZi5jb25maWcubWF4RGF0ZSAmJlxuICAgICAgICAgICAgICAgIChzZWxmLmNvbmZpZy5tYXhEYXRlLmdldEhvdXJzKCkgPiAwIHx8XG4gICAgICAgICAgICAgICAgICAgIHNlbGYuY29uZmlnLm1heERhdGUuZ2V0TWludXRlcygpID4gMCB8fFxuICAgICAgICAgICAgICAgICAgICBzZWxmLmNvbmZpZy5tYXhEYXRlLmdldFNlY29uZHMoKSA+IDApO1xuICAgIH1cbiAgICBmdW5jdGlvbiBzZXR1cElucHV0cygpIHtcbiAgICAgICAgc2VsZi5pbnB1dCA9IGdldElucHV0RWxlbSgpO1xuICAgICAgICBpZiAoIXNlbGYuaW5wdXQpIHtcbiAgICAgICAgICAgIHNlbGYuY29uZmlnLmVycm9ySGFuZGxlcihuZXcgRXJyb3IoXCJJbnZhbGlkIGlucHV0IGVsZW1lbnQgc3BlY2lmaWVkXCIpKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBzZWxmLmlucHV0Ll90eXBlID0gc2VsZi5pbnB1dC50eXBlO1xuICAgICAgICBzZWxmLmlucHV0LnR5cGUgPSBcInRleHRcIjtcbiAgICAgICAgc2VsZi5pbnB1dC5jbGFzc0xpc3QuYWRkKFwiZmxhdHBpY2tyLWlucHV0XCIpO1xuICAgICAgICBzZWxmLl9pbnB1dCA9IHNlbGYuaW5wdXQ7XG4gICAgICAgIGlmIChzZWxmLmNvbmZpZy5hbHRJbnB1dCkge1xuICAgICAgICAgICAgc2VsZi5hbHRJbnB1dCA9IGNyZWF0ZUVsZW1lbnQoc2VsZi5pbnB1dC5ub2RlTmFtZSwgc2VsZi5jb25maWcuYWx0SW5wdXRDbGFzcyk7XG4gICAgICAgICAgICBzZWxmLl9pbnB1dCA9IHNlbGYuYWx0SW5wdXQ7XG4gICAgICAgICAgICBzZWxmLmFsdElucHV0LnBsYWNlaG9sZGVyID0gc2VsZi5pbnB1dC5wbGFjZWhvbGRlcjtcbiAgICAgICAgICAgIHNlbGYuYWx0SW5wdXQuZGlzYWJsZWQgPSBzZWxmLmlucHV0LmRpc2FibGVkO1xuICAgICAgICAgICAgc2VsZi5hbHRJbnB1dC5yZXF1aXJlZCA9IHNlbGYuaW5wdXQucmVxdWlyZWQ7XG4gICAgICAgICAgICBzZWxmLmFsdElucHV0LnRhYkluZGV4ID0gc2VsZi5pbnB1dC50YWJJbmRleDtcbiAgICAgICAgICAgIHNlbGYuYWx0SW5wdXQudHlwZSA9IFwidGV4dFwiO1xuICAgICAgICAgICAgc2VsZi5pbnB1dC5zZXRBdHRyaWJ1dGUoXCJ0eXBlXCIsIFwiaGlkZGVuXCIpO1xuICAgICAgICAgICAgaWYgKCFzZWxmLmNvbmZpZy5zdGF0aWMgJiYgc2VsZi5pbnB1dC5wYXJlbnROb2RlKVxuICAgICAgICAgICAgICAgIHNlbGYuaW5wdXQucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoc2VsZi5hbHRJbnB1dCwgc2VsZi5pbnB1dC5uZXh0U2libGluZyk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCFzZWxmLmNvbmZpZy5hbGxvd0lucHV0KVxuICAgICAgICAgICAgc2VsZi5faW5wdXQuc2V0QXR0cmlidXRlKFwicmVhZG9ubHlcIiwgXCJyZWFkb25seVwiKTtcbiAgICAgICAgdXBkYXRlUG9zaXRpb25FbGVtZW50KCk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIHVwZGF0ZVBvc2l0aW9uRWxlbWVudCgpIHtcbiAgICAgICAgc2VsZi5fcG9zaXRpb25FbGVtZW50ID0gc2VsZi5jb25maWcucG9zaXRpb25FbGVtZW50IHx8IHNlbGYuX2lucHV0O1xuICAgIH1cbiAgICBmdW5jdGlvbiBzZXR1cE1vYmlsZSgpIHtcbiAgICAgICAgdmFyIGlucHV0VHlwZSA9IHNlbGYuY29uZmlnLmVuYWJsZVRpbWVcbiAgICAgICAgICAgID8gc2VsZi5jb25maWcubm9DYWxlbmRhclxuICAgICAgICAgICAgICAgID8gXCJ0aW1lXCJcbiAgICAgICAgICAgICAgICA6IFwiZGF0ZXRpbWUtbG9jYWxcIlxuICAgICAgICAgICAgOiBcImRhdGVcIjtcbiAgICAgICAgc2VsZi5tb2JpbGVJbnB1dCA9IGNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiLCBzZWxmLmlucHV0LmNsYXNzTmFtZSArIFwiIGZsYXRwaWNrci1tb2JpbGVcIik7XG4gICAgICAgIHNlbGYubW9iaWxlSW5wdXQudGFiSW5kZXggPSAxO1xuICAgICAgICBzZWxmLm1vYmlsZUlucHV0LnR5cGUgPSBpbnB1dFR5cGU7XG4gICAgICAgIHNlbGYubW9iaWxlSW5wdXQuZGlzYWJsZWQgPSBzZWxmLmlucHV0LmRpc2FibGVkO1xuICAgICAgICBzZWxmLm1vYmlsZUlucHV0LnJlcXVpcmVkID0gc2VsZi5pbnB1dC5yZXF1aXJlZDtcbiAgICAgICAgc2VsZi5tb2JpbGVJbnB1dC5wbGFjZWhvbGRlciA9IHNlbGYuaW5wdXQucGxhY2Vob2xkZXI7XG4gICAgICAgIHNlbGYubW9iaWxlRm9ybWF0U3RyID1cbiAgICAgICAgICAgIGlucHV0VHlwZSA9PT0gXCJkYXRldGltZS1sb2NhbFwiXG4gICAgICAgICAgICAgICAgPyBcIlktbS1kXFxcXFRIOmk6U1wiXG4gICAgICAgICAgICAgICAgOiBpbnB1dFR5cGUgPT09IFwiZGF0ZVwiXG4gICAgICAgICAgICAgICAgICAgID8gXCJZLW0tZFwiXG4gICAgICAgICAgICAgICAgICAgIDogXCJIOmk6U1wiO1xuICAgICAgICBpZiAoc2VsZi5zZWxlY3RlZERhdGVzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgIHNlbGYubW9iaWxlSW5wdXQuZGVmYXVsdFZhbHVlID0gc2VsZi5tb2JpbGVJbnB1dC52YWx1ZSA9IHNlbGYuZm9ybWF0RGF0ZShzZWxmLnNlbGVjdGVkRGF0ZXNbMF0sIHNlbGYubW9iaWxlRm9ybWF0U3RyKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoc2VsZi5jb25maWcubWluRGF0ZSlcbiAgICAgICAgICAgIHNlbGYubW9iaWxlSW5wdXQubWluID0gc2VsZi5mb3JtYXREYXRlKHNlbGYuY29uZmlnLm1pbkRhdGUsIFwiWS1tLWRcIik7XG4gICAgICAgIGlmIChzZWxmLmNvbmZpZy5tYXhEYXRlKVxuICAgICAgICAgICAgc2VsZi5tb2JpbGVJbnB1dC5tYXggPSBzZWxmLmZvcm1hdERhdGUoc2VsZi5jb25maWcubWF4RGF0ZSwgXCJZLW0tZFwiKTtcbiAgICAgICAgaWYgKHNlbGYuaW5wdXQuZ2V0QXR0cmlidXRlKFwic3RlcFwiKSlcbiAgICAgICAgICAgIHNlbGYubW9iaWxlSW5wdXQuc3RlcCA9IFN0cmluZyhzZWxmLmlucHV0LmdldEF0dHJpYnV0ZShcInN0ZXBcIikpO1xuICAgICAgICBzZWxmLmlucHV0LnR5cGUgPSBcImhpZGRlblwiO1xuICAgICAgICBpZiAoc2VsZi5hbHRJbnB1dCAhPT0gdW5kZWZpbmVkKVxuICAgICAgICAgICAgc2VsZi5hbHRJbnB1dC50eXBlID0gXCJoaWRkZW5cIjtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGlmIChzZWxmLmlucHV0LnBhcmVudE5vZGUpXG4gICAgICAgICAgICAgICAgc2VsZi5pbnB1dC5wYXJlbnROb2RlLmluc2VydEJlZm9yZShzZWxmLm1vYmlsZUlucHV0LCBzZWxmLmlucHV0Lm5leHRTaWJsaW5nKTtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoX2EpIHsgfVxuICAgICAgICBiaW5kKHNlbGYubW9iaWxlSW5wdXQsIFwiY2hhbmdlXCIsIGZ1bmN0aW9uIChlKSB7XG4gICAgICAgICAgICBzZWxmLnNldERhdGUoZ2V0RXZlbnRUYXJnZXQoZSkudmFsdWUsIGZhbHNlLCBzZWxmLm1vYmlsZUZvcm1hdFN0cik7XG4gICAgICAgICAgICB0cmlnZ2VyRXZlbnQoXCJvbkNoYW5nZVwiKTtcbiAgICAgICAgICAgIHRyaWdnZXJFdmVudChcIm9uQ2xvc2VcIik7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBmdW5jdGlvbiB0b2dnbGUoZSkge1xuICAgICAgICBpZiAoc2VsZi5pc09wZW4gPT09IHRydWUpXG4gICAgICAgICAgICByZXR1cm4gc2VsZi5jbG9zZSgpO1xuICAgICAgICBzZWxmLm9wZW4oZSk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIHRyaWdnZXJFdmVudChldmVudCwgZGF0YSkge1xuICAgICAgICBpZiAoc2VsZi5jb25maWcgPT09IHVuZGVmaW5lZClcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgdmFyIGhvb2tzID0gc2VsZi5jb25maWdbZXZlbnRdO1xuICAgICAgICBpZiAoaG9va3MgIT09IHVuZGVmaW5lZCAmJiBob29rcy5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaG9va3NbaV0gJiYgaSA8IGhvb2tzLmxlbmd0aDsgaSsrKVxuICAgICAgICAgICAgICAgIGhvb2tzW2ldKHNlbGYuc2VsZWN0ZWREYXRlcywgc2VsZi5pbnB1dC52YWx1ZSwgc2VsZiwgZGF0YSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGV2ZW50ID09PSBcIm9uQ2hhbmdlXCIpIHtcbiAgICAgICAgICAgIHNlbGYuaW5wdXQuZGlzcGF0Y2hFdmVudChjcmVhdGVFdmVudChcImNoYW5nZVwiKSk7XG4gICAgICAgICAgICBzZWxmLmlucHV0LmRpc3BhdGNoRXZlbnQoY3JlYXRlRXZlbnQoXCJpbnB1dFwiKSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZnVuY3Rpb24gY3JlYXRlRXZlbnQobmFtZSkge1xuICAgICAgICB2YXIgZSA9IGRvY3VtZW50LmNyZWF0ZUV2ZW50KFwiRXZlbnRcIik7XG4gICAgICAgIGUuaW5pdEV2ZW50KG5hbWUsIHRydWUsIHRydWUpO1xuICAgICAgICByZXR1cm4gZTtcbiAgICB9XG4gICAgZnVuY3Rpb24gaXNEYXRlU2VsZWN0ZWQoZGF0ZSkge1xuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHNlbGYuc2VsZWN0ZWREYXRlcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgdmFyIHNlbGVjdGVkRGF0ZSA9IHNlbGYuc2VsZWN0ZWREYXRlc1tpXTtcbiAgICAgICAgICAgIGlmIChzZWxlY3RlZERhdGUgaW5zdGFuY2VvZiBEYXRlICYmXG4gICAgICAgICAgICAgICAgY29tcGFyZURhdGVzKHNlbGVjdGVkRGF0ZSwgZGF0ZSkgPT09IDApXG4gICAgICAgICAgICAgICAgcmV0dXJuIFwiXCIgKyBpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgZnVuY3Rpb24gaXNEYXRlSW5SYW5nZShkYXRlKSB7XG4gICAgICAgIGlmIChzZWxmLmNvbmZpZy5tb2RlICE9PSBcInJhbmdlXCIgfHwgc2VsZi5zZWxlY3RlZERhdGVzLmxlbmd0aCA8IDIpXG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIHJldHVybiAoY29tcGFyZURhdGVzKGRhdGUsIHNlbGYuc2VsZWN0ZWREYXRlc1swXSkgPj0gMCAmJlxuICAgICAgICAgICAgY29tcGFyZURhdGVzKGRhdGUsIHNlbGYuc2VsZWN0ZWREYXRlc1sxXSkgPD0gMCk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIHVwZGF0ZU5hdmlnYXRpb25DdXJyZW50TW9udGgoKSB7XG4gICAgICAgIGlmIChzZWxmLmNvbmZpZy5ub0NhbGVuZGFyIHx8IHNlbGYuaXNNb2JpbGUgfHwgIXNlbGYubW9udGhOYXYpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIHNlbGYueWVhckVsZW1lbnRzLmZvckVhY2goZnVuY3Rpb24gKHllYXJFbGVtZW50LCBpKSB7XG4gICAgICAgICAgICB2YXIgZCA9IG5ldyBEYXRlKHNlbGYuY3VycmVudFllYXIsIHNlbGYuY3VycmVudE1vbnRoLCAxKTtcbiAgICAgICAgICAgIGQuc2V0TW9udGgoc2VsZi5jdXJyZW50TW9udGggKyBpKTtcbiAgICAgICAgICAgIGlmIChzZWxmLmNvbmZpZy5zaG93TW9udGhzID4gMSB8fFxuICAgICAgICAgICAgICAgIHNlbGYuY29uZmlnLm1vbnRoU2VsZWN0b3JUeXBlID09PSBcInN0YXRpY1wiKSB7XG4gICAgICAgICAgICAgICAgc2VsZi5tb250aEVsZW1lbnRzW2ldLnRleHRDb250ZW50ID1cbiAgICAgICAgICAgICAgICAgICAgbW9udGhUb1N0cihkLmdldE1vbnRoKCksIHNlbGYuY29uZmlnLnNob3J0aGFuZEN1cnJlbnRNb250aCwgc2VsZi5sMTBuKSArIFwiIFwiO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgc2VsZi5tb250aHNEcm9wZG93bkNvbnRhaW5lci52YWx1ZSA9IGQuZ2V0TW9udGgoKS50b1N0cmluZygpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgeWVhckVsZW1lbnQudmFsdWUgPSBkLmdldEZ1bGxZZWFyKCkudG9TdHJpbmcoKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHNlbGYuX2hpZGVQcmV2TW9udGhBcnJvdyA9XG4gICAgICAgICAgICBzZWxmLmNvbmZpZy5taW5EYXRlICE9PSB1bmRlZmluZWQgJiZcbiAgICAgICAgICAgICAgICAoc2VsZi5jdXJyZW50WWVhciA9PT0gc2VsZi5jb25maWcubWluRGF0ZS5nZXRGdWxsWWVhcigpXG4gICAgICAgICAgICAgICAgICAgID8gc2VsZi5jdXJyZW50TW9udGggPD0gc2VsZi5jb25maWcubWluRGF0ZS5nZXRNb250aCgpXG4gICAgICAgICAgICAgICAgICAgIDogc2VsZi5jdXJyZW50WWVhciA8IHNlbGYuY29uZmlnLm1pbkRhdGUuZ2V0RnVsbFllYXIoKSk7XG4gICAgICAgIHNlbGYuX2hpZGVOZXh0TW9udGhBcnJvdyA9XG4gICAgICAgICAgICBzZWxmLmNvbmZpZy5tYXhEYXRlICE9PSB1bmRlZmluZWQgJiZcbiAgICAgICAgICAgICAgICAoc2VsZi5jdXJyZW50WWVhciA9PT0gc2VsZi5jb25maWcubWF4RGF0ZS5nZXRGdWxsWWVhcigpXG4gICAgICAgICAgICAgICAgICAgID8gc2VsZi5jdXJyZW50TW9udGggKyAxID4gc2VsZi5jb25maWcubWF4RGF0ZS5nZXRNb250aCgpXG4gICAgICAgICAgICAgICAgICAgIDogc2VsZi5jdXJyZW50WWVhciA+IHNlbGYuY29uZmlnLm1heERhdGUuZ2V0RnVsbFllYXIoKSk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGdldERhdGVTdHIoc3BlY2lmaWNGb3JtYXQpIHtcbiAgICAgICAgdmFyIGZvcm1hdCA9IHNwZWNpZmljRm9ybWF0IHx8XG4gICAgICAgICAgICAoc2VsZi5jb25maWcuYWx0SW5wdXQgPyBzZWxmLmNvbmZpZy5hbHRGb3JtYXQgOiBzZWxmLmNvbmZpZy5kYXRlRm9ybWF0KTtcbiAgICAgICAgcmV0dXJuIHNlbGYuc2VsZWN0ZWREYXRlc1xuICAgICAgICAgICAgLm1hcChmdW5jdGlvbiAoZE9iaikgeyByZXR1cm4gc2VsZi5mb3JtYXREYXRlKGRPYmosIGZvcm1hdCk7IH0pXG4gICAgICAgICAgICAuZmlsdGVyKGZ1bmN0aW9uIChkLCBpLCBhcnIpIHtcbiAgICAgICAgICAgIHJldHVybiBzZWxmLmNvbmZpZy5tb2RlICE9PSBcInJhbmdlXCIgfHxcbiAgICAgICAgICAgICAgICBzZWxmLmNvbmZpZy5lbmFibGVUaW1lIHx8XG4gICAgICAgICAgICAgICAgYXJyLmluZGV4T2YoZCkgPT09IGk7XG4gICAgICAgIH0pXG4gICAgICAgICAgICAuam9pbihzZWxmLmNvbmZpZy5tb2RlICE9PSBcInJhbmdlXCJcbiAgICAgICAgICAgID8gc2VsZi5jb25maWcuY29uanVuY3Rpb25cbiAgICAgICAgICAgIDogc2VsZi5sMTBuLnJhbmdlU2VwYXJhdG9yKTtcbiAgICB9XG4gICAgZnVuY3Rpb24gdXBkYXRlVmFsdWUodHJpZ2dlckNoYW5nZSkge1xuICAgICAgICBpZiAodHJpZ2dlckNoYW5nZSA9PT0gdm9pZCAwKSB7IHRyaWdnZXJDaGFuZ2UgPSB0cnVlOyB9XG4gICAgICAgIGlmIChzZWxmLm1vYmlsZUlucHV0ICE9PSB1bmRlZmluZWQgJiYgc2VsZi5tb2JpbGVGb3JtYXRTdHIpIHtcbiAgICAgICAgICAgIHNlbGYubW9iaWxlSW5wdXQudmFsdWUgPVxuICAgICAgICAgICAgICAgIHNlbGYubGF0ZXN0U2VsZWN0ZWREYXRlT2JqICE9PSB1bmRlZmluZWRcbiAgICAgICAgICAgICAgICAgICAgPyBzZWxmLmZvcm1hdERhdGUoc2VsZi5sYXRlc3RTZWxlY3RlZERhdGVPYmosIHNlbGYubW9iaWxlRm9ybWF0U3RyKVxuICAgICAgICAgICAgICAgICAgICA6IFwiXCI7XG4gICAgICAgIH1cbiAgICAgICAgc2VsZi5pbnB1dC52YWx1ZSA9IGdldERhdGVTdHIoc2VsZi5jb25maWcuZGF0ZUZvcm1hdCk7XG4gICAgICAgIGlmIChzZWxmLmFsdElucHV0ICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHNlbGYuYWx0SW5wdXQudmFsdWUgPSBnZXREYXRlU3RyKHNlbGYuY29uZmlnLmFsdEZvcm1hdCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRyaWdnZXJDaGFuZ2UgIT09IGZhbHNlKVxuICAgICAgICAgICAgdHJpZ2dlckV2ZW50KFwib25WYWx1ZVVwZGF0ZVwiKTtcbiAgICB9XG4gICAgZnVuY3Rpb24gb25Nb250aE5hdkNsaWNrKGUpIHtcbiAgICAgICAgdmFyIGV2ZW50VGFyZ2V0ID0gZ2V0RXZlbnRUYXJnZXQoZSk7XG4gICAgICAgIHZhciBpc1ByZXZNb250aCA9IHNlbGYucHJldk1vbnRoTmF2LmNvbnRhaW5zKGV2ZW50VGFyZ2V0KTtcbiAgICAgICAgdmFyIGlzTmV4dE1vbnRoID0gc2VsZi5uZXh0TW9udGhOYXYuY29udGFpbnMoZXZlbnRUYXJnZXQpO1xuICAgICAgICBpZiAoaXNQcmV2TW9udGggfHwgaXNOZXh0TW9udGgpIHtcbiAgICAgICAgICAgIGNoYW5nZU1vbnRoKGlzUHJldk1vbnRoID8gLTEgOiAxKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChzZWxmLnllYXJFbGVtZW50cy5pbmRleE9mKGV2ZW50VGFyZ2V0KSA+PSAwKSB7XG4gICAgICAgICAgICBldmVudFRhcmdldC5zZWxlY3QoKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChldmVudFRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoXCJhcnJvd1VwXCIpKSB7XG4gICAgICAgICAgICBzZWxmLmNoYW5nZVllYXIoc2VsZi5jdXJyZW50WWVhciArIDEpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGV2ZW50VGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucyhcImFycm93RG93blwiKSkge1xuICAgICAgICAgICAgc2VsZi5jaGFuZ2VZZWFyKHNlbGYuY3VycmVudFllYXIgLSAxKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBmdW5jdGlvbiB0aW1lV3JhcHBlcihlKSB7XG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgdmFyIGlzS2V5RG93biA9IGUudHlwZSA9PT0gXCJrZXlkb3duXCIsIGV2ZW50VGFyZ2V0ID0gZ2V0RXZlbnRUYXJnZXQoZSksIGlucHV0ID0gZXZlbnRUYXJnZXQ7XG4gICAgICAgIGlmIChzZWxmLmFtUE0gIT09IHVuZGVmaW5lZCAmJiBldmVudFRhcmdldCA9PT0gc2VsZi5hbVBNKSB7XG4gICAgICAgICAgICBzZWxmLmFtUE0udGV4dENvbnRlbnQgPVxuICAgICAgICAgICAgICAgIHNlbGYubDEwbi5hbVBNW2ludChzZWxmLmFtUE0udGV4dENvbnRlbnQgPT09IHNlbGYubDEwbi5hbVBNWzBdKV07XG4gICAgICAgIH1cbiAgICAgICAgdmFyIG1pbiA9IHBhcnNlRmxvYXQoaW5wdXQuZ2V0QXR0cmlidXRlKFwibWluXCIpKSwgbWF4ID0gcGFyc2VGbG9hdChpbnB1dC5nZXRBdHRyaWJ1dGUoXCJtYXhcIikpLCBzdGVwID0gcGFyc2VGbG9hdChpbnB1dC5nZXRBdHRyaWJ1dGUoXCJzdGVwXCIpKSwgY3VyVmFsdWUgPSBwYXJzZUludChpbnB1dC52YWx1ZSwgMTApLCBkZWx0YSA9IGUuZGVsdGEgfHxcbiAgICAgICAgICAgIChpc0tleURvd24gPyAoZS53aGljaCA9PT0gMzggPyAxIDogLTEpIDogMCk7XG4gICAgICAgIHZhciBuZXdWYWx1ZSA9IGN1clZhbHVlICsgc3RlcCAqIGRlbHRhO1xuICAgICAgICBpZiAodHlwZW9mIGlucHV0LnZhbHVlICE9PSBcInVuZGVmaW5lZFwiICYmIGlucHV0LnZhbHVlLmxlbmd0aCA9PT0gMikge1xuICAgICAgICAgICAgdmFyIGlzSG91ckVsZW0gPSBpbnB1dCA9PT0gc2VsZi5ob3VyRWxlbWVudCwgaXNNaW51dGVFbGVtID0gaW5wdXQgPT09IHNlbGYubWludXRlRWxlbWVudDtcbiAgICAgICAgICAgIGlmIChuZXdWYWx1ZSA8IG1pbikge1xuICAgICAgICAgICAgICAgIG5ld1ZhbHVlID1cbiAgICAgICAgICAgICAgICAgICAgbWF4ICtcbiAgICAgICAgICAgICAgICAgICAgICAgIG5ld1ZhbHVlICtcbiAgICAgICAgICAgICAgICAgICAgICAgIGludCghaXNIb3VyRWxlbSkgK1xuICAgICAgICAgICAgICAgICAgICAgICAgKGludChpc0hvdXJFbGVtKSAmJiBpbnQoIXNlbGYuYW1QTSkpO1xuICAgICAgICAgICAgICAgIGlmIChpc01pbnV0ZUVsZW0pXG4gICAgICAgICAgICAgICAgICAgIGluY3JlbWVudE51bUlucHV0KHVuZGVmaW5lZCwgLTEsIHNlbGYuaG91ckVsZW1lbnQpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAobmV3VmFsdWUgPiBtYXgpIHtcbiAgICAgICAgICAgICAgICBuZXdWYWx1ZSA9XG4gICAgICAgICAgICAgICAgICAgIGlucHV0ID09PSBzZWxmLmhvdXJFbGVtZW50ID8gbmV3VmFsdWUgLSBtYXggLSBpbnQoIXNlbGYuYW1QTSkgOiBtaW47XG4gICAgICAgICAgICAgICAgaWYgKGlzTWludXRlRWxlbSlcbiAgICAgICAgICAgICAgICAgICAgaW5jcmVtZW50TnVtSW5wdXQodW5kZWZpbmVkLCAxLCBzZWxmLmhvdXJFbGVtZW50KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChzZWxmLmFtUE0gJiZcbiAgICAgICAgICAgICAgICBpc0hvdXJFbGVtICYmXG4gICAgICAgICAgICAgICAgKHN0ZXAgPT09IDFcbiAgICAgICAgICAgICAgICAgICAgPyBuZXdWYWx1ZSArIGN1clZhbHVlID09PSAyM1xuICAgICAgICAgICAgICAgICAgICA6IE1hdGguYWJzKG5ld1ZhbHVlIC0gY3VyVmFsdWUpID4gc3RlcCkpIHtcbiAgICAgICAgICAgICAgICBzZWxmLmFtUE0udGV4dENvbnRlbnQgPVxuICAgICAgICAgICAgICAgICAgICBzZWxmLmwxMG4uYW1QTVtpbnQoc2VsZi5hbVBNLnRleHRDb250ZW50ID09PSBzZWxmLmwxMG4uYW1QTVswXSldO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaW5wdXQudmFsdWUgPSBwYWQobmV3VmFsdWUpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGluaXQoKTtcbiAgICByZXR1cm4gc2VsZjtcbn1cbmZ1bmN0aW9uIF9mbGF0cGlja3Iobm9kZUxpc3QsIGNvbmZpZykge1xuICAgIHZhciBub2RlcyA9IEFycmF5LnByb3RvdHlwZS5zbGljZVxuICAgICAgICAuY2FsbChub2RlTGlzdClcbiAgICAgICAgLmZpbHRlcihmdW5jdGlvbiAoeCkgeyByZXR1cm4geCBpbnN0YW5jZW9mIEhUTUxFbGVtZW50OyB9KTtcbiAgICB2YXIgaW5zdGFuY2VzID0gW107XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBub2Rlcy5sZW5ndGg7IGkrKykge1xuICAgICAgICB2YXIgbm9kZSA9IG5vZGVzW2ldO1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgaWYgKG5vZGUuZ2V0QXR0cmlidXRlKFwiZGF0YS1mcC1vbWl0XCIpICE9PSBudWxsKVxuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgaWYgKG5vZGUuX2ZsYXRwaWNrciAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgbm9kZS5fZmxhdHBpY2tyLmRlc3Ryb3koKTtcbiAgICAgICAgICAgICAgICBub2RlLl9mbGF0cGlja3IgPSB1bmRlZmluZWQ7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBub2RlLl9mbGF0cGlja3IgPSBGbGF0cGlja3JJbnN0YW5jZShub2RlLCBjb25maWcgfHwge30pO1xuICAgICAgICAgICAgaW5zdGFuY2VzLnB1c2gobm9kZS5fZmxhdHBpY2tyKTtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZSkge1xuICAgICAgICAgICAgY29uc29sZS5lcnJvcihlKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gaW5zdGFuY2VzLmxlbmd0aCA9PT0gMSA/IGluc3RhbmNlc1swXSA6IGluc3RhbmNlcztcbn1cbmlmICh0eXBlb2YgSFRNTEVsZW1lbnQgIT09IFwidW5kZWZpbmVkXCIgJiZcbiAgICB0eXBlb2YgSFRNTENvbGxlY3Rpb24gIT09IFwidW5kZWZpbmVkXCIgJiZcbiAgICB0eXBlb2YgTm9kZUxpc3QgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICBIVE1MQ29sbGVjdGlvbi5wcm90b3R5cGUuZmxhdHBpY2tyID0gTm9kZUxpc3QucHJvdG90eXBlLmZsYXRwaWNrciA9IGZ1bmN0aW9uIChjb25maWcpIHtcbiAgICAgICAgcmV0dXJuIF9mbGF0cGlja3IodGhpcywgY29uZmlnKTtcbiAgICB9O1xuICAgIEhUTUxFbGVtZW50LnByb3RvdHlwZS5mbGF0cGlja3IgPSBmdW5jdGlvbiAoY29uZmlnKSB7XG4gICAgICAgIHJldHVybiBfZmxhdHBpY2tyKFt0aGlzXSwgY29uZmlnKTtcbiAgICB9O1xufVxudmFyIGZsYXRwaWNrciA9IGZ1bmN0aW9uIChzZWxlY3RvciwgY29uZmlnKSB7XG4gICAgaWYgKHR5cGVvZiBzZWxlY3RvciA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICByZXR1cm4gX2ZsYXRwaWNrcih3aW5kb3cuZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChzZWxlY3RvciksIGNvbmZpZyk7XG4gICAgfVxuICAgIGVsc2UgaWYgKHNlbGVjdG9yIGluc3RhbmNlb2YgTm9kZSkge1xuICAgICAgICByZXR1cm4gX2ZsYXRwaWNrcihbc2VsZWN0b3JdLCBjb25maWcpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgcmV0dXJuIF9mbGF0cGlja3Ioc2VsZWN0b3IsIGNvbmZpZyk7XG4gICAgfVxufTtcbmZsYXRwaWNrci5kZWZhdWx0Q29uZmlnID0ge307XG5mbGF0cGlja3IubDEwbnMgPSB7XG4gICAgZW46IF9fYXNzaWduKHt9LCBFbmdsaXNoKSxcbiAgICBkZWZhdWx0OiBfX2Fzc2lnbih7fSwgRW5nbGlzaCksXG59O1xuZmxhdHBpY2tyLmxvY2FsaXplID0gZnVuY3Rpb24gKGwxMG4pIHtcbiAgICBmbGF0cGlja3IubDEwbnMuZGVmYXVsdCA9IF9fYXNzaWduKF9fYXNzaWduKHt9LCBmbGF0cGlja3IubDEwbnMuZGVmYXVsdCksIGwxMG4pO1xufTtcbmZsYXRwaWNrci5zZXREZWZhdWx0cyA9IGZ1bmN0aW9uIChjb25maWcpIHtcbiAgICBmbGF0cGlja3IuZGVmYXVsdENvbmZpZyA9IF9fYXNzaWduKF9fYXNzaWduKHt9LCBmbGF0cGlja3IuZGVmYXVsdENvbmZpZyksIGNvbmZpZyk7XG59O1xuZmxhdHBpY2tyLnBhcnNlRGF0ZSA9IGNyZWF0ZURhdGVQYXJzZXIoe30pO1xuZmxhdHBpY2tyLmZvcm1hdERhdGUgPSBjcmVhdGVEYXRlRm9ybWF0dGVyKHt9KTtcbmZsYXRwaWNrci5jb21wYXJlRGF0ZXMgPSBjb21wYXJlRGF0ZXM7XG5pZiAodHlwZW9mIGpRdWVyeSAhPT0gXCJ1bmRlZmluZWRcIiAmJiB0eXBlb2YgalF1ZXJ5LmZuICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgalF1ZXJ5LmZuLmZsYXRwaWNrciA9IGZ1bmN0aW9uIChjb25maWcpIHtcbiAgICAgICAgcmV0dXJuIF9mbGF0cGlja3IodGhpcywgY29uZmlnKTtcbiAgICB9O1xufVxuRGF0ZS5wcm90b3R5cGUuZnBfaW5jciA9IGZ1bmN0aW9uIChkYXlzKSB7XG4gICAgcmV0dXJuIG5ldyBEYXRlKHRoaXMuZ2V0RnVsbFllYXIoKSwgdGhpcy5nZXRNb250aCgpLCB0aGlzLmdldERhdGUoKSArICh0eXBlb2YgZGF5cyA9PT0gXCJzdHJpbmdcIiA/IHBhcnNlSW50KGRheXMsIDEwKSA6IGRheXMpKTtcbn07XG5pZiAodHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHdpbmRvdy5mbGF0cGlja3IgPSBmbGF0cGlja3I7XG59XG5leHBvcnQgZGVmYXVsdCBmbGF0cGlja3I7XG4iLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi8uLi9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uLy4uL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uLy4uL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi8uLi9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uLy4uL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uLy4uL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uLy4uL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9mbGF0cGlja3IubWluLmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xub3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi8uLi9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vZmxhdHBpY2tyLm1pbi5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCJpbXBvcnQgQWJzdHJhY3RTdGF0ZWZ1bFZpZXcgZnJvbSAnLi4vZnJhbWV3b3JrL3ZpZXcvYWJzdHJhY3Qtc3RhdGVmdWwtdmlldy5qcyc7XG5pbXBvcnQgZmxhdHBpY2tyIGZyb20gJ2ZsYXRwaWNrcic7XG5pbXBvcnQgJ2ZsYXRwaWNrci9kaXN0L2ZsYXRwaWNrci5taW4uY3NzJztcbmltcG9ydCBkYXlqcyBmcm9tICdkYXlqcyc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEZvcm1FZGl0VmlldyBleHRlbmRzIEFic3RyYWN0U3RhdGVmdWxWaWV3IHtcbiAgI2ZsYXRwaWNrclN0YXJ0ID0gbnVsbDtcbiAgI2ZsYXRwaWNrckVuZCA9IG51bGw7XG5cbiAgY29uc3RydWN0b3IocG9pbnQsIGRlc3RpbmF0aW9ucywgb2ZmZXJzLCBvbkZvcm1TdWJtaXQsIG9uRm9ybUNsb3NlLCBvbkZvcm1EZWxldGUpIHtcbiAgICBzdXBlcigpO1xuICAgIHRoaXMuX3N0YXRlID0gRm9ybUVkaXRWaWV3LnBhcnNlUG9pbnRUb1N0YXRlKHBvaW50KTtcbiAgICB0aGlzLl9kZXN0aW5hdGlvbnMgPSBkZXN0aW5hdGlvbnM7XG4gICAgdGhpcy5fb2ZmZXJzID0gb2ZmZXJzO1xuXG4gICAgdGhpcy5fb25Gb3JtU3VibWl0ID0gb25Gb3JtU3VibWl0O1xuICAgIHRoaXMuX29uRm9ybUNsb3NlID0gb25Gb3JtQ2xvc2U7XG4gICAgdGhpcy5fb25Gb3JtRGVsZXRlID0gb25Gb3JtRGVsZXRlO1xuXG4gICAgdGhpcy5fcmVzdG9yZUhhbmRsZXJzKCk7XG4gIH1cblxuICBnZXQgdGVtcGxhdGUoKSB7XG4gICAgY29uc3QgY3VycmVudERlc3RpbmF0aW9uID0gdGhpcy5fZGVzdGluYXRpb25zLmZpbmQoKGQpID0+IGQuaWQgPT09IHRoaXMuX3N0YXRlLmRlc3RpbmF0aW9uKTtcbiAgICBjb25zdCBjdXJyZW50T2ZmZXJzID0gdGhpcy5fb2ZmZXJzW3RoaXMuX3N0YXRlLnR5cGVdIHx8IFtdO1xuXG4gICAgcmV0dXJuIGBcbiAgICAgIDxmb3JtIGNsYXNzPVwiZXZlbnQgZXZlbnQtLWVkaXRcIiBhY3Rpb249XCIjXCIgbWV0aG9kPVwicG9zdFwiPlxuICAgICAgICA8aGVhZGVyIGNsYXNzPVwiZXZlbnRfX2hlYWRlclwiPlxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJldmVudF9fdHlwZS13cmFwcGVyXCI+XG4gICAgICAgICAgICA8bGFiZWwgY2xhc3M9XCJldmVudF9fdHlwZSAgZXZlbnRfX3R5cGUtYnRuXCIgZm9yPVwiZXZlbnQtdHlwZS10b2dnbGUtMVwiPlxuICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cInZpc3VhbGx5LWhpZGRlblwiPkNob29zZSBldmVudCB0eXBlPC9zcGFuPlxuICAgICAgICAgICAgICA8aW1nIGNsYXNzPVwiZXZlbnRfX3R5cGUtaWNvblwiIHdpZHRoPVwiMTdcIiBoZWlnaHQ9XCIxN1wiIHNyYz1cImltZy9pY29ucy8ke3RoaXMuX3N0YXRlLnR5cGV9LnBuZ1wiIGFsdD1cIkV2ZW50IHR5cGUgaWNvblwiPlxuICAgICAgICAgICAgPC9sYWJlbD5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJldmVudF9fdHlwZS1saXN0XCI+XG4gICAgICAgICAgICAgIDxmaWVsZHNldCBjbGFzcz1cImV2ZW50X190eXBlLWdyb3VwXCI+XG4gICAgICAgICAgICAgICAgPGxlZ2VuZCBjbGFzcz1cInZpc3VhbGx5LWhpZGRlblwiPkV2ZW50IHR5cGU8L2xlZ2VuZD5cbiAgICAgICAgICAgICAgICAke09iamVjdC5rZXlzKHRoaXMuX29mZmVycykubWFwKCh0eXBlKSA9PiBgXG4gICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZXZlbnRfX3R5cGUtaXRlbVwiPlxuICAgICAgICAgICAgICAgICAgICA8aW5wdXQgaWQ9XCJldmVudC10eXBlLSR7dHlwZX0tMVwiIGNsYXNzPVwiZXZlbnRfX3R5cGUtaW5wdXQgIHZpc3VhbGx5LWhpZGRlblwiIHR5cGU9XCJyYWRpb1wiIG5hbWU9XCJldmVudC10eXBlXCIgdmFsdWU9XCIke3R5cGV9XCIgJHt0eXBlID09PSB0aGlzLl9zdGF0ZS50eXBlID8gJ2NoZWNrZWQnIDogJyd9PlxuICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3M9XCJldmVudF9fdHlwZS1sYWJlbCAgZXZlbnRfX3R5cGUtbGFiZWwtLSR7dHlwZX1cIiBmb3I9XCJldmVudC10eXBlLSR7dHlwZX0tMVwiPiR7dHlwZX08L2xhYmVsPlxuICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgYCkuam9pbignJyl9XG4gICAgICAgICAgICAgIDwvZmllbGRzZXQ+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJldmVudF9fZmllbGQtZ3JvdXAgIGV2ZW50X19maWVsZC1ncm91cC0tZGVzdGluYXRpb25cIj5cbiAgICAgICAgICAgIDxsYWJlbCBjbGFzcz1cImV2ZW50X19sYWJlbCAgZXZlbnRfX3R5cGUtb3V0cHV0XCIgZm9yPVwiZXZlbnQtZGVzdGluYXRpb24tMVwiPlxuICAgICAgICAgICAgICAke3RoaXMuX3N0YXRlLnR5cGV9XG4gICAgICAgICAgICA8L2xhYmVsPlxuICAgICAgICAgICAgPGlucHV0IGNsYXNzPVwiZXZlbnRfX2lucHV0ICBldmVudF9faW5wdXQtLWRlc3RpbmF0aW9uXCIgaWQ9XCJldmVudC1kZXN0aW5hdGlvbi0xXCIgdHlwZT1cInRleHRcIiBuYW1lPVwiZXZlbnQtZGVzdGluYXRpb25cIiB2YWx1ZT1cIiR7Y3VycmVudERlc3RpbmF0aW9uID8gY3VycmVudERlc3RpbmF0aW9uLm5hbWUgOiAnJ31cIiBsaXN0PVwiZGVzdGluYXRpb24tbGlzdC0xXCI+XG4gICAgICAgICAgICA8ZGF0YWxpc3QgaWQ9XCJkZXN0aW5hdGlvbi1saXN0LTFcIj5cbiAgICAgICAgICAgICAgJHt0aGlzLl9kZXN0aW5hdGlvbnMubWFwKChkZXN0KSA9PiBgPG9wdGlvbiB2YWx1ZT1cIiR7ZGVzdC5uYW1lfVwiPjwvb3B0aW9uPmApLmpvaW4oJycpfVxuICAgICAgICAgICAgPC9kYXRhbGlzdD5cbiAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJldmVudF9fZmllbGQtZ3JvdXAgIGV2ZW50X19maWVsZC1ncm91cC0tdGltZVwiPlxuICAgICAgICAgICAgPGxhYmVsIGNsYXNzPVwidmlzdWFsbHktaGlkZGVuXCIgZm9yPVwiZXZlbnQtc3RhcnQtdGltZS0xXCI+U3RhcnQgdGltZTwvbGFiZWw+XG4gICAgICAgICAgICA8aW5wdXQgY2xhc3M9XCJldmVudF9faW5wdXQgIGV2ZW50X19pbnB1dC0tdGltZVwiIGlkPVwiZXZlbnQtc3RhcnQtdGltZS0xXCIgdHlwZT1cInRleHRcIiBuYW1lPVwiZXZlbnQtc3RhcnRcIiB2YWx1ZT1cIiR7ZGF5anModGhpcy5fc3RhdGUuZGF0ZUZyb20pLmZvcm1hdCgnREQvTU0vWVlZWSBISDptbScpfVwiPlxuICAgICAgICAgICAgJm1kYXNoO1xuICAgICAgICAgICAgPGxhYmVsIGNsYXNzPVwidmlzdWFsbHktaGlkZGVuXCIgZm9yPVwiZXZlbnQtZW5kLXRpbWUtMVwiPkVuZCB0aW1lPC9sYWJlbD5cbiAgICAgICAgICAgIDxpbnB1dCBjbGFzcz1cImV2ZW50X19pbnB1dCAgZXZlbnRfX2lucHV0LS10aW1lXCIgaWQ9XCJldmVudC1lbmQtdGltZS0xXCIgdHlwZT1cInRleHRcIiBuYW1lPVwiZXZlbnQtZW5kXCIgdmFsdWU9XCIke2RheWpzKHRoaXMuX3N0YXRlLmRhdGVUbykuZm9ybWF0KCdERC9NTS9ZWVlZIEhIOm1tJyl9XCI+XG4gICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICA8ZGl2IGNsYXNzPVwiZXZlbnRfX2ZpZWxkLWdyb3VwICBldmVudF9fZmllbGQtZ3JvdXAtLXByaWNlXCI+XG4gICAgICAgICAgICA8bGFiZWwgY2xhc3M9XCJldmVudF9fbGFiZWxcIiBmb3I9XCJldmVudC1wcmljZS0xXCI+XG4gICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwidmlzdWFsbHktaGlkZGVuXCI+UHJpY2U8L3NwYW4+XG4gICAgICAgICAgICAgICZldXJvO1xuICAgICAgICAgICAgPC9sYWJlbD5cbiAgICAgICAgICAgIDxpbnB1dCBjbGFzcz1cImV2ZW50X19pbnB1dCAgZXZlbnRfX2lucHV0LS1wcmljZVwiIGlkPVwiZXZlbnQtcHJpY2UtMVwiIHR5cGU9XCJ0ZXh0XCIgbmFtZT1cImV2ZW50LXByaWNlXCIgdmFsdWU9XCIke3RoaXMuX3N0YXRlLmJhc2VQcmljZX1cIj5cbiAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgIDxidXR0b24gY2xhc3M9XCJldmVudF9fc2F2ZS1idG4gIGJ0biAgYnRuLS1ibHVlXCIgdHlwZT1cInN1Ym1pdFwiPlNhdmU8L2J1dHRvbj5cbiAgICAgICAgICA8YnV0dG9uIGNsYXNzPVwiZXZlbnRfX3Jlc2V0LWJ0blwiIHR5cGU9XCJyZXNldFwiPkRlbGV0ZTwvYnV0dG9uPlxuICAgICAgICAgIDxidXR0b24gY2xhc3M9XCJldmVudF9fcm9sbHVwLWJ0blwiIHR5cGU9XCJidXR0b25cIj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwidmlzdWFsbHktaGlkZGVuXCI+T3BlbiBldmVudDwvc3Bhbj5cbiAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgPC9oZWFkZXI+XG5cbiAgICAgICAgPHNlY3Rpb24gY2xhc3M9XCJldmVudF9fZGV0YWlsc1wiPlxuICAgICAgICAgIDxzZWN0aW9uIGNsYXNzPVwiZXZlbnRfX3NlY3Rpb24gIGV2ZW50X19zZWN0aW9uLS1vZmZlcnNcIj5cbiAgICAgICAgICAgIDxoMyBjbGFzcz1cImV2ZW50X19zZWN0aW9uLXRpdGxlICBldmVudF9fc2VjdGlvbi10aXRsZS0tb2ZmZXJzXCI+T2ZmZXJzPC9oMz5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJldmVudF9fYXZhaWxhYmxlLW9mZmVyc1wiPlxuICAgICAgICAgICAgICAke2N1cnJlbnRPZmZlcnMubWFwKChvZmZlcikgPT4gYFxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJldmVudF9fb2ZmZXItc2VsZWN0b3JcIj5cbiAgICAgICAgICAgICAgICAgIDxpbnB1dCBjbGFzcz1cImV2ZW50X19vZmZlci1jaGVja2JveCAgdmlzdWFsbHktaGlkZGVuXCIgaWQ9XCIke29mZmVyLmlkfVwiIHR5cGU9XCJjaGVja2JveFwiIG5hbWU9XCJldmVudC1vZmZlclwiIHZhbHVlPVwiJHtvZmZlci5pZH1cIiAke3RoaXMuX3N0YXRlLm9mZmVycy5pbmNsdWRlcyhvZmZlci5pZCkgPyAnY2hlY2tlZCcgOiAnJ30+XG4gICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3M9XCJldmVudF9fb2ZmZXItbGFiZWxcIiBmb3I9XCIke29mZmVyLmlkfVwiPlxuICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cImV2ZW50X19vZmZlci10aXRsZVwiPiR7b2ZmZXIudGl0bGV9PC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICAmcGx1czsmZXVybzsmbmJzcDs8c3BhbiBjbGFzcz1cImV2ZW50X19vZmZlci1wcmljZVwiPiR7b2ZmZXIucHJpY2V9PC9zcGFuPlxuICAgICAgICAgICAgICAgICAgPC9sYWJlbD5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgYCkuam9pbignJyl9XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8L3NlY3Rpb24+XG5cbiAgICAgICAgICA8c2VjdGlvbiBjbGFzcz1cImV2ZW50X19zZWN0aW9uICBldmVudF9fc2VjdGlvbi0tZGVzdGluYXRpb25cIj5cbiAgICAgICAgICAgIDxoMyBjbGFzcz1cImV2ZW50X19zZWN0aW9uLXRpdGxlICBldmVudF9fc2VjdGlvbi10aXRsZS0tZGVzdGluYXRpb25cIj5EZXN0aW5hdGlvbjwvaDM+XG4gICAgICAgICAgICA8cCBjbGFzcz1cImV2ZW50X19kZXN0aW5hdGlvbi1kZXNjcmlwdGlvblwiPiR7Y3VycmVudERlc3RpbmF0aW9uPy5kZXNjcmlwdGlvbiB8fCAnJ308L3A+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZXZlbnRfX3Bob3Rvcy1jb250YWluZXJcIj5cbiAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImV2ZW50X19waG90b3MtdGFwZVwiPlxuICAgICAgICAgICAgICAgICR7KGN1cnJlbnREZXN0aW5hdGlvbj8ucGljdHVyZXMgfHwgW10pLm1hcCgocGljKSA9PiBgPGltZyBjbGFzcz1cImV2ZW50X19waG90b1wiIHNyYz1cIiR7cGljLnNyY31cIiBhbHQ9XCIke3BpYy5kZXNjcmlwdGlvbn1cIj5gKS5qb2luKCcnKX1cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8L3NlY3Rpb24+XG4gICAgICAgIDwvc2VjdGlvbj5cbiAgICAgIDwvZm9ybT5cbiAgICBgO1xuICB9XG5cbiAgX3Jlc3RvcmVIYW5kbGVycygpIHtcbiAgICB0aGlzLl9zZXRJbm5lckhhbmRsZXJzKCk7XG5cbiAgICB0aGlzLmVsZW1lbnQucXVlcnlTZWxlY3RvcignLmV2ZW50X19yb2xsdXAtYnRuJylcbiAgICAgIC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMuI2Zvcm1DbG9zZUhhbmRsZXIpO1xuICAgIHRoaXMuZWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCdzdWJtaXQnLCB0aGlzLiNmb3JtU3VibWl0SGFuZGxlcik7XG4gICAgdGhpcy5lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5ldmVudF9fcmVzZXQtYnRuJylcbiAgICAgIC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMuI2Zvcm1EZWxldGVIYW5kbGVyKTtcbiAgfVxuXG4gIF9zZXRJbm5lckhhbmRsZXJzKCkge1xuICAgIHRoaXMuZWxlbWVudC5xdWVyeVNlbGVjdG9yQWxsKCdpbnB1dFtuYW1lPVwiZXZlbnQtdHlwZVwiXScpLmZvckVhY2goKGlucHV0KSA9PiB7XG4gICAgICBpbnB1dC5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCB0aGlzLiN0eXBlQ2hhbmdlSGFuZGxlcik7XG4gICAgfSk7XG5cbiAgICB0aGlzLmVsZW1lbnQucXVlcnlTZWxlY3RvcignLmV2ZW50X19pbnB1dC0tZGVzdGluYXRpb24nKVxuICAgICAgLmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIHRoaXMuI2Rlc3RpbmF0aW9uQ2hhbmdlSGFuZGxlcik7XG5cbiAgICB0aGlzLmVsZW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmV2ZW50X19vZmZlci1jaGVja2JveCcpLmZvckVhY2goKGNoZWNrYm94KSA9PiB7XG4gICAgICBjaGVja2JveC5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCB0aGlzLiNvZmZlcnNDaGFuZ2VIYW5kbGVyKTtcbiAgICB9KTtcblxuICAgIGlmICh0aGlzLiNmbGF0cGlja3JTdGFydCkge1xuICAgICAgdGhpcy4jZmxhdHBpY2tyU3RhcnQuZGVzdHJveSgpO1xuICAgICAgdGhpcy4jZmxhdHBpY2tyU3RhcnQgPSBudWxsO1xuICAgIH1cbiAgICBpZiAodGhpcy4jZmxhdHBpY2tyRW5kKSB7XG4gICAgICB0aGlzLiNmbGF0cGlja3JFbmQuZGVzdHJveSgpO1xuICAgICAgdGhpcy4jZmxhdHBpY2tyRW5kID0gbnVsbDtcbiAgICB9XG5cbiAgICB0aGlzLiNmbGF0cGlja3JTdGFydCA9IGZsYXRwaWNrcihcbiAgICAgIHRoaXMuZWxlbWVudC5xdWVyeVNlbGVjdG9yKCdpbnB1dFtuYW1lPVwiZXZlbnQtc3RhcnRcIl0nKSxcbiAgICAgIHtcbiAgICAgICAgZW5hYmxlVGltZTogdHJ1ZSxcbiAgICAgICAgZGF0ZUZvcm1hdDogJ2QvbS9ZIEg6aScsXG4gICAgICAgIGRlZmF1bHREYXRlOiB0aGlzLl9zdGF0ZS5kYXRlRnJvbSxcbiAgICAgICAgb25DaGFuZ2U6IHRoaXMuI2RhdGVGcm9tQ2hhbmdlSGFuZGxlcixcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGNhbWVsY2FzZVxuICAgICAgICB0aW1lXzI0aHI6IHRydWUsXG4gICAgICB9XG4gICAgKTtcblxuICAgIHRoaXMuI2ZsYXRwaWNrckVuZCA9IGZsYXRwaWNrcihcbiAgICAgIHRoaXMuZWxlbWVudC5xdWVyeVNlbGVjdG9yKCdpbnB1dFtuYW1lPVwiZXZlbnQtZW5kXCJdJyksXG4gICAgICB7XG4gICAgICAgIGVuYWJsZVRpbWU6IHRydWUsXG4gICAgICAgIGRhdGVGb3JtYXQ6ICdkL20vWSBIOmknLFxuICAgICAgICBkZWZhdWx0RGF0ZTogdGhpcy5fc3RhdGUuZGF0ZVRvLFxuICAgICAgICBvbkNoYW5nZTogdGhpcy4jZGF0ZVRvQ2hhbmdlSGFuZGxlcixcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGNhbWVsY2FzZVxuICAgICAgICB0aW1lXzI0aHI6IHRydWUsXG4gICAgICB9XG4gICAgKTtcbiAgfVxuXG4gICN0eXBlQ2hhbmdlSGFuZGxlciA9IChldnQpID0+IHtcbiAgICBldnQucHJldmVudERlZmF1bHQoKTtcbiAgICB0aGlzLnVwZGF0ZUVsZW1lbnQoe1xuICAgICAgLi4udGhpcy5fc3RhdGUsXG4gICAgICB0eXBlOiBldnQudGFyZ2V0LnZhbHVlLFxuICAgICAgb2ZmZXJzOiBbXVxuICAgIH0pO1xuICB9O1xuXG4gICNkZXN0aW5hdGlvbkNoYW5nZUhhbmRsZXIgPSAoZXZ0KSA9PiB7XG4gICAgY29uc3Qgc2VsZWN0ZWREZXN0aW5hdGlvbiA9IHRoaXMuX2Rlc3RpbmF0aW9ucy5maW5kKChkZXN0KSA9PiBkZXN0Lm5hbWUgPT09IGV2dC50YXJnZXQudmFsdWUpO1xuICAgIGlmICghc2VsZWN0ZWREZXN0aW5hdGlvbikge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHRoaXMudXBkYXRlRWxlbWVudCh7XG4gICAgICAuLi50aGlzLl9zdGF0ZSxcbiAgICAgIGRlc3RpbmF0aW9uOiBzZWxlY3RlZERlc3RpbmF0aW9uLmlkXG4gICAgfSk7XG4gIH07XG5cbiAgI29mZmVyc0NoYW5nZUhhbmRsZXIgPSAoKSA9PiB7XG4gICAgY29uc3Qgc2VsZWN0ZWRPZmZlcnMgPSBBcnJheS5mcm9tKHRoaXMuZWxlbWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuZXZlbnRfX29mZmVyLWNoZWNrYm94OmNoZWNrZWQnKSlcbiAgICAgIC5tYXAoKGlucHV0KSA9PiBpbnB1dC52YWx1ZSk7XG5cbiAgICB0aGlzLl9zZXRTdGF0ZSh7XG4gICAgICAuLi50aGlzLl9zdGF0ZSxcbiAgICAgIG9mZmVyczogc2VsZWN0ZWRPZmZlcnNcbiAgICB9KTtcbiAgfTtcblxuICAjZGF0ZUZyb21DaGFuZ2VIYW5kbGVyID0gKFtzZWxlY3RlZERhdGVdKSA9PiB7XG4gICAgdGhpcy5fc2V0U3RhdGUoe1xuICAgICAgLi4udGhpcy5fc3RhdGUsXG4gICAgICBkYXRlRnJvbTogc2VsZWN0ZWREYXRlXG4gICAgfSk7XG4gIH07XG5cbiAgI2RhdGVUb0NoYW5nZUhhbmRsZXIgPSAoW3NlbGVjdGVkRGF0ZV0pID0+IHtcbiAgICB0aGlzLl9zZXRTdGF0ZSh7XG4gICAgICAuLi50aGlzLl9zdGF0ZSxcbiAgICAgIGRhdGVUbzogc2VsZWN0ZWREYXRlXG4gICAgfSk7XG4gIH07XG5cbiAgI2Zvcm1TdWJtaXRIYW5kbGVyID0gKGV2dCkgPT4ge1xuICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIHRoaXMuX29uRm9ybVN1Ym1pdChGb3JtRWRpdFZpZXcucGFyc2VTdGF0ZVRvUG9pbnQodGhpcy5fc3RhdGUpKTtcbiAgfTtcblxuICAjZm9ybUNsb3NlSGFuZGxlciA9IChldnQpID0+IHtcbiAgICBldnQucHJldmVudERlZmF1bHQoKTtcbiAgICB0aGlzLl9vbkZvcm1DbG9zZSgpO1xuICB9O1xuXG4gICNmb3JtRGVsZXRlSGFuZGxlciA9IChldnQpID0+IHtcbiAgICBldnQucHJldmVudERlZmF1bHQoKTtcbiAgICB0aGlzLl9vbkZvcm1EZWxldGUoRm9ybUVkaXRWaWV3LnBhcnNlU3RhdGVUb1BvaW50KHRoaXMuX3N0YXRlKSk7XG4gIH07XG5cbiAgc3RhdGljIHBhcnNlUG9pbnRUb1N0YXRlKHBvaW50KSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIC4uLnBvaW50LFxuICAgICAgZGF0ZUZyb206IG5ldyBEYXRlKHBvaW50LmRhdGVGcm9tKSxcbiAgICAgIGRhdGVUbzogbmV3IERhdGUocG9pbnQuZGF0ZVRvKVxuICAgIH07XG4gIH1cblxuICBzdGF0aWMgcGFyc2VTdGF0ZVRvUG9pbnQoc3RhdGUpIHtcbiAgICByZXR1cm4ge1xuICAgICAgLi4uc3RhdGUsXG4gICAgICBkYXRlRnJvbTogc3RhdGUuZGF0ZUZyb20gaW5zdGFuY2VvZiBEYXRlID8gc3RhdGUuZGF0ZUZyb20udG9JU09TdHJpbmcoKSA6IHN0YXRlLmRhdGVGcm9tLFxuICAgICAgZGF0ZVRvOiBzdGF0ZS5kYXRlVG8gaW5zdGFuY2VvZiBEYXRlID8gc3RhdGUuZGF0ZVRvLnRvSVNPU3RyaW5nKCkgOiBzdGF0ZS5kYXRlVG9cbiAgICB9O1xuICB9XG59XG4iLCJpbXBvcnQgeyByZW5kZXIsIHJlcGxhY2UsIHJlbW92ZSB9IGZyb20gJy4uL2ZyYW1ld29yay9yZW5kZXIuanMnO1xuaW1wb3J0IFBvaW50VmlldyBmcm9tICcuLi92aWV3L3BvaW50LXZpZXcuanMnO1xuaW1wb3J0IEZvcm1FZGl0VmlldyBmcm9tICcuLi92aWV3L2Zvcm0tZWRpdC12aWV3LmpzJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9pbnRQcmVzZW50ZXIge1xuICAjcG9pbnQgPSBudWxsO1xuICAjZGVzdGluYXRpb25zID0gbnVsbDtcbiAgI29mZmVycyA9IG51bGw7XG4gICNwb2ludENvbXBvbmVudCA9IG51bGw7XG4gICNmb3JtRWRpdENvbXBvbmVudCA9IG51bGw7XG4gICNsaXN0Q29udGFpbmVyID0gbnVsbDtcblxuICAjaGFuZGxlRGF0YUNoYW5nZSA9IG51bGw7XG4gICNoYW5kbGVNb2RlQ2hhbmdlID0gbnVsbDtcblxuICAjbW9kZSA9ICdERUZBVUxUJztcblxuICBjb25zdHJ1Y3RvcihsaXN0Q29udGFpbmVyLCBoYW5kbGVEYXRhQ2hhbmdlLCBoYW5kbGVNb2RlQ2hhbmdlLCBkZXN0aW5hdGlvbnMsIG9mZmVycykge1xuICAgIHRoaXMuI2xpc3RDb250YWluZXIgPSBsaXN0Q29udGFpbmVyO1xuICAgIHRoaXMuI2hhbmRsZURhdGFDaGFuZ2UgPSBoYW5kbGVEYXRhQ2hhbmdlO1xuICAgIHRoaXMuI2hhbmRsZU1vZGVDaGFuZ2UgPSBoYW5kbGVNb2RlQ2hhbmdlO1xuICAgIHRoaXMuI2Rlc3RpbmF0aW9ucyA9IGRlc3RpbmF0aW9ucztcbiAgICB0aGlzLiNvZmZlcnMgPSBvZmZlcnM7XG4gIH1cblxuICBpbml0KHBvaW50KSB7XG4gICAgdGhpcy4jcG9pbnQgPSBwb2ludDtcblxuICAgIGNvbnN0IHByZXZQb2ludENvbXBvbmVudCA9IHRoaXMuI3BvaW50Q29tcG9uZW50O1xuICAgIGNvbnN0IHByZXZGb3JtRWRpdENvbXBvbmVudCA9IHRoaXMuI2Zvcm1FZGl0Q29tcG9uZW50O1xuXG4gICAgdGhpcy4jcG9pbnRDb21wb25lbnQgPSBuZXcgUG9pbnRWaWV3KFxuICAgICAgdGhpcy4jcG9pbnQsXG4gICAgICB0aGlzLiNkZXN0aW5hdGlvbnMsXG4gICAgICB0aGlzLiNvZmZlcnMsXG4gICAgICB0aGlzLiNoYW5kbGVFZGl0Q2xpY2ssXG4gICAgICB0aGlzLiNoYW5kbGVGYXZvcml0ZUNsaWNrXG4gICAgKTtcblxuICAgIHRoaXMuI2Zvcm1FZGl0Q29tcG9uZW50ID0gbmV3IEZvcm1FZGl0VmlldyhcbiAgICAgIHRoaXMuI3BvaW50LFxuICAgICAgdGhpcy4jZGVzdGluYXRpb25zLFxuICAgICAgdGhpcy4jb2ZmZXJzLFxuICAgICAgdGhpcy4jaGFuZGxlRm9ybVN1Ym1pdCxcbiAgICAgIHRoaXMuI2hhbmRsZUZvcm1DbG9zZVxuICAgICk7XG5cbiAgICBpZiAocHJldlBvaW50Q29tcG9uZW50ID09PSBudWxsIHx8IHByZXZGb3JtRWRpdENvbXBvbmVudCA9PT0gbnVsbCkge1xuICAgICAgcmVuZGVyKHRoaXMuI3BvaW50Q29tcG9uZW50LCB0aGlzLiNsaXN0Q29udGFpbmVyKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBpZiAodGhpcy4jbW9kZSA9PT0gJ0RFRkFVTFQnKSB7XG4gICAgICByZXBsYWNlKHRoaXMuI3BvaW50Q29tcG9uZW50LCBwcmV2UG9pbnRDb21wb25lbnQpO1xuICAgIH1cblxuICAgIGlmICh0aGlzLiNtb2RlID09PSAnRURJVElORycpIHtcbiAgICAgIHJlcGxhY2UodGhpcy4jZm9ybUVkaXRDb21wb25lbnQsIHByZXZGb3JtRWRpdENvbXBvbmVudCk7XG4gICAgfVxuXG4gICAgcmVtb3ZlKHByZXZQb2ludENvbXBvbmVudCk7XG4gICAgcmVtb3ZlKHByZXZGb3JtRWRpdENvbXBvbmVudCk7XG4gIH1cblxuICBkZXN0cm95KCkge1xuICAgIHJlbW92ZSh0aGlzLiNwb2ludENvbXBvbmVudCk7XG4gICAgcmVtb3ZlKHRoaXMuI2Zvcm1FZGl0Q29tcG9uZW50KTtcbiAgfVxuXG4gIHJlc2V0VmlldygpIHtcbiAgICBpZiAodGhpcy4jbW9kZSAhPT0gJ0RFRkFVTFQnKSB7XG4gICAgICB0aGlzLiNyZXBsYWNlRm9ybVRvUG9pbnQoKTtcbiAgICB9XG4gIH1cblxuICAjcmVwbGFjZVBvaW50VG9Gb3JtKCkge1xuICAgIHRoaXMuI2hhbmRsZU1vZGVDaGFuZ2UoKTtcbiAgICByZXBsYWNlKHRoaXMuI2Zvcm1FZGl0Q29tcG9uZW50LCB0aGlzLiNwb2ludENvbXBvbmVudCk7XG4gICAgdGhpcy4jbW9kZSA9ICdFRElUSU5HJztcbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdrZXlkb3duJywgdGhpcy4jZXNjS2V5RG93bkhhbmRsZXIpO1xuICB9XG5cbiAgI3JlcGxhY2VGb3JtVG9Qb2ludCgpIHtcbiAgICByZXBsYWNlKHRoaXMuI3BvaW50Q29tcG9uZW50LCB0aGlzLiNmb3JtRWRpdENvbXBvbmVudCk7XG4gICAgdGhpcy4jbW9kZSA9ICdERUZBVUxUJztcbiAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdrZXlkb3duJywgdGhpcy4jZXNjS2V5RG93bkhhbmRsZXIpO1xuICB9XG5cbiAgI2hhbmRsZUVkaXRDbGljayA9ICgpID0+IHtcbiAgICB0aGlzLiNyZXBsYWNlUG9pbnRUb0Zvcm0oKTtcbiAgfTtcblxuICAjaGFuZGxlRmF2b3JpdGVDbGljayA9ICh1cGRhdGVkUG9pbnQpID0+IHtcbiAgICB0aGlzLiNoYW5kbGVEYXRhQ2hhbmdlKHVwZGF0ZWRQb2ludCk7XG4gIH07XG5cbiAgI2hhbmRsZUZvcm1TdWJtaXQgPSAodXBkYXRlZFBvaW50KSA9PiB7XG4gICAgdGhpcy4jaGFuZGxlRGF0YUNoYW5nZSh1cGRhdGVkUG9pbnQpO1xuICAgIHRoaXMuI3JlcGxhY2VGb3JtVG9Qb2ludCgpO1xuICB9O1xuXG4gICNoYW5kbGVGb3JtQ2xvc2UgPSAoKSA9PiB7XG4gICAgdGhpcy4jcmVwbGFjZUZvcm1Ub1BvaW50KCk7XG4gIH07XG5cbiAgI2VzY0tleURvd25IYW5kbGVyID0gKGV2dCkgPT4ge1xuICAgIGlmIChldnQua2V5ID09PSAnRXNjYXBlJyB8fCBldnQua2V5ID09PSAnRXNjJykge1xuICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICB0aGlzLiNyZXBsYWNlRm9ybVRvUG9pbnQoKTtcbiAgICB9XG4gIH07XG59XG4iLCJpbXBvcnQgeyByZW5kZXIgfSBmcm9tICcuLi9mcmFtZXdvcmsvcmVuZGVyLmpzJztcbmltcG9ydCBNb2RlbCBmcm9tICcuLi9tb2RlbC9tb2RlbC5qcyc7XG5pbXBvcnQgRmlsdGVyc1ZpZXcgZnJvbSAnLi4vdmlldy9maWx0ZXJzLXZpZXcuanMnO1xuaW1wb3J0IFNvcnRWaWV3IGZyb20gJy4uL3ZpZXcvc29ydC12aWV3LmpzJztcbmltcG9ydCBFbXB0eUxpc3RWaWV3IGZyb20gJy4uL3ZpZXcvZW1wdHktbGlzdC12aWV3LmpzJztcbmltcG9ydCBQb2ludFByZXNlbnRlciBmcm9tICcuL3BvaW50LXByZXNlbnRlci5qcyc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFRyaXBQcmVzZW50ZXIge1xuICAjbW9kZWwgPSBuZXcgTW9kZWwoKTtcbiAgI2xpc3RDb250YWluZXIgPSBudWxsO1xuICAjZmlsdGVyc0NvbXBvbmVudCA9IG51bGw7XG4gICNzb3J0Q29tcG9uZW50ID0gbnVsbDtcbiAgI2VtcHR5TGlzdENvbXBvbmVudCA9IG51bGw7XG5cbiAgI3BvaW50UHJlc2VudGVycyA9IG5ldyBNYXAoKTtcblxuICAjY3VycmVudEZpbHRlciA9ICdldmVyeXRoaW5nJztcbiAgI2N1cnJlbnRTb3J0VHlwZSA9ICdkYXknO1xuXG4gIGluaXQoKSB7XG4gICAgdGhpcy4jcmVuZGVyRmlsdGVycygpO1xuICAgIHRoaXMuI3JlbmRlclNvcnQoKTtcbiAgICB0aGlzLiNyZW5kZXJMaXN0KCk7XG4gICAgdGhpcy4jcmVuZGVyUG9pbnRzKCk7XG4gIH1cblxuICAjcmVuZGVyRmlsdGVycygpIHtcbiAgICBjb25zdCBmaWx0ZXJzID0gW1xuICAgICAgeyB0eXBlOiAnZXZlcnl0aGluZycsIG5hbWU6ICdFdmVyeXRoaW5nJywgaXNEaXNhYmxlZDogZmFsc2UsIGlzQ2hlY2tlZDogdGhpcy4jY3VycmVudEZpbHRlciA9PT0gJ2V2ZXJ5dGhpbmcnIH0sXG4gICAgICB7IHR5cGU6ICdmdXR1cmUnLCBuYW1lOiAnRnV0dXJlJywgaXNEaXNhYmxlZDogZmFsc2UsIGlzQ2hlY2tlZDogdGhpcy4jY3VycmVudEZpbHRlciA9PT0gJ2Z1dHVyZScgfSxcbiAgICAgIHsgdHlwZTogJ3ByZXNlbnQnLCBuYW1lOiAnUHJlc2VudCcsIGlzRGlzYWJsZWQ6IHRydWUsIGlzQ2hlY2tlZDogdGhpcy4jY3VycmVudEZpbHRlciA9PT0gJ3ByZXNlbnQnIH0sXG4gICAgICB7IHR5cGU6ICdwYXN0JywgbmFtZTogJ1Bhc3QnLCBpc0Rpc2FibGVkOiBmYWxzZSwgaXNDaGVja2VkOiB0aGlzLiNjdXJyZW50RmlsdGVyID09PSAncGFzdCcgfVxuICAgIF07XG5cbiAgICBjb25zdCBjb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcudHJpcC1jb250cm9sc19fZmlsdGVycycpO1xuICAgIHRoaXMuI2ZpbHRlcnNDb21wb25lbnQgPSBuZXcgRmlsdGVyc1ZpZXcoZmlsdGVycyk7XG4gICAgcmVuZGVyKHRoaXMuI2ZpbHRlcnNDb21wb25lbnQsIGNvbnRhaW5lcik7XG5cbiAgICB0aGlzLiNmaWx0ZXJzQ29tcG9uZW50LmVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgKGV2dCkgPT4ge1xuICAgICAgaWYgKGV2dC50YXJnZXQubmFtZSA9PT0gJ3RyaXAtZmlsdGVyJykge1xuICAgICAgICB0aGlzLiNmaWx0ZXJDaGFuZ2VIYW5kbGVyKGV2dC50YXJnZXQuaWQucmVwbGFjZSgnZmlsdGVyLScsICcnKSk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICAjZmlsdGVyQ2hhbmdlSGFuZGxlciA9IChmaWx0ZXJUeXBlKSA9PiB7XG4gICAgdGhpcy4jY3VycmVudEZpbHRlciA9IGZpbHRlclR5cGU7XG4gICAgdGhpcy4jY2xlYXJQb2ludHMoKTtcbiAgICB0aGlzLiNyZW5kZXJQb2ludHMoKTtcbiAgfTtcblxuICAjcmVuZGVyU29ydCgpIHtcbiAgICBjb25zdCBzb3J0cyA9IFtcbiAgICAgIHsgdHlwZTogJ2RheScsIG5hbWU6ICdEYXknLCBpc0NoZWNrZWQ6IHRoaXMuI2N1cnJlbnRTb3J0VHlwZSA9PT0gJ2RheScgfSxcbiAgICAgIHsgdHlwZTogJ3ByaWNlJywgbmFtZTogJ1ByaWNlJywgaXNDaGVja2VkOiB0aGlzLiNjdXJyZW50U29ydFR5cGUgPT09ICdwcmljZScgfVxuICAgIF07XG5cbiAgICBjb25zdCBjb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcudHJpcC1ldmVudHMnKTtcbiAgICB0aGlzLiNzb3J0Q29tcG9uZW50ID0gbmV3IFNvcnRWaWV3KHNvcnRzLCB0aGlzLiNzb3J0VHlwZUNoYW5nZUhhbmRsZXIpO1xuICAgIHJlbmRlcih0aGlzLiNzb3J0Q29tcG9uZW50LCBjb250YWluZXIpO1xuICB9XG5cbiAgI3NvcnRUeXBlQ2hhbmdlSGFuZGxlciA9IChzb3J0VHlwZSkgPT4ge1xuICAgIGlmIChzb3J0VHlwZSA9PT0gdGhpcy4jY3VycmVudFNvcnRUeXBlKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHRoaXMuI2N1cnJlbnRTb3J0VHlwZSA9IHNvcnRUeXBlO1xuICAgIHRoaXMuI2NsZWFyUG9pbnRzKCk7XG4gICAgdGhpcy4jcmVuZGVyUG9pbnRzKCk7XG4gIH07XG5cbiAgI3JlbmRlckxpc3QoKSB7XG4gICAgY29uc3QgY29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnRyaXAtZXZlbnRzJyk7XG4gICAgY29uc3QgbGlzdEVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCd1bCcpO1xuICAgIGxpc3RFbGVtZW50LmNsYXNzTGlzdC5hZGQoJ3RyaXAtZXZlbnRzX19saXN0Jyk7XG4gICAgY29udGFpbmVyLmFwcGVuZENoaWxkKGxpc3RFbGVtZW50KTtcbiAgICB0aGlzLiNsaXN0Q29udGFpbmVyID0gbGlzdEVsZW1lbnQ7XG4gIH1cblxuICAjY2xlYXJQb2ludHMoKSB7XG4gICAgdGhpcy4jcG9pbnRQcmVzZW50ZXJzLmZvckVhY2goKHByZXNlbnRlcikgPT4gcHJlc2VudGVyLmRlc3Ryb3koKSk7XG4gICAgdGhpcy4jcG9pbnRQcmVzZW50ZXJzLmNsZWFyKCk7XG4gIH1cblxuICAjZ2V0U29ydGVkRmlsdGVyZWRQb2ludHMoKSB7XG4gICAgbGV0IHBvaW50cyA9IHRoaXMuI21vZGVsLmdldFBvaW50cygpO1xuXG4gICAgc3dpdGNoICh0aGlzLiNjdXJyZW50RmlsdGVyKSB7XG4gICAgICBjYXNlICdmdXR1cmUnOlxuICAgICAgICBwb2ludHMgPSBwb2ludHMuZmlsdGVyKChwb2ludCkgPT4gbmV3IERhdGUocG9pbnQuZGF0ZUZyb20pID4gbmV3IERhdGUoKSk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAncGFzdCc6XG4gICAgICAgIHBvaW50cyA9IHBvaW50cy5maWx0ZXIoKHBvaW50KSA9PiBuZXcgRGF0ZShwb2ludC5kYXRlRnJvbSkgPCBuZXcgRGF0ZSgpKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlICdwcmVzZW50JzpcbiAgICAgICAgcG9pbnRzID0gW107XG4gICAgICAgIGJyZWFrO1xuICAgIH1cblxuICAgIHN3aXRjaCAodGhpcy4jY3VycmVudFNvcnRUeXBlKSB7XG4gICAgICBjYXNlICdkYXknOlxuICAgICAgICBwb2ludHMuc29ydCgoYSwgYikgPT4gbmV3IERhdGUoYS5kYXRlRnJvbSkgLSBuZXcgRGF0ZShiLmRhdGVGcm9tKSk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAncHJpY2UnOlxuICAgICAgICBwb2ludHMuc29ydCgoYSwgYikgPT4gYi5iYXNlUHJpY2UgLSBhLmJhc2VQcmljZSk7XG4gICAgICAgIGJyZWFrO1xuICAgIH1cblxuICAgIHJldHVybiBwb2ludHM7XG4gIH1cblxuICAjcmVuZGVyUG9pbnRzKCkge1xuICAgIHRoaXMuI2xpc3RDb250YWluZXIuaW5uZXJIVE1MID0gJyc7XG5cbiAgICBjb25zdCBwb2ludHMgPSB0aGlzLiNnZXRTb3J0ZWRGaWx0ZXJlZFBvaW50cygpO1xuICAgIGNvbnN0IGRlc3RpbmF0aW9ucyA9IHRoaXMuI21vZGVsLmdldERlc3RpbmF0aW9ucygpO1xuICAgIGNvbnN0IG9mZmVycyA9IHRoaXMuI21vZGVsLmdldE9mZmVycygpO1xuXG4gICAgaWYgKHBvaW50cy5sZW5ndGggPT09IDApIHtcbiAgICAgIHRoaXMuI3JlbmRlckVtcHR5TGlzdCgpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHBvaW50cy5mb3JFYWNoKChwb2ludCkgPT4ge1xuICAgICAgY29uc3QgcG9pbnRQcmVzZW50ZXIgPSBuZXcgUG9pbnRQcmVzZW50ZXIoXG4gICAgICAgIHRoaXMuI2xpc3RDb250YWluZXIsXG4gICAgICAgIHRoaXMuI2hhbmRsZURhdGFDaGFuZ2UsXG4gICAgICAgIHRoaXMuI2hhbmRsZU1vZGVDaGFuZ2UsXG4gICAgICAgIGRlc3RpbmF0aW9ucyxcbiAgICAgICAgb2ZmZXJzXG4gICAgICApO1xuXG4gICAgICBwb2ludFByZXNlbnRlci5pbml0KHBvaW50KTtcbiAgICAgIHRoaXMuI3BvaW50UHJlc2VudGVycy5zZXQocG9pbnQuaWQsIHBvaW50UHJlc2VudGVyKTtcbiAgICB9KTtcbiAgfVxuXG4gICNyZW5kZXJFbXB0eUxpc3QoKSB7XG4gICAgdGhpcy4jZW1wdHlMaXN0Q29tcG9uZW50ID0gbmV3IEVtcHR5TGlzdFZpZXcoKTtcbiAgICByZW5kZXIodGhpcy4jZW1wdHlMaXN0Q29tcG9uZW50LCB0aGlzLiNsaXN0Q29udGFpbmVyKTtcbiAgfVxuXG4gICNoYW5kbGVEYXRhQ2hhbmdlID0gKHVwZGF0ZWRQb2ludCkgPT4ge1xuICAgIHRoaXMuI21vZGVsLnVwZGF0ZVBvaW50KHVwZGF0ZWRQb2ludCk7XG4gICAgY29uc3QgcHJlc2VudGVyID0gdGhpcy4jcG9pbnRQcmVzZW50ZXJzLmdldCh1cGRhdGVkUG9pbnQuaWQpO1xuICAgIHByZXNlbnRlci5pbml0KHVwZGF0ZWRQb2ludCk7XG4gIH07XG5cbiAgI2hhbmRsZU1vZGVDaGFuZ2UgPSAoKSA9PiB7XG4gICAgdGhpcy4jcG9pbnRQcmVzZW50ZXJzLmZvckVhY2goKHByZXNlbnRlcikgPT4gcHJlc2VudGVyLnJlc2V0VmlldygpKTtcbiAgfTtcbn1cbiIsIlxuaW1wb3J0IFRyaXBQcmVzZW50ZXIgZnJvbSAnLi9wcmVzZW50ZXIvdHJpcC1wcmVzZW50ZXIuanMnO1xuXG5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdET01Db250ZW50TG9hZGVkJywgKCkgPT4ge1xuICBjb25zdCB0cmlwUHJlc2VudGVyID0gbmV3IFRyaXBQcmVzZW50ZXIoKTtcbiAgdHJpcFByZXNlbnRlci5pbml0KCk7XG59KTtcbiJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwic3R5bGVFbGVtZW50Iiwibm9uY2UiLCJzZXRBdHRyaWJ1dGUiLCJzdHlsZXNJbkRPTSIsImdldEluZGV4QnlJZGVudGlmaWVyIiwiaWRlbnRpZmllciIsInJlc3VsdCIsImkiLCJsZW5ndGgiLCJtb2R1bGVzVG9Eb20iLCJsaXN0Iiwib3B0aW9ucyIsImlkQ291bnRNYXAiLCJpZGVudGlmaWVycyIsIml0ZW0iLCJpZCIsImJhc2UiLCJjb3VudCIsImNvbmNhdCIsImluZGV4QnlJZGVudGlmaWVyIiwib2JqIiwiY3NzIiwibWVkaWEiLCJzb3VyY2VNYXAiLCJzdXBwb3J0cyIsImxheWVyIiwicmVmZXJlbmNlcyIsInVwZGF0ZXIiLCJhZGRFbGVtZW50U3R5bGUiLCJieUluZGV4Iiwic3BsaWNlIiwicHVzaCIsImFwaSIsImRvbUFQSSIsInVwZGF0ZSIsIm5ld09iaiIsInJlbW92ZSIsImxhc3RJZGVudGlmaWVycyIsIm5ld0xpc3QiLCJpbmRleCIsIm5ld0xhc3RJZGVudGlmaWVycyIsIl9pIiwiX2luZGV4Iiwic3R5bGVTaGVldCIsImNzc1RleHQiLCJmaXJzdENoaWxkIiwicmVtb3ZlQ2hpbGQiLCJhcHBlbmRDaGlsZCIsImRvY3VtZW50IiwiY3JlYXRlVGV4dE5vZGUiLCJjc3NXaXRoTWFwcGluZ1RvU3RyaW5nIiwidG9TdHJpbmciLCJ0aGlzIiwibWFwIiwiY29udGVudCIsIm5lZWRMYXllciIsImpvaW4iLCJtb2R1bGVzIiwiZGVkdXBlIiwidW5kZWZpbmVkIiwiYWxyZWFkeUltcG9ydGVkTW9kdWxlcyIsImsiLCJfayIsImUiLCJuIiwiciIsInMiLCJ1IiwiYSIsIm8iLCJjIiwiZiIsImgiLCJkIiwibCIsIiQiLCJ5IiwiTSIsIm5hbWUiLCJ3ZWVrZGF5cyIsInNwbGl0IiwibW9udGhzIiwib3JkaW5hbCIsInQiLCJtIiwiU3RyaW5nIiwiQXJyYXkiLCJ2IiwieiIsInV0Y09mZnNldCIsIk1hdGgiLCJhYnMiLCJmbG9vciIsImRhdGUiLCJ5ZWFyIiwibW9udGgiLCJjbG9uZSIsImFkZCIsImNlaWwiLCJwIiwidyIsIkQiLCJtcyIsIlEiLCJ0b0xvd2VyQ2FzZSIsInJlcGxhY2UiLCJnIiwiUyIsIl8iLCJPIiwiYXJncyIsImFyZ3VtZW50cyIsImIiLCJsb2NhbGUiLCIkTCIsInV0YyIsIiR1IiwieCIsIiR4IiwiJG9mZnNldCIsInBhcnNlIiwicHJvdG90eXBlIiwiJGQiLCJEYXRlIiwiTmFOIiwidGVzdCIsIm1hdGNoIiwic3Vic3RyaW5nIiwiVVRDIiwiaW5pdCIsIiR5IiwiZ2V0RnVsbFllYXIiLCIkTSIsImdldE1vbnRoIiwiJEQiLCJnZXREYXRlIiwiJFciLCJnZXREYXkiLCIkSCIsImdldEhvdXJzIiwiJG0iLCJnZXRNaW51dGVzIiwiJHMiLCJnZXRTZWNvbmRzIiwiJG1zIiwiZ2V0TWlsbGlzZWNvbmRzIiwiJHV0aWxzIiwiaXNWYWxpZCIsImlzU2FtZSIsInN0YXJ0T2YiLCJlbmRPZiIsImlzQWZ0ZXIiLCJpc0JlZm9yZSIsIiRnIiwic2V0IiwidW5peCIsInZhbHVlT2YiLCJnZXRUaW1lIiwidG9EYXRlIiwiYXBwbHkiLCJzbGljZSIsIiRsb2NhbGUiLCJ3ZWVrU3RhcnQiLCIkc2V0IiwibWluIiwiZGF5c0luTW9udGgiLCJnZXQiLCJOdW1iZXIiLCJyb3VuZCIsInN1YnRyYWN0IiwiZm9ybWF0IiwiaW52YWxpZERhdGUiLCJtZXJpZGllbSIsIm1vbnRoc1Nob3J0Iiwid2Vla2RheXNNaW4iLCJ3ZWVrZGF5c1Nob3J0IiwiZ2V0VGltZXpvbmVPZmZzZXQiLCJkaWZmIiwidG9KU09OIiwidG9JU09TdHJpbmciLCJ0b1VUQ1N0cmluZyIsImZvckVhY2giLCJleHRlbmQiLCIkaSIsImlzRGF5anMiLCJlbiIsIkxzIiwiY3NzTWFwcGluZyIsImJ0b2EiLCJiYXNlNjQiLCJ1bmVzY2FwZSIsImVuY29kZVVSSUNvbXBvbmVudCIsIkpTT04iLCJzdHJpbmdpZnkiLCJkYXRhIiwic291cmNlTWFwcGluZyIsIl9fX0NTU19MT0FERVJfRVhQT1JUX19fIiwiZWxlbWVudCIsImNyZWF0ZUVsZW1lbnQiLCJzZXRBdHRyaWJ1dGVzIiwiYXR0cmlidXRlcyIsImluc2VydCIsIm1lbW8iLCJzdHlsZSIsInRhcmdldCIsInN0eWxlVGFyZ2V0IiwicXVlcnlTZWxlY3RvciIsIndpbmRvdyIsIkhUTUxJRnJhbWVFbGVtZW50IiwiY29udGVudERvY3VtZW50IiwiaGVhZCIsImdldFRhcmdldCIsIkVycm9yIiwiaW5zZXJ0U3R5bGVFbGVtZW50Iiwic3R5bGVUYWdUcmFuc2Zvcm0iLCJwYXJlbnROb2RlIiwicmVtb3ZlU3R5bGVFbGVtZW50IiwiT2JqZWN0IiwiYXNzaWduIiwiVHlwZUVycm9yIiwiX2xvb3BfMSIsInNvdXJjZSIsImtleXMiLCJrZXkiLCJfYSIsImFyZ3NfMSIsIl9fd2VicGFja19tb2R1bGVfY2FjaGVfXyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImNhY2hlZE1vZHVsZSIsIl9fd2VicGFja19tb2R1bGVzX18iLCJjYWxsIiwiZ2V0dGVyIiwiX19lc01vZHVsZSIsImRlZmluaXRpb24iLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJwcm9wIiwiaGFzT3duUHJvcGVydHkiLCJuYyIsImxvY2FscyIsIlNIQUtFX0NMQVNTX05BTUUiLCJBYnN0cmFjdFZpZXciLCJjb25zdHJ1Y3RvciIsInRlbXBsYXRlIiwibmV3RWxlbWVudCIsImlubmVySFRNTCIsImZpcnN0RWxlbWVudENoaWxkIiwicmVtb3ZlRWxlbWVudCIsInNoYWtlIiwiY2FsbGJhY2siLCJjbGFzc0xpc3QiLCJzZXRUaW1lb3V0IiwicmVuZGVyIiwiY29tcG9uZW50IiwiY29udGFpbmVyIiwicGxhY2UiLCJpbnNlcnRBZGphY2VudEVsZW1lbnQiLCJuZXdDb21wb25lbnQiLCJvbGRDb21wb25lbnQiLCJvbGRFbGVtZW50IiwicGFyZW50IiwicGFyZW50RWxlbWVudCIsInJlcGxhY2VDaGlsZCIsIlBvaW50IiwidHlwZSIsImRlc3RpbmF0aW9uIiwiZGF0ZUZyb20iLCJkYXRlVG8iLCJiYXNlUHJpY2UiLCJvZmZlcnMiLCJpc0Zhdm9yaXRlIiwiREVTVElOQVRJT05TIiwiZGVzY3JpcHRpb24iLCJwaWN0dXJlcyIsIk1vZGVsIiwiZGVzdGluYXRpb25zIiwidGF4aSIsInRpdGxlIiwicHJpY2UiLCJmbGlnaHQiLCJkcml2ZSIsInBvaW50cyIsImdldERlc3RpbmF0aW9ucyIsImdldE9mZmVycyIsImdldFBvaW50cyIsImdldFBvaW50QnlJZCIsImZpbmQiLCJwb2ludCIsInVwZGF0ZVBvaW50IiwidXBkYXRlZFBvaW50IiwiZmluZEluZGV4IiwiRmlsdGVyc1ZpZXciLCJmaWx0ZXJzIiwic3VwZXIiLCJfcmVmIiwiaXNEaXNhYmxlZCIsImlzQ2hlY2tlZCIsIlNvcnRWaWV3Iiwic29ydHMiLCJoYW5kbGVTb3J0VHlwZUNoYW5nZSIsImFkZEV2ZW50TGlzdGVuZXIiLCJldnQiLCJ2YWx1ZSIsIkVtcHR5TGlzdFZpZXciLCJmb3JtYXREYXRlIiwiZGF5anMiLCJQb2ludFZpZXciLCJvbkVkaXRDbGljayIsIm9uRmF2b3JpdGVDbGljayIsImZpbHRlciIsImluY2x1ZGVzIiwiZGVzdGluYXRpb25OYW1lIiwib2ZmZXJzTWFya3VwIiwib2ZmZXIiLCJkaWZmTXMiLCJkaWZmTWludXRlcyIsImRpZmZIb3VycyIsIm1pbnV0ZXMiLCJob3VycyIsImRheXMiLCJwYWRTdGFydCIsImdldER1cmF0aW9uIiwicHJldmVudERlZmF1bHQiLCJBYnN0cmFjdFN0YXRlZnVsVmlldyIsIl9zdGF0ZSIsInVwZGF0ZUVsZW1lbnQiLCJfc2V0U3RhdGUiLCJfcmVzdG9yZUhhbmRsZXJzIiwic3RydWN0dXJlZENsb25lIiwicHJldkVsZW1lbnQiLCJIT09LUyIsImRlZmF1bHRzIiwiX2Rpc2FibGUiLCJhbGxvd0lucHV0IiwiYWxsb3dJbnZhbGlkUHJlbG9hZCIsImFsdEZvcm1hdCIsImFsdElucHV0IiwiYWx0SW5wdXRDbGFzcyIsImFuaW1hdGUiLCJuYXZpZ2F0b3IiLCJ1c2VyQWdlbnQiLCJpbmRleE9mIiwiYXJpYURhdGVGb3JtYXQiLCJhdXRvRmlsbERlZmF1bHRUaW1lIiwiY2xpY2tPcGVucyIsImNsb3NlT25TZWxlY3QiLCJjb25qdW5jdGlvbiIsImRhdGVGb3JtYXQiLCJkZWZhdWx0SG91ciIsImRlZmF1bHRNaW51dGUiLCJkZWZhdWx0U2Vjb25kcyIsImRpc2FibGUiLCJkaXNhYmxlTW9iaWxlIiwiZW5hYmxlU2Vjb25kcyIsImVuYWJsZVRpbWUiLCJlcnJvckhhbmRsZXIiLCJlcnIiLCJjb25zb2xlIiwid2FybiIsImdldFdlZWsiLCJnaXZlbkRhdGUiLCJzZXRIb3VycyIsInNldERhdGUiLCJ3ZWVrMSIsImhvdXJJbmNyZW1lbnQiLCJpZ25vcmVkRm9jdXNFbGVtZW50cyIsImlubGluZSIsIm1pbnV0ZUluY3JlbWVudCIsIm1vZGUiLCJtb250aFNlbGVjdG9yVHlwZSIsIm5leHRBcnJvdyIsIm5vQ2FsZW5kYXIiLCJub3ciLCJvbkNoYW5nZSIsIm9uQ2xvc2UiLCJvbkRheUNyZWF0ZSIsIm9uRGVzdHJveSIsIm9uS2V5RG93biIsIm9uTW9udGhDaGFuZ2UiLCJvbk9wZW4iLCJvblBhcnNlQ29uZmlnIiwib25SZWFkeSIsIm9uVmFsdWVVcGRhdGUiLCJvblllYXJDaGFuZ2UiLCJvblByZUNhbGVuZGFyUG9zaXRpb24iLCJwbHVnaW5zIiwicG9zaXRpb24iLCJwb3NpdGlvbkVsZW1lbnQiLCJwcmV2QXJyb3ciLCJzaG9ydGhhbmRDdXJyZW50TW9udGgiLCJzaG93TW9udGhzIiwic3RhdGljIiwidGltZV8yNGhyIiwid2Vla051bWJlcnMiLCJ3cmFwIiwiZW5nbGlzaCIsInNob3J0aGFuZCIsImxvbmdoYW5kIiwiZmlyc3REYXlPZldlZWsiLCJudGgiLCJyYW5nZVNlcGFyYXRvciIsIndlZWtBYmJyZXZpYXRpb24iLCJzY3JvbGxUaXRsZSIsInRvZ2dsZVRpdGxlIiwiYW1QTSIsInllYXJBcmlhTGFiZWwiLCJtb250aEFyaWFMYWJlbCIsImhvdXJBcmlhTGFiZWwiLCJtaW51dGVBcmlhTGFiZWwiLCJwYWQiLCJudW1iZXIiLCJib29sIiwiZGVib3VuY2UiLCJmbiIsIndhaXQiLCJfdGhpcyIsImNsZWFyVGltZW91dCIsImFycmF5aWZ5IiwidG9nZ2xlQ2xhc3MiLCJlbGVtIiwiY2xhc3NOYW1lIiwidGFnIiwidGV4dENvbnRlbnQiLCJjbGVhck5vZGUiLCJub2RlIiwiZmluZFBhcmVudCIsImNvbmRpdGlvbiIsImNyZWF0ZU51bWJlcklucHV0IiwiaW5wdXRDbGFzc05hbWUiLCJvcHRzIiwid3JhcHBlciIsIm51bUlucHV0IiwiYXJyb3dVcCIsImFycm93RG93biIsInBhdHRlcm4iLCJnZXRFdmVudFRhcmdldCIsImV2ZW50IiwiY29tcG9zZWRQYXRoIiwiZXJyb3IiLCJkb05vdGhpbmciLCJtb250aFRvU3RyIiwibW9udGhOdW1iZXIiLCJyZXZGb3JtYXQiLCJGIiwiZGF0ZU9iaiIsIm1vbnRoTmFtZSIsInNldE1vbnRoIiwiRyIsImhvdXIiLCJwYXJzZUZsb2F0IiwiSCIsIkoiLCJkYXkiLCJLIiwiUmVnRXhwIiwic2hvcnRNb250aCIsInNlY29uZHMiLCJzZXRTZWNvbmRzIiwiVSIsInVuaXhTZWNvbmRzIiwiVyIsIndlZWtOdW0iLCJ3ZWVrTnVtYmVyIiwicGFyc2VJbnQiLCJZIiwic2V0RnVsbFllYXIiLCJaIiwiSVNPRGF0ZSIsInNldE1pbnV0ZXMiLCJqIiwidW5peE1pbGxTZWNvbmRzIiwidG9rZW5SZWdleCIsImZvcm1hdHMiLCJjcmVhdGVEYXRlRm9ybWF0dGVyIiwiX2IiLCJjb25maWciLCJfYyIsImwxMG4iLCJfZCIsImlzTW9iaWxlIiwiZnJtdCIsIm92ZXJyaWRlTG9jYWxlIiwiYXJyIiwiY3JlYXRlRGF0ZVBhcnNlciIsImdpdmVuRm9ybWF0IiwidGltZWxlc3MiLCJjdXN0b21Mb2NhbGUiLCJwYXJzZWREYXRlIiwiZGF0ZU9yaWciLCJ0b0ZpeGVkIiwiZGF0ZXN0ciIsInRyaW0iLCJwYXJzZURhdGUiLCJtYXRjaGVkIiwib3BzIiwibWF0Y2hJbmRleCIsInJlZ2V4U3RyIiwidG9rZW4iLCJpc0JhY2tTbGFzaCIsImVzY2FwZWQiLCJleGVjIiwidmFsIiwiaXNOYU4iLCJjb21wYXJlRGF0ZXMiLCJkYXRlMSIsImRhdGUyIiwiY2FsY3VsYXRlU2Vjb25kc1NpbmNlTWlkbmlnaHQiLCJnZXREZWZhdWx0SG91cnMiLCJtaW5EYXRlIiwibWluSG91ciIsIm1pbk1pbnV0ZXMiLCJtaW5TZWNvbmRzIiwibWF4RGF0ZSIsIm1heEhyIiwibWF4TWludXRlcyIsIl9fYXNzaWduIiwiX19zcHJlYWRBcnJheXMiLCJpbCIsImpsIiwiRmxhdHBpY2tySW5zdGFuY2UiLCJpbnN0YW5jZUNvbmZpZyIsInNlbGYiLCJmbGF0cGlja3IiLCJkZWZhdWx0Q29uZmlnIiwiZ2V0Q2xvc2VzdEFjdGl2ZUVsZW1lbnQiLCJjYWxlbmRhckNvbnRhaW5lciIsImdldFJvb3ROb2RlIiwiYWN0aXZlRWxlbWVudCIsImJpbmRUb0luc3RhbmNlIiwiYmluZCIsInNldENhbGVuZGFyV2lkdGgiLCJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJ2aXNpYmlsaXR5IiwiZGlzcGxheSIsImRheXNDb250YWluZXIiLCJkYXlzV2lkdGgiLCJvZmZzZXRXaWR0aCIsIndpZHRoIiwid2Vla1dyYXBwZXIiLCJyZW1vdmVQcm9wZXJ0eSIsInVwZGF0ZVRpbWUiLCJzZWxlY3RlZERhdGVzIiwiZGVmYXVsdERhdGUiLCJsYXRlc3RTZWxlY3RlZERhdGVPYmoiLCJpc0tleURvd24iLCJldmVudFRhcmdldCIsImlucHV0IiwiZ2V0QXR0cmlidXRlIiwibWF4Iiwic3RlcCIsImN1clZhbHVlIiwibmV3VmFsdWUiLCJkZWx0YSIsIndoaWNoIiwiaXNIb3VyRWxlbSIsImhvdXJFbGVtZW50IiwiaXNNaW51dGVFbGVtIiwibWludXRlRWxlbWVudCIsImluY3JlbWVudE51bUlucHV0IiwidGltZVdyYXBwZXIiLCJwcmV2VmFsdWUiLCJfaW5wdXQiLCJzZXRIb3Vyc0Zyb21JbnB1dHMiLCJ1cGRhdGVWYWx1ZSIsIl9kZWJvdW5jZWRDaGFuZ2UiLCJzZWNvbmRFbGVtZW50IiwibGltaXRNaW5Ib3VycyIsIm1pblRpbWUiLCJtaW5EYXRlSGFzVGltZSIsImxpbWl0TWF4SG91cnMiLCJtYXhUaW1lIiwibWF4RGF0ZUhhc1RpbWUiLCJtaW5Cb3VuZCIsIm1heEJvdW5kIiwiY3VycmVudFRpbWUiLCJzZWNvbmRzU2luY2VNaWRuaWdodCIsInBhcnNlU2Vjb25kcyIsInNldEhvdXJzRnJvbURhdGUiLCJvblllYXJJbnB1dCIsImNoYW5nZVllYXIiLCJoYW5kbGVyIiwiZXYiLCJlbCIsIl9oYW5kbGVycyIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJ0cmlnZ2VyQ2hhbmdlIiwidHJpZ2dlckV2ZW50IiwianVtcFRvRGF0ZSIsImp1bXBEYXRlIiwianVtcFRvIiwib2xkWWVhciIsImN1cnJlbnRZZWFyIiwib2xkTW9udGgiLCJjdXJyZW50TW9udGgiLCJtZXNzYWdlIiwiYnVpbGRNb250aFN3aXRjaCIsInJlZHJhdyIsInRpbWVJbmNyZW1lbnQiLCJjb250YWlucyIsImlucHV0RWxlbSIsImNyZWF0ZUV2ZW50IiwiZGlzcGF0Y2hFdmVudCIsImNyZWF0ZURheSIsIl9kYXlOdW1iZXIiLCJkYXRlSXNFbmFibGVkIiwiaXNFbmFibGVkIiwiZGF5RWxlbWVudCIsInRvZGF5RGF0ZUVsZW0iLCJ0YWJJbmRleCIsImlzRGF0ZVNlbGVjdGVkIiwic2VsZWN0ZWREYXRlRWxlbSIsImlzRGF0ZUluUmFuZ2UiLCJpbnNlcnRBZGphY2VudEhUTUwiLCJmb2N1c09uRGF5RWxlbSIsInRhcmdldE5vZGUiLCJmb2N1cyIsIm9uTW91c2VPdmVyIiwiZ2V0Rmlyc3RBdmFpbGFibGVEYXkiLCJzdGFydE1vbnRoIiwiZW5kTW9udGgiLCJjaGlsZHJlbiIsInN0YXJ0SW5kZXgiLCJlbmRJbmRleCIsImZvY3VzT25EYXkiLCJjdXJyZW50Iiwib2Zmc2V0IiwiZGF5Rm9jdXNlZCIsImlzSW5WaWV3IiwiYm9keSIsInN0YXJ0RWxlbSIsImdpdmVuTW9udGgiLCJsb29wRGVsdGEiLCJudW1Nb250aERheXMiLCJjaGFuZ2VNb250aCIsImdldE5leHRBdmFpbGFibGVEYXkiLCJidWlsZE1vbnRoRGF5cyIsImZpcnN0T2ZNb250aCIsInByZXZNb250aERheXMiLCJ1dGlscyIsImdldERheXNJbk1vbnRoIiwiY3JlYXRlRG9jdW1lbnRGcmFnbWVudCIsImlzTXVsdGlNb250aCIsInByZXZNb250aERheUNsYXNzIiwibmV4dE1vbnRoRGF5Q2xhc3MiLCJkYXlOdW1iZXIiLCJkYXlJbmRleCIsImRheU51bSIsImRheUNvbnRhaW5lciIsImJ1aWxkRGF5cyIsImZyYWciLCJzaG91bGRCdWlsZE1vbnRoIiwibW9udGhzRHJvcGRvd25Db250YWluZXIiLCJzZWxlY3RlZCIsImJ1aWxkTW9udGgiLCJtb250aEVsZW1lbnQiLCJtb250aE5hdkZyYWdtZW50Iiwic2VsZWN0ZWRNb250aCIsInllYXJJbnB1dCIsInRhYmluZGV4IiwieWVhckVsZW1lbnQiLCJnZXRFbGVtZW50c0J5VGFnTmFtZSIsImRpc2FibGVkIiwiYnVpbGRNb250aHMiLCJtb250aE5hdiIsInByZXZNb250aE5hdiIsInllYXJFbGVtZW50cyIsIm1vbnRoRWxlbWVudHMiLCJuZXh0TW9udGhOYXYiLCJidWlsZFdlZWtkYXlzIiwid2Vla2RheUNvbnRhaW5lciIsInVwZGF0ZVdlZWtkYXlzIiwiaXNPZmZzZXQiLCJfaGlkZVByZXZNb250aEFycm93IiwiX2hpZGVOZXh0TW9udGhBcnJvdyIsInVwZGF0ZU5hdmlnYXRpb25DdXJyZW50TW9udGgiLCJpc0NhbGVuZGFyRWxlbSIsImRvY3VtZW50Q2xpY2siLCJpc09wZW4iLCJldmVudFRhcmdldF8xIiwiaXNDYWxlbmRhckVsZW1lbnQiLCJsb3N0Rm9jdXMiLCJwYXRoIiwicmVsYXRlZFRhcmdldCIsImlzSWdub3JlZCIsInNvbWUiLCJ0aW1lQ29udGFpbmVyIiwiY2xvc2UiLCJjbGVhciIsIm5ld1llYXIiLCJuZXdZZWFyTnVtIiwiaXNOZXdZZWFyIiwiZGF0ZVRvQ2hlY2siLCJlbmFibGUiLCJhcnJheSIsInBhcnNlZCIsImZyb20iLCJ0byIsIm9uQmx1ciIsImlzSW5wdXQiLCJ2YWx1ZUNoYW5nZWQiLCJ0cmltRW5kIiwiZ2V0RGF0ZVN0ciIsImFsbG93S2V5ZG93biIsImFsbG93SW5saW5lS2V5ZG93biIsImtleUNvZGUiLCJibHVyIiwib3BlbiIsImlzVGltZU9iaiIsImZvY3VzQW5kQ2xvc2UiLCJzZWxlY3REYXRlIiwiZGVsdGFfMSIsImN0cmxLZXkiLCJzdG9wUHJvcGFnYXRpb24iLCJjdXJyZW50WWVhckVsZW1lbnQiLCJlbGVtcyIsInBsdWdpbkVsZW1lbnRzIiwic2hpZnRLZXkiLCJjaGFyQXQiLCJjZWxsQ2xhc3MiLCJob3ZlckRhdGUiLCJpbml0aWFsRGF0ZSIsInJhbmdlU3RhcnREYXRlIiwicmFuZ2VFbmREYXRlIiwiY29udGFpbnNEaXNhYmxlZCIsIm1pblJhbmdlIiwibWF4UmFuZ2UiLCJyQ29udGFpbmVyIiwicXVlcnlTZWxlY3RvckFsbCIsImRheUVsZW0iLCJ0cyIsInRzMSIsInRzMiIsInRpbWVzdGFtcCIsIm91dE9mUmFuZ2UiLCJvblJlc2l6ZSIsInBvc2l0aW9uQ2FsZW5kYXIiLCJtaW5NYXhEYXRlU2V0dGVyIiwiaW52ZXJzZURhdGVPYmoiLCJyZW1vdmVBdHRyaWJ1dGUiLCJnZXRJbnB1dEVsZW0iLCJzZXR1cExvY2FsZSIsImwxMG5zIiwiZGVmYXVsdCIsImRhdGFzZXQiLCJjdXN0b21Qb3NpdGlvbkVsZW1lbnQiLCJfcG9zaXRpb25FbGVtZW50IiwiY2FsZW5kYXJIZWlnaHQiLCJyZWR1Y2UiLCJhY2MiLCJjaGlsZCIsIm9mZnNldEhlaWdodCIsImNhbGVuZGFyV2lkdGgiLCJjb25maWdQb3MiLCJjb25maWdQb3NWZXJ0aWNhbCIsImNvbmZpZ1Bvc0hvcml6b250YWwiLCJpbnB1dEJvdW5kcyIsImdldEJvdW5kaW5nQ2xpZW50UmVjdCIsImRpc3RhbmNlRnJvbUJvdHRvbSIsImlubmVySGVpZ2h0IiwiYm90dG9tIiwic2hvd09uVG9wIiwidG9wIiwicGFnZVlPZmZzZXQiLCJsZWZ0IiwicGFnZVhPZmZzZXQiLCJpc0NlbnRlciIsImlzUmlnaHQiLCJyaWdodCIsInJpZ2h0TW9zdCIsImNlbnRlck1vc3QiLCJkb2MiLCJlZGl0YWJsZVNoZWV0Iiwic3R5bGVTaGVldHMiLCJzaGVldCIsImNzc1J1bGVzIiwiZ2V0RG9jdW1lbnRTdHlsZVNoZWV0IiwiYm9keVdpZHRoIiwiY2VudGVyTGVmdCIsImNlbnRlckluZGV4IiwiY2VudGVyU3R5bGUiLCJpbnNlcnRSdWxlIiwiY2VudGVyQmVmb3JlIiwibXNNYXhUb3VjaFBvaW50cyIsInNlbGVjdGVkRGF0ZSIsInNob3VsZENoYW5nZU1vbnRoIiwic2VsZWN0ZWRJbmRleCIsInNvcnQiLCJzaW5nbGUiLCJyYW5nZSIsImxvYWRlZFBsdWdpbnMiLCJfYmluZCIsIl9zZXRIb3Vyc0Zyb21EYXRlIiwiX3Bvc2l0aW9uQ2FsZW5kYXIiLCJ0cmlnZ2VyQ2hhbmdlRXZlbnQiLCJ0b0luaXRpYWwiLCJtb2JpbGVJbnB1dCIsIl9pbml0aWFsRGF0ZSIsIl9jcmVhdGVFbGVtZW50IiwiZGVzdHJveSIsImxhc3RDaGlsZCIsImluc2VydEJlZm9yZSIsIl90eXBlIiwiY2xpY2siLCJ3YXNPcGVuIiwic2VsZWN0Iiwib3B0aW9uIiwiQ0FMTEJBQ0tTIiwic2V0U2VsZWN0ZWREYXRlIiwidG9nZ2xlIiwidXBkYXRlUG9zaXRpb25FbGVtZW50IiwiaW5wdXREYXRlIiwiZGF0ZXMiLCJwYXJzZURhdGVSdWxlcyIsInJ1bGUiLCJob29rcyIsImluaXRFdmVudCIsInNwZWNpZmljRm9ybWF0IiwiZE9iaiIsIm1vYmlsZUZvcm1hdFN0ciIsIm9uTW9udGhOYXZDbGljayIsImlzUHJldk1vbnRoIiwiaXNOZXh0TW9udGgiLCJib29sT3B0cyIsInVzZXJDb25maWciLCJfZW5hYmxlIiwidGltZU1vZGUiLCJkZWZhdWx0RGF0ZUZvcm1hdCIsImRlZmF1bHRBbHRGb3JtYXQiLCJfbWluRGF0ZSIsIl9tYXhEYXRlIiwibWluTWF4VGltZVNldHRlciIsIl9taW5UaW1lIiwiX21heFRpbWUiLCJob29rIiwicGx1Z2luQ29uZiIsInBhcnNlQ29uZmlnIiwibm9kZU5hbWUiLCJwbGFjZWhvbGRlciIsInJlcXVpcmVkIiwibmV4dFNpYmxpbmciLCJwcmVsb2FkZWREYXRlIiwic2V0dXBEYXRlcyIsInlyIiwiZnJhZ21lbnQiLCJfX2hpZGVQcmV2TW9udGhBcnJvdyIsIl9faGlkZU5leHRNb250aEFycm93IiwiaW5uZXJDb250YWluZXIiLCJidWlsZFdlZWtzIiwic2VwYXJhdG9yIiwiaG91cklucHV0IiwibWludXRlSW5wdXQiLCJtaWxpdGFyeTJhbXBtIiwic2Vjb25kSW5wdXQiLCJidWlsZFRpbWUiLCJjdXN0b21BcHBlbmQiLCJhcHBlbmRUbyIsIm5vZGVUeXBlIiwiYnVpbGQiLCJpbnB1dFR5cGUiLCJkZWZhdWx0VmFsdWUiLCJzZXR1cE1vYmlsZSIsImRlYm91bmNlZFJlc2l6ZSIsIm9udG91Y2hzdGFydCIsImNhcHR1cmUiLCJiaW5kRXZlbnRzIiwiaXNTYWZhcmkiLCJfZmxhdHBpY2tyIiwibm9kZUxpc3QiLCJub2RlcyIsIkhUTUxFbGVtZW50IiwiaW5zdGFuY2VzIiwiSFRNTENvbGxlY3Rpb24iLCJOb2RlTGlzdCIsInNlbGVjdG9yIiwiTm9kZSIsImxvY2FsaXplIiwic2V0RGVmYXVsdHMiLCJqUXVlcnkiLCJmcF9pbmNyIiwiRm9ybUVkaXRWaWV3Iiwib25Gb3JtU3VibWl0Iiwib25Gb3JtQ2xvc2UiLCJvbkZvcm1EZWxldGUiLCJwYXJzZVBvaW50VG9TdGF0ZSIsIl9kZXN0aW5hdGlvbnMiLCJfb2ZmZXJzIiwiX29uRm9ybVN1Ym1pdCIsIl9vbkZvcm1DbG9zZSIsIl9vbkZvcm1EZWxldGUiLCJjdXJyZW50RGVzdGluYXRpb24iLCJjdXJyZW50T2ZmZXJzIiwiZGVzdCIsInBpYyIsInNyYyIsIl9zZXRJbm5lckhhbmRsZXJzIiwiY2hlY2tib3giLCJzZWxlY3RlZERlc3RpbmF0aW9uIiwiI29mZmVyc0NoYW5nZUhhbmRsZXIiLCJzZWxlY3RlZE9mZmVycyIsIl9yZWYyIiwicGFyc2VTdGF0ZVRvUG9pbnQiLCJzdGF0ZSIsIlBvaW50UHJlc2VudGVyIiwibGlzdENvbnRhaW5lciIsImhhbmRsZURhdGFDaGFuZ2UiLCJoYW5kbGVNb2RlQ2hhbmdlIiwicHJldlBvaW50Q29tcG9uZW50IiwicHJldkZvcm1FZGl0Q29tcG9uZW50IiwicmVzZXRWaWV3IiwiI2hhbmRsZUVkaXRDbGljayIsIiNoYW5kbGVGb3JtQ2xvc2UiLCJUcmlwUHJlc2VudGVyIiwiTWFwIiwiZmlsdGVyVHlwZSIsInNvcnRUeXBlIiwibGlzdEVsZW1lbnQiLCJwcmVzZW50ZXIiLCJwb2ludFByZXNlbnRlciIsIiNoYW5kbGVNb2RlQ2hhbmdlIl0sInNvdXJjZVJvb3QiOiIifQ==